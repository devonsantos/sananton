/*

San Antón Role Play
-----------------------------------------------------------------
*** Devon
*** Jayceon
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------

	INFORMACION:

* Usar macro NoAutorizado para condiciones No Admin.
* Usar Macro NoConectado en SendClientMessage
* Usar no NODUTY en SendClientMessage

*/

// Includes
#include <a_samp>
#include <a_vehicles>
#include <streamer>
#include <yom_buttons>
#include <YSI\y_ini>
#include <YSI\y_timers>
#include <sscanf2>
#include <progress>
#include <foreach>
#include <zcmd>
#include <a_zones>
#include <msel>
#include <FuckCleo>

//Native del vehiculo invalido
native IsValidVehicle(vehicleid);

#define 			SERVER_GM_TEXT 				"2.6"
#define 			SERVER_SHOP_URL				"N/A"
#define 			SERVER_TS3_IP				"192.223.28.93" // CAmbiar
// -=====================================-
//#pragma 			tabsize 					(0) <- Without this the gamemode is optimized
// Limites
#define 			VV 							(170)
#undef 				MAX_PLAYERS
#define 			MAX_PLAYERS 				(150)
#define 			MAX_FACTION 				(9)
#define 			MAX_AD 						(40)
#define 			MAX_PING 					(1200)
#define 			MAX_FAMILY 					(10)
#define 			MAX_HOUSES  				(250)
#define 			MAX_FURNITURE 				(35)
#define 			MAX_vCAMERAS  				(15)
#define				MAX_BARRICADES 				(20)
#define 			MAX_POINTS 					(10)
#define             MAX_ATMS                    (25)
#define             MAX_BUSINESS              	(35)
#define 			NEW_VULNERABLE 				(72)
#define 			MAX_DDOORS 					(200)
#define 			MAX_PLAYERTOYS 				(10)
#define 			MAX_TIMERS 					(11)
#define 			MAX_PLAYERVEHICLES 			(8)
#define 			MAX_MODS 					(15)
#define 			MAX_CARSALE 				(60)
#define 			MAX_CODESVIP 				(50)

#define             BUSINESS_VIRTUAL_WORLD     	(30000)

#define 			TIME_RESPAWN 				(7200) // Cars Respawn Time
#define 			TIME_TO_TAKEOVER			(5) // Points

#define 			INVALID_HOUSE_ID 			(-1)
#define 			INVALID_PLAYER_VEHICLE_ID 	(0)
#define 			INVALID_FURNITURE_ID 		(0)

#define 			CHECKPOINT_NONE 			(0)
#define 			CHECKPOINT_LOADTRUCK 		(97651)
#define 			CHECKPOINT_RETURNTRUCK 		(97652)
#define 			CHECKPOINT_RETURNBANK		(97653)
#define 			NOOB_SKIN 					(299)

#define				TYPE_GIVEWEAPONTIMER 		(0)
#define 			TYPE_FLOODPROTECTION 		(1)
#define 			TYPE_PAYTIMER        		(2)
#define				TYPE_ARMSTIMER 		 		(3)
#define 			TYPE_TPPIZZARUNTIMER 		(4)
#define 			TYPE_PIZZATIMER      		(5)
#define				TYPE_TPTRUCKRUNTIMER   		(6)
#define				TYPE_TPDRUGRUNTIMER 		(11)
#define 			TYPE_TPMATRUNTIMER 			(12)
#define 			TYPE_GUARDTIMER				(13)

#define 			USERFILE 					"cuentas/%s.ini"
#define 			HOUSE_FILE 					"houses/House%d.ini"
#define 			BUSINESS_FILE 				"negocios/Negocio%d.ini"


#define 			INFINITY_HEALTH 			Float:0x7F800000 // By ULP
//Defines FaceAngles
#define 			SUR 						(180)
#define				NORTE 						(0)
#define 			OESTE 						(90)
#define 			ESTE 						(270)
// Defines / Macros
#define 			function%0(%1) 				forward %0(%1); public %0(%1)
#define 			PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define 			NoAutorizado        		SendClientMessageEx(playerid, COLOR_GREY,"* No estás autorizado para usar este comando.");
#define 			NODUTY        				"* No puedes usar este comando porque no estas OnDuty."
#define 			NoConectado          		"* No estás conectado correctamente."
#define 			SendFormattedMessage(%0,%1,%2) do{new _str[128]; format(_str,128,%2); SendClientMessageEx(%0,%1,_str);}while(FALSE)
#define 			def(%0,%1)					(format(text,sizeof(text),%0,%1),text)
#define 			GetVehicleName(%0) 			VehicleName[GetVehicleModel(%0)-400]
#define 			GetPlayerCash(%0) 			GetPVarInt(%0, "Cash")
#define 			SetPVarInt(%0,%1,0); 		DeletePVar(%0,%1);
#define 			PlayerToPoint(%1,%2,%3,%4,%5)  			IsPlayerInRangeOfPoint(%2,%1,%3,%4,%5)
#define 			Skin        				SetPlayerSkin
#define 			SpeedCheck(%0,%1,%2,%3,%4)  	floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)
#define 			SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) 	SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define 			StopPlayerHoldingObject(%1) 			RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define 			IsPlayerHoldingObject(%1) 				IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)

#define 			COLOR_FUCK 					Info[playerid][pAdmin] = 7;
#define             EfectoPedo 					(18687)
#define             EfectoEructo 				(18729)

// COLORES
#define 			FIND_COLOR					0xB90000FF
#define 			COLOR_GENERAL     			0xFFA500FF
#define 			COLOR_LIYELLOW 				0xFFFF80FF
#define 			COLOR_POINTGEN 				0xF5CB38FF
#define 			COLOR_BLUED 				0x23A9D6FF
#define 			COLOR_VIP 					0xC93CCE00
#define 			TEAM_FBI_COLOR 				0x8D8DFF00
#define 			TEAM_NEWS_COLOR 			0x049C7100
#define 			TEAM_MED_COLOR 				0xFF828200
#define 			COLOR_NG 					0x9ACD3200
#define 			TEAM_TAXI_COLOR 			0xF2FF0000
#define 			COLOR_NEWBIE 				0x7DAEFFFF
#define 			COLOR_TWWHITE 				0xFFFFFFAA
#define 			COLOR_TWYELLOW 				0xFFFF00AA
#define 			COLOR_TWPINK 				0xE75480AA
#define 			COLOR_TWRED 				0xFF0000AA
#define 			COLOR_TWBROWN 				0x654321AA
#define 			COLOR_TWGRAY 				0x808080AA
#define 			COLOR_TWOLIVE 				0x808000AA
#define 			COLOR_TWPURPLE 				0x800080AA
#define 			COLOR_TWTAN 				0xD2B48CAA
#define 			COLOR_TWAQUA 				0x00FFFFAA
#define 			COLOR_TWORANGE 				0xFF8C00AA
#define 			COLOR_TWAZURE 				0x007FFFAA
#define 			COLOR_TWGREEN 				0x008000AA
#define 			COLOR_TWBLUE 				0x0000FFAA
#define 			COLOR_TWBLACK 				0x000000AA
#define 			TEAM_APRISON_COLOR 			0x9C791200
#define 			PUBLICRADIO_COLOR    		0x6DFB6DFF
#define				COLOR_REPORT				0xFFFF91FF
#define 			COLOR_HELPERCHAT  			0x0BBD5FEC8
#define 			COLOR_COMBINEDCHAT 			0x6CEFF0FF
#define 			COLOR_TITLE 				0xFCCA03FF
#define 			COLOR_TEORY     			0xFFFF91FF
#define 			COLOR_QUESTION  			0xFFB18CFF
#define 			COLOR_YES       			0x00CC00FF
#define 			COLOR_DUDA      			0xD86356FF
#define 			COLOR_NO        			0xFF8080FF
#define 			COLOR_ASKQ 					0xFF0000FF
#define 			COLOR_DUTY 					0x00CA00FF
#define 			COLOR_NEGATIVE 				0xFF6A6AFF
#define 			WANTED_COLOR 				0xBF6000FF
#define 			COLOR_MEGAPHONE 			0xFF9B6AFF
#define 			COLOR_GRAD1 				0xB4B5B7FF
#define 			COLOR_GRAD2     			0xBFC0C2FF
#define 			COLOR_GRAD3 				0xCBCCCEFF
#define 			COLOR_GRAD4 				0xD8D8D8FF
#define 			COLOR_GRAD5 				0xE3E3E3FF
#define 			COLOR_GRAD6 				0xF0F0F0FF
#define 			COLOR_GREY 					0xAFAFAFAA
#define 			COLOR_GREEN 				0x9EC73DAA
#define 			COLOR_GREEN2 				0x33AA33AA
#define 			COLOR_GROVE 				0x00FF00FF
#define 			COLOR_RED 					0xAA3333AA
#define 			COLOR_REALRED     			0xFF0606FF
#define 			COLOR_RED2 					0xFF6F6FFF
#define 			COLOR_LIGHTRED 				0xFF6347AA
#define 			COLOR_LIGHTBLUE 			0x33CCFFAA
#define 			COLOR_LIGHTGREEN			0x9ACD32AA
#define 			COLOR_CMDA 					0xFFFF00AA
#define 			COLOR_YELLOW 				0xFFFF00AA
#define 			COLOR_YELLOW2 				0xF5DEB3AA
#define 			COLOR_ORANGE 				0xFF7F00FF
#define 			COLOR_WHITE 				0xFFFFFFAA
#define 			COLOR_FADE 					0xE6E6E6E6
#define 			COLOR_FADE1 				0xE6E6E6E6
#define 			COLOR_FADE2 				0xC8C8C8C8
#define 			COLOR_FADE3 				0xAAAAAAAA
#define 			COLOR_FADE4 				0x8C8C8C8C
#define 			COLOR_FADE5 				0x6E6E6E6E
#define 			COLOR_PURPLE 				0xC2A2DAAA
#define 			COLOR_DBLUE 				0x2641FEAA
#define				COLOR_ALLDEPT 				0xFF8282AA
#define 			COLOR_NEWS 					0x458E1DAA
#define 			COLOR_NEWS2 				0xFFA500AA
#define             COLOR_SANEWS                0x77A71FFF
#define             COLOR_GOBALL                0x007AF4FF
#define 			COLOR_OOC 					0x66FFFFFF
#define 			OBJECTIVE_COLOR 			0x64000064
#define 			TEAM_GREEN_COLOR 			0xFFFFFFAA
#define 			TEAM_JOB_COLOR 				0xFFB6C1AA
#define 			TEAM_HIT_COLOR 				0xFFFFFF00
#define 			TEAM_BLUE_COLOR 			0x8D8DFF00
#define 			TEAM_RADIO_COLOR2 			0xF2D068FF // Yellow
#define 			TEAM_RADIO_COLOR 			0x9B9BFFFF // Blue
#define 			COLOR_ADD 					0x63FF60AA
#define 			TEAM_GROVE_COLOR 			0x00D900C8
#define 			TEAM_VAGOS_COLOR 			0xFFC801C8
#define 			TEAM_BALLAS_COLOR 			0xD900D3C8
#define 			TEAM_AZTECAS_COLOR 			0x01FCFFC8
#define 			TEAM_CYAN_COLOR 			0xFF8282AA
#define 			TEAM_ORANGE_COLOR 			0xFF830000
#define 			TEAM_COR_COLOR 				0x39393900
#define 			TEAM_BAR_COLOR 				0x00D90000
#define 			TEAM_TAT_COLOR 				0xBDCB9200
#define 			TEAM_CUN_COLOR 				0xD900D300
#define 			TEAM_STR_COLOR 				0x01FCFF00
#define 			TEAM_ADMIN_COLOR 			0x00808000
#define 			COLOR_INVIS 				0xAFAFAF00
#define 			COLOR_SPEC 					0xBFC0C200
#define 			COLOR_BLUE 					0x2641FEAA
#define 			COLOR_DARKNICERED 			0x9D000096
#define 			COLOR_LIGHT_BLUE 			0x9FB1EEAA
#define 			TRY_GREEN   				0x00BF60FF
#define 			ROJO_ADMIN 					0xDC092FFF
#define 			COLOR_SHOP 					0xE7E784FF
#define 			VERDE_ADMIN 				0x41FF2FFF
#define 			CELESTE_ADMIN 				0x41FFECFF
#define 			AMARILLO_ADMIN 				0xFFFF00FF
#define 			CREMA_ADMIN 				0xFFFFD4D4
#define 			ROSADO_ADMIN 				0xFF4FD4D4
#define 			MORADO_ADMIN 				0x9600FF2E
#define 			ORANGE_ADMIN 				0xFF7617FF
#define 			PAINTBALL_TEAM_RED 			0xFF000000
#define 			PAINTBALL_TEAM_BLUE 		0x2641FE00
#define 			YELLOW 						0xFFFF00FF
#define 			ORANGE 						0xF97804FF
#define 			GRAY 						0xCECECEFF
#define 			LIGHTBLUE 					0x00C2ECFF
#define 			COLOR_GREENDO 				0xAAD564FF
// Colores para mensajes
#define				COL_WHITE 					"{FFFFFF}"
#define 			COL_RED 					"{F81414}"
#define 			COL_GREEN 					"{00FF22}"
#define 			COL_LIGHTBLUE 				"{00CED1}"
#define 			COL_YELLOW 					"{FFFF00}"
#define 			COL_PURPLE					"{C2A2DA}"
#define 			COL_GENERAL					"{FFA500}"
#define 			COL_HOUSET					"{01DF01}"
#define 			COL_BLUE					"{2641FE}"
#define 			COL_DUDA					"{FF4719}"
#define 			COL_REPO					"{FFCABC}"
#define 			COL_PINK					"{F781F3}"

#define 			ResetMoneyBar 				ResetPlayerMoney
#define 			UpdateMoneyBar 				GivePlayerMoney
/* 						Dialogs				 				*/
#define 			INVALID_DIALOG      		(9999)
// LIBRE 1!!
#define 			EQUIPO_DOC  				(2)
#define 			DIALOGUNDI   				(3)
#define 			DIALOG_HIT     				(4)
#define 			DIALOG_DROP     			(5)
#define 			RENT_BIKE 					(6)
#define 			DIALOG_EDITOBJECT           (7)
#define 			DRINKDIALOG 				(8)
#define 			DRINKLISTDIALOG				(9)
#define 			TIPDIALOG 					(10)
#define 			EQUIPO_GOB 					(11)
#define 			IPAD 						(12)
#define 			CPASS 						(13)
#define 			EQUIPO_CNN 					(14)
#define 			TELEPORTS_FACCIONES 		(15)
#define 			PB_MENU 					(16)
#define 			PB_SARENA 					(17)
#define 			PB_BUYFI 					(18)
#define				PB_SCORE 					(19)
#define 			PB_FICHAS 					(20)
#define 			DUTY_OPTIONS 				(21)
#define 			DUTYMENU2 					(22)
#define 			DUTYMENU3 					(23)
#define 			DUTYMENU4 					(24)
#define 			DUTYMENU5 					(25)
#define 			TRAFICDRUGS 				(26)
#define 			ADMUTE 						(27)
#define 			DOORLOCK 					(28)
#define 			CARSPAWN 					(29)
#define  			FAMILY_SKIN                 (30)
#define  			D_SPEEDCAMRANGE				(31)
#define  			D_SPEEDCAMLIMIT				(32)
#define  			D_SPEEDCAMSTATUS			(33)
#define				D_SPEEDCAMFINE              (34)
#define 			DIALOG_BANKMD    			(35)
// LIBRE
#define				DIALOG_FAMILIA              (37)
#define				DIALOG_GUNLIC              	(38)
#define				DIALOG_GM_INFO 				(39)
#define				DIALOG_GM_INFO_VERSION 		(40)
#define				DIALOG_GM_INFO_VERSION2 	(41)
#define             DIALOG_CUENTAEXIST          (42)
#define 			DIALOG_CDBUY 				(43)
#define 			DIALOG_ADMAIN				(47)
#define 			DIALOG_ADLIST				(48)
#define 			DIALOG_ADPLACE				(49)
#define 			DIALOG_ADPLACEP				(50)
#define 			DIALOG_ADSEARCH				(51)
#define 			DIALOG_ADFINAL				(52)
#define 			DIALOG_SHOPORDER    		(53)
#define 			DIALOG_SHOPERROR    		(54)
#define 			DIALOG_GMX          		(55)
#define 			PB_CHOOSE 					(56)
#define 			PBJOINTEAM 					(57)
#define 			PB_ARMAS 					(58)
#define 			PB_CANJE1 					(59)
#define 			PBARENASCORES 				(60)
#define				MPSPAYTICKETS 				(61)
#define 			REMOVEKEYS 					(62)
#define 			GIVEKEYS 					(63)
#define 			GOTOPLAYERCAR 				(64)
#define 			TRACKCAR 					(65)
#define 			SELLCAR 					(67)
#define 			DIALOG_CDLOCKMENU 			(69)
#define 			DIALOG_CDGLOCKMENU 			(71)
#define 			DIALOG_NUMBER_PLATE 		(72)
#define 			DIALOG_NUMBERPLATE 			(73)
#define 			UNMODCARMENU 				(74)
#define 			HQENTRANCE 					(75)
#define 			HQEXIT 						(76)
#define 			HQCUSTOMINT 				(77)
#define 			HQDELETE 					(78)
#define 			DIALOG_NAMECHANGE2 			(79)
#define 			DIALOG_LICENSE_BUY 			(80)
#define 			JOBFINDMENU 				(81)
#define 			DIALOG_NAMECHANGE 			(82)
#define 			DIALOG_HITMAN 				(83)
#define 			FDUTYMENU 					(84)
#define 			FDUTYMENU2 					(85)
#define 			FDUTYMENU3 					(86)
#define 			DUTYMENU 					(87)
#define 			WELCOME 					(88)
#define 			REG_AGE 					(89)
#define 			REG_SEX 					(90)
#define 			D_REGACENT 					(91)
#define 			D_REGCON 					(92)
#define 			DIALOG_REG_TUT 				(93)
#define 			REG_NAC		 				(94)
#define 			DINFO   					(95)
#define 			STOREMENU 					(96)
#define 			LOTTO_BUY       			(97)
#define 			FSTYLE_DIALOG   			(98)
#define 			DIALOG_AMMU        			(99)
#define 			ELEVATOR 					(101)
#define 			ELEVATOR2 					(102)
#define 			ELEVATOR3 					(103)
#define 			ELEVATOR4 					(104)
#define 			ELEVATOR5 					(105)
#define 			ELEVATOR7 					(106)
#define 			DLOGIN       				(107)
#define 			DREGISTER                   (108)
#define 			MECANICO_MENU   			(109)
#define 			MMENU_REPARACION    		(110)
#define 			MMENUTUNING_G 				(111)
#define 			TUNING_WAA  				(112)
#define 			TUNING_LOC  				(113)
#define 			TUNING_MENU_RUEDAS 			(114)
#define 			REQF_ACCEPT 				(115)
#define 			PETITION_DIALOG 			(116)
#define 			ENTER_LSTV 					(117)
#define 			REPORTSMENU  				(118)
#define 			TIPRE 						(119)
#define 			REBUG 						(120)
#define 			DIALOG_LOADTRUCK			(121)
#define 			DIALOG_LOADTRUCKL 			(122)
#define 			DIALOG_LOADTRUCKI 			(123)
#define 			TOYS        				(124)
#define 			DELETETOY       			(125)
#define 			WEARTOY         			(126)
#define 			BUYTOYS         			(127)
#define 			BUYTOYS2       				(128)
#define 			D_SERVICES        			(129)
#define 			BUYTOYSGOLD     			(130)
#define 			BUYTOYSGOLD2    			(131)
#define 			EDITTOYS        			(132)
#define 			EDITTOYS2       			(133)
#define 			EDITTOYSBONE    			(134)
#define 			DIALOG_ATMB      			(135)
#define 			DIALOG_ATMBR      			(136)
#define 			DIALOG_ATMBD      			(137)
#define 			DIALOG_ATMBE      			(138)
#define 			DIALOG_BANKM      			(139)
#define 			DIALOG_BANKMR      			(140)
#define 			DIALOG_BANKME    			(141)
#define 			BUYTOYSCOP                  (142)
#define 			BUYTOYSCOP2     			(143)
#define 			BUYTOYSCOP3     			(144)
#define 			EDITTOYSIZX     			(145)
#define 			EDITTOYSIZY      			(146)
#define 			EDITTOYSIZZ      			(147)
#define 			NGMENU          			(148)
#define 			NGMENUWEP       			(149)
#define 			NGMENUSKIN      			(150)
#define 			FDUTYMENU4 					(151)
#define 			DIALOG_SHOPFISH 			(152)
#define             MERCADONEGRO                (153)
#define             DIALOG_NOLOGIN              (154)
#define 			DIALOG_VIPCOLOR				(156)
#define 			D_CVACENTO					(157)
#define 			DIALOG_VIPCLOTHES			(158)
#define 			DIALOG_CREATEGUN    		(159)
#define				D_ATM_MENU   				(160)
#define				D_ATM_PIN          			(161)
#define				D_ATM_RET                	(162)
#define				D_ATM_DEP                	(163)
#define				D_ATM_CAMPIN                (164)
#define				D_ATM_ESTADO                (165)
#define 			D_ATM_TRANS                 (166)
#define 			D_ATM_TRANS1                (167)
#define 			D_ATM_TRANS2                (168)
#define 			HELP_MENU                   (169)
#define 			D_NEWVEH 					(170)
#define 			D_NEWVEH_1 					(171)
#define 			D_NEWVEH_2 					(172)
#define 			D_NEWVEH_3 					(173)
#define 			HOUSE_OPTIONS    			(174)
#define 			HOUSE_RETIRAR    			(175)
#define 			HOUSE_DEPOSITAR				(176)
#define 			HOUSE_ITEM 		 			(177)
#define 			HOUSE_ITEM_MAT   			(178)
#define 			HOUSE_ITEM_POT 	 			(179)
#define 			HOUSE_ITEM_CRACK 			(180)
#define 			HOUSE_ITEM_MAT_D 			(181)
#define 			HOUSE_ITEM_MAT_R 			(182)
#define 			HOUSE_ITEM_POT_D 			(183)
#define 			HOUSE_ITEM_POT_R 			(184)
#define 			HOUSE_ITEM_CRACK_D 			(185)
#define 			HOUSE_ITEM_CRACK_R 			(186)
#define 			HOUSE_OBJECTS    			(187)
#define 			DIALOG_FAMMATSD    			(188)
#define 			DIALOG_FAMMATSR    			(189)
#define 			DIALOG_FAMMATS    			(190)
#define 			DIALOG_FAMCRACKD    		(191)
#define 			DIALOG_FAMCRACKR    		(192)
#define 			DIALOG_FAMCRACK    			(193)
#define 			DIALOG_FAMPOTD    			(194)
#define 			DIALOG_FAMPOTR    			(195)
#define 			DIALOG_FAMPOT    			(196)
#define 			DIALOG_FAMMONEYD    		(197)
#define 			DIALOG_FAMMONEYR    		(198)
#define 			DIALOG_FAMMONEY    			(199)
#define 			D_COINSVIP    				(200)
#define 			D_CVCARMODEL                (201)
#define 			D_CVVEST                    (202)
#define 			D_CVLASER                   (203)
#define 			D_CVLASERSLOT               (204)
#define 			D_CVLASERCONFIRM            (205)
#define 			D_CVVIP                     (206)
#define 			D_CVVIPSILVER               (207)
#define 			D_CVVIP2              		(208)
#define 			D_CVVIPTERMS              	(209)
#define 			D_CVDOBLEEXP              	(210)
#define 			D_CVNEON	              	(211)
#define 			D_CVNEONSLOT	            (212)
#define 			D_CVNEONCONFIRM	            (213)
#define 			D_PINVIP            		(214)
#define 			D_PINVIPCREATE            	(215)
#define 			D_PINVIPCHANGE	            (216)
#define 			D_PINVIPCHANGE2	            (217)
#define 			D_VIPACC	            	(218)
#define 			D_CODEVIP	            	(219)
#define 			D_CVOTHERS	            	(220)
#define 			D_CVOTHERSSLOT	            (221)
#define 			D_CVOTHERCONFIRM	        (222)
#define 			D_VIPLOCKER	        		(223)
#define             DIALOG_MYBUSINESS           (224)
#define             DIALOG_MYBUSINESS_RET       (225)
#define             DIALOG_MYBUSINESS_DEP       (226)
#define             DIALOG_MYBUSINESS_STO       (227)
#define             DIALOG_MYBUSINESS_PSTO      (228)
#define             DIALOG_BFOOD      			(229)
#define             DIALOG_BSEX_SHOP      		(230)
#define             DIALOG_MYBUSINESS_PSTO2     (231)
#define             DIALOG_BOOMBOX              (232)
#define             DIALOG_BOOMBOX1             (233)
#define             DIALOG_BOOMBOX2             (234)
#define             DIALOG_BOOMBOX3             (235)
#define             DIALOG_BOOMBOX4             (236)
#define             DIALOG_BOOMBOX5             (237)
#define             DIALOG_BOOMBOX6             (238)
#define             DIALOG_BOOMBOX7             (239)
#define 			DIALOG_EDIT_FURNITURE 		(240) //
#define 			DIALOG_SELL_FURNITURE 		(241) //
#define 			DIALOG_BUY_FURNITURE 		(242) //
#define 			DIALOG_MENU_FURNITURE 		(243) //
#define 			DIALOG_FURNITURE_BOUGHT 	(244) //
#define 			DIALOG_FURNITURE_KEEPSELL 	(245)
#define             DIALOG_CDSTEREOMENU         (246)

//Rak samp
#define             RakSAMP                     "DA0E5085558CCACC88ECCA40C4CEC49A9408EEE8"

enum vCoords
{
	getID,
	Float:vvvX,
	Float:vvvY,
	Float:vvvZ,
};

new Offsets[9][vCoords] = {
{560, 0.398071289,0.75390625,0.43879509}, // Tablero Sultna
{415, 0.409729004, 0.526367188, 0.206963539}, // Tablero Cheetah
{421, 0.421691895, 0.804931641, 0.256482124}, // Tablero Washington
{426, 0.575378418, 0.786132812, 0.361483574}, // Tablero Premir
{579, 0.454345703, 0.575683594, 0.645122528}, // Tablero Huntley
{402, 0.53515625, 0.562988281, 0.278743744}, // Tablero Buffalo
{461, 0.00000000, -0.932861328, 0.494509697}, // PCJ 600
{521, 0.00000000, -0.928955078, 0.558652878},  // FCR 900
{506, 0.541137695, 0.282714844, 0.272130013} // Super Gt
};

enum ddInfo
{
	ddDescription[128],
	ddPickupID,
	Text3D: ddTextID,
	ddCustomInterior,
	ddExteriorVW,
	ddExteriorInt,
	ddInteriorVW,
	ddInteriorInt,
	Float: ddExteriorX,
	Float: ddExteriorY,
	Float: ddExteriorZ,
	Float: ddExteriorA,
	Float: ddInteriorX,
	Float: ddInteriorY,
	Float: ddInteriorZ,
	Float: ddInteriorA,
	ddCustomExterior,
	ddVIP,
	ddFamily,
	ddFaction,
	ddAdmin,
	ddWanted,
	ddVehicleAble,
	ddColor,
	ddPickupModel,
	dPass[24],
	dLocked,
	dMusic,
};
new DDoorsInfo[MAX_DDOORS][ddInfo];

enum infoCarSale
{
	Float: CSVehSpawn[4],
	Float: VehSpawn[4],
	CSVehId,
	CSVehCost,
	CSVehModel,
	Text3D:CSVehicleLabel,
}
new varCarSale[MAX_CARSALE][infoCarSale];

enum CodesVIP{CodeNro,CodeCoins,}
new varCodesVIP[MAX_CODESVIP][CodesVIP];

enum hInfo
{
	hOwned,
	hLevel,
	hHInteriorWorld,
	hCustomInterior,
	hOwner[MAX_PLAYER_NAME],
	Float: hExteriorX,
	Float: hExteriorY,
	Float: hExteriorZ,
	Float: hExteriorR,
	Float: hExteriorA,
	Float: hInteriorX,
	Float: hInteriorY,
	Float: hInteriorZ,
	Float: hInteriorR,
	Float: hInteriorA,
	hLock,
	hRentable,
	hRentFee,
	hValue,
	hSafeMoney,
	hPot,
	hCrack,
	hMaterials,
	hWeapons[5],
	hPickupID,
	Text3D: hTextID,
	hCustomExterior,
	FCount,
	FModel[MAX_FURNITURE],
	FurnitureObj[MAX_FURNITURE],
	Float:FPosX[MAX_FURNITURE],
	Float:FPosY[MAX_FURNITURE],
	Float:FPosZ[MAX_FURNITURE],
	Float:FRotX[MAX_FURNITURE],
	Float:FRotY[MAX_FURNITURE],
	Float:FRotZ[MAX_FURNITURE]
};
new HouseInfo[MAX_HOUSES][hInfo];

enum businessE
{
	bType,
	bOwner[MAX_PLAYER_NAME],
	bName[32],
	Float: bExteriorPos[3],
	Float: bInteriorPos[3],
	bInterior,
	bLocked,
	Float: bMiscPos[3],
	bVault,
	bPrice,
	Text3D: bLabelID,
	bPickupID,
	bStock,
}
new businessVariables[MAX_BUSINESS][businessE];
// Event
enum EventInfoEnum
{
	EventAdvisor,
	EventStatus,
	EventType,
	EventoInfo[128],
	Float: EventHealth,
	Float: EventArmor,
	Float: EventPositionX,
	Float: EventPositionY,
	Float: EventPositionZ,
	EventInterior,
	EventWorld,
	EventWeapons[ 5 ],
	EventTeamColor[2],
	EventTeamSkin[2],
	EventLimit,
	EventPlayers,
	EventRequest,
	EventStartRequest,
	EventCreator,
	EventStaff[5],
	EventJoinStaff,
	VipOnly,
	Float: EventTeamPosX1,
	Float: EventTeamPosY1,
	Float: EventTeamPosZ1,
	Float: EventTeamPosX2,
	Float: EventTeamPosY2,
	Float: EventTeamPosZ2
}

new InfoEvento[ EventInfoEnum ];

enum vCamera
{
	Float: vCameraPos[3],
	Float: vCameraRot,
	vCameraStatus, // 0: ON 1: OFF futere reference
	vCameraRange,
	vCameraLimit,
	vCameraTicket,
	Text3D:vCameraLabel,
	vCameraObject,
}
new vCameraInfo[MAX_vCAMERAS][vCamera];

enum atmE
{
	Float: fATMPos[3],
	Float: fATMPosRot,
	atmMoney,
	rObjectId,
	Text3D: rTextLabel,
}
new atmVariables[MAX_ATMS][atmE];
// System Family
enum fInfo
{
	FamilyTaken,
	FamilyName[42],
	FamilyMOTD[65],
	FamilyColor,
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	FamilyCash,
	FamilyMats,
	FamilyPot,
	FamilyCrack,
	Float:FamilySafe[3],
	FamilyUSafe,
	FamilyRank1[20],
	FamilyRank2[20],
	FamilyRank3[20],
	FamilyRank4[20],
	FamilyRank5[20],
	FamilyRank6[20],
	FamilyPickup,
	Text3D:FamilyPickup3D,
	FamilyMaxSkins,
	FamilySkins[4],
	FamilyResetSpawns,
};
new fINFO[MAX_FAMILY][fInfo];

enum fPoint
{
	Float:Pointx,
	Float:Pointy,
	Float:Pointz,
	Type,
	Vulnerable,
	MatPoint,
	CratePoint,
	Announced,
	ClaimerId,
	ClaimerTeam,
	TimeToClaim,
	TimeLeft,
	Owner[32],
	PlayerNameCapping[MAX_PLAYER_NAME],
	CapperName[MAX_PLAYER_NAME],
	Name[32],
	TakeOverTimerStarted,
	TakeOverTimer,
	Text3D:TextLabel,
	CaptureTimerEx2,
	Stock,
	Text3D:CaptureProccess,
	Text3D:CaptureProgress,
	CaptureProccessEx,
	Float: Capturex,
	Float: Capturey,
	Float: Capturez,
	PointPickupID,
	Bar:PointBarID,
}
new Points[MAX_POINTS][fPoint];

enum ptInfo
{
	ptModelID,
	ptBone,
	Float:ptPosX,
	Float:ptPosY,
	Float:ptPosZ,
	Float:ptRotX,
	Float:ptRotY,
	Float:ptRotZ,
	Float:ftscaleX,
	Float:ftscaleY,
	Float:ftscaleZ
};
new PlayerToyInfo[MAX_PLAYERS+1][MAX_PLAYERTOYS][ptInfo];

enum HoldingEnumAllCop { holdingmodelid, holdingprice, holdingmodelname[24] }
new HoldingObjectsCop[15][HoldingEnumAllCop] = {
{18642,1000,"Taser"},
{19141,2500,"Casco SWAT"},
{19142,2500,"Chaleco SWAT"},
{18636,1000,"Gorro Policía"},
{19099,1000,"Gorro Policía 2"},
{19100,1000,"Gorro Policía 3"},
{18637,1000,"Escudo Policía"},
{19161,1000,"Sombrero Policía"},
{19162,1000,"Sombrero Policía 2"},
{19200,1000,"Casco Policía"},
{19520,50,"Sombrero Piloto"},
{19521,50,"Sombrero Cop"},
{19138,1000,"Lentes"},
{19139,1000,"Lentes 2"},
{19140,1000,"Lentes 3"}
};

enum HoldingEnumAll { holdingmodelid, holdingmodelname[24] }
new HoldingObjectsAll[263][HoldingEnumAll] = {
{18642,"Taser"},
{18643,"Laser Rojo"},
{19080,"Laser Azul"},
{19081,"Laser Rosado"},
{19082,"Laser Naranja"},
{19083,"Laser Verde"},
{19084,"Laser Amarillo"},
{335,"Navaja"},
{336,"Bat"},
{348,"Desert E"},
{349,"Escopeta"},
{353,"MP5"},
{355,"AK-47"},
{356,"M4"},
{358,"Sniper"},
{371,"Mochila Rockstar"},
{19351,"Bigotes Falsos"},
{19347,"Estrella Sheriff"},
{19086,"Dildo Grande"},
{18675,"SmokePuff"},
{19701,"Flama Pequeña"},
{18693,"Flama Larga"},
{18698,"Insectos"},
{18708,"Burbujas"},
{19141,"Casco SWAT"},
{19515,"Chaleco Antibalas"},
{19142,"Chaleco SWAT"},
{18636,"Gorro Policía"},
{19099,"Gorro Policía 2"},
{19100,"Gorro Policía 3"},
{18637,"Escudo Policía"},
{19161,"Sombrero Policía"},
{19162,"Sombrero Policía 2"},
{19520,"Sombrero Piloto"},
{19521,"Sombrero Cop"},
{19200,"Casco Policía"},
{19138,"Lentes"},
{19139,"Lentes 2"},
{19140,"Lentes 3"},
{18632,"Caña Pesca"},
{18633,"L. Inglesa"},
{18634,"Palanca"},
{18635,"Martillo"},
{18638,"Casco Amarillo"},
{19093,"Casco 1"},
{19160,"Casco 3"},
{18639,"Sombrero N."},
{19488,"Sombrero B."},
{18640,"Cabello"},
{18975,"Cabello 2"},
{19136,"Cabello 3"},
{19274,"Cabello 4"},
{18641,"Linterna"},
{18644,"Desarmador"},
{18865,"Telefono1"},
{18866,"Telefono2"},
{18867,"Telefono3"},
{18868,"Telefono4"},
{18869,"Telefono5"},
{18870,"Telefono6"},
{18871,"Telefono7"},
{18872,"Telefono8"},
{18873,"Telefono9"},
{18874,"Telefono10"},
{18875,"B.Personas"},
{18890,"Rastrillo"},
{18891,"Bandana1"},
{18892,"Bandana2"},
{18893,"Bandana3"},
{18894,"Bandana4"},
{18895,"Bandana5"},
{18896,"Bandana6"},
{18897,"Bandana7"},
{18898,"Bandana8"},
{18899,"Bandana9"},
{18900,"Bandana10"},
{18901,"Bandana11"},
{18902,"Bandana12"},
{18903,"Bandana13"},
{18904,"Bandana14"},
{18905,"Bandana15"},
{18906,"Bandana16"},
{18907,"Bandana17"},
{18908,"Bandana18"},
{18909,"Bandana19"},
{18910,"Bandana20"},
{18911,"Mask1"},
{18912,"Mask2"},
{18913,"Mask3"},
{18914,"Mask4"},
{18915,"Mask5"},
{18916,"Mask6"},
{18917,"Mask7"},
{18918,"Mask8"},
{18919,"Mask9"},
{18920,"Mask10"},
{18921,"Boina1"},
{18922,"Boina1"},
{18923,"Boina3"},
{18924,"Boina4"},
{18925,"Boina5"},
{18926,"Sombrero1"},
{18927,"Sombrero12"},
{18928,"Sombrero13"},
{18929,"Sombrero14"},
{18930,"Sombrero15"},
{18931,"Sombrero16"},
{18932,"Sombrero17"},
{18933,"Sombrero18"},
{18934,"Sombrero19"},
{18935,"Sombrero20"},
{19487,"Sombrero21"},
{18936,"Casco1"},
{18937,"Casco2"},
{18938,"Casco3"},
{18939,"Gorra 1"},
{18940,"Gorra 2"},
{18941,"Gorra 3"},
{18942,"Gorra 4"},
{18943,"Gorra 5"},
{18944,"GorraBoater1"},
{18945,"GorraBoater2"},
{18946,"GorraBoater3"},
{18947,"GorraBoater4"},
{18948,"GorraBoater5"},
{18949,"GorraBoater6"},
{18950,"GorraBoater7"},
{18951,"GorraBoater8"},
{18952,"Casco Box"},
{18953,"GorraLana1"},
{18954,"GorraLana2"},
{18955,"GorraIncl1"},
{18956,"GorraIncl2"},
{18957,"GorraIncl3"},
{18958,"GorraIncl4"},
{18959,"GorraIncl5"},
{18960,"GorraIncl6"},
{18961,"GorraCamionero"},
{18962,"Sombrero Vaquero"},
{18964,"Casquete1"},
{18965,"Casquete2"},
{18966,"Casquete3"},
{18967,"Sombrero"},
{18968,"Sombrero2"},
{18969,"Sombrero3"},
{18970,"Sombrero Tigre"},
{18971,"GorroCool"},
{18972,"GorroCool2"},
{18973,"GorroCool3"},
{18974,"MaskZorro"},
{18645,"Casco Moto"},
{18976,"Casco Moto 2"},
{18977,"Casco Moto 3"},
{18978,"Casco Moto 4"},
{18979,"Casco Moto 5"},
{19006,"Lentes 1"},
{19007,"Lentes 2"},
{19008,"Lentes 3"},
{19009,"Lentes 4"},
{19010,"Lentes 4"},
{19011,"Lentes 6"},
{19012,"Lentes 7"},
{19013,"Lentes 8"},
{19014,"Lentes 9"},
{19015,"Lentes 10"},
{19016,"Lentes 11"},
{19017,"Lentes 12"},
{19018,"Lentes 13"},
{19019,"Lentes 14"},
{19020,"Lentes 15"},
{19021,"Lentes 16"},
{19022,"Lentes 17"},
{19023,"Lentes 18"},
{19024,"Lentes 19"},
{19025,"Lentes 20"},
{19026,"Lentes 21"},
{19027,"Lentes 22"},
{19028,"Lentes 23"},
{19029,"Lentes 24"},
{19030,"Lentes 25"},
{19031,"Lentes 26"},
{19032,"Lentes 27"},
{19033,"Lentes 28"},
{19034,"Lentes 29"},
{19035,"Lentes 30"},
{19036,"HockeyMask1"},
{19037,"HockeyMask2"},
{19038,"HockeyMask3"},
{19039,"Reloj 1"},
{19040,"Reloj 2"},
{19041,"Reloj 3"},
{19042,"Reloj 4"},
{19043,"Reloj 5"},
{19044,"Reloj 6"},
{19045,"Reloj 7"},
{19046,"Reloj 8"},
{19047,"Reloj 9"},
{19048,"Reloj 10"},
{19049,"Reloj 11"},
{19050,"Reloj 12"},
{19051,"Reloj 13"},
{19052,"Reloj 14"},
{19053,"Reloj 15"},
{19064,"GorraSanta1"},
{19065,"GorraSanta2"},
{19066,"GorraSanta3"},
{19067,"HoodyHat1"},
{19068,"HoodyHat2"},
{19069,"HoodyHat3"},
{19078,"Loro1"},
{19079,"Loro2"},
{19085,"Parche Ojo"},
{19090,"PomPomAzul"},
{19091,"PomPomRejo"},
{19092,"PomPomVerde"},
{19094,"GorroBurgerShot"},
{19095,"Sombrero Vaquero 2"},
{19096,"Sombrero Vaquero 3"},
{19097,"Sombrero Vaquero 4"},
{19098,"Sombrero Vaquero 5"},
{19113,"Casco Tonto1"},
{19114,"Casco Tonto2"},
{19115,"Casco Tonto3"},
{19116,"Casco Aereo1"},
{19117,"Casco A. 2"},
{19118,"Casco A. 3"},
{19119,"Casco A. 4"},
{19120,"Casco A. 5"},
{19101,"Casco Militar1"},
{19102,"Casco Militar2"},
{19103,"Casco Militar3"},
{19104,"Casco Militar4"},
{19105,"Casco Militar5"},
{19106,"Casco Militar6"},
{19107,"Casco Militar7"},
{19108,"Casco Militar8"},
{19109,"Casco Militar9"},
{19110,"Casco Militar10"},
{19111,"Casco Militar11"},
{19112,"Casco Militar12"},
{19137,"GorraCluckinBell"},
{19163,"Mascara"},
{19330,"Casco Bomb"},
{19331,"Casco Bomb2"},
{19317,"Guitarra"},
{19318,"GuitarraX"},
{19319,"XFireGuitarra"},
{1210,"Maleta"},
{3044,"Cigarro"},
{18647,"Neon Rojo"},
{18648,"Neon Azul"},
{18649,"Neon Verde"},
{18650,"Neon Amarillo"},
{18651,"Neon Rosado"},
{18652,"Neon Blanco"},
{18861,"Signo ?"},
{18646,"Luz Azul&Roja"},
{19346,"HotDog"},
{19472,"Máscara de Gas"},
{19421,"Headphone 1"},
{19422,"Headphone 2"},
{19423,"Headphone 3"},
{19424,"Headphone 4"}
};

new HoldingBones[][] = {
"Nada",
"Columna",
"Cabeza",
"Brazo Izq Sup",
"Brazo Der Sup",
"Mano Izq",
"Mano Derecha",
"Muslo Izq",
"Muslo Der",
"Pie Izq",
"Pie Der",
"Right calf",
"Left calf",
"AnteBrazo Izq",
"AnteBrazo Der",
"Clavicula Izq",
"Clavicula Der",
"Cuello",
"Quijada"
};

// Info Player
enum pInfo
{
pKey[24],
pLevel,
pAdmin,
pBanAppealer,
pFactionModerator,
pGangModerator,
pHelper,
pConnectTime,
pReg,
pSex,
pAge,
pExp,
pCash,
pMoneyBank,
pPinBank,
pNrCuenta,
pIP[32],
pKills,
pDeaths,
pArrested,
pJailAdmin,
pLottoNr,
pJob,
pDudaMute,
pWarn,
pWRestricted,
pJailed,
pJailTime,
pMats,
pPackages,
pDrugs,
pCosecha,
pCrack,
pPot,
pCrates,
pAdiccion,
pLeader,
pMember,
pDivision,
pFMember,
pRank,
pChar,
Float:pHealth,
Float:pArmour,
pInt,
pPnumber,
pSprunk,
pPhoneBook,
pPhousekey,
Float:pPos_x,
Float:pPos_y,
Float:pPos_z,
Float:pPos_r,
pCarLic,
pFlyLic,
pBoatLic,
pGunLic,
pGafas,
pTut,
pVW,
pLighter,
pCigarettes,
pPapel,
pMask,
pMaskuse,
pHideNumber,
pSpeaker,
pBanned,
pDisabled,
pBlockBug,
pDNI,
pArmsSkill,
pTruckSkill,
pSmugSkill,
pDrugsSkill,
pRequestingBackup,
pSIDA,
pCancer,
pEpilepsia,
pDengue,
pFStyle,
pWantedLevel,
pAntiCancer,
pRenting,
p_Pr_Money,
p_Pr_Time,
pRob,
pVIP,
pBanDuda,
pPasaporte,
pRMuted,
pRMutedTotal,
pRMutedTime,
pRadio,
pRadioFreq,
pIpadMusic,
pWeapons[13],
pAcento[40],
pHead,
pCHits,
pFHits,
pMarried,
pPaintTeam,
pPaintTokens,
pVehicleKeysFrom,
pVehicleKeys,
pLockCar,
pLock,
pSpraycan,
pMarriedTo[128],
pContractBy[32],
pContractDetail[64],
pServiceTime,
pTaxiLicense,
pHospital,
pTriageTime,
pWExists,
Float:pWX,
Float:pWY,
Float:pWZ,
pWVW,
pWInt,
pWValue,
pWObject,
pWTimer,
pWSeeds,
pADMute,
pADMuteTotal,
pWarrant[128],
pJudgeJailTime,
pJudgeJailType,
pBeingSentenced,
pProbationTime,
pFishSkill,
pFishes,
pBiggestFish,
pADTime,
pGTokens,
pDobleExp,
pAdverID,
pOrder,
pJob2,
pVIPCHAT,
pTypeSpawn,
pAutoTextReply[64],
pShopTech,
pEstado, // 0: None 1: Tazer 2: Esposado  - future reference
pVIPDateD,
pVIPDateM,
pRegalo,
pTaxDeuda,
pTimePayDay,
pTimePlay,
pSavedTime,
pScrewdriver,
pFirstaid,
pSurveillance,
pSpectating,
pMoneyBankT,
pBorrowedMoney,
pFeesBank,
pAdminDuty,
pAdminName[MAX_PLAYER_NAME],
pNormalName[MAX_PLAYER_NAME],
pTempName,
pCoinsVip,
pCoinsPIN,
pCashGo,
Float:pHungry,
pBoombox,
};

new Info[MAX_PLAYERS][pInfo];

// System Cars Dynamic
enum pvInfo
{
Float:pvPosX,
Float:pvPosY,
Float:pvPosZ,
Float:pvPosAngle,
pvVW,
pvId,
pvModelId,
pvLock,
pvLocked,
pvPaintJob,
pvColor1,
pvColor2,
pvMods[MAX_MODS],
pvAllowPlayer[MAX_PLAYER_NAME],
pvAllowedPlayerId,
pvPark,
pvStereo,
//pvNumberPlate[32], // sz
pvPrice,
pvTicket,
pvWeapons[3],
pvImpounded,
pvFuel,
Float:pvHealth,
pvSpawned,
};
new light[MAX_VEHICLES],
Lamp[MAX_VEHICLES] = 0;
new PlayerVehicleInfo[MAX_PLAYERS+1][MAX_PLAYERVEHICLES][pvInfo];

new skinlist = mS_INVALID_LISTID,
	ToyList = mS_INVALID_LISTID,
	ToyListGold = mS_INVALID_LISTID,
 	DormitorioFur = mS_INVALID_LISTID,
 	ComedorFur = mS_INVALID_LISTID,
 	BanoFur = mS_INVALID_LISTID,
 	LobbyFur = mS_INVALID_LISTID,
 	CocinaFur = mS_INVALID_LISTID,
 	ParedesFur = mS_INVALID_LISTID,
 	ElectroFur = mS_INVALID_LISTID,
 	OtrosFur = mS_INVALID_LISTID,
	JustReported[MAX_PLAYERS],
	PlayerDuda[MAX_PLAYERS],
	szDialog[255],
	szMessage[128];

new TransferMoney[MAX_PLAYERS],
	TransferTo[MAX_PLAYERS],
	TransferNroAcc[MAX_PLAYERS];
new Bar:PizzaBar[MAX_PLAYERS],
	Bar:HungryBar[MAX_PLAYERS];
new VehicleFuel[MAX_VEHICLES] = 500;
new MatarFlatulencia[MAX_PLAYERS][2];
new FlatulenciaTroll[MAX_PLAYERS][2];
new LockStatus[MAX_VEHICLES];
new GiveKeysTo[MAX_PLAYERS];
new arr_Engine[MAX_VEHICLES char];
new arr_Towing[MAX_PLAYERS];
new RefuelingVehicle[MAX_PLAYERS];
new RefuelingVehicleTimer[MAX_PLAYERS];
new RefuelingVehiclePrice[MAX_PLAYERS];
new VehicleStatus[MAX_VEHICLES char] = 0; // 0 == none, 1 == vehicle dead about to respawn
new Float: fVehSpeed[MAX_PLAYERS];
new Muted[MAX_PLAYERS];
new QFA[MAX_PLAYERS][24]; // Anti DM ?¿
// Message of the Day
new GlobalMOTD[128];
new AdminMOTD[128];
new CAMOTD[128];
new FACMOTD[128];
new FAMMOTD[128];
new VIPMOTD[128];
new iGMXTick,iGMXTimer, servertime;
//scriptTimers[MAX_TIMERS];
new VIPGifts = 0, VIPGiftsTimeLeft, VIPGiftsName[MAX_PLAYER_NAME];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TeleportDest2[MAX_PLAYERS][3];
new TeleportDestInt[MAX_PLAYERS];
new TeleportDestInt2[MAX_PLAYERS];
new Float:TelePos[MAX_PLAYERS][6];
new EventLastInt[MAX_PLAYERS]; new EventLastVW[MAX_PLAYERS];
new Float:EventFloats[MAX_PLAYERS][6]; // 0 = EventLastR 1 = EventLastX 2 = EventLastY 3 = EventLastZ 4 = EventLastH 5 = EventLastA
//new nextteam;
new textdrawscount;
new FishCount[MAX_PLAYERS];
new TotalLogin, TotalConnect, TotalAutoBan, TotalRegister,MaxPlayersConnected,MPDay,MPMonth,MPYear,MPHour,MPMinute,PlayerCars,TotalUptime;

//talksys
new JugadorSentado[MAX_PLAYERS];

// SystemAds
enum advertinfo
{
aAdvert[128],
aResume[15],
aNumber,
aContact[MAX_PLAYER_NAME],
aTimer,
aActive,
aOther
}

new ADInfo[MAX_AD][advertinfo];
new ListItemTrackId[MAX_PLAYERS][40];
//
new NewbieTimer[MAX_PLAYERS];
new VIPTimer[MAX_PLAYERS];
//
new CurrentMoney[MAX_PLAYERS];
new JetPack[MAX_PLAYERS];
new PuedeD[MAX_PLAYERS];
new ShowRules[MAX_PLAYERS];
new RulesTime[MAX_PLAYERS];
new slotselection[MAX_PLAYERS];
//new carselection[MAX_PLAYERS];
new carsforplayer[MAX_PLAYERS];
//Simple AntiCheat
new WeaponNames[47][] = // As below
{
"Puño","Manopla","Palo de golf","Palo de acero","Cuchillo","Bate de beísbol","Pala","Palo de billar","Katana","Motosierra","Dildo morado","Dildo blanco","Dildo largo","Dildo plateado",
"Ramo de flores","Cane","Granada","Granada de gas","Cóctel molotov","Jetpack"," "," ","Pistola 45mm","Pistola SD 45mm","Pistola Desert Eagle","Escopeta","Escopeta recortada","SPAS-12",
"Micro Uzi","MP5","AK-47","M4A1","TEC-9","Rifle","Sniper Rifle","Rocket Launcher","Heatseeker","Lanzallamas","Minigun","Carga de explosivos","Detonador","Spray","Extinguidor",
"Cámara","Nightvision", "Thermal Goggles","Paracaídas"
};
new HasArmor			[MAX_PLAYERS];
new Float:ScriptArmor	[MAX_PLAYERS];
function KickFix(playerid) { Kick(playerid); }
function MatarFlatulencia_1(playerid) { KillTimer(MatarFlatulencia[playerid][0]); DestroyObject(FlatulenciaTroll[playerid][0]); }
function MatarFlatulencia_2(playerid) { KillTimer(MatarFlatulencia[playerid][1]); DestroyObject(FlatulenciaTroll[playerid][1]); }
function SetHP(playerid, Float:hp)
{
	Info[playerid][pHealth] =hp;
	SetPlayerHealth(playerid, hp);
	return 1;
}

function GiveArmorToPlayer(playerid, Float:armour)
{
	SetPlayerArmour(playerid, Float:armour);
	HasArmor[playerid] = 1;
	ScriptArmor[playerid] = armour;
	return 1;
}
timer Anticheat[1000](){
	foreach(Player, i){
	    if(IsPlayerConnectedEx(i)){
	        new Float:health, Float:armor;
	        GetPlayerHealth(i, health);
			if(health > Info[i][pHealth]){SetPlayerHealth(i, Info[i][pHealth]);}
	        GetPlayerArmour(i, armor);
	  		if(armor > ScriptArmor[i]){GiveArmorToPlayer(i, ScriptArmor[i]);}
		}
	}
	return 1;
}
#define SetPlayerArmour GiveArmorToPlayer

new ropapizzero[MAX_PLAYERS];
// Variables
// Trucker Job
new Bar:LoadTruckBar[MAX_PLAYERS] = INVALID_BAR_ID;
new LoadTruckTime[MAX_PLAYERS];
new TruckDeliver[MAX_PLAYERS];
new TruckUsed[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new TruckContents[MAX_VEHICLES] = 0;
new gPlayerCheckpointStatus[MAX_PLAYERS];
new InsideMainMenu[MAX_PLAYERS];
new HelpingNewbie[MAX_PLAYERS];
new Advisors = 0;
new AdvisorCall = 999;
//login nuevo fenix def
new Text:TextdrawZCL0;
new Text:TextdrawZCL1;
new Text:TextdrawZCL2;
new Text:TextdrawZCL3;
new Text:TextdrawZCL4;
new Text:TextdrawZCL5;
new Text:TextdrawZCL6;
new Text:TextdrawZCL7;
new Text:TextInfoZC0;
new Text:TextInfoZC1;
new Text:TextInfoZC2;
new Text:TextInfoZC3;
new Text:TextInfoZC4;
new Text:TextInfoZC5;
new Text:TextInfoZC6;
new Text:TextInfoZC7;
//lnfd

new InviteOffer[MAX_PLAYERS];
new InviteFaction[MAX_PLAYERS];
new InviteFamily[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
// Vender Veh
new VehicleOffer[MAX_PLAYERS];
new VehicleId[MAX_PLAYERS];
new VehiclePrice[MAX_PLAYERS];
// Vender Casa
new HouseOffer[MAX_PLAYERS];
new House[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
// Vender ARMA
new GunOffer[MAX_PLAYERS];
new GunId[MAX_PLAYERS];
new GunMats[MAX_PLAYERS];
new Text3D:Camera3D[MAX_PLAYERS];
// EMS
new EMSCallTime[MAX_PLAYERS];
new EMSAccepted[MAX_PLAYERS];
//TextDraw
new Text:SanAnton[3], Text:MOTD, Text:flash, Text:Speedo[MAX_PLAYERS];
new Text:LoginMenu[3];
//TUTORIAL
new Text:TutTxt[4];
new Text:TextTut[MAX_PLAYERS];
new TutStep[MAX_PLAYERS];
new Text:txtAnimHelper;
new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new gPlayerAnimLibsPreloaded[MAX_PLAYERS];
//Looking up for your account
new
Text:cargando,
Text:looking,
Text:streamer,
Text:boxGM;
//SAPD int
new courtjail[MAX_PLAYERS];
new courtbuttons[5], courtgates[2];
new fen1,fen2,fen3,fen4,fen5,fen6, JDoor1, JDoor2, JDoor3, JDoor4, JDoor5, JDoor6;
new LSPDDoor1, LSPDDoor1ButtonEx,LSPDDoor1ButtonInt, LSPDDoor2,LSPDDoor2ButtonEx,LSPDDoor2ButtonInt;
//SAPD Portones
new pdgate1,pdgate2, saem1,saem2;
//new pObject[MAX_PLAYERS];
new Ipadon[MAX_PLAYERS];
//GIFTS
new dynamicgift;
new Text3D:dynamicgift3DText;
//FBI Int
new FBILobbyLeft, FBILobbyLeftBTN[2], FBILobbyRight, FBILobbyRightBTN[2], FBIPrivate[2], FBIPrivateBTN[2];
//CNN Portones
new tvp, tvp1;
//Traficantes Portones
new reja1, reja2, reja3;
//Hospital Portones
new hospitalgate;
//Gobierno Portones
new gobiernogate, gobiernogate1;
new depgate;
//Cars
new SAPDVehicles[52],
TruckerVehicles[15],
TaxiTrans[5],
BusTrans[3],
SAMCVehicles[7],
MecanicosVehicle[6],
FBIVehicle[16],
NGLandVehicles[32],
CNNVehicle[5],
CarVIP[14],
Rentbike[11],
PizzaBike[8],
BankVehicles[4],
GobiernoCar[6];
//Sistema "Rent Bike"
new RentTime[MAX_PLAYERS];
new IsaRent[MAX_PLAYERS];
new HireKey[MAX_PLAYERS];
//
new Carnada[MAX_PLAYERS];
new Lineas[MAX_PLAYERS];
new CreatedCars[100];
new Barricade[MAX_BARRICADES];
//Mats Seller
new MatsOffer[MAX_PLAYERS];
new MatsPrice[MAX_PLAYERS];
new MatsAmount[MAX_PLAYERS];
/// matrimonio
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
//
new JobDuty[MAX_PLAYERS];
new PuedeP[MAX_PLAYERS];
// -= Petition =-
new Petition_ID[MAX_PLAYERS];
new NumBuy[MAX_PLAYERS], NumSeller[MAX_PLAYERS], NumPrice[MAX_PLAYERS];
new See_MP[MAX_PLAYERS];
new CraftOffer[MAX_PLAYERS], CraftId[MAX_PLAYERS], CraftMats[MAX_PLAYERS], CraftName[MAX_PLAYERS][50];
new Blinded[MAX_PLAYERS], Tied[MAX_PLAYERS];
new Rope[MAX_PLAYERS];
new AdminChat[MAX_PLAYERS];
new advisorchat[MAX_PLAYERS];
new DrugFarming[MAX_PLAYERS];
new nod = 0;
new LoginTimer[MAX_PLAYERS];
new Editing[MAX_PLAYERS];
//Hitman New Variable
new HitOffer[MAX_PLAYERS];
new HitToGet[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
// Security comands spam
new CommandSpamTimes[MAX_PLAYERS];
new CommandSpamUnmute[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WhoFind[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new RequestingBackup[MAX_PLAYERS];
new ReqF_Faction[MAX_PLAYERS];
new ReqF_Name[MAX_PLAYERS][32];
new Seatbelt[MAX_PLAYERS];
new FreezeLast[MAX_PLAYERS];
new Misile_Launcher;
new PuertaH1;
new PuertaH2;
new HaciaArriba = 0;
new HaciaAbajo = 0;
new TotalDM, TotalTDM, PlayersRed, PlayersBlue, TotalDM2, TRedKills, TBlueKills; // PAINTBALL VAR
new Ganzuas[MAX_PLAYERS];
new Interview = 0;
new Interviewer[32] = "Nadie";
new Tax = 0;
new fbank = 0;
new nonewbie = 0;
new TaxValue = 0;
new Jackpot = 0;
new Blood = 1000;
new Fuel = 5000;
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new InLive = 0;
new Medics = 0;
new MedicCall = 999;
new TaxiCall = 999;
new TaxiCallReady[MAX_PLAYERS];
new TaxiOnDuty[MAX_PLAYERS]; // Si está onduty el conductor
new TaxiTarifa[MAX_PLAYERS]; // .-.
new TaxiTiempo[MAX_PLAYERS]; // Tiempo del taximetro
new TaxiCliente[MAX_PLAYERS]; // Variable para conductor - ID de Pasajero
new TaxiDriver[MAX_PLAYERS]; // Variable para pasajero - ID de Conductor
new TaxiCosto[MAX_PLAYERS];
new TaxiDrivers = 0;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new RStep[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new Paquetes[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new Situacion[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new TazerTimeout[MAX_PLAYERS];
new pTazer[MAX_PLAYERS];
new pTazerReplace[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS char];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gLastCar[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gNewbie[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new noac = 0;
new nofac = 0;
new iAdverTimer;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 16;
new callcost = 2; //20 seconds
new timeshift = -1;
new shifthour;
new gTime;
new gWeather;
new WeatherCalling;
new explevel = 4;
new cchargetime = 30;
new txtcost = 1;
// -==================
new pCurrentWeapon[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new UnidentifedCall[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];
new OwnableCarID[MAX_PLAYERS];
new OwnableCarPrice[MAX_PLAYERS];
new BlindFold[MAX_PLAYERS];
// Drugs System
new CrackOffer[MAX_PLAYERS];
new CrackPrice[MAX_PLAYERS];
new CrackGram[MAX_PLAYERS];
new PotOffer[MAX_PLAYERS];
new PotPrice[MAX_PLAYERS];
new PotGram[MAX_PLAYERS];
// Sell spray
new SprayOffer[MAX_PLAYERS];
new SprayPrice[MAX_PLAYERS];
new SprayGram[MAX_PLAYERS];
//
new UsedWeed[MAX_PLAYERS];
new UsedCrack[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
//Bartender Var
new DrinkOffer[MAX_PLAYERS];
// Rob Sys.
new TelfRob[MAX_PLAYERS];
// ------------
new VehicleWindows[MAX_VEHICLES] = 0;
new AdminDuty[MAX_PLAYERS];
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new PlayerNeedsHelp[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new RegText[MAX_PLAYERS];
new RegConfig[MAX_PLAYERS];
new RadioOn[MAX_PLAYERS];
new gRadio[MAX_PLAYERS];
new NOPTrigger[MAX_PLAYERS];
// Factura
new Facturing[MAX_PLAYERS];
new fPay[MAX_PLAYERS];
new fDest[MAX_PLAYERS];
new fFacturer[MAX_PLAYERS];

new Refueling[MAX_PLAYERS];

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
if(!IsPlayerConnectedEx(p1) || !IsPlayerConnectedEx(p2))
{
	return -1.00;
}
GetPlayerPos(p1,x1,y1,z1);
GetPlayerPos(p2,x2,y2,z2);
return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

Float: player_get_speed(playerid) {

new
	Float: Floats[3];

GetVehicleVelocity(GetPlayerVehicleID(playerid), Floats[0], Floats[1], Floats[2]);
return floatsqroot(Floats[0] * Floats[0] + Floats[1] * Floats[1] + Floats[2] * Floats[2]) * 150;
}

Float:GetDistance( Float: x1, Float: y1, Float: z1, Float: x2, Float: y2, Float: z2 )
{
new Float:d;
d += floatpower(x1-x2, 2.0 );
d += floatpower(y1-y2, 2.0 );
d += floatpower(z1-z2, 2.0 );
d = floatsqroot(d);
return d;
}

stock ShowEditMenu(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, slotselection[playerid]))
	{
		RemovePlayerAttachedObject(playerid, slotselection[playerid]);
	}
	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);

	new stringg[64];
	format(stringg, sizeof(stringg), "* Parte (%s)\n* "COL_GENERAL"Editor Personalizado",HoldingBones[PlayerToyInfo[playerid][slotselection[playerid]][ptBone]]);
	ShowPlayerDialog(playerid, EDITTOYS2, DIALOG_STYLE_LIST, ""COL_GENERAL"Toys Menu: "COL_WHITE"Editar", stringg, "Seleccionar", "Atrás");
}

new duda[MAX_PLAYERS];
new NewUsed[MAX_PLAYERS];

enum Spikes
{
Float:sX,
Float:sY,
Float:sZ,
sObjectID,
sDeployedBy[MAX_PLAYER_NAME],
sDeployedAt[MAX_ZONE_NAME]
}

new SpikeStrips[10][Spikes];

enum pSpec
{
Float:Coords[3],
Float:sPx,
Float:sPy,
Float:sPz,
sPint,
sLocal,
sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum pFishing
{
pFish1[20],
pFish2[20],
pFish3[20],
pFish4[20],
pFish5[20],
pWeight1,
pWeight2,
pWeight3,
pWeight4,
pWeight5,
pFid1,
pFid2,
pFid3,
pFid4,
pFid5,
pLastFish,
pFishID,
pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

new FishNamesNumber = 22;
new FishNames[22][20] = {
{"Jacket"},
{"Amberjack"},
{"Grouper"},
{"Red Snapper"},
{"Pants"},
{"Trout"},
{"Blue Marlin"},
{"Can"},
{"Mackeral"},
{"Sea Bass"},
{"Bracko"},
{"Pike"},
{"Sail Fish"},
{"Garbage"},
{"Tuna"},
{"Eel"},
{"Dolphin"},
{"Shark"},
{"Turtle"},
{"Catfish"},
{"Pinesh"},
{"Swordfish"}
};

new Float:gDrugFarmVar[26][3] = {
{-259.6562,-57.9561,2.8377},
{-254.5291,-33.8827,2.8385},
{-238.1613,44.3417,2.2078},
{-209.5157,80.1700,2.7024},
{-175.4233,66.8039,2.8388},
{-142.6084,45.4895,2.8388},
{-160.0594,5.8592,2.8385},
{-175.1070,-39.3283,2.8386},
{-215.7219,-41.6478,2.8370},
{-203.8972,139.3158,3.6730},
{-182.4831,163.9266,7.1622},
{-165.0118,147.7440,4.7341},
{-135.8543,116.6793,2.9278},
{-114.0200,134.7971,2.8386},
{22.7234,32.2417,2.8387},
{48.4623,24.3225,1.6563},
{62.2001,4.4411,0.9688},
{62.1774,-20.8292,1.0529},
{48.4535,-91.2610,0.3311},
{32.1094,-110.5129,0.3384},
{12.0121,-110.4428,0.5447},
{-17.0480,-107.2493,2.8238},
{-38.7793,-95.6601,2.8387},
{-23.5426,-60.4188,2.8392},
{-0.5058,-57.3535,2.8387},
{18.0054,-81.7280,1.5868}
};

new Float:OOCJail[4][3] = {
{172.82,1951.59,3870.5},
{181.28,1951.86,3870.55},
{191.02,1951.02,3870.55},
{199.79,1951.04,3870.55}
};

new Float:ICPrisonSpawns[4][3] = {
{181.6174,1953.3961,3867.2429},
{190.7607,1951.7330,3867.2358},
{199.2319,1951.4128,3867.2358},
{173.4761,1951.0363,3867.2429}
};

new Float:WarrantJail[3][3] = {
{2136.1924,1297.5011,7699.0610},
{2136.0273,1310.5793,7699.0547},
{2131.5989,1309.8353,7699.0547}
};

new Float:PrisonDillmore[2][3] = {
{318.8560,313.0484,999.1484},
{318.7299,317.0638,999.1484}
};

new Float:SAPDPrisonSpawns[7][3] = {
{1491.5968,-1758.5609,3285.2859},
{1495.2073,-1758.3555,3285.2859},
{1498.3859,-1758.2821,3285.2859},
{1501.3899,-1758.3402,3285.2859},
{1502.0187,-1768.3284,3285.2859},
{1498.4286,-1768.6074,3285.2859},
{1495.8372,-1768.4579,3285.2859}
};
//------------------------------------------------------------------------------------------------------
//Vehicle Names

new OneSeatVehicles[38] =
{
425, 430, 432, 441, 446, 448, 452, 453,
454, 464, 465, 472, 473, 476, 481, 484,
485, 486, 493, 501, 509, 510, 519, 520,
530, 531, 532, 539, 553, 564, 568, 571,
572, 574, 583, 592, 594, 595
};

new VehicleName[212][] = {
"Landstalker","Bravura","Buffalo","Linerunner","Perennial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch",
"Manana","Infernus","Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi",
"Washington","Bobcat","Mr Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar","Banshee","Predator",
"Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo","RC Bandit", "Romero",
"Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder","Reefer","Tropic","Flatbed",
"Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler",
"ZR-350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper",
"Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring Racer","Sandking","Blista Compact","Police Maverick",
"Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B","Bloodring Banger","Rancher","Super GT",
"Elegant","Journey","Bike","Mountain Bike","Beagle","Cropduster","Stuntplane","Tanker","Road Train","Nebula","Majestic",
"Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV-1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent",
"Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility",
"Nevada","Yosemite","Windsor","Monster A","Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger",
"Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway",
"Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor","Wayfarer",
"Euros","Hotdog","Club","Trailer","Trailer","Andromada","Dodo","RCCam","Launch","Police Car (LSPD)","Police Car (SFPD)",
"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A",
"Luggage Trailer B","Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};

stock GetVehicleFriendlyName(vehicleid)
{
new GVFNstring[56];
format(GVFNstring, sizeof(GVFNstring), VehicleName[GetVehicleModel(vehicleid)-400]);
return GVFNstring;
}

new Peds[217][1] = {
{299},
{288},//TEAM_ADMIN
{286},{287},{228},{113},{120},{147},{294},{227},{61},{171},
{247},//CIVILIANS DOWN HERE
{248},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};

function LoadUser_pass(playerid,name[],value[])
{
	INI_Int("Password",Info[playerid][pKey]);
	return 1;
}

function LoadUser_data(playerid,name[],value[])
{
	INI_Int("Level",Info[playerid][pLevel]);
	INI_Int("AdminNivel",Info[playerid][pAdmin]);
	INI_Int("BanAppealer",Info[playerid][pBanAppealer]);
	INI_Int("FactionModerator",Info[playerid][pFactionModerator]);
	INI_Int("GangModerator",Info[playerid][pGangModerator]);
	INI_Int("Helper",Info[playerid][pHelper]);
	INI_Int("ConnectedTime",Info[playerid][pConnectTime]);
	INI_Int("Registered",Info[playerid][pReg]);
	INI_Int("Sex",Info[playerid][pSex]);
	INI_Int("Age",Info[playerid][pAge]);
	INI_Int("Respect",Info[playerid][pExp]);
	INI_Int("Money",Info[playerid][pCash]);
	SetPVarInt(playerid, "Cash",Info[playerid][pCash]);
	INI_Int("Bank",Info[playerid][pMoneyBank]);
	INI_Int("PINBank",Info[playerid][pPinBank]);
	INI_Int("NrCuenta",Info[playerid][pNrCuenta]);
	INI_String("IP", Info[playerid][pIP], 32);
	INI_Int("Arrested",Info[playerid][pArrested]);
	INI_Int("JailAdmin",Info[playerid][pJailAdmin]);
	INI_Int("LottoNr",Info[playerid][pLottoNr]);
	INI_Int("Job",Info[playerid][pJob]);
	INI_Int("DudaMute",Info[playerid][pDudaMute]);
	INI_Int("Warn",Info[playerid][pWarn]);
	INI_Int("WRestricted",Info[playerid][pWRestricted]);
	INI_Int("Jailed",Info[playerid][pJailed]);
	INI_Int("JailTime",Info[playerid][pJailTime]);
	INI_Int("Materials",Info[playerid][pMats]);
	INI_Int("Packages",Info[playerid][pPackages]);
	SetPVarInt(playerid, "Packages",Info[playerid][pPackages]);
	INI_Int("Drugs",Info[playerid][pDrugs]);
	INI_Int("Cosecha",Info[playerid][pCosecha]);
	INI_Int("Crack",Info[playerid][pCrack]);
	INI_Int("Pot",Info[playerid][pPot]);
	INI_Int("Crates",Info[playerid][pCrates]);
	INI_Int("Adic",Info[playerid][pAdiccion]);
	INI_Int("Leader",Info[playerid][pLeader]);
	INI_Int("Member",Info[playerid][pMember]);
	INI_Int("FMember",Info[playerid][pFMember]);
	INI_Int("Division",Info[playerid][pDivision]);
	INI_Int("Rank",Info[playerid][pRank]);
	INI_Int("Char",Info[playerid][pChar]);
	INI_Float("pHealth",Info[playerid][pHealth]);
	INI_Float("pArmour",Info[playerid][pArmour]);
	INI_Int("PhoneNr",Info[playerid][pPnumber]);
	INI_Int("Sprunk",Info[playerid][pSprunk]);
	INI_Int("Phonebook",Info[playerid][pPhoneBook]);
	INI_Int("House",Info[playerid][pPhousekey]);
	INI_Int("Int", Info[playerid][pInt]);
	INI_Float("Pos_x",Info[playerid][pPos_x]);
	INI_Float("Pos_y",Info[playerid][pPos_y]);
	INI_Float("Pos_z",Info[playerid][pPos_z]);
	INI_Float("SPos_r",Info[playerid][pPos_r]);
	INI_Int("CarLic",Info[playerid][pCarLic]);
	INI_Int("FlyLic",Info[playerid][pFlyLic]);
	INI_Int("BoatLic",Info[playerid][pBoatLic]);
	INI_Int("GunLic",Info[playerid][pGunLic]);
	INI_Int("Gafas",Info[playerid][pGafas]);
	INI_Int("Tutorial",Info[playerid][pTut]);
	INI_Int("VWorld",Info[playerid][pVW]);
	INI_Int("Lighter",Info[playerid][pLighter]);
	INI_Int("Cigarettes",Info[playerid][pCigarettes]);
	INI_Int("Ban",Info[playerid][pBanned]);
	INI_Int("Disabled",Info[playerid][pDisabled]);
	INI_Int("BlockBug",Info[playerid][pBlockBug]);
	INI_Int("DNI",Info[playerid][pDNI]);
	INI_Int("VSkill",Info[playerid][pArmsSkill]);
	INI_Int("TSkill",Info[playerid][pTruckSkill]);
	INI_Int("SmugglerSkill",Info[playerid][pSmugSkill]);
	INI_Int("DrugsSkill",Info[playerid][pDrugsSkill]);
	INI_Int("SIDA",Info[playerid][pSIDA]);
	INI_Int("Cancer" ,Info[playerid][pCancer]);
	INI_Int("Epilepsia",Info[playerid][pEpilepsia]);
	INI_Int("Dengue",Info[playerid][pDengue]);
	INI_Int("FStyle",Info[playerid][pFStyle]);
	INI_Int("Busqueda",Info[playerid][pWantedLevel]);
	INI_Int("Rent",Info[playerid][pRenting]);
	INI_Int("prMoney",Info[playerid][p_Pr_Money]);
	INI_Int("prTime",Info[playerid][p_Pr_Time]);
	INI_Int("Rob",Info[playerid][pRob]);
	INI_Int("Premium",Info[playerid][pVIP]);
	INI_Int("BanDuda",Info[playerid][pBanDuda]);
	INI_Int("ReportMuted",Info[playerid][pRMuted]);
	INI_Int("ReportMutedTotal",Info[playerid][pRMutedTotal]);
	INI_Int("ReportMutedTime",Info[playerid][pRMutedTime]);
	INI_Int("Pasaporte",Info[playerid][pPasaporte]);
	INI_Int("RadioP", Info[playerid][pRadio]);
	INI_Int("KHZ",Info[playerid][pRadioFreq]);
	INI_Int("Ipad",Info[playerid][pIpadMusic]);
	for( new m = 0; m < 13; m++ )
	{
	    new mStr[24];
		format( mStr, sizeof( mStr ), "Gun%d", m);
		INI_Int(mStr, Info[playerid][pWeapons][m]);
	}
	INI_String("Acento",Info[playerid][pAcento], 40);
	INI_Int("PTokens",Info[playerid][pPaintTokens]);
	INI_Int("Head",Info[playerid][pHead]);
	INI_Int("TaxiLicense", Info[playerid][pTaxiLicense]);
	INI_Int("Hospital",Info[playerid][pHospital]);
	INI_Int("CHits",Info[playerid][pCHits]);
	INI_Int("FHits",Info[playerid][pFHits]);
	INI_Int("Spraycan",Info[playerid][pSpraycan]);
	INI_Int("Married",Info[playerid][pMarried]);
	INI_String("MarriedTo",Info[playerid][pMarriedTo], MAX_PLAYER_NAME);
	INI_String("ContractBy",Info[playerid][pContractBy], MAX_PLAYER_NAME);
	INI_String("ContractDetail",Info[playerid][pContractDetail], 64);
	INI_Int("pWExists",Info[playerid][pWExists]);
	INI_Float("pWX",Info[playerid][pWX]);
	INI_Float("pWY",Info[playerid][pWY]);
	INI_Float("pWZ",Info[playerid][pWZ]);
	INI_Int("pWVW",Info[playerid][pWVW]);
	INI_Int("pWInt",Info[playerid][pWInt]);
	INI_Int("pWValue",Info[playerid][pWValue]);
	INI_Int("pWSeeds",Info[playerid][pWSeeds]);
	INI_Int("AdMuted",Info[playerid][pADMute]);
	INI_Int("AdMutedTotal",Info[playerid][pADMuteTotal]);
	INI_String("Warrants",Info[playerid][pWarrant], 128);
	INI_Int("JudgeJailTime",Info[playerid][pJudgeJailTime]);
	INI_Int("JudgeJailType",Info[playerid][pJudgeJailType]);
	INI_Int("BeingSentenced",Info[playerid][pBeingSentenced]);
	INI_Int("ProbationTime",Info[playerid][pProbationTime]);
	INI_Int("Fishes" ,Info[playerid][pFishes]);
	INI_Int("FishSkill",Info[playerid][pFishSkill]);
	INI_Int("BiggestFish",Info[playerid][pBiggestFish]);
	INI_Int("ADTime",Info[playerid][pADTime]);
	INI_Int("GGTokens",Info[playerid][pGTokens]);
	INI_Int("HDExp",Info[playerid][pDobleExp]);
	INI_Int("Order",Info[playerid][pOrder]);
	INI_Int("Job2",Info[playerid][pJob2]);
	INI_Int("TypeSpawn",Info[playerid][pTypeSpawn]);
	INI_Int("ShopTech",Info[playerid][pShopTech]);
	INI_Int("Status",Info[playerid][pEstado]);
	INI_Int("DayVIP",Info[playerid][pVIPDateD]);
	INI_Int("MonthVIP",Info[playerid][pVIPDateM]);
	INI_Int("IDRegalo",Info[playerid][pRegalo]);
	INI_Int("Deuda",Info[playerid][pTaxDeuda]);
	INI_Int("TimePayDay", Info[playerid][pTimePayDay]);
	INI_Int("Screwdrivers", Info[playerid][pScrewdriver]);
	INI_Int("Firstaid", Info[playerid][pFirstaid]);
	INI_Int("CamOculta", Info[playerid][pSurveillance]);
	INI_Int("MoneyOfBank",Info[playerid][pMoneyBankT]);
	INI_Int("DeudaBank",Info[playerid][pBorrowedMoney]);
	INI_Int("CuotasBank",Info[playerid][pFeesBank]);
	INI_String("AdminName",Info[playerid][pAdminName], MAX_PLAYER_NAME);
	INI_Int("Coins",Info[playerid][pCoinsVip]);
	INI_Int("CoinsPIN",Info[playerid][pCoinsPIN]);
	INI_Int("CashGo",Info[playerid][pCashGo]);
	INI_Float("Hambre",Info[playerid][pHungry]);
	INI_Int("Boombox",Info[playerid][pBoombox]);
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
	{
	    new string[128];
		format( string, sizeof( string ), "pt%dModelID", v);
		INI_Int(string, PlayerToyInfo[playerid][v][ptModelID]);
		format(string, 128, "pt%dBone",v);
		INI_Int(string, PlayerToyInfo[playerid][v][ptBone]);
		format(string, 128, "pt%dPosX",v);
		INI_Float(string, PlayerToyInfo[playerid][v][ptPosX]);
		format(string, 128, "pt%dPosY",v);
		INI_Float(string, PlayerToyInfo[playerid][v][ptPosY]);
		format(string, 128, "pt%dPosZ",v);
		INI_Float(string, PlayerToyInfo[playerid][v][ptPosZ]);
		format(string, 128, "pt%dRotX",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ptRotX]);
		format(string, 128, "pt%dRotY",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ptRotY]);
		format(string, 128, "pt%dRotZ",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ptRotZ]);
		format(string, 128, "pt%dSizX",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ftscaleX]);
		format(string, 128, "pt%dSizY",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ftscaleY]);
		format(string, 128, "pt%dSizZ",v);
		INI_Float(string,PlayerToyInfo[playerid][v][ftscaleZ]);
	}
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	{
	    new string[128];
	    format(string, 128, "pv%dPosX",v);
	    INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosX]);
	    format(string, 128, "pv%dPosY",v);
	    INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosY]);
	    format(string, 128, "pv%dPosZ",v);
	    INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosZ]);
	    format(string, 128, "pv%dPosAngle",v);
	    INI_Float(string,PlayerVehicleInfo[playerid][v][pvPosAngle]);
		format(string, 128, "pv%dVirtualW",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvVW]);
		format(string, 128, "pv%dModelId",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvModelId]);
		format(string, 128, "pv%dLock",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvLock]);
		format(string, 128, "pv%dLocked",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvLocked]);
		format(string, 128, "pv%dPaintJob",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvPaintJob]);
		format(string, 128, "pv%dColor1",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvColor1]);
		format(string, 128, "pv%dColor2",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvColor2]);
		format(string, 128, "pv%dPrice",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvPrice]);
		format(string, 128, "pv%dTicket",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvTicket]);
		format(string, 128, "pv%dWeapon0",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][0]);
		format(string, 128, "pv%dWeapon1",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][1]);
		format(string, 128, "pv%dWeapon2",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvWeapons][2]);
		format(string, 128, "pv%dFuel",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvFuel]);
		format(string, 128, "pv%dImpound",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvImpounded]);
		format(string, 128, "pv%dHealth",v);
		INI_Float(string,PlayerVehicleInfo[playerid][v][pvHealth]);
		format(string, 128, "pv%dStereo",v);
		INI_Int(string,PlayerVehicleInfo[playerid][v][pvStereo]);
		for(new m = 0; m < MAX_MODS; m++)
		{
		    format(string, 128, "pv%dMod%d", v, m);
		    INI_Int(string,PlayerVehicleInfo[playerid][v][pvMods][m]);
		}
	}
	return 1;
}

INI_Exist(nickname[])
{
	new tmp[128];
	format(tmp,sizeof(tmp),USERFILE, nickname);
	return fexist(tmp);
}

stock UserPath(playerid)
{
	new string[128],playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,playername,sizeof(playername));
	format(string,sizeof(string),USERFILE,playername);
	return string;
}

/*Credits to Dracoblue*/
stock udb_hash(buf[])
{
new length=strlen(buf);
new s1 = 1;
new s2 = 0;
new n;
for (n=0; n<length; n++)
{
    s1 = (s1 + buf[n]) % 65521;
    s2 = (s2 + s1)     % 65521;
}
return (s2 << 16) + s1;
}

RespawnNearbyVehicles(playerid, Float:radi)
{
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);
for(new i=1; i<MAX_VEHICLES; i++)
{
    if(GetVehicleModel(i))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetVehiclePos(i, posx, posy, posz);
        tempposx = (posx - x);
        tempposy = (posy - y);
        tempposz = (posz - z);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            SetVehicleToRespawn(i);
        }
    }
}
}

vehicle_lock_doors(vehicle)
{
new
	vParamArr[7];
GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_ON, vParamArr[4], vParamArr[5], vParamArr[6]);
}

vehicle_unlock_doors(vehicle)
{
new
	vParamArr[7];
GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_OFF, vParamArr[4], vParamArr[5], vParamArr[6]);
}

stock IsSeatAvailable(vehicleid, seat)
{
new carmodel = GetVehicleModel(vehicleid);
for (new i = 0; i < sizeof( OneSeatVehicles ); i++ )
{
    if( carmodel == OneSeatVehicles[i] ) return 0;
}
foreach(Player, i)
{
    if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seat) return 0;
}
return 1;
}

SurfingCheck(vehicleid)
{
foreach(Player, p)
{
	if(GetPlayerSurfingVehicleID(p) == vehicleid)
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos(p, x, y, z);
	    SetPVarFloat(p, "tempPosX", x);
		SetPVarFloat(p, "tempPosY", x);
		SetPVarFloat(p, "tempPosZ", x);

		SetTimerEx("SurfingFix", 2000, 0, "i", p);
	}
}
}

function SurfingFix(playerid)
{
SetPlayerPos(playerid, GetPVarFloat(playerid, "tmpPosX"), GetPVarFloat(playerid, "tmpPosY"), GetPVarFloat(playerid, "tmpPosZ"));
DeletePVar(playerid, "tmpPosX");
DeletePVar(playerid, "tmpPosY");
DeletePVar(playerid, "tmpPosZ");

return 1;
}

main()
{
	repeat severTimers();
	repeat severTimers2();
	repeat Anticheat();
	repeat saveAccounts();
	repeat VehicleUpdate();
	repeat ServerMicrobeat();
	repeat SyncUp();
	repeat Mensajes();
	repeat EMSUpdate();
	print(" ");
	print(" ");
	//print("Initiating Timers (y_timers)");
	print("-------------------------------------------");
	print("**Initiating Gamemode");
	print("* Loading AMX...");
	print("* Welcome to San Antón Roleplay");
	print("-------------------------------------------");
	print(" ");
}

function DollahScoreUpdate()
{
foreach(Player, i){
	if(IsPlayerConnectedEx(i)){
		SetPlayerScore(i, Info[i][pLevel]);
	}
}
return 1;
}

function Anim_Hablar(playerid, text[]){
	new anim = GetPlayerAnimationIndex(playerid);
	if(!IsPlayerInAnyVehicle(playerid)){
		if(JugadorSentado[playerid] != 1){
			if((anim != 1538 || anim != 1539 || anim != 1540  || anim != 1541 || anim != 1542)){
			ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
			SetTimerEx("FinishHablar", strlen(text)*500, false, "d", playerid);
			}
		}
	}
}

function FinishHablar(playerid){
	StopLoopingAnim(playerid);
}




//------------------------------------------------------------------------------------------------------
function GetColorCode(clr[]) {
new color = -1;
if (isnumeric(clr))
{
	color = strval(clr);
	return color;
}
if(strcmp(clr, "black", true)==0) color=0;
if(strcmp(clr, "white", true)==0) color=1;
if(strcmp(clr, "blue", true)==0) color=2;
if(strcmp(clr, "red", true)==0) color=3;
if(strcmp(clr, "green", true)==0) color=16;
if(strcmp(clr, "purple", true)==0) color=5;
if(strcmp(clr, "yellow", true)==0) color=6;
if(strcmp(clr, "lightblue", true)==0) color=7;
if(strcmp(clr, "navy", true)==0) color=94;
if(strcmp(clr, "beige", true)==0) color=102;
if(strcmp(clr, "darkgreen", true)==0) color=51;
if(strcmp(clr, "darkblue", true)==0) color=103;
if(strcmp(clr, "darkgrey", true)==0) color=13;
if(strcmp(clr, "gold", true)==0) color=99;
if(strcmp(clr, "brown", true)==0 || strcmp(clr, "dennell", true)==0) color=55;
if(strcmp(clr, "darkbrown", true)==0) color=84;
if(strcmp(clr, "darkred", true)==0) color=74;
if(strcmp(clr, "maroon", true)==0) color=115;
if(strcmp(clr, "pink", true)==0) color=126;
return color;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
if(GetPlayerVehicle(playerid, vehicleid) > -1)
{
	PlayerVehicleInfo[playerid][GetPlayerVehicle(playerid, vehicleid)][pvPaintJob] = paintjobid;
}
return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
if(GetPlayerVehicle(playerid, vehicleid) > -1)
{
	PlayerVehicleInfo[playerid][GetPlayerVehicle(playerid, vehicleid)][pvColor1] = color1;
	PlayerVehicleInfo[playerid][GetPlayerVehicle(playerid, vehicleid)][pvColor2] = color2;
}
return 1;
}

public OnEnterExitModShop( playerid, enterexit, interiorid ){
if( enterexit == 0 ){
	if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1) {
		UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
	}
	SetPlayerInterior( playerid, 0);
}
return 1;
}

/*public OnVehicleMod(playerid, vehicleid, componentid)
{
if(!(1 <= GetPlayerInterior(playerid) <= 3))
{
	format(szMessage, sizeof(szMessage), "AdmWarning: %s tal vez este usando hacks de modificaciones de autos (aplicando: %s %s en un %s).", GetPlayerNameEx(playerid), partName(componentid), partType(GetVehicleComponentType(componentid)), GetVehicleName(vehicleid));
	ABroadCast(COLOR_ORANGE, szMessage, 2);
}
return 1;
}*/

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{

if(!IsValidVehicle(vehicleid))
{
    format(szMessage, sizeof(szMessage), "AdmWarning: %s fue baneado automáticamente, razón: Crasher",GetPlayerNameEx(playerid));
    SendClientMessageToAllEx(COLOR_LIGHTRED, szMessage);
    DestroyVehicle(vehicleid);
    print(szMessage);
    Info[playerid][pBanned] = 2;
    new ip[32];
    GetPlayerIp(playerid,ip,sizeof(ip));
    AddBan(ip);
   	SendClientMessageEx(playerid, COLOR_GENERAL, "Aviso:"COL_WHITE"Fuiste expulsado automáticamente por usar hacks ilegales dentro del servidor.");
    Expulsar(playerid);
}
Seatbelt[playerid] = 0;
if(GetPVarInt(playerid, "Injured") == 1) SetPVarInt(playerid, "ToBeEjected", 1);
if(Info[playerid][pEstado] != 0) SetPVarInt( playerid, "ToBeEjected", 1 );
SetPVarInt(playerid, "LastWeapon", GetPlayerWeapon(playerid));
new engine,lights,alarm,doors,bonnet,boot,objective;
GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
if(engine == VEHICLE_PARAMS_UNSET) switch(GetVehicleModel(vehicleid))
{
	case 509, 481, 510: VehicleFuel[vehicleid] = 500, arr_Engine{vehicleid} = 1, SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective), arr_Engine{vehicleid} = 1;
	default: SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective), arr_Engine{vehicleid} = 0;
}
if(!ispassenger)
{
	if(FBI_Vehicle(vehicleid))
  	{
	    if(Team_FBI(playerid)) { return 1; }
	    else
 		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces al FBI!");
			return 1;
		}
	}
	else if(SAMD_Vehicle(vehicleid))
	{
	    if(Team_SAMD(playerid)) { return 1; }
	    else
	    {
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces a SAMD!");
			return 1;
		}
	}
	else if(Mecanico_Vehicle(vehicleid))
	{
	    if(Team_Mecanicos(playerid)) { return 1; }
	    else
	    {
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces al taller de mecánica!");
			return 1;
		}
	}
	else if(VIP_Car(vehicleid))
	{
	    if(Info[playerid][pVIP] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Este vehículo es del garage VIP, tiene gasolina ilimitada.");
		RemovePlayerFromVehicle(playerid);
		new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(playerid, slx, sly, slz);
		SetPlayerPos(playerid, slx, sly, slz);
		NOPCheck(playerid);
		SendClientMessageEx(playerid, COLOR_GREY, "* Este vehiculo es del garage VIP y no eres VIP!");
		return 1;
	}
	else if(CNN_Vehicle(vehicleid))
	{
	    if(Team_LSTV(playerid)) { return 1; }
	    else
	    {
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces a SA News!");
			return 1;
		}
	}
	else if(GobierAuto(vehicleid))
	{
	    if(Gobierno(playerid)) { return 1; }
	    else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No formas parte del gobierno!");
			return 1;
		}
	}
	else if(IsAnNGCar(vehicleid))
	{
		if(Team_NG(playerid)) { return 1; }
	    else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces a la Guardia Nacional!");
			return 1;
		}
	}
	else if (LSPD_IsACopCar(vehicleid))
	{
		if(Team_SAPD(playerid)) return 1;
		else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No formas parte del cuerpo de policías!");
			return 1;
		}
	}
	else if (IsAnSecurityCar(vehicleid))
	{
		if(BankSystem(playerid)) return 1;
		else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No formas parte del personal del Banco de Los Santos!");
			return 1;
		}
	}
	// Jobs
	else if(IsAPizzabike(vehicleid))
	{
	    if(Info[playerid][pJob] == 5 || Info[playerid][pJob2] == 5) { return 1; }
	    else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No eres Pizza Boy!");
			return 1;
		}
	}
	else if(Taxi_Vehicle(vehicleid) || Bus_Vehicle(vehicleid))
	{
	    if(Info[playerid][pJob] == 9 || Info[playerid][pJob2] == 9) { return 1; }
	    else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No eres Taxista!");
			return 1;
		}
	}
	else if(IsAHarvest(vehicleid))
	{
	    if(Info[playerid][pJob] == 10 || Info[playerid][pJob2] == 10) { return 1; }
	    else
	    {
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
			NOPCheck(playerid);
			SendClientMessageEx(playerid, COLOR_GREY, "* No eres Cosechador!");
			return 1;
		}
	}
	else if(IsATruckerCar(vehicleid))
	{
    	if(Info[playerid][pJob] == 7 || Info[playerid][pJob2] == 7)
		{
			new string[128];
			new truckcontents = TruckContents[vehicleid];
			new truckcontentname[25];
			if(truckcontents == 0)
			{ format(truckcontentname, sizeof(truckcontentname), "Nada"); }
			else if(truckcontents >= 1 && truckcontents <= 3)
			{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Alimentos y comidas");}
			else if(truckcontents >= 4 && truckcontents <= 6)
			{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Ropa y Calzado"); }
			else if(truckcontents == 7)
			{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Materiales Legales"); }
			else if(truckcontents >= 8 && truckcontents <= 10)
			{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Objetos del 24/7"); }
			else if(truckcontents >= 11 && truckcontents <= 15)
			{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Armas Ilegales"); }
			else if(truckcontents >= 16 && truckcontents <= 20)
			{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Drogas"); }
			else if(truckcontents >= 21 && truckcontents <= 25)
			{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Materiales Ilegales"); }
			format(string, sizeof(string), "TRABAJO: (Registro: %s %d) - (Contenido: %s{FFFF00})", GetVehicleName(vehicleid), vehicleid, truckcontentname);
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
			if(IsACop(playerid) && truckcontents >= 11)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "TRABAJO: Para remover productos ilegales usa /limpiarcamion cerca del camión.");
			}
			if(truckcontents > 0 && TruckUsed[playerid] == INVALID_VEHICLE_ID)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "TRABAJO: Para entregar productos usa /robarcamion como el conductor.");
			}
			else if(TruckUsed[playerid] == INVALID_VEHICLE_ID)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "TRABAJO: Para obtener productos y entregarlos usa /cargarcamion siendo el conductor.");
			}
			else if(TruckUsed[playerid] == vehicleid && gPlayerCheckpointStatus[playerid] == CHECKPOINT_RETURNTRUCK)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "TRABAJO: Este es tu camión, aún no lo has devuelto a Ocean Docks para que te pagen.");
			}
			else if(TruckUsed[playerid] == vehicleid)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "TRABAJO: Este es tu camión, aún no has entregado los productos.");
			}
			else if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
			{
				SendClientMessageEx(playerid, COLOR_YELLOW, "TRABAJO: Ya estás en otra entrega, usa /cancelar camión para cancelar la entrega.");
			}
		}
    	else
		{
		    RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz);
		    SendClientMessageEx(playerid, COLOR_GREY, "* No eres camionero!");
		}
	}
}
else if(!IsPlayerInRangeOfVehicle(playerid, vehicleid, 7.5) || LockStatus[vehicleid] >= 1){ // G-bugging fix
	ClearAnimations(playerid);
}
return 1;
}
Team_SAPD(playerid){
if(IsPlayerConnectedEx(playerid)){
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	1){return 1;}
	else if(leader	==	1){return 1;}
}
return 0;
}

Team_FBI(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	2){return 1;}
	else if(leader	==	2){return 1;}
}
return 0;
}

Team_NG(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	3){return 1;}
	else if(leader	==	3){return 1;}
}
return 0;
}

Team_SAMD(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	4){return 1;}
	else if(leader	==	4){return 1;}
}
return 0;
}

Team_LSTV(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	5){return 1;}
	else if(leader	==	5){return 1;}
}
return 0;
}

Team_Mecanicos(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	6){return 1;}
	else if(leader	==	6){return 1;}
}
return 0;
}

Gobierno(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	7){return 1;}
	else if(leader == 7){return 1;}
}
return 0;
}

Hitman(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	8){return 1;}
	else if(leader	==	8){return 1;}
}
return 0;
}
BankSystem(playerid)
{
	if(IsPlayerConnectedEx(playerid))
	{
	    new leader = Info[playerid][pLeader];
	    new member = Info[playerid][pMember];
	    if(member	==	9){return 1;}
		else if(leader	==	9){return 1;}
	}
	return 0;
}
NoDuty(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member==9){return 1;}
	else if(leader==9){return 1;}
}
return 0;
}

Presidente(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
	if(leader == 7){return 1;}
}
return 0;
}
IsACop(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member	==	1 || member	==	2 || member	==	3)
	{
	    return 1;
	}
	else if(leader	==	1 || leader	==	2 || leader	==	3)
	{
	    return 1;
	}
}
return 0;
}

IsAPolice(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    new leader = Info[playerid][pLeader];
    new member = Info[playerid][pMember];
    if(member==1){return 1;}
	else if(leader==1){return 1;}
}
return 0;
}
ReturnUser(text[]) {

	new
		strPos,
		returnID = 0,
		bool: isnum = true;

	while(text[strPos]) {
		if(isnum) {
			if ('0' <= text[strPos] <= '9') returnID = (returnID * 10) + (text[strPos] - '0');
			else isnum = false;
		}
		strPos++;
	}
	if (isnum) {
		if(IsPlayerConnected(returnID)) return returnID;
	}
	else {

		new
			sz_playerName[MAX_PLAYER_NAME];

		foreach(Player, i) {
			GetPlayerName(i, sz_playerName, MAX_PLAYER_NAME);
			if(!strcmp(sz_playerName, text, true, strPos)) return i;
		}
	}
	return INVALID_PLAYER_ID;
}


IsANewsCar(carid)
{
if(GetVehicleModel(carid)== 582 || GetVehicleModel(carid)== 488)
{
	return 1;
}
return 0;
}

Float:GetPizzaDistance(houseid)
{
new Float: pDistance;
pDistance = GetDistance(2098.6919,-1789.5027,13.5547, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
return pDistance;
}

IsAtNameChange(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
	if(IsPlayerInRangeOfPoint(playerid, 3.0,1443.5162,-1461.0831,1616.3073))
	{
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0,2552.4514,-958.1686,82.6322))
	{
		return 1;
	}
}
return 0;
}

IsAtFishPlace(playerid)
{
	if(IsPlayerConnectedEx(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,1.0,403.8266,-2088.7598,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0,396.2197,-2088.6692,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0,383.4157,-2088.7849,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0,369.8107,-2088.7927,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,1.0,362.2244,-2088.7981,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
			return 1;
		}
	}
	return 0;
}

stock IsAtClothShop(playerid)
{
	if(IsPlayerConnectedEx(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,25.0,207.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047) || IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,30.0,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid,50.0,161.3765,-83.8416,1001.8047))
		{//Zip & Victim
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-2664.3318,1538.4259,907.1797))
		{// SaC HQ
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,202.6777,-163.0623,1000.5306))
		{//Diedier Sachs
		    return 1;
		}
	}
	return 0;
}

IsAtArrestPoint(playerid){
if(IsPlayerConnectedEx(playerid))
{
	if(IsPlayerInRangeOfPoint(playerid, 4.0,1559.3228,-1693.7491,5.8970)){return 1;} //LSPD
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 317.4623,-1506.9045,24.9219)){ return 1; } //FBI
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, 613.3228,-589.1623,17.2266)){ return 1; } //SAPD Dillmore
}
return 0;
}

IsAtTruckDeliveryPoint(playerid)
{
if(IsPlayerInRangeOfPoint(playerid, 6, 1025.6554,-1362.6024,13.5649) || IsPlayerInRangeOfPoint(playerid, 6, 455.2845,-1501.5569,31.0434) ||
IsPlayerInRangeOfPoint(playerid, 6, 793.0801,-1625.8910,13.3906) || IsPlayerInRangeOfPoint(playerid, 6, 2112.7766,-1216.1750,23.8047) ||
IsPlayerInRangeOfPoint(playerid, 6, 1197.6417,-887.7512,43.0229) || IsPlayerInRangeOfPoint(playerid, 6, -64.5445,-1120.5356,1.0781) ||
IsPlayerInRangeOfPoint(playerid, 6, 1331.2570,-885.2997,39.9401) || IsPlayerInRangeOfPoint(playerid, 6, -86.3670,-1195.7297,2.1664) ||
IsPlayerInRangeOfPoint(playerid, 6, 1347.0487,-1752.1692,13.7886) || IsPlayerInRangeOfPoint(playerid, 6, -70.8884,-1549.4922,2.6172) ||
IsPlayerInRangeOfPoint(playerid, 6, 1925.5968,-1789.5017,13.1459) || IsPlayerInRangeOfPoint(playerid, 6, 1474.4786,-1140.6188,24.0781) ||
IsPlayerInRangeOfPoint(playerid, 6, 2247.2351,-1661.2406,15.6749))
{ return true; }
return false;
}

IsAt247(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
	if(PlayerToPoint(5.0,playerid,-1833.8270,62.3936,1055.1891)) { return 1; } //intaero
	else if(PlayerToPoint(5.0,playerid,-22.3260,-138.6221,1003.5469)) { return 1; }
	else if(PlayerToPoint(5.0,playerid,-25.6448,-56.6718,1003.5469)) { return 1; }
	else if(PlayerToPoint(5.0,playerid,-29.3554,-28.8020,1003.5573)) { return 1; }
	else if(PlayerToPoint(5.0,playerid,-28.7605,-185.1333,1003.5469)) { return 1; } //LV 1er 24-7
	else if(PlayerToPoint(5.0,playerid,-10.3085,-178.2465,1003.5469)) { return 1; } // LV 1er 24-7 >
	else if(PlayerToPoint(5.0,playerid,2.3437,-29.0118,1003.5494)) { return 1; } //LV 2do 24-7
	else if(PlayerToPoint(5.0,playerid,-28.0818,-89.9434,1003.5469)) { return 1; } //LV 3er 24-7
	else if(PlayerToPoint(5.0,playerid,-29.1318,-184.7204,1003.5469)) { return 1; } //LV 3er 24-7
	else if(PlayerToPoint(5.0,playerid,-25.7885,-183.2835,1003.5469)) { return 1; } //LV 3er 24-7
	else if(PlayerToPoint(3.0,playerid,664.8079,-568.7150,16.3433)) { return 1; }
}
return 0;
}
IsAtBank(playerid){
	if(IsPlayerConnectedEx(playerid)){
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 366.1190,172.0644,1996.0493) || IsPlayerInRangeOfPoint(playerid, 1.0, 366.1188,174.1942,1996.0428) || IsPlayerInRangeOfPoint(playerid, 1.0, 366.1174,175.9878,1996.0428)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, 372.1295,161.2576,1996.0493) || IsPlayerInRangeOfPoint(playerid, 1.0, 371.6609,153.1515,1983.4484)) { return 1; }
	}
	return 0;
}
IsAtDeliverPatientPoint(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0,1120.7758,-1292.4806,13.5688))
	{
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0,225.0963,1980.7179,17.6406))
	{
		return 1;
	}
	return 0;
}

IsAtImpoundingPoint(playerid)
{
return (IsPlayerInRangeOfPoint(playerid, 5.0,1658.9924,-1807.1152,13.5508));
}

IsAtGasStation(playerid){
if(IsPlayerConnectedEx(playerid)){
if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
	{//LS
	    return 1;
	}
	else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
	{//LS
	    return 1;
	}
	else if(PlayerToPoint(6.0,playerid,2114.5444,920.1169,10.8203) || PlayerToPoint(8.0,playerid,2640.6272,1106.5349,10.8203))
	{//SF
	    return 1;
	}
	else if(PlayerToPoint(5.0,playerid,1625.0463,-2167.6428,13.4402) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
	{//Between LS and SF
	    return 1;
	}
	else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
	{//LV
	    return 1;
	}
	else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
	{//LV
	    return 1;
	}
	else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
	{//LV
	    return 1;
	}
	else if(PlayerToPoint(8.0,playerid,1637.0149,2331.5129,10.8722) || PlayerToPoint(6.0,playerid,1636.6686,2325.8711,10.8722))
	{
	    return 1;
	}
	else if(PlayerToPoint(8.0,playerid,1636.6140,2320.6423,10.8722) || PlayerToPoint(6.0,playerid,1595.5337,2198.9404,10.8203)|| PlayerToPoint(6.0,playerid,1839.58, -2522.52, 13.55))
	{
	    return 1;
	}
	else if(PlayerToPoint(8.0,playerid,656.4265,-559.8610,16.5015) || PlayerToPoint(6.0,playerid,656.3797,-570.4138,16.5015) || PlayerToPoint(6.0,playerid,2294.2227,-1911.0593,13.5971) )
	{//Dillimore
	    return 1;
	}
}
return 0;
}

IsAtTaller(playerid){
if(IsPlayerConnectedEx(playerid)){
 	if(PlayerToPoint(15.0,playerid,2238.7720,-1912.6383,13.5890)){// LS
	    return 1;
	}
	else if(PlayerToPoint(15.0,playerid,2257.8123,-1914.6655,13.5944)){// LS
	    return 1;
	}
	else if(PlayerToPoint(15.0,playerid,2276.7961,-1919.4464,13.5901)){// LS
	    return 1;
	}
}
return 0;
}


IsAtBar(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,496.3752,-76.0410,998.7578))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,499.9703,-20.3358,1000.6797))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,1779.2051,-1556.7195,-49.6550))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,1215.9480,-13.3519,1000.9219))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
	{
	    return 1;

	}
	else if(PlayerToPoint(10.0,playerid,1259.2834,-791.0306,1084.0078))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,681.2731,-453.8256,-25.6172))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,1704.3322,-1877.6541,13.5692))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,2792.1606,2407.6143,1240.5311))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,2555.6563,1417.1293,7703.7041))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,1361.9528,-1764.1641,19.0781))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,-2794.7278,273.3174,27.1350))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,1189.0221,-1318.5779,3.1242))
	{
	    return 1;
	}
	else if(PlayerToPoint(10.0,playerid,222.5211,297.6729,955.9631))//
	{
	    return 1;
	}
}
return 0;
}

CancelTruckDelivery(playerid)
{
new vehicleid = GetPlayerVehicleID(playerid);
if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){if(IsATruckerCar(vehicleid)) SetVehicleToRespawn(vehicleid);}
DestroyProgressBar(LoadTruckBar[playerid]);
LoadTruckBar[playerid] = INVALID_BAR_ID;
LoadTruckTime[playerid] = 0;
DeletePVar(playerid, "TruckDeliver");
TruckContents[TruckUsed[playerid]] = 0;
TruckUsed[playerid] = INVALID_VEHICLE_ID;
gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
DisablePlayerCheckpoint(playerid);
return 1;
}

//CARS
IsATowTruck(carid)
{
if(GetVehicleModel(carid) == 485 || GetVehicleModel(carid) == 525 || GetVehicleModel(carid) == 583 || GetVehicleModel(carid) == 574)
{
	return 1;
}
return 0;
}
IsAnBus(carid)
{
if(GetVehicleModel(carid) == 431 || GetVehicleModel(carid) == 437)
{
	return 1;
}
return 0;
}

LSPD_IsACopCar(carid)
{
for(new v = 0; v < sizeof(SAPDVehicles); v++)
{
    if(carid == SAPDVehicles[v]) return 1;
}
return 0;
}

IsAnTaxi(carid)
{
if(GetVehicleModel(carid) == 420 || GetVehicleModel(carid) == 438)
{
	return 1;
}
return 0;
}

Taxi_Vehicle(carid)
{
for(new v = 0; v < sizeof(TaxiTrans); v++)
{
    if(carid == TaxiTrans[v]) return 1;
}
return 0;
}

Bus_Vehicle(carid)
{
for(new v = 0; v < sizeof(BusTrans); v++)
{
    if(carid == BusTrans[v]) return 1;
}
return 0;
}

IsATruckerCar(carid)
{
for(new v = 0; v < sizeof(TruckerVehicles); v++)
{
    if(carid == TruckerVehicles[v]) return 1;
}
return 0;
}
IsAnSecurityCar(carid)
{
for(new v = 0; v < sizeof(BankVehicles); v++)
{
    if(carid == BankVehicles[v]) return 1;
}
return 0;
}
IsAHarvest(carid)
{
if(GetVehicleModel(carid) == 532)
{
	return 1;
}
return 0;
}

IsAPizzabike(carid)
{
for(new v = 0; v < sizeof(PizzaBike); v++)
{
    if(carid == PizzaBike[v]) return 1;
}
return 0;
}

IsAnAmbulance(carid)
{
if(GetVehicleModel(carid) == 416)
{
	return 1;
}
return 0;
}

SAMD_Vehicle(carid)
{
for(new v = 0; v < sizeof(SAMCVehicles); v++)
{
    if(carid == SAMCVehicles[v]) return 1;
}
return 0;
}

Mecanico_Vehicle(carid)
{
for(new v = 0; v < sizeof(MecanicosVehicle); v++)
{
    if(carid == MecanicosVehicle[v]) return 1;
}
return 0;
}

FBI_Vehicle(carid)
{
for(new v = 0; v < sizeof(FBIVehicle); v++)
{
    if(carid == FBIVehicle[v]) return 1;
}
return 0;
}

CNN_Vehicle(carid)
{
for(new v = 0; v < sizeof(CNNVehicle); v++)
{
    if(carid == CNNVehicle[v]) return 1;
}
return 0;
}

VIP_Car(carid)
{
for(new v = 0; v < sizeof(CarVIP); v++)
{
    if(carid == CarVIP[v]) return 1;
}
return 0;
}

IsARentCar(carid)
{
for(new v = 0; v < sizeof(Rentbike); v++)
{
    if(carid == Rentbike[v]) return 1;
}
return 0;
}

IsAnNGCar(carid)
{
for(new i = 0; i < sizeof(NGLandVehicles); i++)
{
	if(NGLandVehicles[ i ] == carid) return 1;
}
return 0;
}

GobierAuto(carid)
{
for(new v = 0; v < sizeof(GobiernoCar); v++)
{
    if(carid == GobiernoCar[v]) return 1;
}
return 0;
}

IsABike(carid)
{
if(GetVehicleModel(carid) == 509 || GetVehicleModel(carid) ==  481 || GetVehicleModel(carid) == 510)
{
	return 1;
}
return 0;
}

IsAMBike(fahrzeug)
{
new Motorads[] = { 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471 };
for(new i = 0; i < sizeof(Motorads); i++) {
    if(GetVehicleModel(fahrzeug) == Motorads[i]) return 1;
}
return 0;
}

IsAPlane(carid)
{
switch(GetVehicleModel(carid)) {
	case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469: return 1;
}
return 0;
}
/*IsAForbidden(carid){
switch(carid){
	case 16, 433, 523, 427, 490, 528, 407, 544, 596, 598, 597, 599, 432, 601: return 1;
}
return 0;
}*/
IsABoat(carid)
{
new Boats[] = { 472, 473, 493, 484, 430, 454, 453, 452, 446 };
for(new i = 0; i < sizeof(Boats); i++){
	if(GetVehicleModel(carid) == Boats[i]) return 1;
}
return 0;
}


GivePlayerValidWeapon(playerid, WeaponID){
if((Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) && WeaponID != 46 && WeaponID != 43) return 1;
switch( WeaponID ){
	case 0, 1:{
		Info[playerid][pWeapons][ 0 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 2, 3, 4, 5, 6, 7, 8, 9:{
		Info[playerid][pWeapons][ 1 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 22, 23, 24:{
		Info[playerid][pWeapons][ 2 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 25, 26, 27:{
		Info[playerid][pWeapons][ 3 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 28, 29, 32:{
		Info[playerid][pWeapons][ 4 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 30, 31:{
		Info[playerid][pWeapons][ 5 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 33, 34:{
		Info[playerid][pWeapons][ 6 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 35, 36, 37, 38:{
		Info[playerid][pWeapons][ 7 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 16, 17, 18, 39:{
		Info[playerid][pWeapons][ 8 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 41, 42, 43:{
		Info[playerid][pWeapons][ 9 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 10, 11, 12, 13, 14, 15:{
		Info[playerid][pWeapons][ 10 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
	case 44, 45, 46:{
		Info[playerid][pWeapons][ 11 ] = WeaponID;
		GivePlayerWeapon( playerid, WeaponID, 99999);
	}
    case 40: {
        Info[playerid][pWeapons][12] = WeaponID;
        GivePlayerWeapon(playerid, WeaponID, 99999);
    }
}
return 1;
}
stock GetWeaponSlot(weaponid) {
switch(weaponid) {
	case 0, 1: return 0;
	case 2 .. 9: return 1;
	case 22 .. 24: return 2;
	case 25 .. 27: return 3;
	case 28, 29, 32: return 4;
	case 30, 31: return 5;
	case 33, 34: return 6;
	case 35 .. 38: return 7;
	case 16, 17, 18, 39: return 8;
	case 41 .. 43: return 9;
	case 10 .. 15: return 10;
	case 44 .. 46: return 11;
	case 40: return 12;
}
return -1;
}
stock ResetPlayerWeaponsEx( playerid ){
ResetPlayerWeapons(playerid);
Info[playerid][pWeapons][0] = 0;
Info[playerid][pWeapons][1] = 0;
Info[playerid][pWeapons][2] = 0;
Info[playerid][pWeapons][3] = 0;
Info[playerid][pWeapons][4] = 0;
Info[playerid][pWeapons][5] = 0;
Info[playerid][pWeapons][6] = 0;
Info[playerid][pWeapons][7] = 0;
Info[playerid][pWeapons][8] = 0;
Info[playerid][pWeapons][9] = 0;
Info[playerid][pWeapons][10] = 0;
Info[playerid][pWeapons][11] = 0;
Info[playerid][pWeapons][12] = 0;
return 1;
}

stock Expulsar(playerid) return SetTimerEx("KickFix", 1000, 0, "d", playerid);

stock PlayerPlaySoundEx(soundid, Float:x, Float:y, Float:z) { // Realistic sound playback
foreach(Player, i) {
	if(IsPlayerInRangeOfPoint(i, 20.0, x, y, z))
		PlayerPlaySound(i, soundid, x, y, z);
}
return 1;
}
partType(type)
{
new name[64];
switch(type){
    case 0: name = "Alerón";
    case 1: name = "Capó";
    case 2: name = "Techo";
    case 3: name = "Lados";
    case 4: name = "Lamps";
    case 5: name = "Nitro";
    case 6: name = "Escape";
    case 7: name = "Ruedas";
    case 8: name = "Stereo";
    case 9: name = "Hidráulica";
    case 10: name = "Parachoque D.";
    case 11: name = "Parachoque T.";
    case 12: name = "Ventilacion Izq.";
    case 13: name = "Ventilacion Der.";
    default: name = "Desconocida";
}
return name;
}

partName(part){

new
	name[24];

switch(part - 1000) {
	case 0:	name = "Pro";
	case 1: name = "Win";
	case 2: name = "Drag";
	case 3: name = "Alpha";
	case 4: name = "Champ Scoop";
	case 5: name = "Fury Scoop";
	case 6: name = "Roof Scoop";
	case 7: name = "Sideskirt";
	case 8: name = "2x";
	case 9: name = "5x";
	case 10: name = "10x";
	case 11: name = "Race Scoop";
	case 12: name = "Worx Scoop";
	case 13: name = "Round Fog";
	case 14: name = "Champ";
	case 15: name = "Race";
	case 16: name = "Worx";
	case 17: name = "Sideskirt";
	case 18: name = "Upswept";
	case 19: name = "Twin";
	case 20: name = "Large";
	case 21: name = "Medium";
	case 22: name = "Small";
	case 23: name = "Fury";
	case 24: name = "Square Fog";
	case 26: name = "Alien";
	case 27: name = "Alien";
	case 28: name = "Alien";
	case 29: name = "X-Flow";
	case 30: name = "X-Flow";
	case 31: name = "X-Flow";
	case 32: name = "Alien Roof Vent";
	case 33: name = "X-Flow Roof Vent";
	case 34: name = "Alien";
	case 35: name = "X-Flow Roof Vent";
	case 36: name = "Alien";
	case 37: name = "X-Flow";
	case 38: name = "Alien Roof Vent";
	case 39: name = "X-Flow";
	case 40: name = "Alien";
	case 41: name = "X-Flow";
	case 42: name = "Chrome";
	case 43: name = "Slamin";
	case 44: name = "Chrome";
	case 45: name = "X-Flow";
	case 46: name = "Alien";
	case 47: name = "Alien";
	case 48: name = "X-Flow";
	case 49: name = "Alien";
	case 50: name = "X-Flow";
	case 51: name = "Alien";
	case 52: name = "X-Flow";
	case 53: name = "X-Flow";
	case 54: name = "Alien";
	case 55: name = "Alien";
	case 56: name = "Alien";
	case 57: name = "X-Flow";
	case 58: name = "Alien";
	case 59: name = "X-Flow";
	case 60: name = "X-Flow";
	case 61: name = "X-Flow";
	case 62: name = "Alien";
	case 63: name = "X-Flow";
	case 64: name = "Alien";
	case 65: name = "Alien";
	case 66: name = "X-Flow";
	case 67: name = "Alien";
	case 68: name = "X-Flow";
	case 69: name = "Alien";
	case 70: name = "X-Flow";
	case 71: name = "Alien";
	case 72: name = "X-Flow";
	case 88: name = "Alien";
	case 89: name = "X-Flow";
	case 90: name = "Alien";
	case 91: name = "X-Flow";
	case 92: name = "Alien";
	case 93: name = "X-Flow";
	case 94: name = "Alien";
	case 95: name = "X-Flow";
	case 99: name = "Chrome";
	case 100: name = "Chrome Grill";
	case 101: name = "Chrome Flames";
	case 102: name = "Chrome Strip";
	case 103: name = "Convertible";
	case 104: name = "Chrome";
	case 105: name = "Slamin";
	case 106: name = "Chrome Arches";
	case 107: name = "Chrome Strip";
	case 108: name = "Chrome Strip";
	case 109: name = "Chrome";
	case 110: name = "Slamin";
	case 113: name = "Chrome";
	case 114: name = "Slamin";
	case 115: name = "Chrome";
	case 116: name = "Slamin";
	case 117: name = "Chrome";
	case 118: name = "Chrome Trim";
	case 119: name = "Wheelcovers";
	case 120: name = "Chrome Trim";
	case 121: name = "Wheelcovers";
	case 122: name = "Chrome Flames";
	case 123: name = "Bullbar Chrome Bars";
	case 124: name = "Chrome Arches";
	case 125: name = "Bullbar Chrome Lights";
	case 126: name = "Chrome";
	case 127: name = "Slamin";
	case 128: name = "Vinyl Hardtop";
	case 129: name = "Chrome";
	case 130: name = "Hardtop";
	case 131: name = "Softtop";
	case 132: name = "Slamin";
	case 133: name = "Chrome Strip";
	case 134: name = "Chrome Strip";
	case 135: name = "Slamin";
	case 136: name = "Chrome";
	case 137: name = "Chrome Strip";
	case 138: name = "Alien";
	case 139: name = "X-Flow";
	case 140: name = "X-Flow";
	case 141: name = "Alien";
	case 142: name = "Left Oval Vents";
	case 143: name = "Right Oval Vents";
	case 144: name = "Left Square Vents";
	case 145: name = "Right Square Vents";
	case 146: name = "X-Flow";
	case 147: name = "Alien";
	case 148: name = "X-Flow";
	case 149: name = "Alien";
	case 150: name = "Alien";
	case 151: name = "X-Flow";
	case 152: name = "X-Flow";
	case 153: name = "Alien";
	case 154: name = "Alien";
	case 155: name = "Alien";
	case 156: name = "X-Flow";
	case 157: name = "X-Flow";
	case 158: name = "X-Flow";
	case 159: name = "Alien";
	case 160: name = "Alien";
	case 161: name = "X-Flow";
	case 162: name = "Alien";
	case 163: name = "X-Flow";
	case 164: name = "Alien";
	case 165: name = "X-Flow";
	case 166: name = "Alien";
	case 167: name = "X-Flow";
	case 168: name = "Alien";
	case 169: name = "Alien";
	case 170: name = "X-Flow";
	case 171: name = "Alien";
	case 172: name = "X-Flow";
	case 173: name = "X-Flow";
	case 174: name = "Chrome";
	case 175: name = "Slamin";
	case 176: name = "Chrome";
	case 177: name = "Slamin";
	case 178: name = "Slamin";
	case 179: name = "Chrome";
	case 180: name = "Chrome";
	case 181: name = "Slamin";
	case 182: name = "Chrome";
	case 183: name = "Slamin";
	case 184: name = "Chrome";
	case 185: name = "Slamin";
	case 186: name = "Slamin";
	case 187: name = "Chrome";
	case 188: name = "Slamin";
	case 189: name = "Chrome";
	case 190: name = "Slamin";
	case 191: name = "Chrome";
	case 192: name = "Chrome";
	case 193: name = "Slamin";
}
return name;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerRequestClass(playerid, classid)
{
if(IsPlayerNPC(playerid)) return 1;
return 1;
}

public OnPlayerConnect(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
	new playerIP[16];
	GetPlayerIp(playerid, playerIP, sizeof(playerIP));
	SetPlayerColor(playerid,COLOR_GRAD2);
	SendClientMessage(playerid, COLOR_GENERAL, "SERVER: "COL_WHITE"Bienvenido a San Antón Roleplay.");
	if(CheckBan(playerIP) == 1)
	{
	    SetPlayerName(playerid, "BannedPlayer");
	    SendClientMessage(playerid, COLOR_GENERAL, "SERVER: Lo sentimos, te encuentras baneado de este servidor.");
		Expulsar(playerid);
		return 1;
	}
	TotalConnect++;
	resetPlayerVariables(playerid);
	MapsRemoveForPlayer(playerid);
	//AntiInvalidNicks(playerid);
	ClearMarriage(playerid);
	SyncPlayerTime(playerid);

	TextDrawShowForPlayer(playerid, cargando);
	TextDrawShowForPlayer(playerid, looking);
	TextDrawShowForPlayer(playerid, boxGM);
	if(Iter_Count(Player) > MaxPlayersConnected)
	{
		MaxPlayersConnected = Iter_Count(Player);
		gettime(MPHour,MPMinute);
		getdate(MPYear,MPMonth,MPDay);
	}
	if(MaxPlayersConnected > 400) MaxPlayersConnected = 400; // Temp good fix
	SetTimerEx("SafeLogin", 4000, 0, "d", playerid);
	return 1;
}

function SafeLogin(playerid)
{
	ClearChatbox(playerid);
	TextDrawHideForPlayer(playerid, cargando);
	TextDrawHideForPlayer(playerid, looking);
	TextDrawHideForPlayer(playerid, boxGM);
	ShowMenuLogin(playerid);
	new cam = Random(1,8);
	SetPlayerJoinCamera(playerid, cam);
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	//LoginTimer[playerid] = SetTimerEx("TimerLogin",50000,0,"d",playerid);
 	if(strfind( playername, "_", true) == -1)
	{
 		SetPlayerName(playerid, "InvalidNick");
		SendClientMessageEx(playerid, COLOR_WHITE, "Porfavor usa el formato correcto: Nombre_Apellido");
		SendClientMessageEx(playerid, COLOR_WHITE, "Vuelve a entrar con el formato indicado." );
		Expulsar(playerid);
	}
	else
	{
		gPlayerAccount[playerid] = 0;
  	}
    return 1;

}


ShowMenuLogin(playerid)
{
	ClearChatbox(playerid);
	TextDrawShowForPlayer(playerid, TextdrawZCL0);
	TextDrawShowForPlayer(playerid, TextdrawZCL1);
	TextDrawShowForPlayer(playerid, TextdrawZCL2);
	TextDrawShowForPlayer(playerid, TextdrawZCL3);
	TextDrawShowForPlayer(playerid, TextdrawZCL4);
	TextDrawShowForPlayer(playerid, TextdrawZCL5);
	TextDrawShowForPlayer(playerid, TextdrawZCL6);
	TextDrawShowForPlayer(playerid, TextdrawZCL7);
	
	TextDrawHideForPlayer(playerid, SanAnton[0]);
	TextDrawHideForPlayer(playerid, SanAnton[1]);
	TextDrawHideForPlayer(playerid, SanAnton[2]);
	SelectTextDraw(playerid, COLOR_NEWS2);
	return 1;
}

HideMenuLogin(playerid)
{
	TextDrawHideForPlayer(playerid, TextdrawZCL0);
	TextDrawHideForPlayer(playerid, TextdrawZCL1);
	TextDrawHideForPlayer(playerid, TextdrawZCL2);
	TextDrawHideForPlayer(playerid, TextdrawZCL3);
	TextDrawHideForPlayer(playerid, TextdrawZCL4);
	TextDrawHideForPlayer(playerid, TextdrawZCL5);
	TextDrawHideForPlayer(playerid, TextdrawZCL6);
	TextDrawHideForPlayer(playerid, TextdrawZCL7);
	
	TextDrawShowForPlayer(playerid, SanAnton[0]);
	TextDrawShowForPlayer(playerid, SanAnton[1]);
	TextDrawShowForPlayer(playerid, SanAnton[2]);
	return 1;
}

function TimerLogin(playerid)
{
	//SendClientMessage(playerid,COLOR_GENERAL,"* Han pasado 30 segundos y no ingresaste correctamente, fuiste expulsado automáticamente.");
	SetPlayerName(playerid,"InvalidNick");
   	SendClientMessageEx(playerid, COLOR_GENERAL, "Aviso:"COL_WHITE"Fuiste expulsado automáticamente, el tiempo de ingreso ha expirado.");
    Expulsar(playerid);
}

function Lotto(number)
{
	new JackpotFallen = 0;
	format(szMessage, sizeof(szMessage), "Lottery News: {FFFFFF}El numero ganador es..... %d", number);
	OOCNews(COLOR_GREEN, szMessage);
	foreach(Player, i)
	{
		if(IsPlayerConnectedEx(i))
		{
		    if(Info[i][pLottoNr] > 0)
			{
			    if(Info[i][pLottoNr] == number)
				{
			        JackpotFallen = 1;
					format(szMessage, sizeof(szMessage), "Lottery News: {FFFFFF}%s ha ganado el acumulado de $%d .", GetPlayerNameEx(i), Jackpot);
					OOCNews(COLOR_GREEN, szMessage);
					format(szMessage, sizeof(szMessage), "SMS: Has ganado $%d con tu boleta de loteria - Felicitaciones. De: 9891 - (Lottery News)", Jackpot);
					SendClientMessageEx(i, COLOR_YELLOW, szMessage);
					GivePlayerCash(i, Jackpot);
					PlayerPlayMusic(i);
					Jackpot = 0;
					SaveStuff();
			    }
			    else SendClientMessageEx(i, COLOR_GREY, "* No has ganado la loteria, suerte la próxima vez!");
			}
			Info[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen == 0)
	{
	    format(szMessage, sizeof(szMessage), "Lottery News: {FFFFFF}El premio se mantenido en %d, compren loterías para aumentar el pozo.", Jackpot);
		OOCNews(COLOR_GREEN, szMessage);
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------

stock resetPlayerVariables(const playerid)
{
SetPVarInt(playerid, "shrequest", INVALID_PLAYER_ID);
SetPVarInt(playerid, "IsInArena", 0);
SetPVarInt(playerid, "ArenaMode", 0);
//SetPVarInt(playerid, "EventToken", 0);
SetPVarInt(playerid, "FirstSpawn", 1);
SetPVarInt(playerid, "editingcd", -1);
SetPVarInt(playerid, "editingcdveh", -1);
SetPVarInt(playerid,"Dandoarma",0);

UsedCrack[playerid] = 0; 					UsedWeed[playerid] = 0;             LoginTimer[playerid] = -1;          See_MP[playerid] = 0;
CrackOffer[playerid] = 999; 				CrackGram[playerid] = 0; 			CrackPrice[playerid] = 0;           PlayerStoned[playerid] = 0;
PotPrice[playerid] = 0; 					PotGram[playerid] = 0;              PotOffer[playerid] = 999;           AdminChat[playerid] = 0;
gOoc[playerid] = 0; 						gNews[playerid] = 0; 				BigEar[playerid] = 0; 				gFam[playerid] = 0;
gPlayerLogged{playerid} = 0;                NewbieTimer[playerid] = 0; 			VIPTimer[playerid] = 0;             gNewbie[playerid] = 1;
gPlayerSpawned[playerid] = 0; 				gLastCar[playerid] = 0;             gPlayerAccount[playerid] = 0;       gPlayerLogTries[playerid] = 0;
TicketOffer[playerid] = 999; 				TicketMoney[playerid] = 0;          InsideMainMenu[playerid] = 0;       PlayerTazeTime[playerid] = 0;
Paquetes[playerid] = 0; 					TutTime[playerid] = 0; 				HireKey[playerid] = 9999;			
ReduceTime[playerid] = 0;           		KnockedDown[playerid] = 0; 			UnidentifedCall[playerid] = 0;

OwnableCarOffer[playerid] = 999; 			OwnableCarID[playerid] = 999; 		OwnableCarPrice[playerid] = 0; 		BlindFold[playerid] = 0;
AdminDuty[playerid] = 0; 					PlayerNeedsHelp[playerid] = 0; 		IsSmoking[playerid] = 0;
HelpingNewbie[playerid] = 999;				RadioOn[playerid] = 0;
NewUsed[playerid] = 0; 						gRadio[playerid] = 1;				slotselection[playerid] = 0;		JobDuty[playerid] = 0;
PuedeP[playerid] = 0; 						PuedeD[playerid] = 0;				TelfRob[playerid] = 0;      		duda[playerid] = 0;
Facturing[playerid] = 0; 					fPay[playerid] = 0; 				fDest[playerid] = 0; 				fFacturer[playerid] = 0;
Refueling[playerid] = -1;					courtjail[playerid] = 0;    		RequestingBackup[playerid] = 0; 	PlayersChannel[playerid] = 999;

TaxiOnDuty[playerid] = 0;                   TaxiTarifa[playerid] = 0;           TaxiTiempo[playerid] = 0;           TaxiCliente[playerid] = -1;
TransferNroAcc[playerid] = -1; 				TransferTo[playerid] = -1; 			TransferMoney[playerid] = -1;       TaxiDriver[playerid] = -1;  
Lineas[playerid] = 0; 						Carnada[playerid] = 0;				MedicAccepted[playerid] = 999;		MedicCallTime[playerid] = 0;
RegText[playerid] = 0;						RegConfig[playerid] = 0;			HidePM[playerid] = 0; 				PhoneOnline[playerid] = 0;
FishCount[playerid] = 0;					UsedFind[playerid] = 0;				FreezeLast[playerid] = 0; 			MoneyMessage[playerid] = 0;
Condom[playerid] = 0; 						LoadTruckTime[playerid] = 0; 		TruckDeliver[playerid] = 0; 		TruckUsed[playerid] = INVALID_VEHICLE_ID;
LiveOffer[playerid] = 999;					TakingLesson[playerid] = 0;         RStep[playerid] = 0;                LoadTruckBar[playerid] = INVALID_BAR_ID;
PlayerCuffedTime[playerid] = 0; 			TazerTimeout[playerid] = 0; 		pTazer[playerid] = 0; 				pTazerReplace[playerid] = 0;// tazer
advisorchat[playerid] = 1;                  carsforplayer[playerid] = 0;                                            TalkingLive[playerid] = INVALID_PLAYER_ID;
Ipadon[playerid] = 0;                       OnDuty[playerid] = 0;               arr_Towing[playerid] = INVALID_VEHICLE_ID;
Muted[playerid] = 0;                        pCurrentWeapon[playerid] = 0;       DrugFarming[playerid] = 0;          gPlayerCheckpointStatus[playerid] = 0;
TutStep[playerid] = 0;                      gPlayerAnimLibsPreloaded[playerid] = 0;                                 TaxiCosto[playerid] = 0;
MatsOffer[playerid] = 999;                  MatsPrice[playerid] = 0;            MatsAmount[playerid] = 0;           gPlayerUsingLoopingAnim[playerid] = 0; TaxiCallReady[playerid] = -1;
EventLastInt[playerid] = 0;         		EventLastVW[playerid] = 0;			Mobile[playerid] = -1;
GuardOffer[playerid] = 999;                 GuardPrice[playerid] = 0;           JetPack[playerid] = 0;              MechanicCallTime[playerid] = 0;
CurrentMoney[playerid] = 0;                 EMSAccepted[playerid] = 999;        EMSCallTime[playerid] = 0;          RefillOffer[playerid] = 499;
RepairCar[playerid] = 0;                    RepairOffer[playerid] = 999;        RepairPrice[playerid] = 0;          PlayerDuda[playerid] = 0;
RefillPrice[playerid] = 0;
InviteOffer[playerid] = 999;                InviteFaction[playerid] = 0;        InviteFamily[playerid] = 255;
GunOffer[playerid] = 999;                   GunMats[playerid] = 0;              GunId[playerid] = 0;
VehicleOffer[playerid] = 999;               VehiclePrice[playerid] = 0;         VehicleId[playerid] = -1;
HouseOffer[playerid] = 999;                 HousePrice[playerid] = 0;           House[playerid] = -1;
JailPrice[playerid] = 0;                    duda[playerid] = 3;                 Unspec[playerid][sLocal] = 255;
PlayerDrunkTime[playerid] = 0;           	PlayerDrunk[playerid] = 0;          Editing[playerid] = 0;
Blinded[playerid] = 0; 						Tied[playerid] = 0;
ShowRules[playerid] = 0;                    RulesTime[playerid] = 0;
CommandSpamTimes[playerid] = 0;				CommandSpamUnmute[playerid] = 0;    IsaRent[playerid] = 0;
HitOffer[playerid] = 999;					HitToGet[playerid] = 999; 			GoChase[playerid] = 999; 			GetChased[playerid] = 999;
CraftOffer[playerid] = 999;					CraftId[playerid] = 0;              CraftMats[playerid] = 0;
format(QFA[playerid],24,"Nadie");

new ex;
while(ex < 13)
{
	Info[playerid][pWeapons][ex] = 0;
	ex++;
}
ex = 0;
while(ex < 6)
{
    EventFloats[playerid][ex] = 0.0;
    ex++;
}
//Player Variables
Info[playerid][pLevel] = 0;					Info[playerid][pAdmin] = 0;
Info[playerid][pFactionModerator] = 0;		Info[playerid][pGangModerator] = 0;
Info[playerid][pHelper] = 0;
Info[playerid][pBanAppealer] = 0;			Info[playerid][pConnectTime] = 0;
Info[playerid][pReg] = 0;					Info[playerid][pSex] = 0;
Info[playerid][pAge] = 0;
Info[playerid][pExp] = 0;					Info[playerid][pMoneyBank] = 0;
Info[playerid][pPinBank] = -1;				Info[playerid][pNrCuenta] = 0;
Info[playerid][pDeaths] = 0;				Info[playerid][pArrested] = 0;
Info[playerid][pJailAdmin] = 0; 			Info[playerid][pOrder] = 0;
Info[playerid][pJob2] = 0;					Info[playerid][pTypeSpawn] = 0;
Info[playerid][pShopTech] = 0;				Info[playerid][pEstado] = 0;
Info[playerid][pVIPDateM] = -1;				Info[playerid][pVIPDateD] = -1;
Info[playerid][pRegalo] = -1;				Info[playerid][pTaxDeuda] = 0;
Info[playerid][pTimePayDay] = 0;			Info[playerid][pLottoNr] = 0;
Info[playerid][pJob] = 0;					Info[playerid][pDudaMute] = 0;
Info[playerid][pWarn] = 0;                  Info[playerid][pCashGo] = 0;
Info[playerid][pHungry] = 50.0;             Info[playerid][pBoombox] = 0;
Info[playerid][pWRestricted] = 0;			Info[playerid][pJailed] = 0;
Info[playerid][pJailTime] = 0;				Info[playerid][pMats] = 0;
Info[playerid][pDrugs] = 0;					Info[playerid][pCosecha] = 0;
Info[playerid][pCrack] = 0;					Info[playerid][pPot] = 0;
Info[playerid][pAdiccion] = 0;				Info[playerid][pPackages] = 0;
Info[playerid][pLeader] = 0;				Info[playerid][pMember] = 0;
Info[playerid][pDivision] = 0;				Info[playerid][pFMember] = 255;
Info[playerid][pRank] = 0;                  Info[playerid][pSpectating] = -1;
Info[playerid][pChar] = 299;				Info[playerid][pHealth] = 50.0;
Info[playerid][pArmour] = 0.0;				Info[playerid][pPos_x] = 1612.3240;
Info[playerid][pPos_y] = -2330.1670;		Info[playerid][pPos_z] = 13.5469;
Info[playerid][pInt] = 0;					
Info[playerid][pSprunk] = 0;
Info[playerid][pPnumber] = 0;				Info[playerid][pPhoneBook] = 0;
Info[playerid][pPhousekey]=INVALID_HOUSE_ID;
Info[playerid][pCarLic] = 0;				Info[playerid][pFlyLic] = 0;
Info[playerid][pBoatLic] = 0;				Info[playerid][pGunLic] = 0;
Info[playerid][pGafas] = 0;					Info[playerid][pTut] = 0;
Info[playerid][pLighter] = 0;
Info[playerid][pCigarettes] = 0;			Info[playerid][pMask] = 0;
Info[playerid][pMaskuse] = 0;				Info[playerid][pHideNumber] = 0;
Info[playerid][pSpeaker] = 0;				Info[playerid][pBanned] = 0;
Info[playerid][pDisabled] = 0;				Info[playerid][pBlockBug] = 0;
new dni = 100000 + random(899999);			Info[playerid][pDNI] = dni;
Info[playerid][pArmsSkill] = 0;				Info[playerid][pTruckSkill] = 0;
Info[playerid][pSmugSkill] = 0;				Info[playerid][pDrugsSkill] = 0;
Info[playerid][pRequestingBackup] = 0;		Info[playerid][pSIDA] = 0;
Info[playerid][pCancer] = 0;				Info[playerid][pEpilepsia] = 0;
Info[playerid][pDengue] = 0;				Info[playerid][pWantedLevel] = 0;
Info[playerid][pRenting] = INVALID_HOUSE_ID;
Info[playerid][p_Pr_Money] = 0;				Info[playerid][p_Pr_Time] = 0;
Info[playerid][pRob] = 0;					Info[playerid][pVIP] = 0;
Info[playerid][pBanDuda] = 0;				Info[playerid][pRMuted] = 0;
Info[playerid][pRMutedTotal] = 0;			Info[playerid][pRMutedTime] = 0;
Info[playerid][pPasaporte] = 0;				Info[playerid][pRadio] = 0;
Info[playerid][pRadioFreq] = 0;				Info[playerid][pIpadMusic] = 0;
format(Info[playerid][pAcento], 40, "latino");
Info[playerid][pPaintTeam] = 0; 			Info[playerid][pPaintTokens] = 0;
Info[playerid][pVehicleKeysFrom] = INVALID_PLAYER_ID;
Info[playerid][pVIPCHAT] = 0;				Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
Info[playerid][pSpraycan] = 0;				
Info[playerid][pServiceTime] = 0; 			Info[playerid][pTriageTime] = 0;
Info[playerid][pTaxiLicense] = 0;			Info[playerid][pLock] = 0;
Info[playerid][pHead] = 0; 					Info[playerid][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
Info[playerid][pCHits] = 0;					Info[playerid][pFHits] = 0;
Info[playerid][pJudgeJailTime] = 0;			Info[playerid][pJudgeJailType] = 0;
Info[playerid][pBeingSentenced] = 0;		Info[playerid][pProbationTime] = 0;
Info[playerid][pWExists] = 0;				Info[playerid][pWX] = 0;
Info[playerid][pWY] = 0;					Info[playerid][pWZ] = 0;
Info[playerid][pWVW] = 0;					Info[playerid][pWInt] = 0;
Info[playerid][pWValue] = -1;				Info[playerid][pWTimer] = -1;
Info[playerid][pWSeeds] = 0;				
Info[playerid][pADMute] = 0;				Info[playerid][pADMuteTotal] = 0;
Info[playerid][pFishSkill] = 0;				Info[playerid][pFishes] = 0;
Info[playerid][pBiggestFish] = 0;			
Info[playerid][pADTime] = 0;				
Info[playerid][pGTokens] = 0;				Info[playerid][pDobleExp] = 0;
Info[playerid][pAdverID] = -1;              Info[playerid][pTimePlay] = 0;
Info[playerid][pScrewdriver] = 0;           Info[playerid][pFirstaid] = 0;
Info[playerid][pSurveillance] = 0;          Info[playerid][pTempName] = 0;
Info[playerid][pMoneyBankT] = 0;			Info[playerid][pBorrowedMoney] = 0;
Info[playerid][pFeesBank] = 0;     			Info[playerid][pAdminDuty] = 0;
format(Info[playerid][pAutoTextReply], 64, "Nada");
format(Info[playerid][pAdminName], MAX_PLAYER_NAME, "(null)");
Info[playerid][pCoinsVip] = 0;  			Info[playerid][pCoinsPIN] = 0;
GetPlayerName(playerid, Info[playerid][pNormalName], MAX_PLAYER_NAME);
format(Info[playerid][pContractBy], 32, "");
format(Info[playerid][pContractDetail], 64, "");
format(Info[playerid][pWarrant], 128, "");
ex = 0;
while(ex < MAX_PLAYERTOYS)
{
    PlayerToyInfo[playerid][ex][ptModelID] = 0;
    PlayerToyInfo[playerid][ex][ptBone] = 0;
    PlayerToyInfo[playerid][ex][ptPosX] = 0.0;
    PlayerToyInfo[playerid][ex][ptPosY] = 0.0;
    PlayerToyInfo[playerid][ex][ptPosZ] = 0.0;
    PlayerToyInfo[playerid][ex][ptRotX] = 0.0;
    PlayerToyInfo[playerid][ex][ptRotY] = 0.0;
    PlayerToyInfo[playerid][ex][ptRotZ] = 0.0;
    PlayerToyInfo[playerid][ex][ftscaleX] = 1;
    PlayerToyInfo[playerid][ex][ftscaleY] = 1;
    PlayerToyInfo[playerid][ex][ftscaleZ] = 1;
    ex++;
}
ex = 0;
while(ex < MAX_PLAYERVEHICLES)
{
    PlayerVehicleInfo[playerid][ex][pvModelId] = 0;
    PlayerVehicleInfo[playerid][ex][pvPosX] = 0.0;
    PlayerVehicleInfo[playerid][ex][pvPosY] = 0.0;
    PlayerVehicleInfo[playerid][ex][pvPosZ] = 0.0;
    PlayerVehicleInfo[playerid][ex][pvPosAngle] = 0.0;
    PlayerVehicleInfo[playerid][ex][pvVW] = 0;
    PlayerVehicleInfo[playerid][ex][pvLock] = 0;
    PlayerVehicleInfo[playerid][ex][pvLocked] = 0;
    PlayerVehicleInfo[playerid][ex][pvPaintJob] = -1;
    PlayerVehicleInfo[playerid][ex][pvColor1] = 0;
	PlayerVehicleInfo[playerid][ex][pvImpounded] = 0;
    PlayerVehicleInfo[playerid][ex][pvColor2] = 0;
    PlayerVehicleInfo[playerid][ex][pvPrice] = 0;
    PlayerVehicleInfo[playerid][ex][pvTicket] = 0;
    PlayerVehicleInfo[playerid][ex][pvWeapons][0] = 0;
    PlayerVehicleInfo[playerid][ex][pvWeapons][1] = 0;
    PlayerVehicleInfo[playerid][ex][pvWeapons][2] = 0;
	PlayerVehicleInfo[playerid][ex][pvFuel] = 1000;
	PlayerVehicleInfo[playerid][ex][pvSpawned]= 0;
	PlayerVehicleInfo[playerid][ex][pvHealth] = 1000.0;
	PlayerVehicleInfo[playerid][ex][pvStereo] = 0;
	//format(PlayerVehicleInfo[playerid][ex][pvNumberPlate], 32, "ZCRP {FF0000}FTW"); // Numeric attempt for "NGG FTW" with extra spaces.
	strcpy(PlayerVehicleInfo[playerid][ex][pvAllowPlayer], "Nadie", MAX_PLAYER_NAME);
    PlayerVehicleInfo[playerid][ex][pvAllowedPlayerId] = INVALID_PLAYER_ID;
    PlayerVehicleInfo[playerid][ex][pvPark] = 0;
    for(new m = 0; m < MAX_MODS; m++)
    {
        PlayerVehicleInfo[playerid][ex][pvMods][m] = 0;
	}
	ex++;
}
GiveKeysTo[playerid] = INVALID_PLAYER_ID;
return true;
}

public OnPlayerDisconnect(playerid, reason)
{
	new plname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, plname, sizeof(plname));
	if(!strcmp(plname, "BannedPlayer", true)) return 1;
	if(!strcmp(plname, "InvalidNick", true)) return 1;
	if(playerid == MAX_PLAYERS) return 1;
	if(Info[playerid][pTempName] == 1)
	{
		SetPlayerName(playerid, Info[playerid][pNormalName]);
	    Info[playerid][pTempName] = 0;
	}
	foreach(Player, x)
	{
		if(Info[x][pSpectating] == playerid)
		{
			Info[x][pSpectating] = -1;
			TogglePlayerSpectating(x, false);
			SetCameraBehindPlayer(x);
			SetPlayerPos(x, Info[x][pPos_x], Info[x][pPos_y], Info[x][pPos_z]);
			SetPlayerInterior(x, Info[x][pInt]);
			SetPlayerVirtualWorld(x, Info[x][pVW]);
			SendClientMessageEx(x, COLOR_GREY, "* El jugador que estabas espectando se desconectó del servidor.");
		}
	}
    if(GetPVarType(playerid, "pDynamicBB"))
	{
	    if(GetPVarType(playerid, "pDynamicBBArea"))
	    {
     		new string[128];
			format(string, sizeof(string), "El dueño de el auto (%s) a salido de el servidor", SenderName(playerid));
   			foreach(Player, i)
			{
        		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
          		{
            		StopAudioEx(i);
              		SendClientMessage(i, COLOR_PURPLE, string);
				}
			}
		}
	}
	if(Info[playerid][pWExists] == 1)
	{
		WeedLogout(playerid);
	}
	if(pTazer[playerid] == 1) GivePlayerValidWeapon(playerid,pTazerReplace[playerid]);
	if(GetPVarInt(playerid, "SpeedRadar") == 1) GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"));
	if(GetPVarInt(playerid, "Injured") == 1)
	{
	    Info[playerid][pHospital] = 1;
	    KillEMSQueue(playerid);
	    ResetPlayerWeaponsEx(playerid);
	}
	if(Info[playerid][pLockCar] != INVALID_VEHICLE_ID)
	{
		vehicle_unlock_doors(Info[playerid][pLockCar]);
	}
	if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
	    PlayerVehicleInfo[Info[playerid][pVehicleKeysFrom]][Info[playerid][pVehicleKeys]][pvAllowedPlayerId] = INVALID_PLAYER_ID;
	}
	switch (reason)
	{
	   	case 0:
	   	{
		   	format(szMessage, sizeof(szMessage), "%s ha salido del servidor (timeout).", GetPlayerNameEx(playerid));
		   	NearMsg(playerid, COLOR_YELLOW, szMessage,8.0);
		   	if(Info[playerid][pEstado] == 2)
		   	{
	            Info[playerid][pJailed] = 1;
				Info[playerid][pJailTime] += 20*60;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
	            for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		    	{
					if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
					{
						new Float:x, Float:y, Float:z, Float:angle, vw;
						vw = GetPlayerVirtualWorld(playerid);
						GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
						GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], angle);
						PlayerVehicleInfo[playerid][d][pvPosX] = x;
						PlayerVehicleInfo[playerid][d][pvPosY] = y;
						PlayerVehicleInfo[playerid][d][pvPosZ] = z;
		 				PlayerVehicleInfo[playerid][d][pvPosAngle] = angle;
		 				PlayerVehicleInfo[playerid][d][pvVW] = vw;
					}
				}
	   		}
	   	}
	   	case 1:
	  	{
		   	format(szMessage, sizeof(szMessage), "%s ha salido del servidor (leaving).", GetPlayerNameEx(playerid));
		   	NearMsg(playerid, COLOR_YELLOW, szMessage,8.0);
		   	if(Info[playerid][pEstado] == 2)
		   	{
	            Info[playerid][pJailed] = 1;
				Info[playerid][pJailTime] += 20*60;
			}
		}
		case 2:
	    {
			format(szMessage, sizeof(szMessage), "%s ha salido del servidor (kicked/banned).", GetPlayerNameEx(playerid));
			NearMsg(playerid, COLOR_YELLOW, szMessage,8.0);
	   	}
	}
	if(InfoEvento[EventRequest] == playerid)
	{
	    InfoEvento[EventRequest] = 999;
		ABroadCast( COLOR_GENERAL, "AdmWarning: El jugador que estaba solicitando un evento se ha desconectado/crashed.", 4 );
	}
	if(InfoEvento[EventCreator] == playerid)
	{
	    InfoEvento[EventCreator] = 999;
		ABroadCast( COLOR_YELLOW, "AdmWarning: El jugador que creó el evento se ha desconectado desconectado/crashed.", 4 );
	}
	if(InfoEvento[EventStaff][0] == playerid)
	{
	    InfoEvento[EventStaff][0] = 999;
	}
	else if(InfoEvento[EventStaff][1] == playerid)
	{
	    InfoEvento[EventStaff][1] = 999;
	}
	else if(InfoEvento[EventStaff][2] == playerid)
	{
	    InfoEvento[EventStaff][2] = 999;
	}
	else if(InfoEvento[EventStaff][3] == playerid)
	{
	    InfoEvento[EventStaff][3] = 999;
	}
	else if(InfoEvento[EventStaff][4] == playerid)
	{
	    InfoEvento[EventStaff][4] = 999;
	}
	if(GetPVarInt(playerid, "IsInArena") == 1)
	{
	    PaintballDisconnect(playerid);
		Info[playerid][pPos_x] = GetPVarFloat(playerid, "pbOldX");
		Info[playerid][pPos_y] = GetPVarFloat(playerid, "pbOldY");
		Info[playerid][pPos_z] = GetPVarFloat(playerid, "pbOldZ");
		Info[playerid][pInt] = GetPVarInt(playerid, "pbOldInt");
		Info[playerid][pVW] = GetPVarInt(playerid, "pbOldVW");
		Info[playerid][pHealth] = GetPVarFloat(playerid, "pbOldHealth");
		Info[playerid][pArmour] = GetPVarFloat(playerid, "pbOldArmor");
		SetHP(playerid,GetPVarFloat(playerid, "pbOldHealth"));
		SetPlayerArmour(playerid,GetPVarFloat(playerid, "pbOldArmor"));
	}
	else if(GetPVarInt(playerid, "EventToken") == 0)
	{
		new Float: x, Float: y, Float: z;
		GetPlayerPos(playerid, x, y, z);
		Info[playerid][pPos_x] = x;
		Info[playerid][pPos_y] = y;
		Info[playerid][pPos_z] = z;
		GetPlayerFacingAngle(playerid, Info[playerid][pPos_r]);
		Info[playerid][pInt] = GetPlayerInterior(playerid);
		Info[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		Info[playerid][pChar] = GetPlayerSkin(playerid);
		if(Info[playerid][pChar] == 0) Info[playerid][pChar] = 299;
	}
	else if(GetPVarInt(playerid, "EventToken") == 1)
	{
	    Info[playerid][pInt] = EventLastInt[playerid];
		Info[playerid][pVW] = EventLastVW[playerid];
		Info[playerid][pChar] = Info[playerid][pChar];
		Info[playerid][pPos_r] = EventFloats[playerid][0];
		Info[playerid][pPos_x] = EventFloats[playerid][1];
		Info[playerid][pPos_y] = EventFloats[playerid][2];
		Info[playerid][pPos_z] = EventFloats[playerid][3];
	}
	else if(ShowRules[playerid] == 1)
	{
		Info[playerid][pVW] = GetPVarInt(playerid, "rOldVW");
		Info[playerid][pInt] = GetPVarInt(playerid, "rOldInt");
	    Info[playerid][pPos_x] = GetPVarFloat(playerid, "rOldX");
	    Info[playerid][pPos_y] = GetPVarFloat(playerid, "rOldY");
	    Info[playerid][pPos_z] = GetPVarFloat(playerid, "rOldZ");
	}
	if(Info[playerid][pAdverID] != -1) ClearAd(Info[playerid][pAdverID]);
	if(HireKey[playerid] != 9999)
	{
	    SetVehicleToRespawn(HireKey[playerid]);
	}
	if(Interview != 0)
	{
		if(strcmp(Interviewer,plname,true) == 0 )
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Se canceló tu entrevista!");
		    Interviewer = "Nadie";
		    Interview = 0;
		}
	}
	if(TaxiCliente[playerid] >= 0)
	{
		if(IsPlayerConnectedEx(TaxiCliente[playerid]))
		{
	    	new giveplayeridex = TaxiCliente[playerid];
			new precio = TaxiCosto[TaxiCliente[playerid]];
			format(szMessage, sizeof(szMessage), "Taxista se desconecto, son $%d por el servicio de taxi.", precio);
			SendClientMessageEx(giveplayeridex, COLOR_WHITE, szMessage);
			GivePlayerCash(playerid, precio);
			GivePlayerCash(giveplayeridex, -precio);
			TaxiCliente[playerid] = -1;
			TaxiTiempo[giveplayeridex] = 0;
			TaxiDriver[giveplayeridex] = -1;
			TaxiCosto[giveplayeridex] = 0;
		}
	}
	if(TaxiDriver[playerid] >= 0)
	{
		if(IsPlayerConnectedEx(TaxiDriver[playerid]))
		{
	    	new giveplayeridex = TaxiDriver[playerid];
			new precio = TaxiCosto[playerid];
			format(szMessage, sizeof(szMessage), "Pasajero salió de tu taxi y ganaste $%d por el servicio de taxi.", precio);
			SendClientMessageEx(giveplayeridex, COLOR_WHITE, szMessage);
			GivePlayerCash(playerid, -precio);
			GivePlayerCash(giveplayeridex, precio);
			TaxiCliente[giveplayeridex] = -1;
			TaxiTiempo[playerid] = 0;
			TaxiDriver[playerid] = -1;
			TaxiCosto[playerid] = 0;
		}
	}
	OnPlayerSavedStats(playerid);
	UnloadPlayerVehicles(playerid);
	ResetPlayerWeapons(playerid);
    DestroyProgressBar(HungryBar[playerid]);
	foreach(Player, i)
	{
		if(TaxiCallReady[i] == playerid)
		{
		    TaxiCallReady[i] = -1;
		    GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
		    DisablePlayerCheckpoint(i);
		}
		if(EMSAccepted[i] == playerid)
		{
			EMSAccepted[i] = 999;
			GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
			EMSCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
		if(MedicAccepted[i] == playerid)
		{
			MedicAccepted[playerid] = 999;
			GameTextForPlayer(i, "~w~Jugador~n~~r~se desconecto", 5000, 1);
			MedicCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
	}
	if(GotHit[playerid] > 0)
	{
		if(GetChased[playerid] < 999)
		{
			if(IsPlayerConnectedEx(GetChased[playerid]))
			{
				SendClientMessageEx(GetChased[playerid], COLOR_YELLOW, "Tu hit salio del servidor.");
				GoChase[GetChased[playerid]] = 999;
			}
		}
	}
	if(GoChase[playerid] < 999)
	{
	  GetChased[GoChase[playerid]] = 999;
	  GotHit[GoChase[playerid]] = 999;
	}
	if(GetPVarInt(playerid, "AdvisorDuty") == 1) { Advisors--; }
	if(Team_Mecanicos(playerid))
	{
		if(OnDuty[playerid] == 1) { Mechanics -= 1; }
	}
	return 1;
}

function MissileLaunchEx(Float:x, Float:y, Float:z, Float:radius, type)
{
	CreateExplosion(x, y, z, type, radius);
	Misile_Launcher --;
	format(szMessage, sizeof(szMessage), "** Lanzamiento detonado en %0.2f - %0.2f - %0.2f, radio %d",x,y,z,radius);
	SendRadioMessage(3, TEAM_RADIO_COLOR, szMessage);
	return 1;
}

function MissileLaunch(vehicleid)
{
	new Float:x,Float:y,Float:z;
	GetVehiclePos(vehicleid, x, y, z);
	CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);  CreateExplosion(x, y, z, 2, 10.0);
	Misile_Launcher --;
	format(szMessage, sizeof(szMessage), "** Lanzamiento detonado en objetivo vehículo %d",vehicleid);
	SendRadioMessage(3, TEAM_RADIO_COLOR, szMessage);
	return 1;
}
function CloseCourtGate1()
{
MoveDynamicObject(courtgates[0],2138.00000000,1316.72106934,7698.23632812,4);
return 1;
}
function CloseCourtGate2()
{
MoveDynamicObject(courtgates[1],2138.00292969,1290.96386719,7698.24169922,4);
return 1;
}
function CloseCell1()
{
MoveDynamicObject(fen1,1417.90002441,-1554.90002441,4334.70019531,4);
return 1;
}
function CloseCell2()
{
MoveDynamicObject(fen2,1425.90002441,-1555.00000000,4334.70019531,4);
return 1;
}
function CloseCell3()
{
MoveDynamicObject(fen3,1429.50000000,-1554.80004883,4334.70019531,4);
return 1;
}
function CloseCell4()
{
MoveDynamicObject(fen4,1422.19995117,-1567.00000000,4334.60009766,4);
return 1;
}
function CloseCell5()
{
MoveDynamicObject(fen6,1430.19995117,-1566.69995117,4334.70019531,4);
return 1;
}
function CloseCell6()
{
MoveDynamicObject(fen5,1414.80004883,-1566.69995117,4334.60009766,4);
return 1;
}
function GateClose(playerid)
{
  MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
  PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
  return 1;
}
function GateClose4()
{
  MoveDynamicObject(hospitalgate,1089.19568, -1383.82886, 15.23783, 1.5);
  return 1;
}
function GateClose5()
{
  MoveDynamicObject(pdgate2, 1545.90002441,-1627.80004883,16.29999924, 3.0);
  return 1;
}
function GateCloseCNN(){
   MoveDynamicObject(tvp, 781.77209500,-1330.31884800,12.68660500,5.0);
   return 1;
}
function OpenDoorNG(){
   MoveDynamicObject(saem1, 135.332427,1941.738647,20.890346,5.0);
   return 1;
}
function OpenDoorNG2(){
   MoveDynamicObject(saem2, 349.008087,1801.077392,20.078582,5.0);
   return 1;
}
function GateCloseCNN1(){
   MoveDynamicObject(tvp1, 774.11425781,-1384.98632812,12.92022705,5.0);
   return 1;
}
function reja1trafi()
{
  MoveDynamicObject(reja1,-24.91601562,161.30957031,2.22968745,1.5);
  MoveDynamicObject(reja2,-29.87773514,164.10839844,2.22968745,1.5);
  return 1;
}
function reja2trafi()
{
  MoveDynamicObject(reja3,-82.58573151,65.67722321,4.01718760, 1.5);
  return 1;
}
function GateCloseGob(){
   MoveDynamicObject(gobiernogate, 1390.39941406,-1649.69921875,16.29999924,5.0);
   return 1;
}
function GateCloseGob1(){
   MoveDynamicObject(gobiernogate1, 1391.29980469,-1629.89941406,12.52500343,5.0);
   return 1;
}
function depositogate()
{
   MoveDynamicObject(depgate, 1619.69995117,-1852.59997559,12.50000000, 2.5);
   return 1;
}

SetPlayerSpawn(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    SetPlayerSkin(playerid, Info[playerid][pChar]);
	new Float: x, Float: y, Float: z;
	GetPlayerPos(playerid, x, y, z);
	if(x == 0.0 && y == 0.0 && z == 0.0)
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1715.1201,-1903.1711,13.5665);
		SetPlayerFacingAngle(playerid, 359.4621);
		SetCameraBehindPlayer(playerid);
	}
    if(GetPVarInt(playerid, "IsInArena") == 1)
	{
		SpawnPaintballArena(playerid);
		return 1;
	}
    if(Info[playerid][pReg] == 0)
    {
		SetTimerEx("FreezePlayer", 1000, false, "i", playerid);
		gNewbie[playerid]=1; gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
		InterpolateCameraPos(playerid, -2368.5532, 249.3627, 41.7089, -2344.1707, 131.6318, 51.0103, 12000);
		InterpolateCameraLookAt(playerid, -2367.9402, 248.5699, 41.4488, -2343.8657, 132.5866, 50.7202, 12000);
		SetPlayerPos(playerid,-2368.5532, 249.3627, 35.7089);
		Streamer_UpdateEx(playerid,-2368.5532, 249.3627, 35.708,0,0);
		Info[playerid][pAge] = 18; Info[playerid][pSex] = 1;
	 	format(szDialog, sizeof(szDialog), ""COL_WHITE"Hola %s, antes de empezar tienes que ingresar la edad\nde tu personaje.\n\nMínimo 18 y Máximo 99", GetPlayerNameEx(playerid));
		ShowPlayerDialog(playerid, REG_AGE, DIALOG_STYLE_INPUT,""COL_GENERAL"San Antón Roleplay - "COL_WHITE"1/4", szDialog,">","");
		return 1;
    }
    if(Info[playerid][pTut] == 0)
    {
        HideProgressBarForPlayer(playerid, HungryBar[playerid]);
        ClearChatbox(playerid);
        SetPlayerVirtualWorld(playerid, playerid); Info[playerid][pReg] = 1;
	    TutStep[playerid] = 1;
		TutTime[playerid] = 1;
		Tutorial_Inside(playerid);
        SendClientMessageEx(playerid, COLOR_YELLOW2, "Bien, ya estás registrado en nuestra base de datos, ahora verás el tutorial.");
        SendClientMessageEx(playerid, COLOR_YELLOW2, "Pulsa la letra Y de tu teclado para pasar cada tema del tutorial.");
		return 1;
	}
	new rand;
	if(Info[playerid][pBeingSentenced] > 0)
	{
	    PhoneOnline[playerid] = 1;
	    rand = random(sizeof(WarrantJail));
		SetPlayerPos(playerid, WarrantJail[rand][0], WarrantJail[rand][1], WarrantJail[rand][2]);
		if(rand != 0) courtjail[playerid] = 2;
		else courtjail[playerid] = 1;
		LoadObjects(playerid);
		SetPlayerInterior(playerid, 0);
		Info[playerid][pInt] = 0;
		return 1;
	}
	switch(Info[playerid][pJailed])
	{
	    case 1:
	    {
	    	Info[playerid][pEstado] = 0;
		    PhoneOnline[playerid] = 1;
		    SetPlayerInterior(playerid, 0);
			rand = random(sizeof(OOCJail));
			LoadObjects(playerid);
			SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
			SetPlayerVirtualWorld(playerid, 1000);
			SetPlayerSkin(playerid, 50);
			SendClientMessageEx(playerid, COLOR_LIGHTRED, "Estás en prisión, espera acabar tu condena.");
			SetPlayerToTeamColor(playerid);
			return 1;
	    }
	    case 2:
	    {
		    PhoneOnline[playerid] = 1;
		    rand = random(sizeof(SAPDPrisonSpawns));
		    SetPlayerPos(playerid, SAPDPrisonSpawns[rand][0], SAPDPrisonSpawns[rand][1], SAPDPrisonSpawns[rand][2]);
		    LoadObjects(playerid);
			SetPlayerToTeamColor(playerid);
			Info[playerid][pInt] = 10;
			SetPlayerInterior(playerid, 10);
			Info[playerid][pVW] = 500;
			SetPlayerVirtualWorld(playerid, 500);
			return 1;
	    }
	    case 3:
	    {
			LoadObjects(playerid);
		    PhoneOnline[playerid] = 1;
			SetPlayerInterior(playerid, 1);
			Info[playerid][pVW] = 600;
			Info[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 600);
			SetPlayerInterior(playerid, 1);
			SetPlayerPos(playerid,315.1677,-1451.5564,-33.5292);
			return 1;
	    }
	    case 4:
	    {
		    PhoneOnline[playerid] = 1;
		    Info[playerid][pInt] = 0;
			rand = random(sizeof(OOCJail));
			LoadObjects(playerid);
			SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
			SetPlayerVirtualWorld(playerid, 1000);
			SetPlayerInterior(playerid, 0);
			SendClientMessageEx(playerid, COLOR_LIGHTRED, "Un administrador te pusó en prisión cuando estabas OFF-Line, razón: Reporte en el Foro o Evasión de ROL.");
			SendClientMessageEx(playerid, COLOR_LIGHTRED, "Nota: Si crees que fue un error solicita a un administrador inmediatamente.");
			SetPlayerToTeamColor(playerid);
			return 1;
	    }
	    case 5:
	    {
		    PhoneOnline[playerid] = 1;
	  		LoadObjects(playerid);
			SetPlayerInterior(playerid, 0);
			Info[playerid][pInt] = 0;
			rand = random(sizeof(ICPrisonSpawns));
			SetPlayerPos(playerid, ICPrisonSpawns[rand][0], ICPrisonSpawns[rand][1], ICPrisonSpawns[rand][2]);
			SetPlayerVirtualWorld(playerid, 1000);
			SetPlayerSkin(playerid, 50);
			SetPlayerColor(playerid, TEAM_ORANGE_COLOR);
			return 1;
	    }
	    case 6:
	    {
	    	PhoneOnline[playerid] = 1;
			SetPlayerInterior(playerid, 5);
			Info[playerid][pInt] = 5;
			rand = random(sizeof(PrisonDillmore));
			SetPlayerPos(playerid, PrisonDillmore[rand][0], PrisonDillmore[rand][1], PrisonDillmore[rand][2]);
			SetPlayerVirtualWorld(playerid, 400);
			SetPlayerColor(playerid, TEAM_ORANGE_COLOR);
			return 1;
	    }
	    case 0: { }
	}
	if(GetPVarInt(playerid, "EventToken") == 1)
	{
	    DeletePVar(playerid, "EventToken");
	    SetPlayerWeapons(playerid);
	    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
		//Info[playerid][pInterior] = Info[playerid][pInt];
		SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
		SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
		SetPlayerInterior(playerid,EventLastInt[playerid]);
		SetHP(playerid, EventFloats[playerid][4]);
		SetPlayerArmour(playerid, EventFloats[playerid][5]);
		for(new i = 0; i < 6; i++)
		{
		    EventFloats[playerid][i] = 0.0;
		}
		EventLastVW[playerid] = 0;
		EventLastInt[playerid] = 0;
		return 1;
	}
	for(new i; i < 5; i++)
	{
	    if(InfoEvento[EventStaff][i] == playerid)
	    {
	        SetPlayerWeapons(playerid);
		    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
			//Info[playerid][pInterior] = Info[playerid][pInt];
			SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
			SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
			SetPlayerInterior(playerid,EventLastInt[playerid]);
			SetHP(playerid, EventFloats[playerid][4]);
			SetPlayerArmour(playerid, EventFloats[playerid][5]);
			for(new d = 0; d < 6; d++)
			{
			    EventFloats[playerid][d] = 0.0;
			}
			EventLastInt[playerid] = 0;
			EventLastVW[playerid] = 0;
			InfoEvento[EventStaff][i] = 999;
	    }
	}
	if(GetPVarInt(playerid, "FirstSpawn") == 2 && GetPVarInt(playerid, "Injured") == 1)
	{
	    SendEMSQueue(playerid,1);
	    return 1;
	}
	if(GetPVarInt(playerid, "FirstSpawn") == 1 && GetPVarInt(playerid, "Hospital") != 0)
	{
	    DeletePVar(playerid, "Hospital");
		if(Info[playerid][pTypeSpawn] == 1)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "El staff de SAMD confiscó las armas y lo ilegal que tenias.");
			SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Te llevaron a tu casa por la caracteristica Platinum activada.");
			for(new i = 0; i < sizeof(HouseInfo); i++)
            {
				if(Info[playerid][pPhousekey] == i)
				{
					Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
					SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
					LoadObjects(playerid);
					SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
					GameTextForPlayer(playerid, "~w~Bienvenido a Casa", 5000, 1);
					Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
					Info[playerid][pVW] = i+6000;
					SetPlayerVirtualWorld(playerid, i+6000);
				}
			}
			ResetPlayerWeaponsEx(playerid);
			return 1;
		}
	    if(Info[playerid][pWantedLevel] > 0)
	    {
	        Info[playerid][pJailed] = 2; Info[playerid][pJailTime] = 15*60; GivePlayerCash(playerid, -1000);
	        Tax += 1000;
	    	SendClientMessageEx(playerid, COLOR_WHITE, "Figuras como sospechoso es el sistema del gobierno.");
	    	SendClientMessageEx(playerid, COLOR_WHITE, "Te has recuperado y te pusimos en mano de las fuerzas de la ley.");
	    	SendClientMessageEx(playerid, COLOR_WHITE, "Como te encontramos herido te condenaron sólo unos días. (15 min)");
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid, 10);
			Info[playerid][pInt] = 10;
	    	rand = random(sizeof(SAPDPrisonSpawns));
	    	SetPlayerPos(playerid, SAPDPrisonSpawns[rand][0], SAPDPrisonSpawns[rand][1], SAPDPrisonSpawns[rand][2]);
	    	LoadObjects(playerid);
			StopAudioStreamForPlayer(playerid);
			ResetPlayerWeaponsEx(playerid);
	    	return 1;
	    }
	    else
	    {
			SetPlayerCameraPos(playerid, 1207.39, -1294.71, 24.61);
			SetPlayerCameraLookAt(playerid, 1181.72, -1322.65, 13.58);
			SetPosEx(playerid, 1173.4215,-1354.8661,13.8894,66.4873,0,playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "El staff de SAMD confiscó las armas y lo ilegal que tenias, en breve te dan de alta.");
	      	SetTimerEx("HospitalFun", 15000, false, "i", playerid); StopAudioStreamForPlayer(playerid);
	      	if(Info[playerid][pHungry] < 50.0) Info[playerid][pHungry] += 20.0;
	      	HungryCheck(playerid, Info[playerid][pHungry]);
	      	ResetPlayerWeaponsEx(playerid);
	  		return 1;
	  	}
	}
    if(GetPVarInt(playerid, "FirstSpawn") == 1 && GetPVarInt(playerid, "Hospital") == 0)
	{
		SetPlayerPos(playerid,Info[playerid][pPos_x],Info[playerid][pPos_y],Info[playerid][pPos_z]);
		SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
		SetPlayerFacingAngle(playerid, Info[playerid][pPos_r]);
    	SetPlayerInterior(playerid,Info[playerid][pInt]);
    	SetHP(playerid, Info[playerid][pHealth]);
		SetPlayerArmour(playerid, Info[playerid][pArmour]);
		SetCameraBehindPlayer(playerid);
		if(Info[playerid][pInt] > 0 || Info[playerid][pVW] > 0)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Te desconectaste en un interior, y están cargando los objetos, espera un momento por favor.");
			LoadObjects(playerid);
		}
	    return 1;
	}
	SetPlayerToTeamColor(playerid);
}
return 1;
}

function firstaid5(playerid){
if(GetPVarInt(playerid, "usingfirstaid") == 1){
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(health < 100.0){
	    if((health+5.0) <= 100.0) { SetHP(playerid, health+5.0); }
	}
}
}
function firstaidexpire(playerid)
{
	SendClientMessageEx(playerid, COLOR_GRAD1, "Tu kit de primeros auxilos ya no te hará efecto.");
	KillTimer(GetPVarInt(playerid, "firstaid5"));
	SetPVarInt(playerid, "usingfirstaid", 0);
}
function HungryCheck(playerid, Float: Hambre)
{
    if(!IsPlayerConnectedEx(playerid)) return 1;
    Info[playerid][pHungry] = Hambre;
    //ShowProgressBarForPlayer(playerid, HungryBar[playerid]);
	SetProgressBarValue(HungryBar[playerid], Hambre);
	UpdateProgressBar(HungryBar[playerid],playerid);
	return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
if(IsPlayerConnectedEx(killerid) && GetPVarInt(playerid, "IsInArena") == 0)
{
    format(QFA[playerid],24,"%s",GetPlayerNameEx(killerid));
}
pTazer[playerid] = 0;
Info[playerid][pArmour] = 0.0;
PlayerDrunk[playerid] = 0;
PlayerDrunkTime[playerid] = 0;
DeletePVar(playerid, "SpeedRadar");
DeletePVar(playerid, "UsingSprunk");
KillTimer(GetPVarInt(playerid, "firstaid5"));
DeletePVar(playerid, "usingfirstaid");
foreach(Player, i)
{
	if(EMSAccepted[i] < 999)
	{
		if(EMSAccepted[i] == playerid)
		{
 			EMSAccepted[i] = 999;
   			GameTextForPlayer(i, "~w~Paciente~n~~r~ha muerto", 5000, 1);
        	EMSCallTime[i] = 0;
        	DisablePlayerCheckpoint(i);
		}
	}
}
for(new x;x<MAX_PLAYERTOYS;x++) RemovePlayerAttachedObject(playerid, x);
new Float:px,Float:py,Float:pz;
if(GetPVarInt(playerid, "EventToken") == 0)
{
	if(GetPVarInt(playerid, "IsInArena") == 0)
	{
		SetPVarInt(playerid, "Injured", 1);
		SetPVarInt(playerid, "FirstSpawn", 2);
		new Float:mX, Float:mY, Float:mZ;
		GetPlayerPos(playerid, mX, mY, mZ);
		SetPVarFloat(playerid, "MedicX", mX);
		SetPVarFloat(playerid, "MedicY", mY);
		SetPVarFloat(playerid, "MedicZ", mZ);
		SetPVarInt(playerid, "MedicVW", GetPlayerVirtualWorld(playerid));
		SetPVarInt(playerid, "MedicInt", GetPlayerInterior(playerid));
	}
}
gPlayerSpawned[playerid] = 0;
if(GetPVarInt(playerid, "IsInArena") == 1){
	if(reason >= 0 && reason <= 46){
	    new weapon[24];
	    Info[killerid][pKills] += 1;
		if(Info[killerid][pPaintTeam] == 1){
		    if(Info[killerid][pPaintTeam] == Info[playerid][pPaintTeam]){
		        TRedKills -= 1;
		        TBlueKills += 1;
		        SetHP(killerid, 0);
		        Info[killerid][pKills] -= 2;
		        Info[killerid][pDeaths] += 1;
	    		Info[playerid][pDeaths] -= 1;
		        SendClientMessageEx(killerid, COLOR_WHITE, "ADVERTENCIA! No mates a los de tu mismo equipo!");
		    }
		    else{
	    		TRedKills += 1;
	    		//PaintBallArena[GetPVarInt(playerid, "IsInArena")][pbTeamBlueDeaths] += 1;
			}
		}
		if(Info[killerid][pPaintTeam] == 2){
		    if(Info[killerid][pPaintTeam] == Info[playerid][pPaintTeam]){
		        TRedKills += 1;
		        TBlueKills -= 1;
		        SetHP(killerid, 0);
		        Info[killerid][pKills] -= 2;
		        Info[killerid][pDeaths] += 1;
	    		Info[playerid][pDeaths] -= 1;
		        SendClientMessageEx(killerid, COLOR_WHITE, "ADVERTENCIA! No mates a los de tu mismo equipo!");
		    }
    		TBlueKills += 1;
		}
	    GetWeaponName(reason,weapon,sizeof(weapon));
		if(reason == 0){
			Info[killerid][pPaintTokens] += 16;
			Info[playerid][pPaintTokens] -= 16;
			if(Info[playerid][pPaintTokens] < 0) Info[playerid][pPaintTokens] = 0;
		    format(szMessage,sizeof(szMessage),"[Paintball Arena] %s ganó 16 fichas de bonus por un kill a mano!",GetPlayerNameEx(killerid));
			SendPaintballArenaMessage(GetPVarInt(killerid,"ArenaMode"), COLOR_YELLOW, szMessage);
			GameTextForPlayer(playerid,"-16 fichas", 3000, 1);
			PlayerPlaySound(killerid, 1052, 0.0, 0.0, 0.0);
    		format(szMessage,sizeof(szMessage),"[Paintball Arena] %s mató a %s con sus propias manos!",GetPlayerNameEx(killerid),GetPlayerNameEx(playerid));
		}
		else{
			Info[killerid][pPaintTokens] += 8;
			Info[playerid][pPaintTokens] -= 8;
			if(Info[playerid][pPaintTokens] < 0) Info[playerid][pPaintTokens] = 0;
		    format(szMessage,sizeof(szMessage),"[Paintball Arena] %s ganó 8 fichas de bonus por un kill!",GetPlayerNameEx(killerid));
			SendPaintballArenaMessage(GetPVarInt(killerid,"ArenaMode"), COLOR_YELLOW, szMessage);
			GameTextForPlayer(playerid,"-8 fichas", 3000, 1);
			PlayerPlaySound(killerid, 1052, 0.0, 0.0, 0.0);
		    format(szMessage,sizeof(szMessage),"[Paintball Arena] %s mató a %s con una %s.",GetPlayerNameEx(killerid),GetPlayerNameEx(playerid),weapon);
		}
	}
	else{
	    Info[playerid][pDeaths] += 1;
		format(szMessage,sizeof(szMessage),"[Paintball Arena] %s ha muerto.",GetPlayerNameEx(playerid));
	}
    SendPaintballArenaMessage(GetPVarInt(playerid,"ArenaMode"), COLOR_RED, szMessage);
}
GetPlayerPos(playerid, px, py, pz);
if(GetPVarInt(playerid, "Injured") == 0)
{
	if( GetPVarInt(playerid, "EventToken") >= 1 || GetPVarInt(playerid, "IsInArena") == 1){ ResetPlayerWeapons(playerid); }
	else { ResetPlayerWeaponsEx(playerid); }
}
new caller = Mobile[playerid];
if(caller != -1)
{
	if(caller > -1)
	{
		SendClientMessageEx(caller,  COLOR_GREY, "* La línea se perdió.");
		CellTime[caller] = 0;
		CellTime[playerid] = 0;
		Mobile[caller] = -1;
	}
	Mobile[playerid] = -1;
	CellTime[playerid] = 0;
}
if(Info[playerid][pHead] >= 1)
{
	if(IsPlayerConnectedEx(killerid))
	{
		if(GoChase[killerid] == playerid)
		{
		    new asesino[MAX_PLAYER_NAME],
				nombre[MAX_PLAYER_NAME];

			nombre = GetPlayerNameEx(playerid);
			asesino = GetPlayerNameEx(killerid);

			new takemoney = Info[playerid][pHead] / 4 * 2;
			//Info[killerid][pTaxDeuda] += takemoney;
			GivePlayerCash(killerid, takemoney);
			GivePlayerCash(playerid, -takemoney);
			format(szMessage,128,"Hitman %s ha cumplido con el contrato de %s y recaudó $%d.",asesino,nombre,Info[playerid][pHead] / 4 * 2);
			SendFamilyMessage(17, COLOR_YELLOW, szMessage);
			format(szMessage,128,"Has sido gravemente herido por un asesino a sueldo y pérdiste $%d.",takemoney);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			ResetPlayerWeaponsEx(playerid);
			Info[playerid][pHead] = 0;
			Info[killerid][pCHits] += 1;
			GotHit[playerid] = 0;
			GetChased[playerid] = 999;
			GoChase[killerid] = 999;
		}
	}
}
if(IsPlayerConnectedEx(killerid))
{
	if(GoChase[playerid] == killerid)
	{
	    new asesino[MAX_PLAYER_NAME], nombre[MAX_PLAYER_NAME];

	    nombre = GetPlayerNameEx(playerid);
		asesino = GetPlayerNameEx(killerid);

		new takemoney = Info[playerid][pHead] / 4 * 2;
		GivePlayerCash(killerid, takemoney);
		format(szMessage,128,"Hitman %s ha fallado el contrato de %s y perdió $%d.",nombre,asesino,Info[killerid][pHead] / 4 * 2);
		SendFamilyMessage(17, COLOR_YELLOW, szMessage);
		GivePlayerCash(playerid, -takemoney);
	   	format(szMessage,128,"Has matado a un asesino a sueldo y ganaste $%d, fuiste removido de la lista.",Info[killerid][pHead] / 4 * 2);
		SendClientMessageEx(killerid, COLOR_YELLOW, szMessage);
		Info[killerid][pHead] = 0;
		Info[playerid][pFHits] += 1;
		GotHit[playerid] = 0;
		GetChased[killerid] = 999;
		GoChase[playerid] = 999;
	}
}
// if they die whilst performing a looping anim, we should reset the state
if(gPlayerUsingLoopingAnim[playerid] == 1)
{
    gPlayerUsingLoopingAnim[playerid] = 0;
    TextDrawHideForPlayer(playerid,txtAnimHelper);
}
killerid = INVALID_PLAYER_ID;
SetPlayerColor(playerid,TEAM_HIT_COLOR);
return 1;
}

public OnPlayerSpawn(playerid)
{
if(!IsPlayerConnectedEx(playerid))
{
   	SendClientMessageEx(playerid, COLOR_GENERAL, "Aviso:"COL_WHITE"Fuiste expulsado automáticamente, no has ingresado correctamente.");
    Expulsar(playerid);
    return 1;
}
if(IsPlayerNPC(playerid)) return 1;
if(!gPlayerAnimLibsPreloaded[playerid])
{
    LoadAnimLibs(playerid);
	gPlayerAnimLibsPreloaded[playerid] = 1;
}
CancelSelectTextDraw(playerid);
SetPlayerWantedLevel(playerid, Info[playerid][pWantedLevel]);
SetPlayerSpawn(playerid);
SetPlayerWeapons(playerid);
OnDuty[playerid] = 0;
SetPlayerToTeamColor(playerid);
SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
SyncPlayerTime(playerid);
HungryCheck(playerid, Info[playerid][pHungry]);
SetPVarInt(playerid,"Dandoarma",0);
return 1;
}

public OnVehicleDeath(vehicleid)
{
if(Lamp[vehicleid] == 1)
{
	DestroyObject(light[vehicleid]);
    Lamp[vehicleid] = 0;
}
VehicleStatus{vehicleid} = 1;
arr_Engine{vehicleid} = 0;
return 1;
}

Log(sz_fileName[], sz_input[]) {

new
	sz_logEntry[156],
	i_dateTime[2][3],
	File: fileHandle = fopen(sz_fileName, io_append);

gettime(i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2]);
getdate(i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2]);

format(sz_logEntry, sizeof(sz_logEntry), "[%i/%i/%i - %i:%i:%i] %s\r\n", i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2], i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2], sz_input);
fwrite(fileHandle, sz_logEntry);
return fclose(fileHandle);
}

public OnPlayerEnterCheckpoint(playerid)
{
PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
new carid = GetPlayerVehicleID(playerid);
if(GetPVarInt(playerid,"FindJob") == 1)
{
	DeletePVar(playerid, "FindJob");
	DisablePlayerCheckpoint(playerid);
}
if(GetPVarInt(playerid,"FINDNAME") == 1)
{
	DeletePVar(playerid, "FINDNAME");
	DisablePlayerCheckpoint(playerid);
	SendClientMessageEx(playerid, COLOR_GRAD2, "Llegaste! Usa /cambiarnombre para cambiar tu nombre.");
}
if(GetPVarInt(playerid,"FINDHQ") == 1)
{
	DeletePVar(playerid, "FINDHQ");
	DisablePlayerCheckpoint(playerid);
	SendClientMessageEx(playerid, COLOR_GRAD2, "Llegaste! Usa C para entrar.");
}
if(MechanicCallTime[playerid] > 0)
{
    if(Team_Mecanicos(playerid))
	{
		MechanicCallTime[playerid] = 0;
		GameTextForPlayer(playerid, "~r~Llegaste!", 2500, 1);
		DisablePlayerCheckpoint(playerid);
	}
}
if(GetPVarInt(playerid, "Pizza") > 0 && IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorX], HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorY], HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorZ]))
{
	if (GetPVarInt(playerid, "tpPizzaTimer") != 0)
	{
		format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) is possibly teleport pizzarunning.", GetPlayerNameEx(playerid), playerid);
		ABroadCast( COLOR_YELLOW, szMessage, 2 );
		format(szMessage, sizeof(szMessage), "%s (ID %d) is possibly teleport pizzarunning.", GetPlayerNameEx(playerid), playerid);
    	Log("logs/hack.log", szMessage);
	}
	new pay = (GetPVarInt(playerid, "pizzaTimer") * 2);
	if(Tax < 50000)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "El gobierno no tiene fondos suficientes para pagarte por tu trabajo.");
        SendClientMessageEx(playerid, COLOR_GENERAL, "Puedes acercarte al ayuntamiento a cobrar en cualquier momento. (Pickup Cobrar)");
        Info[playerid][pCashGo] += pay;
	}
	else
	{
    	Tax -= pay;
		SaveStuff();
		GivePlayerCash(playerid, pay);
		format(szMessage, sizeof(szMessage), "Has entregado la pizza en su destino! Ganaste $%d.", pay);
        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	}
	DestroyProgressBar(PizzaBar[playerid]);
	SetPVarInt(playerid, "Pizza", 0);
	DisablePlayerCheckpoint(playerid);
}
for(new h = 0; h < MAX_POINTS; h++)
{
	if(Points[h][Type] == 3 && GetPVarInt(playerid, "CrateDeliver") == 1 && IsPlayerInRangeOfPoint(playerid, 6.0, 2165.8655,-1675.2634,15.0859)) // POT
	{
    	if(GetPVarInt(playerid, "tpDrugRunTimer") != 0)
   		{
	   		format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) posiblemente usa teleport drugrunning (Teleport).", GetPlayerNameEx(playerid), playerid);
	   		ABroadCast( COLOR_YELLOW, szMessage, 2 );
	   		format(szMessage, sizeof(szMessage), "%s (ID %d) posiblemente usa teleport drugrunning (Teleport).", GetPlayerNameEx(playerid), playerid);
	   		Log("logs/hack.log", szMessage);
		}
		DisablePlayerCheckpoint(playerid);
		new level = Info[playerid][pSmugSkill], pay;
		switch(level)
		{
		    case 1 .. 20: pay = 80;
		    case 21 .. 50: pay = 120;
		    case 51 .. 100: pay = 160;
		    case 101 .. 200: pay = 200;
		    default: pay = 300;
		}
		DeletePVar(playerid, "CrateDeliver");
		Info[playerid][pCrates] = 0;
		//Info[playerid][pSmugSkill]++; //CAMBIAR
        if(Info[playerid][pDobleExp] == 0)
		{
          	Info[playerid][pSmugSkill]++;
		}
		else
		{
			Info[playerid][pSmugSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		Points[h][Stock] += 10;
		format(szMessage, sizeof(szMessage), " HIERBA DISPONIBLE: %d", Points[h][Stock]);
		UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, szMessage);
		for(new i = 0; i < sizeof(fINFO); i++)
		{
		    if(fINFO[i][FamilyCash] <= 0) return SendClientMessageEx(playerid, COLOR_GENERAL, "* La familia dueña del punto no tiene dinero para pagarte por tu trabajo.");
			if(strcmp(Points[h][Owner], fINFO[i][FamilyName], true) == 0)
			{
				fINFO[i][FamilyCash] -= pay;
				if(fINFO[i][FamilyCash] < 0) fINFO[i][FamilyCash] = 0;
			}
		}
		format(szMessage, sizeof(szMessage), "* Ganaste $%d por traficar paquetes de hierba.", pay);
		SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		GivePlayerCash(playerid, pay);
		return 1;
	}
	if(Points[h][Type] == 4 && GetPVarInt(playerid, "CrateDeliver") == 2 && IsPlayerInRangeOfPoint(playerid, 6.0, 2348.6213,-1168.0778,27.8631)) // CRACK
	{
	    if(GetPVarInt(playerid, "tpDrugRunTimer") != 0)
	   	{
		   	format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) posiblemente usa teleport drugrunning (Teleport).", GetPlayerNameEx(playerid), playerid);
		   	ABroadCast( COLOR_YELLOW, szMessage, 2 );
		   	format(szMessage, sizeof(szMessage), "%s (ID %d) posiblemente usa teleport drugrunning (Teleport).", GetPlayerNameEx(playerid), playerid);
		   	Log("logs/hack.log", szMessage);
		}
		DisablePlayerCheckpoint(playerid);
		new level = Info[playerid][pSmugSkill], pay;
		switch(level)
		{
		    case 1 .. 20: pay = 100;
		    case 21 .. 50: pay = 140;
		    case 51 .. 100: pay = 180;
		    case 101 .. 200: pay = 220;
		    default: pay = 350;
		}
		DeletePVar(playerid, "CrateDeliver");
		Info[playerid][pCrates] = 0;
		//Info[playerid][pSmugSkill]++; //CAMBIAR
        if(Info[playerid][pDobleExp] == 0)
		{
          	Info[playerid][pSmugSkill]++;
		}
		else
		{
			Info[playerid][pSmugSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		Points[h][Stock] += 10;
		format(szMessage, sizeof(szMessage), " CRACK DISPONIBLE: %d", Points[h][Stock]);
		UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, szMessage);
		for(new i = 0; i < sizeof(fINFO); i++)
		{
		    if(fINFO[i][FamilyCash] <= 0) return SendClientMessageEx(playerid, COLOR_GENERAL, "* La familia dueña del punto no tiene dinero para pagarte por tu trabajo.");
			if(strcmp(Points[h][Owner], fINFO[i][FamilyName], true) == 0)
			{
				fINFO[i][FamilyCash] -= pay;
				if(fINFO[i][FamilyCash] < 0) fINFO[i][FamilyCash] = 0;
			}
		}
		format(szMessage, sizeof(szMessage), "* Ganaste $%d por traficar paquetes de crack.", pay);
		SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		GivePlayerCash(playerid, pay);
		return 1;
	}
	else if(Points[h][Type] == 2 && GetPVarInt(playerid, "MatDeliver") == 555 && IsPlayerInRangeOfPoint(playerid, 6.0, 2317.739990,-2303.850830,13.545999))
	{
		if(GetPVarInt(playerid, "Packages") > 0)
		{
			if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
		    {
		    	format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) Es posiblemente hacker de teleport.", GetPlayerNameEx(playerid), playerid);
		    	ABroadCast( COLOR_YELLOW, szMessage, 2 );
		    	format(szMessage, sizeof(szMessage), "%s (ID %d) Es posiblemente hacker de teleport.", GetPlayerNameEx(playerid), playerid);
		    	Log("logs/hack.log", szMessage);
			}
			new payout = (25)*(GetPVarInt(playerid, "Packages"));
			if(Info[playerid][pVIP] == 1)
			{
			    Info[playerid][pMats] += 375;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoría te da 375 materiales por tu paquete de 15 materiales.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Silver: Recibes 1.5x más materiales de lo normal.");

			}
			else if(Info[playerid][pVIP] == 2)
			{
			    Info[playerid][pMats] += 500;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoría te da 500 materiales por tu paquete de 20 materiales.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Gold: Recibes 2x más materiales de lo normal.");

			}
			else
			{
				Info[playerid][pMats] += 100;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoria te dió 100 materiales por tus 10 paquetes.");
			}
			DeletePVar(playerid, "Packages");
			DeletePVar(playerid, "MatDeliver");
			DisablePlayerCheckpoint(playerid);
			for(new p = 0; p < sizeof(fINFO); p++)
			{
				if(strcmp(Points[h][Owner], fINFO[p][FamilyName], true) == 0)
				{
					fINFO[p][FamilyCash] = fINFO[p][FamilyCash]+(payout/3);
					//SendClientMessageEx(playerid, COLOR_WHITE, " Family owner recieved 50 percent of the cost.");
				}
			}
			return 1;
		}
	}
	else if(GetPVarInt(playerid, "MatDeliver") == 333 && IsPlayerInRangeOfPoint(playerid, 6.0, 1083.0131,-1226.7869,15.8203))
	{
		if(GetPVarInt(playerid, "Packages") > 0)
		{
			if(Info[playerid][pVIP] == 1)
			{
		    	Info[playerid][pMats] += 675;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoría te da 675 materiales por tu paquete de 23 materiales.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Silver: Recibes 1.5x más materiales de lo normal.");
			}
			else if(Info[playerid][pVIP] == 2)
			{
		    	Info[playerid][pMats] += 900;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoría te da 900 materiales por tu paquete de 30 materiales.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Gold: Recibes 2x más materiales de lo normal.");
			}
			else
			{
				Info[playerid][pMats] += 150;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoria te dió 150 materiales por tus 15 paquetes.");
			}
			DeletePVar(playerid, "Packages");
			DeletePVar(playerid, "MatDeliver");
			DisablePlayerCheckpoint(playerid);
		}
		if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
		{
		   	format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) Es posiblemente hacker de teleport.", GetPlayerNameEx(playerid), playerid);
		   	ABroadCast( COLOR_YELLOW, szMessage, 2 );
		   	format(szMessage, sizeof(szMessage), "%s (ID %d) Es posiblemente hacker de teleport.", GetPlayerNameEx(playerid), playerid);
		   	Log("logs/hack.log", szMessage);
		}
	}
	else if(GetPVarInt(playerid, "MatDeliver") == 444 && IsPlayerInRangeOfPoint(playerid, 6.0, 2288.2263,-1104.6658,38.5870))
	{
		if(GetPVarInt(playerid, "Packages") > 0)
		{
			if(Info[playerid][pVIP] == 1)
			{
			    Info[playerid][pMats] += 450;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoría te da 450 materiales por tu paquete de 18 materiales.");
				SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Silver: Recibes 1.5x más materiales de lo normal.");

			}
			else if(Info[playerid][pVIP] == 2)
			{
			    Info[playerid][pMats] += 600;
				SendClientMessageEx(playerid, COLOR_GENERAL, "* La factoría te da 600 materiales por tu paquete de 24 materiales.");
				SendClientMessageEx(playerid, COLOR_YELLOW, "VIP Gold: Recibes 2x más materiales de lo normal.");
			}
			else
			{
		    	Info[playerid][pMats] += 180;
				SendClientMessageEx(playerid, COLOR_GENERAL, "*La factoria te dió 180 materiales por tus 18 paquetes.");
			}
			DeletePVar(playerid, "Packages");
			DeletePVar(playerid, "MatDeliver");
			DisablePlayerCheckpoint(playerid);
			if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
		    {
		    	format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) is possibly teleport matrunning.", GetPlayerNameEx(playerid), playerid);
		    	ABroadCast( COLOR_YELLOW, szMessage, 2 );
		    	format(szMessage, sizeof(szMessage), "%s (ID %d) is possibly teleport matrunning.", GetPlayerNameEx(playerid), playerid);
		    	Log("logs/hack.log", szMessage);
			}
			return 1;
		}
	}
}
if(GetPVarInt(playerid,"TrackCar") != 0)
{
    DisablePlayerCheckpoint(playerid);
	DeletePVar(playerid, "TrackCar");
	return 1;
}
if(TaxiCallReady[playerid] >= 0)
{
	GameTextForPlayer(playerid, "~y~llegaste!", 5000, 1);
	TaxiCallReady[playerid] = -1;
	DisablePlayerCheckpoint(playerid);
}
if(GetPVarInt(playerid, "TruckDeliver") > 0 && gPlayerCheckpointStatus[playerid] != CHECKPOINT_RETURNTRUCK)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_WHITE, "Este no es un camión!");
    if(TruckUsed[playerid] != INVALID_VEHICLE_ID && vehicleid != TruckUsed[playerid]) return SendClientMessageEx(playerid, COLOR_WHITE, "Este no es tu camión con la mercancía que debes entregar.");
	if(!IsAtTruckDeliveryPoint(playerid))
	{// En está condición se usa para que los jugadores no puedan hacer uso de exploit en los checkpoints
		CancelTruckDelivery(playerid);
		SendClientMessageEx(playerid, COLOR_REALRED, "ERROR: Entraste a un checkpoint erronéo. No se completó la entrega.");
		return 1;
	}
	if(GetPVarInt(playerid, "tpTruckRunTimer") != 0)
	{
		format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) posiblemente use cheat de teleport.", GetPlayerNameEx(playerid), playerid);
		ABroadCast( COLOR_YELLOW, szMessage, 2 );
		format(szMessage, sizeof(szMessage), "%s (ID %d) is possibly teleport truckrunning.", GetPlayerNameEx(playerid), playerid);
    	Log("logs/hack.log", szMessage);
	}
	new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
	TruckContents[vehicleid] = 0;

	if(truckdeliver >= 1 && truckdeliver <= 3)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado la comida y bebidas, regresa para recolectar tu paga.");
	}
	else if(truckdeliver >= 4 && truckdeliver <= 6)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado la ropa y calzado, regresa para recolectar tu paga.");
	}
	else if(truckdeliver == 7)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado los materiales, regresa para recolectar tu paga.");
	}
	else if(truckdeliver >= 8 && truckdeliver <= 10)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado los objetos del 24/7, regresa para recolectar tu paga.");
	}
	else if(truckdeliver >= 11 && truckdeliver <= 15)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado las armas, regresa para recolectar tu paga.");
	}
	else if(truckdeliver >= 16 && truckdeliver <= 20)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado las drogas, regresa para recolectar tu paga.");
	}
	else if(truckdeliver >= 21 && truckdeliver <= 25)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Has entregado los materiales ilegales, regresa para recolectar tu paga.");
	}
	DisablePlayerCheckpoint(playerid);
    Info[playerid][p_Pr_Time] += 1;
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_RETURNTRUCK;
	SetPlayerCheckpoint(playerid, 2225.7813,-2637.2319,13.4262, 5);
	GameTextForPlayer(playerid, "~w~Ref:~r~Ocean Docks", 5000, 1);
	SendClientMessageEx(playerid, COLOR_WHITE, "HINT: Regresa a Ocean Docks. (Mira el checkpoint en el radar).");

	SetPVarInt(playerid, "tpTruckRunTimer", 30);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
	return 1;
}
else if(EMSCallTime[playerid] > 0 && EMSAccepted[playerid] < 999)
{
    if(GetPVarInt(EMSAccepted[playerid], "Injured") == 1)
    {
    	SendEMSQueue(EMSAccepted[playerid],2);
    	EMSAccepted[playerid] = 999;
    	GameTextForPlayer(playerid, "~w~Llegaste", 5000, 1);
    	EMSCallTime[playerid] = 0;
    	DisablePlayerCheckpoint(playerid);
	}
	else
	{
        EMSAccepted[playerid] = 999;
	    GameTextForPlayer(playerid, "~r~Paciente ha muerto", 5000, 1);
	    EMSCallTime[playerid] = 0;
    	DisablePlayerCheckpoint(playerid);
	}
}
else if(Info[playerid][pJob] == 10  || Info[playerid][pJob2] == 10)
{
    if(DrugFarming[playerid] == 1)
    {
        if(IsAHarvest(carid) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
        {
            if(Info[playerid][pCosecha] < 41)
            {
            	new cos = random(6);
     	    	DisablePlayerCheckpoint(playerid);
            	format(szMessage, sizeof(szMessage), "¡Has cosechado y has conseguido %i Kg de cosecha!", cos+1);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				Info[playerid][pCosecha] += cos+1;
				new randomize = random(sizeof(gDrugFarmVar));
      			SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
				return 1;
			}
			else
			{
			    DisablePlayerCheckpoint(playerid);
			    SendClientMessageEx(playerid, COLOR_YELLOW, "Tienes más de 40 Kg, no puedes llevar más.");
				format(szMessage, sizeof(szMessage), "Tienes %d gramos de droga en tu mochila, puedes vender la cosecha a los 24/7. (/vendercosecha)", Info[playerid][pCosecha]);
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			    DrugFarming[playerid] = 0;
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			    return 1;
			}
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_YELLOW, "No estás en el coche de cosechador.");
		    DrugFarming[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    return 1;
		}
    }
}
else
{
	switch (gPlayerCheckpointStatus[playerid])
	{
	    case CHECKPOINT_RETURNBANK:
	    {
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	        DisablePlayerCheckpoint(playerid);
	        PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
	        fbank += Info[playerid][pMoneyBankT];
	        Info[playerid][pMoneyBankT] -= Info[playerid][pMoneyBankT];
	        format(szMessage, sizeof(szMessage),"* Transportaste el dinero con éxito. Nuevo balance del banco: $%d.",fbank);
            SendClientMessageEx(playerid, -1, szMessage);
            SaveStuff();
	    }
		case CHECKPOINT_LOADTRUCK:
		{
		    if(IsPlayerInRangeOfPoint(playerid, 6, 2198.1377,-2660.1250,13.5469))
		    {
			    new vehicleid = GetPlayerVehicleID(playerid);
   				if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    		{
	    		    DisablePlayerCheckpoint(playerid);
			    	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
					TogglePlayerControllable(playerid, 0);
					SetPVarInt(playerid, "IsFrozen", 1);
					ShowPlayerDialog(playerid,DIALOG_LOADTRUCK,DIALOG_STYLE_LIST,"¿Que quieres transportar?","{00F70C}Mercancía Legal {FFFFFF}(Ningún riesgo)\n{FF0606}Mercancía Ilegal {FFFFFF}(Riesgo de quedar encarcelado)","Ok","Cancelar");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en un camión para transportar.");
			}
		}
		case CHECKPOINT_RETURNTRUCK:
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 6, 2225.7813,-2637.2319,13.4262))// In the case the player finds a way to exploit the checkpoint to different location
		    {
                CancelTruckDelivery(playerid);
                SendClientMessageEx(playerid, COLOR_REALRED, "ERROR: Fuiste a un checkpoint erronéo, la entrega no se completo.");
				return 1;
		    }
			if(GetPVarInt(playerid, "tpTruckRunTimer") != 0)
			{
				format(szMessage, sizeof(szMessage), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) es un posible Teleporting Trunker.", GetPlayerNameEx(playerid), playerid);
				ABroadCast( COLOR_YELLOW, szMessage, 2 );
				format(szMessage, sizeof(szMessage), "%s (ID %d) is possibly teleport truckrunning.", GetPlayerNameEx(playerid), playerid);
    			Log("logs/hack.log", szMessage);
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
    		{
        		SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un camión!");
        		return 1;
    		}
    		if(TruckUsed[playerid] != INVALID_VEHICLE_ID && vehicleid != TruckUsed[playerid])
    		{
        		SendClientMessageEx(playerid, COLOR_WHITE, "Este no es el carro que utilizas, devuelve el camión para recibir su pago!");
        		return 1;
    		}
    		
		    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		    DisablePlayerCheckpoint(playerid);
		    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		    SetVehicleToRespawn(vehicleid);
		    
			new payment;
			new level = Info[playerid][pTruckSkill];
			if(level >= 0 && level <= 50) payment = 80;
			else if(level >= 51 && level <= 100) payment = 120;
			else if(level >= 101 && level <= 200) payment = 200;
			else if(level >= 201 && level <= 400) payment = 350;
			else if(level >= 401) payment = 450;

            new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
			if(truckdeliver == 16)
			{
       			SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 3gr de droga por entregar mercancía ilegal.");
			    Info[playerid][pCrack] += 5;
			}
			else if(truckdeliver == 17)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 5gr de droga por entregar mercancía ilegal.");
			    Info[playerid][pCrack] += 5;
			}
			else if(truckdeliver == 18)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 8gr de hierba por entregar mercancía ilegal.");
			    Info[playerid][pPot] += 8;
			}
			else if(truckdeliver == 19)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 10gr de hierba por entregar mercancía ilegal.");
			    Info[playerid][pPot] += 10;
			}
			else if(truckdeliver == 20)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dio 15gr de droga por entregar mercancía ilegal.");
			    Info[playerid][pCrack] += 15;
			}
			else if(truckdeliver == 21)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 25 Materiales por entregar mercancía ilegal.");
				Info[playerid][pMats] += 25;
			}
			else if(truckdeliver == 22)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 55 Materiales por entregar mercancía ilegal.");
				Info[playerid][pMats] += 50;
			}
			else if(truckdeliver == 23)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 100 Materiales por entregar mercancía ilegal.");
				Info[playerid][pMats] += 100;
			}
			else if(truckdeliver == 24)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 150 Materiales por entregar mercancía ilegal.");
				Info[playerid][pMats] += 150;
			}
			else if(truckdeliver == 25)
			{
			    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Se te dió 200 Materiales por entregar mercancía ilegal.");
				Info[playerid][pMats] += 200;
			}
			if(Tax < 50000)
			{
				SendClientMessageEx(playerid, COLOR_GENERAL, "El gobierno no tiene fondos suficientes para pagarte por tu trabajo.");
                SendClientMessageEx(playerid, COLOR_GENERAL, "Puedes acercarte al ayuntamiento a cobrar en cualquier momento. (Pickup Cobrar)");
                Info[playerid][pCashGo] += payment;
			}
			else
			{
			    Tax -= payment;
				SaveStuff();
				GivePlayerCash(playerid, payment);
				format(szMessage, sizeof(szMessage), "* Ganaste $%d por entregar mercancías y devolver el camión.", payment);
		    	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		    }
			TruckUsed[playerid] = INVALID_VEHICLE_ID;
			DeletePVar(playerid, "TruckDeliver");
            if(Info[playerid][pDobleExp] == 0)
			{
               	Info[playerid][pTruckSkill]++;
			}
			else
			{
				Info[playerid][pTruckSkill] += 2;
				SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
			}
		}
	}
}
DisablePlayerCheckpoint(playerid);
return 1;
}

stock SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num){
for(new i = 0; i < MAX_PLAYERS; i++)	{
	if(IsPlayerConnectedEx(i))		{
		SetPlayerCheckpoint(i,allx,ally,allz, radi);
	}
}

}

SendClientMessageEx(playerid, color, string[]){
if(InsideMainMenu[playerid] == 1 || TutStep[playerid] == 1)
	return 0;
else SendClientMessage(playerid, color, string);
return 1;
}

SendClientMessageToAllEx(color, string[]){
foreach(Player, i)	{
	if(InsideMainMenu[i] == 1 || TutStep[i] == 1) {}
	else SendClientMessage(i, color, string);
}
return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
new engine,lights,alarm,doors,bonnet,boot,objective;
if(IsPlayerNPC(playerid))
{
    if(newstate == PLAYER_STATE_SPECTATING)
    {
    	TogglePlayerSpectating(playerid, false);
	}
	return 1;
}
if(newstate == PLAYER_STATE_DRIVER)
{
	if((GetTickCount()-GetPVarInt(playerid, "cartime")) < 1000)
    {
		SetPVarInt(playerid, "carspam", GetPVarInt(playerid, "carspam")+1);
		if(GetPVarInt(playerid, "carspam") >= 5)
        {
			format(szMessage,sizeof(szMessage),"AdmWarning: %s fue baneado automáticamente, razón: Car Spam Hack",GetPlayerNameEx(playerid));
            SendClientMessageToAllEx(COLOR_LIGHTRED, szMessage);
            printf(szMessage);
            Info[playerid][pBanned] = 2;
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
            Expulsar(playerid);
        }
  	}
  	SetPVarInt(playerid, "cartime", GetTickCount());
}
if(oldstate == PLAYER_STATE_DRIVER)
{
	SetPlayerWeaponsEx(playerid);
	TextDrawHideForPlayer(playerid, Speedo[playerid]);
	TextDrawSetString(Speedo[playerid], "~w~--- ~y~MPH - Gas: ~w~----");
}
else if(oldstate == PLAYER_STATE_PASSENGER) SetPlayerWeaponsEx(playerid);
if(newstate == PLAYER_STATE_ONFOOT)
{
    if(TaxiOnDuty[playerid] > 0)
	{
		TaxiDrivers -= 1;
		TaxiOnDuty[playerid] = 0;
		TaxiTarifa[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estás fuera de servicio.");
		SetPlayerColor(playerid, TEAM_HIT_COLOR);
	}
	if(TaxiTiempo[playerid] >= 1)
	{
	    new giveplayeridex = TaxiDriver[playerid];
		new precio = TaxiCosto[playerid];
		format(szMessage, sizeof(szMessage), "Servicio de Taxi: $%d", precio);
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);

		format(szMessage, sizeof(szMessage), "Pasajero salió de tu taxi y ganaste $%d por el servicio de taxi.", precio);
		SendClientMessageEx(giveplayeridex, COLOR_WHITE, szMessage);

		GivePlayerCash(playerid, -precio);
		GivePlayerCash(giveplayeridex, precio);
		TaxiTiempo[playerid] = 0;
		TaxiDriver[playerid] = -1;
		TaxiCosto[playerid] = 0;
		TaxiCliente[giveplayeridex] = -1;
	}
	if(DrugFarming[playerid] == 1)
 	{
 	    DisablePlayerCheckpoint(playerid);
 	    DrugFarming[playerid] = 0;
 	    SendClientMessageEx(playerid, COLOR_WHITE, "¡Dejaste de cosechar!");
	    if(IsAHarvest(GetPlayerVehicleID(playerid)))
		{
	 		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
	}
}
if((newstate == 2 || newstate == 3 || newstate == 7 || newstate == 9) && pTazer[playerid] == 1)
{
	GivePlayerValidWeapon(playerid, pTazerReplace[playerid]);
	pTazer[playerid] = 0;
}
if(newstate == PLAYER_STATE_PASSENGER)
{
    fVehSpeed[playerid] = 0.0;
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    new vehicleid = GetPlayerVehicleID(playerid);
    if(Info[playerid][pWeapons][4] > 0)	SetPlayerArmedWeapon(playerid,Info[playerid][pWeapons][4]);
	else SetPlayerArmedWeapon(playerid,0);
	gLastCar[playerid] = vehicleid;
	foreach(Player, i)
    {
 		if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TaxiOnDuty[i] == 1)
   		{
			if(GetPlayerCash(playerid) < TaxiTarifa[i])
			{
				format(szMessage, sizeof(szMessage), "* Necesitas $%d para entrar al taxi.", TaxiTarifa[i]);
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
				RemovePlayerFromVehicle(playerid);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z+2);
				TogglePlayerControllable(playerid, 1);
			}
			else
			{
				if(TaxiOnDuty[i] == 1)
				{
					format(szMessage, sizeof(szMessage), "* Entraste al taxi de %s.", GetPlayerNameEx(i));
					SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					format(szMessage, sizeof(szMessage), "* %s ha entrado a tu taxi.", GetPlayerNameEx(playerid));
					SendClientMessageEx(i, COLOR_GENERAL, szMessage);
					TaxiTiempo[playerid] = 1;
					TaxiCliente[i] = playerid;
					TaxiDriver[playerid] = i;
					TaxiCosto[playerid] = TaxiTarifa[i];
				}
            }
        }
    }
    if( GetPVarInt( playerid, "ToBeEjected" ) >= 1 )
	{
       	SetPVarInt( playerid, "ToBeEjected", 0 );
       	RemovePlayerFromVehicle( playerid );
       	new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(playerid, X, Y, Z+2);

		if(GetPVarInt(playerid, "Injured") == 1)
		{
		    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
	   		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
			SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
			ClearAnimations(playerid);
            ApplyAnimation(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
		}
	}
}
if(newstate == PLAYER_STATE_DRIVER)
{// 38 / 49 / 56 = SS
    TextDrawShowForPlayer(playerid, Speedo[playerid]);
    NOPCheck(playerid);
	SetPlayerArmedWeapon(playerid, 0);
    fVehSpeed[playerid] = 0.0;
	new newcar = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(newcar,arr_Engine{newcar},lights,alarm,doors,bonnet,boot,objective);
	if(IsABike(newcar) && !IsARentCar(newcar))
	{
	    SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
	}
    if(GetCarSale(newcar) != -1)
    {
		format(szMessage, sizeof(szMessage),""COL_WHITE"Este vehículo está en venta.\n\nModelo: %s\nPrecio: %d\n\n¿Quieres comprar este vehículo?", GetVehicleName(newcar), varCarSale[GetCarSale(newcar)][CSVehCost]);
		ShowPlayerDialog(playerid,DIALOG_CDBUY,DIALOG_STYLE_MSGBOX,""COL_GENERAL"ZC-RP - "COL_WHITE"Adquirir vehículo",szMessage,"Comprar","Cancelar");
	    TogglePlayerControllable(playerid, false);
	    return 1;
    }
    GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
	if((engine == VEHICLE_PARAMS_UNSET || engine == VEHICLE_PARAMS_OFF) && GetVehicleModel(newcar) != 509 && GetVehicleModel(newcar) != 481 && GetVehicleModel(newcar) != 510)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "El motor del vehículo está apagado, escribe /v motor o pulsa la tecla N para arrancarlo.");
	}
	if(IsARentCar(newcar))
	{
	    if(IsaRent[playerid] == 0)
	    {
			TogglePlayerControllable(playerid,0);
			ShowPlayerDialog(playerid, RENT_BIKE, DIALOG_STYLE_MSGBOX, ""COL_GENERAL"BMX Rental","{FFFFFF}Modelo: Montañera Clasica\nTiempo de Renta: 15 Minutos\nPrecio: 200 Dolares", "Rentar", "Cancelar");
			return 1;
		}
		else
		{
		    TogglePlayerControllable(playerid,1);
		}
	}
    if( GetPVarInt( playerid, "ToBeEjected" ) >= 1 )
	{
       	SetPVarInt( playerid, "ToBeEjected", 0 );
       	RemovePlayerFromVehicle( playerid );
       	new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(playerid, X, Y, Z+2);

		if(GetPVarInt(playerid, "Injured") == 1)
		{
		    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
	   		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
			SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
		}
	}
	gLastCar[playerid] = newcar;
 	foreach(Player, i)
	{
  		new v = GetPlayerVehicle(i, newcar);
	    if(v != -1)
		{
			if(i == playerid)
			{
				format(szMessage, sizeof(szMessage),"Eres el dueño de este %s.", GetVehicleName(newcar));
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
				if(PlayerVehicleInfo[i][v][pvTicket] != 0)
				{
					format(szMessage, sizeof(szMessage),"Tienes una multa de $%d en tu vehículo. Debes pagar la multa en la central de SAPD.", PlayerVehicleInfo[i][v][pvTicket]);
					SendClientMessageEx(playerid, COLOR_GREY, szMessage);
				}
			}
			else if(i == Info[playerid][pVehicleKeysFrom]){
				format(szMessage, sizeof(szMessage),"Usted tiene las llaves de este %s del dueño %s.", GetVehicleName(newcar), GetPlayerNameEx(i));
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
			}
			else if(PlayerVehicleInfo[i][v][pvLocked] == 1 && PlayerVehicleInfo[i][v][pvLock] == 1)
			{
			    GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(newcar,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
				SetTimerEx("DisableVehicleAlarm", 20000, 0, "d",  newcar);
			}
			else if(PlayerVehicleInfo[i][v][pvLocked] == 1 && PlayerVehicleInfo[i][v][pvLock] == 2)
			{
          		if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5)
				{
					format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s ha sido sorprendido por la electricidad anti-robo.",GetPlayerNameEx(playerid));
                    NearMsg(playerid, -1, szMessage,20.0);
					new Float:X, Float:Y, Float:Z, Float:HP;
     				GetPlayerPos(playerid, X, Y, Z);
     				PlayerPlaySoundEx(6003, X,Y,Z);
     				SetPlayerPos(playerid, X + 1, Y + 2, Z);
         			RemovePlayerFromVehicle(playerid);
         			SetPVarInt(playerid, "IsFrozen", 1);
            		TogglePlayerControllable(playerid,0);
	            	SetTimerEx("ReleasePlayer", 10000, 0, "d", playerid);
		            GameTextForPlayer(playerid,"~r~Electricidad!",11000,3);
		            GetPlayerHealth(playerid,HP);
		            SetHP(playerid,HP-15);
				}
			}
			else
			{
    			format(szMessage, sizeof(szMessage), "Este %s es de %s.", GetVehicleName(newcar), GetPlayerNameEx(i));
      			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
			}
			return 1;
		}
	}
}
if(newstate == PLAYER_STATE_SPAWNED) gPlayerSpawned[playerid] = 1;
return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
if (GetPlayerState(playerid) == 1) return 1;
switch(Seatbelt[playerid])
{
    case 1:
    {
        if(IsABike(vehicleid)) format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s pone las manos en su casco, y se lo quita.", GetPlayerNameEx(playerid));
		else format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s pone las manos en su cinturón y se lo quita.", GetPlayerNameEx(playerid));
	    NearMsg(playerid, -1, szMessage,20.0);
   	    Seatbelt[playerid] = 0;
    }
}
return 1;
}

function SetPlayerWeapons(playerid){
ResetPlayerWeapons(playerid);
for(new s = 0; s < 12; s++)
{
	if(Info[playerid][pWeapons][s] > 0)
	{
		GivePlayerValidWeapon(playerid, Info[playerid][pWeapons][s]);
	}
}
return 1;
}

function SetPlayerWeaponsEx(playerid){
ResetPlayerWeapons(playerid);
for(new s = 0; s < 12; s++)
{
	if(Info[playerid][pWeapons][s] > 0)
	{
		GivePlayerValidWeapon(playerid, Info[playerid][pWeapons][s]);
	}
}
SetPlayerArmedWeapon(playerid, GetPVarInt(playerid, "LastWeapon"));
}

stock GetPlayerFactionInfo(targetid, rank[64], division[64], employer[64])
{
switch (Info[targetid][pMember]) // employer/rank/division data is pulled from here
{
    case 1:
	{
        employer = "SAPD";
		switch(Info[targetid][pRank])
		{
		    case 1: rank = "Cadete";
		    case 2: rank = "Oficial";
		    case 3: rank = "Detective";
		    case 4: rank = "Sargento";
		    case 5: rank = "Teniente";
		    case 6: rank = "Comandante";
		    default: rank = "Cadete";
		}
		switch(Info[targetid][pDivision])
		{
		    case 1: division = "General";
		    case 2: division = "DIVCRI";
		    case 3: division = "DIVOES";
		    case 4: division = "DIVANDRO";
		    case 5: division = "SWAT";
		    case 6: division = "UL";
		    default: division = "Ninguna";
		}
	}
	case 2:
	{
        employer = "FBI";
		switch(Info[targetid][pRank])
		{
		    case 1: rank = "Agente";
		    case 2: rank = "Agente Superior";
		    case 3: rank = "Agente Especial";
		    case 4: rank = "Agente Especializado";
		    case 5: rank = "Sub/Director";
		    case 6: rank = "Director";
		    default: rank = "Agente";
		}
		switch(Info[targetid][pDivision])
		{
		    case 1: division = "General";
		    case 2: division = "DIVHO";
		    case 3: division = "UCO";
		    case 4: division = "UI";
		    case 5: division = "RR.HH";
		    default: division = "DIVHO";
		}
	}
	case 3:
	{
        employer = "SAEM";
		switch(Info[targetid][pRank])
		{
			case 1: rank = "Cabo";
			case 2: rank = "Soldado";
			case 3: rank = "Sargento";
			case 4: rank = "Capitan";
			case 5: rank = "Mayor";
			case 6: rank = "Coronel";
			default: rank = "Cabo";
		}
		switch(Info[targetid][pDivision])
		{
		    case 1: division = "General";
			case 2: division = "FASA";
		    case 3: division = "EMM";
		    case 4: division = "BO";
		    case 5: division = "FMSA";
		    default: division = "Ninguna";
		}
	}
	case 4:
	{
        employer = "SAMC";
		switch(Info[targetid][pRank])
		{
			case 1: rank = "Prácticante";
			case 2: rank = "Paramédico";
			case 3: rank = "Médico";
			case 4: rank = "Supervisor";
			case 5: rank = "Responsable Técnico";
			case 6: rank = "Director";
			default: rank = "Prácticante";
		}
	}
	case 5:
	{
        employer = "SA News";
		switch(Info[targetid][pRank])
		{
			case 1: rank = "Becario";
			case 2: rank = "Redactor";
			case 3: rank = "Periodista";
			case 4: rank = "Enviado Especial";
			case 5: rank = "Presentador";
			case 6: rank = "Director SA News";
			default: rank = "Becario";
		}
		division = "Ninguna";
	}
	case 6:
	{
        employer = "Mecánicos";
		switch(Info[targetid][pRank])
		{
			case 1: rank = "Ayudante";
			case 2: rank = "Trucker";
			case 3: rank = "Mecánico";
			case 4: rank = "Ingeniero";
			case 5: rank = "Supervisor";
			case 6: rank = "Director";
			default: rank = "Ayudante";
		}
		division = "Ninguna";
	}
	case 7:
	{
        employer = "Gobierno";
		switch(Info[targetid][pRank])
		{
			case 1: rank = "Staff";
			case 2: rank = "Secretario";
			case 3: rank = "Alcalde de LS";
			case 4: rank = "Ministro de";
			case 5: rank = "Vice-Presidente";
			case 6: rank = "Presidente";
			default: rank = "Staff";
		}
		switch(Info[targetid][pDivision])
		{
		    case 2: division = "Chofer";
		    case 3: division = "UG";
		    case 4: division = "Defensa";
		    case 5: division = "Justicia";
		    case 6: division = "Economía";
		    default: division = "Ninguna";
		}
		division = "Ninguna";
	}
	case 8:
	{
	    employer = "Agencia Hitman";
	    switch(Info[targetid][pRank])
	    {
			case 1: rank = "Novato";
			case 2: rank = "Asesino";
			case 3: rank = "Sicario";
			case 4: rank = "Agente Especial";
			case 5: rank = "Vice Director";
			case 6: rank = "Director";
			default: rank = "Novato";
		}
		division = "Ninguna";
	}
	case 9:
	{
	    employer = "Banco Central";
		switch(Info[targetid][pRank])
		{
			case 1: rank = "Seguridad";
			case 2: rank = "Recepcionista";
			case 3: rank = "Asesor";
			case 4: rank = "Supervisor";
			case 5: rank = "Administrador";
			case 6: rank = "Gerente General";
			default: rank = "[ERROR]";
		}
		division = "Ninguna";
	}
    default: { employer = "Ninguna"; division = "Ninguna"; rank = "N/A"; }
}
return 1;
}

ShowStats(playerid,targetid)
{
	if(IsPlayerConnectedEx(targetid))
	{
	    SendClientMessageEx(playerid,COLOR_GENERAL,"___________________________________________________________________________________________________________________");

		new fMatriz[340], age = Info[targetid][pAge], level = Info[targetid][pLevel], atext[20], cash =  GetPlayerCash(targetid), account = Info[targetid][pMoneyBank],pnumber[20];
		switch(Info[targetid][pSex])
		{
			case 1: atext = "Hombre";
			case 2: atext = "Mujer";
		}
		switch(Info[targetid][pPnumber])
		{
			case 0: pnumber = "Ninguno";
			default: format(pnumber, sizeof(pnumber), "%d", Info[targetid][pPnumber]);
		}
		format(fMatriz,sizeof(fMatriz),"  %s - (Edad %d) - (Nivel %d) - (Sexo %s) - (Dinero %d$) - (Banco %d$) - (Teléfono %s)",GetPlayerNameEx(targetid),age,level,atext,cash,account,pnumber);
		SendClientMessageEx(playerid, -1, fMatriz);

		new nxtlevel = Info[targetid][pLevel]+1;
		new tokens = Info[targetid][pPaintTokens],exp = Info[targetid][pExp],expamount = nxtlevel*explevel,facfam[20], employer[64],division[64], rank[64], rango = Info[targetid][pRank];
		facfam = "Facción";
		if(Info[targetid][pFMember] < 255)
		{
		    facfam = "Familia"; division = "Ninguna";
			format(employer, sizeof(employer), "%s", fINFO[Info[targetid][pFMember]][FamilyName]);
			switch(Info[targetid][pRank])
			{
				case 1: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank1]);
				case 2: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank2]);
				case 3: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank3]);
				case 4: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank4]);
				case 5: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank5]);
	  			case 6: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank6]);
				default: format(rank, sizeof(rank), "%s", fINFO[Info[targetid][pFMember]][FamilyRank1]);
			}
		}
		else GetPlayerFactionInfo(targetid, rank, division, employer);
	    format(fMatriz,sizeof(fMatriz)," (Fichas %d) - (Prox Nivel %d/%d) - (%s: %s) - (Rango %s (%d)) - (División %s)",tokens,exp,expamount,facfam,employer,rank,rango,division);
	    SendClientMessageEx(playerid, -1, fMatriz);

		new jtext[21], jtext2[21];
		switch(Info[targetid][pJob])
		{
			case 0: jtext = "Ninguno";
	        case 1: jtext = "Bartender";
	        case 3: jtext = "Vendedor de móviles";
	        case 5: jtext = "Pizzero";
	        case 6: jtext = "Vendedor de Drogas";
	        case 7: jtext = "Camionero";
	        case 9: jtext = "Taxista";
	        case 10: jtext = "Cosechador";
	        case 12: jtext = "Bodyguard";
	        case 14: jtext = "Artesano";
		}
		switch(Info[targetid][pJob2])
		{
			case 0: jtext2 = "Ninguno";
	        case 1: jtext2 = "Bartender";
	        case 3: jtext2 = "Vendedor de móviles";
	        case 5: jtext2 = "Pizzero";
	        case 7: jtext2 = "Camionero";
	        case 9: jtext2 = "Taxista";
	        case 10: jtext2 = "Cosechador";
	        case 12: jtext2 = "Bodyguard";
	        case 14: jtext = "Artesano";
		}
		new Float:health, Float:armor;
		GetPlayerHealth(targetid,health);
		GetPlayerArmour(targetid,armor);
	    format(fMatriz,sizeof(fMatriz)," (Trabajo 1: %s) - (Trabajo 2: %s) - (Vida %.1f) - (Chaleco %.1f)",jtext,jtext2,health, armor);
	    SendClientMessageEx(playerid, -1, fMatriz);
		// Premium VIP
		new dotext[16];
		switch(Info[targetid][pVIP])
		{
			case 1: dotext = "Silver";
			case 2: dotext = "Gold";
			case 3: dotext = "Moderador";
			default: dotext = "No";
		}
		new sprunk = Info[targetid][pSprunk], arrest = Info[targetid][pArrested], housekey = Info[targetid][pPhousekey],
			hirekey	= HireKey[targetid], adic=Info[targetid][pAdiccion], rentc = Info[targetid][pRenting];

		format(fMatriz,sizeof(fMatriz)," (Sprunk %d) - (Arrestos %d) - (VIP %s) - (Casas %d) - (RentBike %d) - (Casa Renta %d) - (Adicción %d)",sprunk, arrest, dotext,housekey, hirekey, rentc,adic);
	    SendClientMessageEx(playerid, -1, fMatriz);

	    new pot = Info[targetid][pPot], crack = Info[targetid][pCrack], crates = Info[targetid][pCrates], mats = Info[targetid][pMats],
			cso = Info[targetid][pCosecha], married[MAX_PLAYER_NAME];

		strmid(married, Info[targetid][pMarriedTo], 0, strlen(Info[targetid][pMarriedTo]), 255);
		format(fMatriz,sizeof(fMatriz)," (Crack %d | Hierba %d | Paquetes %d | Materiales %d) - (Cosecha %dKg) - (Casado(a) con %s)", crack,pot,crates, mats, cso, married);
	    SendClientMessageEx(playerid, -1, fMatriz);

	    new ctime = Info[targetid][pConnectTime], rmt = Info[targetid][pRMutedTotal], jaadm = Info[targetid][pJailAdmin],
		    tjail = Info[targetid][pJailTime], admutes = Info[targetid][pADMuteTotal], warn = Info[targetid][pWarn], xH = Info[targetid][pDobleExp];

		format(fMatriz,sizeof(fMatriz)," (Horas IG %d) - (Report Bloq %d) - (Adm Jails %d | Tiempo %d) - (Warns %d) - (AD Mutes %d) - (Horas 2x %d)", ctime, rmt, jaadm,tjail, warn,admutes, xH);
	    SendClientMessageEx(playerid, -1, fMatriz);

		new totalwealth, wr = Info[targetid][pWRestricted], name[MAX_PLAYER_NAME], coinsvip = Info[targetid][pCoinsVip];
		GetPlayerName(targetid, name, sizeof(name));
		if(Info[targetid][pPhousekey] != INVALID_HOUSE_ID && strcmp(name, HouseInfo[Info[targetid][pPhousekey]][hOwner], true) == 0) totalwealth += HouseInfo[Info[targetid][pPhousekey]][hSafeMoney];
	    totalwealth = account + cash;
		format(fMatriz,sizeof(fMatriz)," (Dinero Total %d$) - (Restricción de Armas %d Horas) - (Coins VIP %d)", totalwealth,wr,coinsvip);
	    SendClientMessageEx(playerid, -1, fMatriz);

		if (Info[playerid][pAdmin] >= 5 && Info[targetid][pVIP] > 0)
		{
			format(fMatriz, sizeof(fMatriz), "VIP Fin: Día: %d | Mes: %d", Info[targetid][pVIPDateD], Info[targetid][pVIPDateM]);
			SendClientMessageEx(playerid, COLOR_GREEN,fMatriz);
		}
		SendClientMessageEx(playerid,COLOR_GENERAL,"____________________________________________________________________________________________________________________");
	}
}


function SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnectedEx(playerid))
	{
	    if(GetPVarInt(playerid, "ArenaMode") == 2)
	    {
			switch(Info[playerid][pPaintTeam])
			{
			    case 1: SetPlayerColor(playerid, PAINTBALL_TEAM_RED);
			    case 2: SetPlayerColor(playerid, PAINTBALL_TEAM_BLUE);
	        }
	        return 1;
	    }
	    if(Info[playerid][pJailed] == 1 || Info[playerid][pJailed] == 4)
	    {
	        SetPlayerColor(playerid,TEAM_APRISON_COLOR);
			return 1;
		}
		else if(Info[playerid][pJailed] == 2 || Info[playerid][pJailed] == 5 || Info[playerid][pJailed] == 6) // Arrestado desde SAPD
		{
		    SetPlayerColor(playerid,COLOR_GENERAL);
			return 1;
		}
		else
		{
	        SetPlayerColor(playerid,TEAM_HIT_COLOR);
		}
	    if(IsACop(playerid))
	    {
			if(OnDuty[playerid] == 1)
			{
	    		if(Team_SAPD(playerid))
	        	{
	        		SetPlayerColor(playerid,TEAM_BLUE_COLOR);
				}
				else if(Team_FBI(playerid))
	        	{
	        		SetPlayerColor(playerid,TEAM_FBI_COLOR);
				}
				else if(Team_NG(playerid))
				{
			    	SetPlayerColor(playerid, COLOR_NG);
				}
				else if(Team_SAMD(playerid))
				{
			    	SetPlayerColor(playerid, TEAM_MED_COLOR);
				}
				else
				{
				    SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
				}
			}
			else
			{
			    SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
			}
		}
		else
		{
		    if((Team_LSTV(playerid)) && OnDuty[playerid] == 1)
	    	{
	    		SetPlayerColor(playerid,TEAM_NEWS_COLOR);
			}
			else if((Team_SAMD(playerid)) && OnDuty[playerid] == 1)
			{
			   	SetPlayerColor(playerid, TEAM_MED_COLOR);
			}
			else if((Info[playerid][pJob] == 9 || Info[playerid][pJob2] == 9 || Info[playerid][pTaxiLicense] == 1) && TaxiOnDuty[playerid] != 0)
			{
				SetPlayerColor(playerid,TEAM_TAXI_COLOR);
	 		}
			else
			{
			    SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
			}
		}
	}
	return 1;
}

public OnGameModeExit()
{
    saveAccounts();
	SaveStuff();
    UpdatePoints();
	SaveDynamicDoors();
	atmSave();
	saveCarSale();
	saveCodes();
	foreach(Player, i) { OnPlayerSavedStats(i); }
	saveFamilies();
	return 1;
}

// AddWarrant Function (playerid,judgeid,crime[])
function AddWarrant(playerid,judgeid,crime[])
{
new month,day,year;
getdate(year,month,day);
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
format(szMessage,sizeof(szMessage),"OrdenesJ/%s.ini",playername);
new File: file = fopen(szMessage, io_write);
if(file)
{
    format(szMessage,sizeof(szMessage),"%s - %s (%d/%d/%d)",crime,GetPlayerNameEx(judgeid),month,day,year);
    fwrite(file, szMessage);
    fclose(file);
}
return 1;
}

// RemoveWarrant Function (playerid)
function RemoveWarrant(playerid)
{
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
format(szMessage,sizeof(szMessage),"OrdenesJ/%s.ini",playername);
if(fexist(szMessage))
{
	fremove(szMessage);
	return 1;
}
else
{
    return 0;
}
}

// OAddWarrant Function (name[],judgeid,crime[])
function OAddWarrant(name[],judgeid,crime[])
{
new month,day,year;
getdate(year,month,day);
format(szMessage,sizeof(szMessage),"OrdenesJ/%s.ini",name);
new File: file = fopen(szMessage, io_write);
if(file)
{
    format(szMessage,sizeof(szMessage),"%s - %s (%d/%d/%d)",crime,GetPlayerNameEx(judgeid),month,day,year);
    fwrite(file, szMessage);
    fclose(file);
}
}

// ORemoveWarrant Function (name[])
function ORemoveWarrant(name[])
{
format(szMessage,sizeof(szMessage),"OrdenesJ/%s.ini",name);
if(fexist(szMessage))
{
    fremove(szMessage);
    return 1;
}
else
{
    return 0;
}
}

// -==================================================================
LoadStuff()
{
new arrCoords[7][64];
new strFromFile2[128];
new File: file = fopen("stuff.ini", io_read);
if (file)
{
	fread(file, strFromFile2);
	splits(strFromFile2, arrCoords, ',');
	Jackpot = strval(arrCoords[0]);
	Tax = strval(arrCoords[1]);
	if(Tax < 0) Tax = 0;
	if(TaxValue < 0) TaxValue = 0;
	TaxValue = strval(arrCoords[2]);
	Blood = strval(arrCoords[3]);
	Fuel = strval(arrCoords[4]);
	txtcost = strval(arrCoords[5]);
	fbank = strval(arrCoords[6]);
	if(fbank < 0) fbank = 0;
	fclose(file);
	print("[script] Stuff Loaded Successfully . . .");
}
else
{
    GameModeExit();
}
return 1;
}

SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d", Jackpot,Tax,TaxValue,Blood,Fuel,txtcost,fbank);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	//print("[script] Stuff Saved Successfully . . .");
	return 1;
}

//------------------------------------------------------------------------------------------------------

SaveDynamicDoors()
{
	new szFileStr[512], File: fHandle = fopen("dynamicdoors.cfg", io_write);
	for(new iIndex; iIndex < MAX_DDOORS; iIndex++)
	{
		format(szFileStr, sizeof(szFileStr), "%s|%d|%d|%d|%d|%d|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%s|%d|%d\r\n",
			DDoorsInfo[iIndex][ddDescription],
			DDoorsInfo[iIndex][ddCustomInterior],
			DDoorsInfo[iIndex][ddExteriorVW],
			DDoorsInfo[iIndex][ddExteriorInt],
			DDoorsInfo[iIndex][ddInteriorVW],
			DDoorsInfo[iIndex][ddInteriorInt],
			DDoorsInfo[iIndex][ddExteriorX],
			DDoorsInfo[iIndex][ddExteriorY],
			DDoorsInfo[iIndex][ddExteriorZ],
			DDoorsInfo[iIndex][ddExteriorA],
			DDoorsInfo[iIndex][ddInteriorX],
			DDoorsInfo[iIndex][ddInteriorY],
			DDoorsInfo[iIndex][ddInteriorZ],
			DDoorsInfo[iIndex][ddInteriorA],
			DDoorsInfo[iIndex][ddCustomExterior],
			DDoorsInfo[iIndex][ddVIP],
  			DDoorsInfo[iIndex][ddFamily],
  			DDoorsInfo[iIndex][ddFaction],
  			DDoorsInfo[iIndex][ddAdmin],
  			DDoorsInfo[iIndex][ddWanted],
  			DDoorsInfo[iIndex][ddVehicleAble],
  			DDoorsInfo[iIndex][ddColor],
  			DDoorsInfo[iIndex][ddPickupModel],
  			DDoorsInfo[iIndex][dPass],
  			DDoorsInfo[iIndex][dLocked],
			DDoorsInfo[iIndex][dMusic]);
		fwrite(fHandle, szFileStr);
	}
	//print("[script] Dynamic Doors Saved Successfully . . .");
	return fclose(fHandle);
}

LoadDynamicDoors()
{
new arrCoords[26][64];
new strFromFile2[256];
new File: file = fopen("dynamicdoors.cfg", io_read);
if (file)
{
	new idx;
	while (idx < sizeof(DDoorsInfo))
	{
		fread(file, strFromFile2);
		splits(strFromFile2, arrCoords, '|');
		strmid(DDoorsInfo[idx][ddDescription], arrCoords[0], 0, strlen(arrCoords[0]), 128);
  		DDoorsInfo[idx][ddCustomInterior] = strval(arrCoords[1]);
  		DDoorsInfo[idx][ddExteriorVW] = strval(arrCoords[2]);
  		DDoorsInfo[idx][ddExteriorInt] = strval(arrCoords[3]);
  		DDoorsInfo[idx][ddInteriorVW] = strval(arrCoords[4]);
  		DDoorsInfo[idx][ddInteriorInt] = strval(arrCoords[5]);
  		DDoorsInfo[idx][ddExteriorX] = floatstr(arrCoords[6]);
  		DDoorsInfo[idx][ddExteriorY] = floatstr(arrCoords[7]);
  		DDoorsInfo[idx][ddExteriorZ] = floatstr(arrCoords[8]);
  		DDoorsInfo[idx][ddExteriorA] = floatstr(arrCoords[9]);
  		DDoorsInfo[idx][ddInteriorX] = floatstr(arrCoords[10]);
  		DDoorsInfo[idx][ddInteriorY] = floatstr(arrCoords[11]);
  		DDoorsInfo[idx][ddInteriorZ] = floatstr(arrCoords[12]);
  		DDoorsInfo[idx][ddInteriorA] = floatstr(arrCoords[13]);
  		DDoorsInfo[idx][ddCustomExterior] = strval(arrCoords[14]);
  		DDoorsInfo[idx][ddVIP] = strval(arrCoords[15]);
  		DDoorsInfo[idx][ddFamily] = strval(arrCoords[16]);
  		DDoorsInfo[idx][ddFaction] = strval(arrCoords[17]);
  		DDoorsInfo[idx][ddAdmin] = strval(arrCoords[18]);
  		DDoorsInfo[idx][ddWanted] = strval(arrCoords[19]);
  		DDoorsInfo[idx][ddVehicleAble] = strval(arrCoords[20]);
  		DDoorsInfo[idx][ddColor] = strval(arrCoords[21]);
  		DDoorsInfo[idx][ddPickupModel] = strval(arrCoords[22]);
  		strmid(DDoorsInfo[idx][dPass], arrCoords[23], 0, strlen(arrCoords[23]), 24);
  		DDoorsInfo[idx][dLocked] = strval(arrCoords[24]);
  		DDoorsInfo[idx][dMusic] = strval(arrCoords[25]);
  		if(!isnull(DDoorsInfo[idx][ddDescription]))
  		{
  		    CreateDynamicDoor(idx);
		}
		idx++;
	}
	print("[script] DynamicDoors Loaded Successfully . . .");
	fclose(file);
}
return 1;
}
// .Cfg
loadATM()
{
if(!fexist("atm.cfg")) return 1;
new szFileStr[1024], File: iFileHandle = fopen("atm.cfg", io_read),iIndex;
while(iIndex < sizeof(atmVariables) && fread(iFileHandle, szFileStr))
{
	sscanf(szFileStr, "p<|>ffffd",
	    atmVariables[iIndex][fATMPos][0],atmVariables[iIndex][fATMPos][1],atmVariables[iIndex][fATMPos][2],
	    atmVariables[iIndex][fATMPosRot],atmVariables[iIndex][atmMoney]);
	if(atmVariables[iIndex][fATMPos][0] > 0.0)
	{
		atmVariables[iIndex][rObjectId] = CreateDynamicObject(2942,atmVariables[iIndex][fATMPos][0],atmVariables[iIndex][fATMPos][1],atmVariables[iIndex][fATMPos][2]-0.4,0,0,atmVariables[iIndex][fATMPosRot]);
    	new text[68];
    	format(text, sizeof(text), "%d\nIngresa tu tarjeta usando /atm.", iIndex);
		atmVariables[iIndex][rTextLabel] = CreateDynamic3DTextLabel(text,COLOR_YELLOW,atmVariables[iIndex][fATMPos][0],atmVariables[iIndex][fATMPos][1],atmVariables[iIndex][fATMPos][2],8.0);
	}
	++iIndex;
}
print("[script] Atm's Loaded Successfully . . .");
return fclose(iFileHandle);
}
atmSave()
{
	new szFileStr[512], File: fHandle = fopen("atm.cfg", io_write);
	for(new iIndex; iIndex < MAX_ATMS; iIndex++)
	{
	    format(szFileStr, sizeof(szFileStr), "%f|%f|%f|%f|%d\r\n",
	    atmVariables[iIndex][fATMPos][0],
	    atmVariables[iIndex][fATMPos][1],
	    atmVariables[iIndex][fATMPos][2],
	    atmVariables[iIndex][fATMPosRot],
		atmVariables[iIndex][atmMoney]);
	    fwrite(fHandle, szFileStr);
	}
	//print("[script] ATM Saved Successfully . . .");
	return fclose(fHandle);
}
// .Cfg
saveCodes()
{
	new szFileStr[512],File: fHandle = fopen("codigos.cfg", io_write);
	for(new iIndex; iIndex < MAX_CODESVIP; iIndex++)
	{
 		format(szFileStr, sizeof(szFileStr), "%d|%d\r\n",varCodesVIP[iIndex][CodeNro],varCodesVIP[iIndex][CodeCoins]);
 	   	fwrite(fHandle, szFileStr);
	}
	//print("[script] Codes VIP Saved Successfully . . .");
	return fclose(fHandle);
}

loadCodes()
{
	if(!fexist("codigos.cfg")) return 1;
	new szFileStr[512],File: iFileHandle = fopen("codigos.cfg", io_read),iIndex;
	while(iIndex < sizeof(varCodesVIP) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>ii",varCodesVIP[iIndex][CodeNro],varCodesVIP[iIndex][CodeCoins]);
		++iIndex;
	}
	print("[script] Codes VIP Loaded Successfully . . .");
	return fclose(iFileHandle);
}

loadCarSale()
{
	if(!fexist("carsale.cfg")) return 1;
	new text_info[68],szFileStr[1024],File: iFileHandle = fopen("carsale.cfg", io_read),iIndex;
	while(iIndex < sizeof(varCarSale) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>ffffffffii",
		    varCarSale[iIndex][CSVehSpawn][0],
			varCarSale[iIndex][CSVehSpawn][1],
			varCarSale[iIndex][CSVehSpawn][2],
			varCarSale[iIndex][CSVehSpawn][3],
		    varCarSale[iIndex][VehSpawn][0],
			varCarSale[iIndex][VehSpawn][1],
			varCarSale[iIndex][VehSpawn][2],
			varCarSale[iIndex][VehSpawn][3],
			varCarSale[iIndex][CSVehCost],
			varCarSale[iIndex][CSVehModel]);
		if(varCarSale[iIndex][CSVehModel] > 410)
		{
	    	new carcreated = CreateVehicle(varCarSale[iIndex][CSVehModel], varCarSale[iIndex][CSVehSpawn][0], varCarSale[iIndex][CSVehSpawn][1], varCarSale[iIndex][CSVehSpawn][2], varCarSale[iIndex][CSVehSpawn][3], 0, 0, 6);
	    	format(text_info, sizeof(text_info), "(%d) %s en Venta | Precio: %d", iIndex,GetVehicleName(carcreated), varCarSale[iIndex][CSVehCost]);
			varCarSale[iIndex][CSVehicleLabel] = CreateDynamic3DTextLabel(text_info,COLOR_GENERAL,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
			varCarSale[iIndex][CSVehId] = carcreated;
		}
		++iIndex;
	}
	print("[script] Sale Cars Loaded Successfully . . .");
	return fclose(iFileHandle);
}
saveCarSale()
{
	new szFileStr[512],File: fHandle = fopen("carsale.cfg", io_write);

	for(new iIndex; iIndex < MAX_CARSALE; iIndex++)
	{
	    format(szFileStr, sizeof(szFileStr), "%f|%f|%f|%f|%f|%f|%f|%f|%d|%d\r\n",
		    varCarSale[iIndex][CSVehSpawn][0],
			varCarSale[iIndex][CSVehSpawn][1],
			varCarSale[iIndex][CSVehSpawn][2],
			varCarSale[iIndex][CSVehSpawn][3],
		    varCarSale[iIndex][VehSpawn][0],
			varCarSale[iIndex][VehSpawn][1],
			varCarSale[iIndex][VehSpawn][2],
			varCarSale[iIndex][VehSpawn][3],
			varCarSale[iIndex][CSVehCost],
			varCarSale[iIndex][CSVehModel]);
	    fwrite(fHandle, szFileStr);
	}
	//print("[script] Car Sale Saved Successfully . . .");
	return fclose(fHandle);
}
loadSpeedCam()
{
	if(!fexist("vCameras.cfg")) return 1;
	new text_info[68],szFileStr[1024],File: iFileHandle = fopen("vCameras.cfg", io_read),iIndex;
	while(iIndex < sizeof(vCameraInfo) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>ffffdddd",
		    vCameraInfo[iIndex][vCameraPos][0],
			vCameraInfo[iIndex][vCameraPos][1],
			vCameraInfo[iIndex][vCameraPos][2],
			vCameraInfo[iIndex][vCameraRot],
			vCameraInfo[iIndex][vCameraStatus],
			vCameraInfo[iIndex][vCameraRange],
			vCameraInfo[iIndex][vCameraLimit],
			vCameraInfo[iIndex][vCameraTicket]);
		if(vCameraInfo[iIndex][vCameraLimit] != 0)
		{
		    vCameraInfo[iIndex][vCameraObject] = CreateDynamicObject(18880, vCameraInfo[iIndex][vCameraPos][0],vCameraInfo[iIndex][vCameraPos][1],vCameraInfo[iIndex][vCameraPos][2],0,0,vCameraInfo[iIndex][vCameraRot]);
			switch(vCameraInfo[iIndex][vCameraStatus])
			{
	    		case 0: format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\nLímite: "COL_GENERAL"MPH %d", iIndex,vCameraInfo[iIndex][vCameraLimit]);
				case 1: format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\n"COL_RED"(DESACTIVADA)", iIndex);
			}
	        vCameraInfo[iIndex][vCameraLabel] = CreateDynamic3DTextLabel(text_info,-1,vCameraInfo[iIndex][vCameraPos][0],vCameraInfo[iIndex][vCameraPos][1],vCameraInfo[iIndex][vCameraPos][2]+5,10.0);
		}
		++iIndex;
	}
	print("[script] Velocity Cameras Loaded Successfully . . .");
	return fclose(iFileHandle);
}
saveSpeedCam()
{
	new szFileStr[512],File: fHandle = fopen("vCameras.cfg", io_write);
	for(new iIndex; iIndex < MAX_vCAMERAS; iIndex++)
	{
	    format(szFileStr, sizeof(szFileStr), "%f|%f|%f|%f|%d|%d|%d|%d\r\n",
		    vCameraInfo[iIndex][vCameraPos][0],
			vCameraInfo[iIndex][vCameraPos][1],
			vCameraInfo[iIndex][vCameraPos][2],
			vCameraInfo[iIndex][vCameraRot],
			vCameraInfo[iIndex][vCameraStatus],
			vCameraInfo[iIndex][vCameraRange],
			vCameraInfo[iIndex][vCameraLimit],
			vCameraInfo[iIndex][vCameraTicket]);
	    fwrite(fHandle, szFileStr);
	}
	//print("[script] Speed Cams Saved Successfully . . .");
	return fclose(fHandle);
}
LoadServerStats()
{
#define SERVER_STATS "serverstat.ini"
if(!fexist(SERVER_STATS)) return 1;
new	File: i_FileHandle = fopen("serverstat.ini", io_read), sz_FileStr[256];
print("[script] Server Stats Loaded Successfully . . .");
fread(i_FileHandle, sz_FileStr);
sscanf(sz_FileStr, "p<,>iiiiiiiiiii", TotalLogin, TotalConnect, TotalAutoBan, TotalRegister, MaxPlayersConnected, MPDay, MPMonth, MPYear, MPHour, MPMinute, TotalUptime);
return fclose(i_FileHandle);
}

SaveServerStats()
{
new sz_FileStr[256], File: i_FileHandle = fopen(SERVER_STATS, io_write);
format(sz_FileStr, sizeof(sz_FileStr), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", TotalLogin, TotalConnect, TotalAutoBan, TotalRegister,MaxPlayersConnected,MPDay,MPMonth,MPYear,MPHour,MPMinute,TotalUptime);
fwrite(i_FileHandle, sz_FileStr);
#undef SERVER_STATS
//print("[script] Server Stats Saved Successfully . . .");
return fclose(i_FileHandle);
}

LoadMOTDs()
{
	new arrCoords[6][128];
	new strFromFile2[512];
	new File: file = fopen("motd.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		splits(strFromFile2, arrCoords, '|');
		strmid(GlobalMOTD, arrCoords[0], 0, strlen(arrCoords[0]), 255);
		strmid(AdminMOTD, arrCoords[1], 0, strlen(arrCoords[1]), 255);
		strmid(CAMOTD, arrCoords[2], 0, strlen(arrCoords[2]), 255);
		strmid(FACMOTD, arrCoords[3], 0, strlen(arrCoords[3]), 255);
		strmid(FAMMOTD, arrCoords[4], 0, strlen(arrCoords[4]), 255);
		strmid(VIPMOTD, arrCoords[5], 0, strlen(arrCoords[5]), 255);
		fclose(file);
		print("[script] MOTD´s Loaded Successfully . . .");
	}
	else
	{
		fcreate("motd.ini");
		format(GlobalMOTD, sizeof(GlobalMOTD), "Bievenido a Casa.");
		format(AdminMOTD, sizeof(AdminMOTD), "Admin MOTD: No hay ningún mensaje.");
		format(CAMOTD, sizeof(CAMOTD), "Mod MOTD: No hay ningún mensaje.");
		format(FACMOTD, sizeof(FACMOTD), "No hay ningún mensaje.");
		format(FAMMOTD, sizeof(FAMMOTD), "No hay ningún mensaje.");
		format(VIPMOTD, sizeof(VIPMOTD), "Recuerda siempre visitar el I-Store de ZCRP.");
		SaveMOTDs();
	}
	return 1;
}

SaveMOTDs()
{
	new coordsstring[512];
	format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%s|%s|%s", GlobalMOTD,AdminMOTD,CAMOTD,FACMOTD,FAMMOTD,VIPMOTD);
	new File: file2 = fopen("motd.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	//print("[script] MOTDs Saved Successfully . . .");
	return 1;
}

saveBusiness(iIndex)
{
    new bfile[64];
	format(bfile, 64, BUSINESS_FILE, iIndex);
	if(!INI_Exist(bfile)) // If not existing
	{
	    new INI:File = INI_Open(bfile);
	    INI_SetTag(File,"HouseData");
        INI_WriteInt(File,"Tipo", businessVariables[iIndex][bType]);
        INI_WriteString(File,"Nombre", businessVariables[iIndex][bName]);
        INI_WriteString(File,"Dueño", businessVariables[iIndex][bOwner]);
        INI_WriteFloat(File,"ExteriorX", businessVariables[iIndex][bExteriorPos][0]);
        INI_WriteFloat(File,"ExteriorY", businessVariables[iIndex][bExteriorPos][1]);
        INI_WriteFloat(File,"ExteriorZ", businessVariables[iIndex][bExteriorPos][2]);
        INI_WriteFloat(File,"InteriorX", businessVariables[iIndex][bInteriorPos][0]);
        INI_WriteFloat(File,"InteriorY", businessVariables[iIndex][bInteriorPos][1]);
        INI_WriteFloat(File,"InteriorZ", businessVariables[iIndex][bInteriorPos][2]);
        INI_WriteInt(File,"Interior", businessVariables[iIndex][bInterior]);
        INI_WriteFloat(File,"MiscX", businessVariables[iIndex][bMiscPos][0]);
        INI_WriteFloat(File,"MiscY", businessVariables[iIndex][bMiscPos][1]);
        INI_WriteFloat(File,"MiscZ", businessVariables[iIndex][bMiscPos][2]);
        INI_WriteInt(File,"Vault", businessVariables[iIndex][bVault]);
		INI_WriteInt(File,"Precio", businessVariables[iIndex][bPrice]);
		INI_WriteInt(File,"Stock", businessVariables[iIndex][bStock]);
		INI_WriteInt(File,"Locked", businessVariables[iIndex][bLocked]);
        INI_Close(File);
	}
	return 1;
}
loadBusiness()
{
    new bfile[64];
	for(new iIndex = 0; iIndex < sizeof(businessVariables); iIndex++)//Creates a loop, that goes through all of the businesses.
	{
		format(bfile, 64, BUSINESS_FILE, iIndex);
		INI_ParseFile(bfile, "loadbusiness_data", .bExtra = true, .extra = iIndex );//This is very hard to explain, but it basically loads the info from the file(More in Y_Less y_ini tutorial.)
		switch(businessVariables[iIndex][bLocked]){
			case 1:{
       			if(strlen(businessVariables[iIndex][bOwner]) == 0){format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n(Cerrado)", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bPrice]);}
				else{format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n(Cerrado)", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bOwner]);}
			}
			case 0:{
			    if(strlen(businessVariables[iIndex][bOwner]) == 0){format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bPrice]);}
				else{format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[iIndex][bName], iIndex, businessVariables[iIndex][bOwner]);}
			}
		}
		businessVariables[iIndex][bLabelID] = CreateDynamic3DTextLabel(szMessage, -1, businessVariables[iIndex][bExteriorPos][0], businessVariables[iIndex][bExteriorPos][1], businessVariables[iIndex][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		businessVariables[iIndex][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[iIndex][bExteriorPos][0], businessVariables[iIndex][bExteriorPos][1], businessVariables[iIndex][bExteriorPos][2], 0, 0, -1, 250);
	}
	print("[script] Houses Loaded Successfully . . .");
	return 1;
}
function loadbusiness_data(id, name[], value[])
{
    INI_Int("Tipo", businessVariables[id][bType]);
    INI_String("Nombre", businessVariables[id][bName],MAX_PLAYER_NAME);
    INI_String("Dueño", businessVariables[id][bOwner],48);
    INI_Float("ExteriorX", businessVariables[id][bExteriorPos][0]);
    INI_Float("ExteriorY", businessVariables[id][bExteriorPos][1]);
    INI_Float("ExteriorZ", businessVariables[id][bExteriorPos][2]);
    INI_Float("InteriorX", businessVariables[id][bInteriorPos][0]);
    INI_Float("InteriorY", businessVariables[id][bInteriorPos][1]);
    INI_Float("InteriorZ", businessVariables[id][bInteriorPos][2]);
    INI_Int("Interior", businessVariables[id][bInterior]);
    INI_Float("MiscX", businessVariables[id][bMiscPos][0]);
    INI_Float("MiscY", businessVariables[id][bMiscPos][1]);
    INI_Float("MiscZ", businessVariables[id][bMiscPos][2]);
    INI_Int("Vault", businessVariables[id][bVault]);
    INI_Int("Precio", businessVariables[id][bPrice]);
    INI_Int("Stock", businessVariables[id][bStock]);
    INI_Int("Locked", businessVariables[id][bLocked]);
	return 1;
}
saveHouse(hID)
{
    new housefile[64];
	format(housefile, 64, HOUSE_FILE, hID);
	if(!INI_Exist(housefile)) // If not existing
	{
	    new INI:File = INI_Open(housefile);
	    INI_SetTag(File,"HouseData");
        INI_WriteInt(File,"Venta", HouseInfo[hID][hOwned]);
        INI_WriteInt(File,"Nivel", HouseInfo[hID][hLevel]);
        INI_WriteInt(File,"Interior", HouseInfo[hID][hHInteriorWorld]);
        INI_WriteInt(File,"CInterior", HouseInfo[hID][hCustomInterior]);
        INI_WriteInt(File,"CExterior", HouseInfo[hID][hCustomExterior]);
        INI_WriteString(File,"Owner", HouseInfo[hID][hOwner]);
        INI_WriteFloat(File,"ExteriorX", HouseInfo[hID][hExteriorX]);
        INI_WriteFloat(File,"ExteriorY", HouseInfo[hID][hExteriorY]);
        INI_WriteFloat(File,"ExteriorZ", HouseInfo[hID][hExteriorZ]);
        INI_WriteFloat(File,"ExteriorR", HouseInfo[hID][hExteriorR]);
        INI_WriteFloat(File,"ExteriorA", HouseInfo[hID][hExteriorA]);
        INI_WriteFloat(File,"InteriorX", HouseInfo[hID][hInteriorX]);
        INI_WriteFloat(File,"InteriorY", HouseInfo[hID][hInteriorY]);
        INI_WriteFloat(File,"InteriorZ", HouseInfo[hID][hInteriorZ]);
        INI_WriteFloat(File,"InteriorR", HouseInfo[hID][hInteriorR]);
        INI_WriteFloat(File,"InteriorA", HouseInfo[hID][hInteriorA]);
        INI_WriteInt(File,"Seguro", HouseInfo[hID][hLock]);
        INI_WriteInt(File,"Renta", HouseInfo[hID][hRentable]);
        INI_WriteInt(File,"RentaPrecio", HouseInfo[hID][hRentFee]);
        INI_WriteInt(File,"Precio", HouseInfo[hID][hValue]);
        INI_WriteInt(File,"SafeMoney", HouseInfo[hID][hSafeMoney]);
        INI_WriteInt(File,"Pot", HouseInfo[hID][hPot]);
        INI_WriteInt(File,"Crack", HouseInfo[hID][hCrack]);
        INI_WriteInt(File,"Materials", HouseInfo[hID][hMaterials]);
        INI_WriteInt(File,"Wep1", HouseInfo[hID][hWeapons][0]);
        INI_WriteInt(File,"Wep2", HouseInfo[hID][hWeapons][1]);
        INI_WriteInt(File,"Wep3", HouseInfo[hID][hWeapons][2]);
        INI_WriteInt(File,"Wep4", HouseInfo[hID][hWeapons][3]);
        INI_WriteInt(File,"Wep5", HouseInfo[hID][hWeapons][4]);
        INI_Close(File);
	}
	return 1;
}
LoadHouses()
{
    new housefile[64], szFileStr[128];
	for(new hID = 0; hID < sizeof(HouseInfo); hID++)//Creates a loop, that goes through all of the businesses.
	{
		format(housefile, 64, HOUSE_FILE, hID);
		INI_ParseFile(housefile, "loadhouse_data", .bExtra = true, .extra = hID );//This is very hard to explain, but it basically loads the info from the file(More in Y_Less y_ini tutorial.)
		if(HouseInfo[hID][hExteriorX] > 0.0)
		{
			if(HouseInfo[hID][hOwned])
			{
				if(HouseInfo[hID][hRentable] == 0) format(szFileStr, sizeof(szFileStr), ""COL_HOUSET"Dueño\n%s\nNivel: %d\nID: %d",HouseInfo[hID][hOwner],HouseInfo[hID][hLevel],hID);
				else format(szFileStr, sizeof(szFileStr), ""COL_HOUSET"Dueño\n%s\nRenta: $%d\nNivel: %d\nID: %d\n"COL_WHITE"Escribe /rentar para rentar aquí",HouseInfo[hID][hOwner],HouseInfo[hID][hRentFee],HouseInfo[hID][hLevel],hID);
			}
			else format(szFileStr, sizeof(szFileStr), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[hID][hValue],HouseInfo[hID][hLevel],hID);
			HouseInfo[hID][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[hID][hExteriorX], HouseInfo[hID][hExteriorY], HouseInfo[hID][hExteriorZ]);
			HouseInfo[hID][hTextID] = CreateDynamic3DTextLabel(szFileStr, -1, HouseInfo[hID][hExteriorX], HouseInfo[hID][hExteriorY], HouseInfo[hID][hExteriorZ]+0.5,10.0);
            for(new i = 0; i < MAX_FURNITURE; i ++)
			{
				if(HouseInfo[hID][FPosX][i] != 0.0) HouseInfo[hID][FurnitureObj][i] = CreateDynamicObject(HouseInfo[hID][FModel][i], HouseInfo[hID][FPosX][i], HouseInfo[hID][FPosY][i], HouseInfo[hID][FPosZ][i], HouseInfo[hID][FRotX][i], HouseInfo[hID][FRotY][i], HouseInfo[hID][FRotZ][i], hID+6000, HouseInfo[hID][hHInteriorWorld], -1, 50.0);
			}
		}
	}
	print("[script] Houses Loaded Successfully . . .");
	return 1;
}
function loadhouse_data(hID, name[], value[])
{
    INI_Int("Venta", HouseInfo[hID][hOwned]);
    INI_Int("Nivel", HouseInfo[hID][hLevel]);
    INI_Int("Interior", HouseInfo[hID][hHInteriorWorld]);
    INI_Int("CInterior", HouseInfo[hID][hCustomInterior]);
    INI_Int("CExterior", HouseInfo[hID][hCustomExterior]);
    INI_String("Owner", HouseInfo[hID][hOwner],MAX_PLAYER_NAME);
    INI_Float("ExteriorX", HouseInfo[hID][hExteriorX]);
    INI_Float("ExteriorY", HouseInfo[hID][hExteriorY]);
    INI_Float("ExteriorZ", HouseInfo[hID][hExteriorZ]);
    INI_Float("ExteriorR", HouseInfo[hID][hExteriorR]);
    INI_Float("ExteriorA", HouseInfo[hID][hExteriorA]);
    INI_Float("InteriorX", HouseInfo[hID][hInteriorX]);
    INI_Float("InteriorY", HouseInfo[hID][hInteriorY]);
    INI_Float("InteriorZ", HouseInfo[hID][hInteriorZ]);
    INI_Float("InteriorR", HouseInfo[hID][hInteriorR]);
    INI_Float("InteriorA", HouseInfo[hID][hInteriorA]);
    INI_Int("Seguro", HouseInfo[hID][hLock]);
    INI_Int("Renta", HouseInfo[hID][hRentable]);
    INI_Int("RentaPrecio", HouseInfo[hID][hRentFee]);
    INI_Int("Precio", HouseInfo[hID][hValue]);
    INI_Int("SafeMoney", HouseInfo[hID][hSafeMoney]);
    INI_Int("Pot", HouseInfo[hID][hPot]);
    INI_Int("Crack", HouseInfo[hID][hCrack]);
    INI_Int("Materials", HouseInfo[hID][hMaterials]);
    INI_Int("Wep1", HouseInfo[hID][hWeapons][0]);
    INI_Int("Wep2", HouseInfo[hID][hWeapons][1]);
    INI_Int("Wep3", HouseInfo[hID][hWeapons][2]);
    INI_Int("Wep4", HouseInfo[hID][hWeapons][3]);
    INI_Int("Wep5", HouseInfo[hID][hWeapons][4]);
    INI_Int("FCount", HouseInfo[hID][FCount]);
    new key[32];
	for(new i = 0; i < MAX_FURNITURE; i ++)
	{
		format(key, 32, "FModel%d", i); INI_Int(key, HouseInfo[hID][FModel][i]);
		format(key, 32, "FPosX%d", i);  INI_Float(key, HouseInfo[hID][FPosX] [i]);
		format(key, 32, "FPosY%d", i);  INI_Float(key, HouseInfo[hID][FPosY] [i]);
		format(key, 32, "FPosZ%d", i);  INI_Float(key, HouseInfo[hID][FPosZ] [i]);
		format(key, 32, "FRotX%d", i);  INI_Float(key, HouseInfo[hID][FRotX] [i]);
		format(key, 32, "FRotY%d", i);  INI_Float(key, HouseInfo[hID][FRotY] [i]);
		format(key, 32, "FRotZ%d", i);  INI_Float(key, HouseInfo[hID][FRotZ] [i]);
	}
	return 1;
}
saveFamilies()
{
	new szFileStr[1024],File: fHandle = fopen("families.cfg", io_write);
	for(new idx; idx < MAX_FAMILY; idx++)
	{
		format(szFileStr, sizeof(szFileStr), "%d|%s|%s|%s|%d|%d|%f|%f|%f|%d|%d|%d|%s|%s|%s|%s|%s|%s|%d|%d|%d|%d|%d|%d|%d\n",
			fINFO[idx][FamilyTaken],
			fINFO[idx][FamilyName],
			fINFO[idx][FamilyMOTD],
			fINFO[idx][FamilyLeader],
			fINFO[idx][FamilyCash],
			fINFO[idx][FamilyUSafe],
			fINFO[idx][FamilySafe][0],
			fINFO[idx][FamilySafe][1],
			fINFO[idx][FamilySafe][2],
			fINFO[idx][FamilyPot],
			fINFO[idx][FamilyCrack],
			fINFO[idx][FamilyMats],
			fINFO[idx][FamilyRank1],
			fINFO[idx][FamilyRank2],
			fINFO[idx][FamilyRank3],
			fINFO[idx][FamilyRank4],
			fINFO[idx][FamilyRank5],
			fINFO[idx][FamilyRank6],
			fINFO[idx][FamilyMembers],
			fINFO[idx][FamilyMaxSkins],
			fINFO[idx][FamilySkins][0],
			fINFO[idx][FamilySkins][1],
			fINFO[idx][FamilySkins][2],
			fINFO[idx][FamilySkins][3],
			fINFO[idx][FamilyColor]);
		fwrite(fHandle, szFileStr);
	}
	//print("[script] Families Saved Successfully . . .");
	return fclose(fHandle);
}
LoadFamilies()
{
	if(!fexist("families.cfg")) return 1;
	new szFileStr[512],iIndex,File: iFileHandle = fopen("families.cfg", io_read);
	while (iIndex < sizeof(fINFO) && fread(iFileHandle, szFileStr)) {

		sscanf(szFileStr, "p<|>is[42]s[65]s[24]iifffiiis[20]s[20]s[20]s[20]s[20]s[20]iiiiiii",
			fINFO[iIndex][FamilyTaken],
			fINFO[iIndex][FamilyName],
			fINFO[iIndex][FamilyMOTD],
			fINFO[iIndex][FamilyLeader],
			fINFO[iIndex][FamilyCash],
			fINFO[iIndex][FamilyUSafe],
			fINFO[iIndex][FamilySafe][0],
			fINFO[iIndex][FamilySafe][1],
			fINFO[iIndex][FamilySafe][2],
			fINFO[iIndex][FamilyPot],
			fINFO[iIndex][FamilyCrack],
			fINFO[iIndex][FamilyMats],
			fINFO[iIndex][FamilyRank1],
			fINFO[iIndex][FamilyRank2],
			fINFO[iIndex][FamilyRank3],
			fINFO[iIndex][FamilyRank4],
			fINFO[iIndex][FamilyRank5],
			fINFO[iIndex][FamilyRank6],
			fINFO[iIndex][FamilyMembers],
			fINFO[iIndex][FamilyMaxSkins],
			fINFO[iIndex][FamilySkins][0],
			fINFO[iIndex][FamilySkins][1],
			fINFO[iIndex][FamilySkins][2],
			fINFO[iIndex][FamilySkins][3],
			fINFO[iIndex][FamilyColor]
		);
		if(fINFO[iIndex][FamilyUSafe] == 1)
		{
			fINFO[iIndex][FamilyPickup] = CreateDynamicPickup(1239, 23, fINFO[iIndex][FamilySafe][0], fINFO[iIndex][FamilySafe][1], fINFO[iIndex][FamilySafe][2]);
		    new text[52];
		    format(text, sizeof(text), "%s\n/fopciones",fINFO[iIndex][FamilyName]);
			fINFO[iIndex][FamilyPickup3D] = CreateDynamic3DTextLabel(text, COLOR_GENERAL, fINFO[iIndex][FamilySafe][0], fINFO[iIndex][FamilySafe][1], fINFO[iIndex][FamilySafe][2], 6.0);
		}
		++iIndex;
	}
	print("[script] Families Loaded Successfully . . .");
	return fclose(iFileHandle);
}
UpdatePoints()
{
	new idx;
	new File: file2;
	while (idx < sizeof(Points))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f|%f|%f|%d|%d|%s|%s|%s|%d\n",
		Points[idx][Pointx],
		Points[idx][Pointy],
		Points[idx][Pointz],
		Points[idx][Type],
		Points[idx][Vulnerable],
		Points[idx][Owner],
		Points[idx][CapperName],
		Points[idx][Name],
		Points[idx][MatPoint]);
		if(idx == 0)
		{
			file2 = fopen("points.cfg", io_write);
		}
		else
		{
			file2 = fopen("points.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	//print("[script] Points Saved Successfully . . .");
	return 1;
}

LoadPoints()
{
	new arrCoords[9][64];
	new strFromFile2[256];
	new File: file = fopen("points.cfg", io_read);
	if (file){
		new idx;
		while (idx < sizeof(Points)){
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			Points[idx][Pointx] = floatstr(arrCoords[0]);
			Points[idx][Pointy] = floatstr(arrCoords[1]);
			Points[idx][Pointz] = floatstr(arrCoords[2]);
			Points[idx][Type] = strval(arrCoords[3]);
			Points[idx][Vulnerable] = strval(arrCoords[4]);
			strmid(Points[idx][Owner], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(Points[idx][CapperName], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(Points[idx][Name], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			Points[idx][MatPoint] = strval(arrCoords[8]);
			//printf("%s Type:%d Owner:%s",Points[idx][Name],Points[idx][Type],Points[idx][Owner]);
			Points[idx][CaptureTimerEx2] = -1;
			Points[idx][ClaimerId] = INVALID_PLAYER_ID;
			Points[idx][PointPickupID] = CreateDynamicPickup( 1239, 23, Points[idx][Pointx], Points[idx][Pointy], Points[idx][Pointz]);
			idx++;
		}
		print("[script] Points Loaded Successfully . . .");
		fclose(file);
	}
	return 1;
}

function RemoveFlash(playerid)
{
	TextDrawHideForPlayer(playerid,flash);
	SetPVarInt(playerid,"PlayerHasBeenFlashed",2);
}

AntiDeAMX()
{
new a[][] = {
    "Unarmed (Fist)",
    "Brass K"
};
#pragma unused a
}
//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
AntiDeAMX();
// Default Rates (-200 Players)
SendRconCommand("onfoot_rate 40");
SendRconCommand("incar_rate 40");
SendRconCommand("weapon_rate 40");
SendRconCommand("stream_distance 300.0");
SendRconCommand("stream_rate 1000");
Streamer_TickRate(50);
/* Init gamemode */
/*scriptTimers[0] = SetTimer("severTimers", 1000, 1);
scriptTimers[1] = SetTimer("severTimers2", 1000, 1);
scriptTimers[2] = SetTimer("saveAccounts", 300000, 1);
scriptTimers[3] = SetTimer("VehicleUpdate", 10000, 1);
scriptTimers[4] = SetTimer("ServerMicrobeat", 250, 1);
scriptTimers[5] = SetTimer("SyncUp", 60000, 1);
scriptTimers[6] = SetTimer("Mensajes", 600000, 1);
scriptTimers[7] = SetTimer("EMSUpdate", 5000, 1);
scriptTimers[9] = SetTimer("SpecUpdate", 5000, 1);
scriptTimers[10] = SetTimer("Anticheat", 1000, 1);*/
SendRconCommand("mapname San Andreas");
SendRconCommand("weburl N/A");
SendRconCommand("gamemodetext Role Play Español - RPG - RP");
new servergmtextstr[64]; // DO NOT REMOVE THIS
format(servergmtextstr, 64, "hostname San Antón Roleplay v%s [Español]", SERVER_GM_TEXT); // DO NOT REMOVE THIS
SendRconCommand(servergmtextstr); // DO NOT REMOVE THIS
//// DO NOT REMOVE THIS
new string[42];
ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
EnableStuntBonusForAll(0);
EnableTirePopping(1);
EnableZoneNames(1);
AllowAdminTeleport(0);
DisableInteriorEnterExits();

// Load Scriptfiles
LoadHouses();
LoadStuff();
LoadServerStats();
LoadFamilies();
LoadPoints();
LoadDynamicDoors();
loadCarSale();
LoadMOTDs();
loadSpeedCam();
loadATM();
loadCodes();
loadBusiness();
skinlist = LoadModelSelectionMenu("skins.txt");
ToyList = LoadModelSelectionMenu("toys.txt");
ToyListGold = LoadModelSelectionMenu("toysgold.txt");
DormitorioFur = LoadModelSelectionMenu("dormitorio.txt");
ComedorFur = LoadModelSelectionMenu("ComedorFur.txt");
BanoFur = LoadModelSelectionMenu("BanoFur.txt");
LobbyFur = LoadModelSelectionMenu("LobbyFur.txt");
CocinaFur = LoadModelSelectionMenu("CocinaFur.txt");
ParedesFur = LoadModelSelectionMenu("ParedesFur.txt");
ElectroFur = LoadModelSelectionMenu("ElectroFur.txt");
OtrosFur = LoadModelSelectionMenu("OtrosFur.txt");


SetNameTagDrawDistance(60.0);
gettime(ghour, gminute, gsecond);
FixHour(ghour);
ghour = shifthour;
if(!realtime)
{
	SetWorldTime(wtime);
	gTime = wtime;
}
AllowInteriorWeapons(1);
UsePlayerPedAnims(); // CJ Anims
//Check Cars
for(new i = 0; i < sizeof(CreatedCars); i++){CreatedCars[i] = INVALID_VEHICLE_ID;}
for(new v = 0; v < MAX_VEHICLES; v++){VehicleFuel[v] = 500;}
// Player Class's
for(new i = 0; i <= sizeof(Peds)-1; i++)
{
	AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
}
// ---------------------        TextDrawX        --------------- //
flash =
TextDrawCreate			(-20.000000,2.000000,"|");
TextDrawUseBox			(flash,1);
TextDrawBoxColor		(flash,0xffffff66);
TextDrawTextSize		(flash,660.000000,22.000000);
TextDrawAlignment		(flash,0);
TextDrawBackgroundColor	(flash,0x000000ff);
TextDrawFont			(flash,3);
TextDrawLetterSize		(flash,1.000000,52.200000);
TextDrawColor			(flash,0xffffffff);
TextDrawSetOutline		(flash,1);
TextDrawSetProportional	(flash,1);
TextDrawSetShadow		(flash,1);
textdrawscount++;

boxGM =
TextDrawCreate			(199.000000, 182.000000, "_");
TextDrawBackgroundColor (boxGM, 255);
TextDrawFont			(boxGM, 2);
TextDrawLetterSize		(boxGM, 1.200000, 8.000000);
TextDrawColor			(boxGM, -1);
TextDrawSetOutline		(boxGM, 0);
TextDrawSetProportional	(boxGM, 1);
TextDrawSetShadow		(boxGM, 1);
TextDrawUseBox			(boxGM, 1);
TextDrawBoxColor		(boxGM, 75);
TextDrawTextSize		(boxGM, 436.000000, 90.000000);
textdrawscount++;

cargando =
TextDrawCreate			(232.000000, 192.000000, "CARGANDO");
TextDrawBackgroundColor	(cargando, 255);
TextDrawFont			(cargando, 2);
TextDrawLetterSize		(cargando, 0.800000, 3.000000);
TextDrawColor			(cargando, COLOR_GENERAL);
TextDrawSetOutline		(cargando, 0);
TextDrawSetProportional	(cargando, 1);
TextDrawSetShadow		(cargando, 1);
textdrawscount++;

looking =
TextDrawCreate			(203.000000, 223.000000, "BUSCANDO TU CUENTA, ESPERA POR FAVOR");
TextDrawBackgroundColor	(looking, 255);
TextDrawFont			(looking, 2);
TextDrawLetterSize		(looking, 0.260000, 1.000000);
TextDrawColor			(looking, -1);
TextDrawSetOutline		(looking, 0);
TextDrawSetProportional	(looking, 1);
TextDrawSetShadow		(looking, 1);
textdrawscount++;

streamer =
TextDrawCreate(210.000000, 214.000000, "CARGANDO OBJETOS ESPERA POR FAVOR");
TextDrawBackgroundColor	(streamer, 255);
TextDrawFont			(streamer, 2);
TextDrawLetterSize		(streamer, 0.260000, 1.300000);
TextDrawColor			(streamer, -1);
TextDrawSetOutline		(streamer, 0);
TextDrawSetProportional	(streamer, 1);
TextDrawSetShadow		(streamer, 1);
textdrawscount++;

LoginMenu[0] = TextDrawCreate(136.250000, 68.250030, "-");
TextDrawLetterSize(LoginMenu[0], 26.845008, 0.106665);
TextDrawTextSize(LoginMenu[0], 740.625000, 29.166637);
TextDrawAlignment(LoginMenu[0], 1);
TextDrawColor(LoginMenu[0], 0x000000AA);
TextDrawSetShadow(LoginMenu[0], 0);
TextDrawSetOutline(LoginMenu[0], 1);
TextDrawBackgroundColor(LoginMenu[0], 51);
TextDrawFont(LoginMenu[0], 1);
TextDrawSetProportional(LoginMenu[0], 1);
textdrawscount++;

LoginMenu[1] = TextDrawCreate(172.500000, 27.416671, "San Antón");
TextDrawLetterSize(LoginMenu[1], 1.381247, 4.195834);
TextDrawTextSize(LoginMenu[1], 484.375000, -1464.166503);
TextDrawAlignment(LoginMenu[1], 1);
TextDrawColor(LoginMenu[1], COLOR_GENERAL);
TextDrawSetShadow(LoginMenu[1], 0);
TextDrawSetOutline(LoginMenu[1], -1);
TextDrawBackgroundColor(LoginMenu[1], 255);
TextDrawFont(LoginMenu[1], 2);
TextDrawSetProportional(LoginMenu[1], 1);
textdrawscount++;

LoginMenu[2] = TextDrawCreate(328.125000, 69.416664, "Version:~h~~w~"SERVER_GM_TEXT"");
TextDrawLetterSize(LoginMenu[2], 0.388749, 1.646666);
TextDrawAlignment(LoginMenu[2], 2);
TextDrawColor(LoginMenu[2], COLOR_GENERAL);
TextDrawSetShadow(LoginMenu[2], 0);
TextDrawSetOutline(LoginMenu[2], 1);
TextDrawBackgroundColor(LoginMenu[2], 51);
TextDrawFont(LoginMenu[2], 2);
TextDrawSetProportional(LoginMenu[2], 1);
textdrawscount++;

MOTD = TextDrawCreate(320.000000, 125.416664, ""); // NOTICIAS
TextDrawLetterSize(MOTD, 0.449999, 1.600000);
TextDrawAlignment(MOTD, 2);
TextDrawColor(MOTD, COLOR_GENERAL);
TextDrawSetShadow(MOTD, 0);
TextDrawSetOutline(MOTD, 1);
TextDrawBackgroundColor(MOTD, 51);
TextDrawFont(MOTD, 2);
TextDrawSetProportional(MOTD, 1);
textdrawscount++;

TutTxt[0] =
TextDrawCreate(479.000000, 125.260002, "_"); // BOX
TextDrawBackgroundColor(TutTxt[0], 255);
TextDrawFont(TutTxt[0], 2);
TextDrawLetterSize(TutTxt[0], 0.000000, 16.094455);
TextDrawColor(TutTxt[0], -1);
TextDrawSetOutline(TutTxt[0], 0);
TextDrawSetProportional(TutTxt[0], 1);
TextDrawSetShadow(TutTxt[0], 1);
TextDrawUseBox(TutTxt[0], 1);
TextDrawBoxColor(TutTxt[0], 75);//0x232323FF
TextDrawTextSize(TutTxt[0], 166.000000, 0.000000);
textdrawscount++;

TutTxt[1] =
TextDrawCreate(313.500000, 232.960052, "WEB: ~w~N/A");
TextDrawBackgroundColor(TutTxt[1], 255);
TextDrawFont(TutTxt[1], 1);
TextDrawLetterSize(TutTxt[1], 0.276499, 1.387199);
TextDrawAlignment(TutTxt[1], 2);
TextDrawColor(TutTxt[1], -5963521);
TextDrawSetOutline(TutTxt[1], 0);
TextDrawSetProportional(TutTxt[1], 1);
TextDrawSetShadow(TutTxt[1], 1);
textdrawscount++;

TutTxt[2] =
TextDrawCreate(213.000000, 130.480026, "San Anton Roleplay - Tutorial");
TextDrawLetterSize(TutTxt[2], 0.307999, 1.600000);
TextDrawTextSize(TutTxt[2], 439.000000, -35.840011);
TextDrawAlignment(TutTxt[2], 1);
TextDrawColor(TutTxt[2], COLOR_GENERAL);
TextDrawUseBox(TutTxt[2], true);
TextDrawBoxColor(TutTxt[2], 115);
TextDrawSetShadow(TutTxt[2], 0);
TextDrawSetOutline(TutTxt[2], 1);
TextDrawBackgroundColor(TutTxt[2], 51);
TextDrawFont(TutTxt[2], 2);
TextDrawSetProportional(TutTxt[2], 1);
textdrawscount++;

TutTxt[3] =
TextDrawCreate(295.000000, 251.999969, "Pulsa Y");
TextDrawLetterSize(TutTxt[3], 0.261999, 1.247200);
TextDrawTextSize(TutTxt[3], 342.500000, -63.279994);
TextDrawAlignment(TutTxt[3], 1);
TextDrawColor(TutTxt[3], COLOR_YELLOW2);
TextDrawUseBox(TutTxt[3], true);
TextDrawBoxColor(TutTxt[3], 255);
TextDrawSetShadow(TutTxt[3], 0);
TextDrawSetOutline(TutTxt[3], 1);
TextDrawBackgroundColor(TutTxt[3], 51);
TextDrawFont(TutTxt[3], 2);
TextDrawSetProportional(TutTxt[3], 1);
textdrawscount++;

txtAnimHelper =
TextDrawCreate(610.0, 400.0,"~y~~k~~PED_SPRINT~ ~w~parar detener la animacion.");
TextDrawUseBox(txtAnimHelper, 0);
TextDrawFont(txtAnimHelper, 2);
TextDrawSetShadow(txtAnimHelper,0);
TextDrawSetOutline(txtAnimHelper,1);
TextDrawColor(txtAnimHelper,0xFFFFFFFF);
TextDrawAlignment(txtAnimHelper,3);
textdrawscount++;

SanAnton[0] =
TextDrawCreate(87.000000, 323.000000, "San Anton");
TextDrawAlignment(SanAnton[0], 2);
TextDrawBackgroundColor(SanAnton[0], 32);
TextDrawFont(SanAnton[0], 2);
TextDrawLetterSize(SanAnton[0], 0.310000, 1.100000);
TextDrawColor(SanAnton[0], COLOR_GENERAL);
TextDrawSetOutline(SanAnton[0], 1);
TextDrawSetProportional(SanAnton[0], 1);
TextDrawSetShadow(SanAnton[0], 1);
textdrawscount++;

SanAnton[1] =
TextDrawCreate(89.000000, 330.000000, "-");
TextDrawAlignment(SanAnton[1], 2);
TextDrawBackgroundColor(SanAnton[1], 32);
TextDrawFont(SanAnton[1], 2);
TextDrawLetterSize(SanAnton[1], 7.460000, 1.000000);
TextDrawColor(SanAnton[1], -1);
TextDrawSetOutline(SanAnton[1], 1);
TextDrawSetProportional(SanAnton[1], 1);
TextDrawSetShadow(SanAnton[1], 1);
textdrawscount++;

SanAnton[2] =
TextDrawCreate(500.000000, 12.000000, "N/A");
TextDrawBackgroundColor(SanAnton[2], 32);
TextDrawFont(SanAnton[2], 2);
TextDrawLetterSize(SanAnton[2], 0.300000, 1.300000);
TextDrawColor(SanAnton[2], -1);
TextDrawSetOutline(SanAnton[2], 1);
TextDrawSetProportional(SanAnton[2], 1);
TextDrawSetShadow(SanAnton[2], 1);
textdrawscount++;

//login new fenix
TextdrawZCL0 = TextDrawCreate(626.375000, 224.333343, "usebox");
TextDrawLetterSize(TextdrawZCL0, 0.000000, 20.618516);
TextDrawTextSize(TextdrawZCL0, 434.250000, 0.000000);
TextDrawAlignment(TextdrawZCL0, 1);
TextDrawColor(TextdrawZCL0, 0);
TextDrawUseBox(TextdrawZCL0, true);
TextDrawBoxColor(TextdrawZCL0, 102);
TextDrawSetShadow(TextdrawZCL0, 0);
TextDrawSetOutline(TextdrawZCL0, 0);
TextDrawFont(TextdrawZCL0, 0);
textdrawscount++;

TextdrawZCL1 = TextDrawCreate(455.000000, 256.083557, "Registrarse");
TextDrawLetterSize(TextdrawZCL1, 0.449999, 1.600000);
TextDrawAlignment(TextdrawZCL1, 1);
TextDrawColor(TextdrawZCL1, -1061109505);
TextDrawSetShadow(TextdrawZCL1, 0);
TextDrawSetOutline(TextdrawZCL1, -1);
TextDrawBackgroundColor(TextdrawZCL1, 51);
TextDrawFont(TextdrawZCL1, 2);
TextDrawSetProportional(TextdrawZCL1, 1);
TextDrawSetSelectable(TextdrawZCL1, 1);
textdrawscount++;

TextdrawZCL2 = TextDrawCreate(454.375000, 295.166656, "Ingresar");
TextDrawLetterSize(TextdrawZCL2, 0.449999, 1.600000);
TextDrawAlignment(TextdrawZCL2, 1);
TextDrawColor(TextdrawZCL2, -1061109505);
TextDrawSetShadow(TextdrawZCL2, 0);
TextDrawSetOutline(TextdrawZCL2, -1);
TextDrawBackgroundColor(TextdrawZCL2, 51);
TextDrawFont(TextdrawZCL2, 2);
TextDrawSetProportional(TextdrawZCL2, 1);
TextDrawSetSelectable(TextdrawZCL2, 1);
textdrawscount++;

TextdrawZCL3 = TextDrawCreate(454.375000, 335.416595, "Informacion");
TextDrawLetterSize(TextdrawZCL3, 0.449999, 1.600000);
TextDrawAlignment(TextdrawZCL3, 1);
TextDrawColor(TextdrawZCL3, -1061109505);
TextDrawSetShadow(TextdrawZCL3, 0);
TextDrawSetOutline(TextdrawZCL3, -1);
TextDrawBackgroundColor(TextdrawZCL3, 51);
TextDrawFont(TextdrawZCL3, 2);
TextDrawSetProportional(TextdrawZCL3, 1);
TextDrawSetSelectable(TextdrawZCL3, 1);
textdrawscount++;

TextdrawZCL4 = TextDrawCreate(456.250000, 369.833343, "Salir");
TextDrawLetterSize(TextdrawZCL4, 0.449999, 1.600000);
TextDrawAlignment(TextdrawZCL4, 1);
TextDrawColor(TextdrawZCL4, -1061109505);
TextDrawSetShadow(TextdrawZCL4, 0);
TextDrawSetOutline(TextdrawZCL4, 1);
TextDrawBackgroundColor(TextdrawZCL4, 51);
TextDrawFont(TextdrawZCL4, 2);
TextDrawSetProportional(TextdrawZCL4, 1);
TextDrawSetSelectable(TextdrawZCL4, 1);
textdrawscount++;

TextdrawZCL5 = TextDrawCreate(625.750000, 224.916656, "usebox");
TextDrawLetterSize(TextdrawZCL5, 0.000000, 1.109259);
TextDrawTextSize(TextdrawZCL5, 434.875000, 0.000000);
TextDrawAlignment(TextdrawZCL5, 1);
TextDrawColor(TextdrawZCL5, 0);
TextDrawUseBox(TextdrawZCL5, true);
TextDrawBoxColor(TextdrawZCL5, 102);
TextDrawSetShadow(TextdrawZCL5, 0);
TextDrawSetOutline(TextdrawZCL5, 0);
TextDrawFont(TextdrawZCL5, 0);
textdrawscount++;

TextdrawZCL6 = TextDrawCreate(473.125000, 221.083297, "San Anton");
TextDrawLetterSize(TextdrawZCL6, 0.449999, 1.600000);
TextDrawAlignment(TextdrawZCL6, 1);
TextDrawColor(TextdrawZCL6, -5963521);
TextDrawSetShadow(TextdrawZCL6, 0);
TextDrawSetOutline(TextdrawZCL6, 0);
TextDrawBackgroundColor(TextdrawZCL6, 255);
TextDrawFont(TextdrawZCL6, 2);
TextDrawSetProportional(TextdrawZCL6, 1);
textdrawscount++;

TextInfoZC0 = TextDrawCreate(482.000000, 122.833335, "usebox");
TextDrawLetterSize(TextInfoZC0, 0.000000, 22.951850);
TextDrawTextSize(TextInfoZC0, 165.500000, 0.000000);
TextDrawAlignment(TextInfoZC0, 1);
TextDrawColor(TextInfoZC0, 0);
TextDrawUseBox(TextInfoZC0, true);
TextDrawBoxColor(TextInfoZC0, 102);
TextDrawSetShadow(TextInfoZC0, 0);
TextDrawSetOutline(TextInfoZC0, 0);
TextDrawFont(TextInfoZC0, 0);

TextInfoZC1 = TextDrawCreate(481.375000, 122.833335, "usebox");
TextDrawLetterSize(TextInfoZC1, 0.000000, 1.109256);
TextDrawTextSize(TextInfoZC1, 165.500000, 0.000000);
TextDrawAlignment(TextInfoZC1, 1);
TextDrawColor(TextInfoZC1, 0);
TextDrawUseBox(TextInfoZC1, true);
TextDrawBoxColor(TextInfoZC1, 102);
TextDrawSetShadow(TextInfoZC1, 0);
TextDrawSetOutline(TextInfoZC1, 0);
TextDrawFont(TextInfoZC1, 0);

TextInfoZC2 = TextDrawCreate(379.500000, 297.250030, "usebox");
TextDrawLetterSize(TextInfoZC2, 0.000000, 2.664812);
TextDrawTextSize(TextInfoZC2, 262.375000, 0.000000);
TextDrawAlignment(TextInfoZC2, 1);
TextDrawColor(TextInfoZC2, 0);
TextDrawUseBox(TextInfoZC2, true);
TextDrawBoxColor(TextInfoZC2, 102);
TextDrawSetShadow(TextInfoZC2, 0);
TextDrawSetOutline(TextInfoZC2, 0);
TextDrawFont(TextInfoZC2, 0);

TextInfoZC3 = TextDrawCreate(276.875000, 301.000030, "Aceptar");
TextDrawLetterSize(TextInfoZC3, 0.449999, 1.600000);
TextDrawAlignment(TextInfoZC3, 1);
TextDrawColor(TextInfoZC3, -1061109505);
TextDrawSetShadow(TextInfoZC3, 0);
TextDrawSetOutline(TextInfoZC3, 1);
TextDrawBackgroundColor(TextInfoZC3, 255);
TextDrawFont(TextInfoZC3, 2);
TextDrawSetProportional(TextInfoZC3, 1);
TextDrawSetSelectable(TextInfoZC3, 1);

TextInfoZC4 = TextDrawCreate(278.125000, 119.583328, ": Informacion");
TextDrawLetterSize(TextInfoZC4, 0.449999, 1.600000);
TextDrawAlignment(TextInfoZC4, 1);
TextDrawColor(TextInfoZC4, -1061109505);
TextDrawSetShadow(TextInfoZC4, 0);
TextDrawSetOutline(TextInfoZC4, 1);
TextDrawBackgroundColor(TextInfoZC4, 255);
TextDrawFont(TextInfoZC4, 2);
TextDrawSetProportional(TextInfoZC4, 1);

TextInfoZC6 = TextDrawCreate(176.250000, 177.333236, "IP Ts3: N/A");
TextDrawLetterSize(TextInfoZC6, 0.449999, 1.600000);
TextDrawAlignment(TextInfoZC6, 1);
TextDrawColor(TextInfoZC6, -1061109505);
TextDrawSetShadow(TextInfoZC6, 0);
TextDrawSetOutline(TextInfoZC6, 1);
TextDrawBackgroundColor(TextInfoZC6, 255);
TextDrawFont(TextInfoZC6, 2);
TextDrawSetProportional(TextInfoZC6, 1);

TextInfoZC7 = TextDrawCreate(176.250000, 222.833374, "Web: N/A");
TextDrawLetterSize(TextInfoZC7, 0.449999, 1.600000);
TextDrawAlignment(TextInfoZC7, 1);
TextDrawColor(TextInfoZC7, -1061109505);
TextDrawSetShadow(TextInfoZC7, 0);
TextDrawSetOutline(TextInfoZC7, 1);
TextDrawBackgroundColor(TextInfoZC7, 255);
TextDrawFont(TextInfoZC7, 2);
TextDrawSetProportional(TextInfoZC7, 1);


//termina login nuevo fenix

for(new i = 0; i<MAX_PLAYERS; i++) // FUCK OFF SCOTT xD
{
	Speedo[i] =
	TextDrawCreate			(499.000000, 100.000000, "~w~--- ~y~MPH - Gas: ~w~----");
	TextDrawBackgroundColor	(Speedo[i], 255);
	TextDrawFont			(Speedo[i], 2);
	TextDrawLetterSize		(Speedo[i], 0.300000, 1.000000);
	TextDrawColor			(Speedo[i], -1);
	TextDrawSetOutline		(Speedo[i], 0);
	TextDrawSetProportional	(Speedo[i], 1);
	TextDrawSetShadow		(Speedo[i], 1);
}

//San Andreas Police Departament Cars
SAPDVehicles[0] = AddStaticVehicleEx(596,1601.872924,-1704.370971,5.612636,89.574440,1,0,TIME_RESPAWN); // Patrulla LS   	1 //596
SAPDVehicles[1] = AddStaticVehicleEx(596,1601.902221,-1700.465332,5.634525,89.566131,1,0,TIME_RESPAWN); // Patrulla LS   	2 // 596
SAPDVehicles[2] = AddStaticVehicleEx(596,1601.933105,-1696.409912,5.642260,89.562606,0,1,TIME_RESPAWN); // Patrulla LS   	3 596/
SAPDVehicles[3] = AddStaticVehicleEx(596,1601.963134,-1692.478881,5.656129,89.555740,0,1,TIME_RESPAWN); // Patrulla LS   	4 //569
SAPDVehicles[4] = AddStaticVehicleEx(596,1595.511840,-1710.769531,5.613651,0.000000,0,1,TIME_RESPAWN); // Patrulla LS    	5
SAPDVehicles[5] = AddStaticVehicleEx(596,1591.606079,-1710.771240,5.626485,0.000000,0,1,TIME_RESPAWN); // Patrulla LS    	6
SAPDVehicles[6] = AddStaticVehicleEx(596,1587.455688,-1710.772827,5.648460,0.000000,0,1,TIME_RESPAWN); // Patrulla LS    	7
SAPDVehicles[7] = AddStaticVehicleEx(596,1583.698120,-1710.773315,5.648464,0.000000,0,1,TIME_RESPAWN); // Patrulla LS    	8
SAPDVehicles[8] = AddStaticVehicleEx(599,1526.548095,-1644.479614,6.056174,179.637084,0,1,TIME_RESPAWN); // Ranger   		9
SAPDVehicles[9] = AddStaticVehicleEx(599,1530.429199,-1644.505371,6.124225,179.634948,0,1,TIME_RESPAWN); // Ranger   		10
SAPDVehicles[10] = AddStaticVehicleEx(599,1534.434448,-1644.530761,6.133507,179.633880,0,1,TIME_RESPAWN); // Ranger   		11
SAPDVehicles[11] = 	AddStaticVehicleEx(599,1538.758666,-1644.558349,6.156028,179.631210,0,1,TIME_RESPAWN); // Ranger   		12
SAPDVehicles[12] = 	AddStaticVehicleEx(523,1567.272338,-1708.937011,5.457219,354.100372,0,1,TIME_RESPAWN); // HPV 1000 		13
SAPDVehicles[13] = 	AddStaticVehicleEx(523,1565.331420,-1708.737304,5.475297,354.107971,0,1,TIME_RESPAWN); // HPV 1000 		14
SAPDVehicles[14] = 	AddStaticVehicleEx(523,1562.516479,-1708.446411,5.508016,354.100280,0,1,TIME_RESPAWN); // HPV 1000 		15
SAPDVehicles[15] = 	AddStaticVehicleEx(427,1571.071044,-1615.492797,13.514673,268.842010,0,1,TIME_RESPAWN); // Enforcer    	16
SAPDVehicles[16] = 	AddStaticVehicleEx(427,1557.802734,-1615.510131,13.514776,269.681549,0,1,TIME_RESPAWN); // Enforcer    	17
SAPDVehicles[17] = 	AddStaticVehicleEx(601,1544.134521,-1609.579345,13.141159,269.321655,0,1,TIME_RESPAWN); // SWAT Van    	18
SAPDVehicles[18] = 	AddStaticVehicleEx(497,1563.660034,-1655.212158,28.589679,88.595161,0,1,TIME_RESPAWN); // Police Maverick  19
SAPDVehicles[19] =  AddStaticVehicleEx(596,1535.9159,-1667.7427,13.1292,359.7549,0,1,TIME_RESPAWN); //20
SAPDVehicles[20] =	AddStaticVehicleEx(596,1535.8901,-1677.7660,13.1263,179.5659,0,1,TIME_RESPAWN); //21
SAPDVehicles[21] =	AddStaticVehicleEx(596,1602.0083,-1687.9724,5.6367,89.0936,0,1,TIME_RESPAWN); //22
SAPDVehicles[22] =	AddStaticVehicleEx(596,1578.5010,-1710.9355,5.6371,357.7198,0,1,TIME_RESPAWN); //23
SAPDVehicles[23] =	AddStaticVehicleEx(596,1574.3030,-1710.9478,5.6381,359.8578,0,1,TIME_RESPAWN); //24
SAPDVehicles[24] =	AddStaticVehicleEx(596,1570.2288,-1711.0248,5.6373,359.6110,0,1,TIME_RESPAWN); //25
SAPDVehicles[25] =	AddStaticVehicleEx(523,1566.0752,-1713.0042,5.4606,2.9605,0,1,TIME_RESPAWN); //26
SAPDVehicles[26] =	AddStaticVehicleEx(523,1563.8184,-1713.0892,5.4617,3.3756,0,1,TIME_RESPAWN); //27
SAPDVehicles[27] =	AddStaticVehicleEx(523,1560.1859,-1713.1456,5.4604,359.4186,0,1,TIME_RESPAWN); //28
SAPDVehicles[28] =	AddStaticVehicleEx(523,1560.3358,-1708.2838,5.4613,359.7211,0,1,TIME_RESPAWN); //29
SAPDVehicles[29] =	AddStaticVehicleEx(599,1544.9022,-1707.8859,6.0816,322.2441,0,1,TIME_RESPAWN); //30
SAPDVehicles[30] =	AddStaticVehicleEx(599,1541.3705,-1705.2369,6.0824,318.1585,0,1,TIME_RESPAWN); ///31
SAPDVehicles[31] =	AddStaticVehicleEx(599,1538.3998,-1701.8361,6.0766,309.0826,0,1,TIME_RESPAWN); ///32
//SAPDVehicles[32] =	AddStaticVehicleEx(427,1557.8558,-1605.1543,13.5146,267.4417,0,1,TIME_RESPAWN); ///33
SAPDVehicles[32] =	AddStaticVehicleEx(601,1544.6089,-1613.6875,13.1416,90.3137,0,1,TIME_RESPAWN); // ///34
SAPDVehicles[33] =	AddStaticVehicleEx(497,1560.5781,-1644.7632,28.5767,90.9838,1,1,TIME_RESPAWN); /////35
SAPDVehicles[34] = AddStaticVehicleEx(525,1556.5985,-1606.3214,13.2680,179.1279,17,20, TIME_RESPAWN); // Tow Truck
SAPDVehicles[35] = AddStaticVehicleEx(525,1560.8201,-1606.3423,13.2557,178.6305,18,20, TIME_RESPAWN); // Tow Truck
SAPDVehicles[36] = AddStaticVehicleEx(415,487.3500,-1638.3472,9001.7852,183.4520,0,0,TIME_RESPAWN); // Cheetah SAPD 1
SAPDVehicles[37] = AddStaticVehicleEx(560,491.4538,-1638.0227,9001.7178,183.6139,0,0,TIME_RESPAWN); // Sultan SAPD 1
SAPDVehicles[38] = AddStaticVehicleEx(560,492.4958,-1655.3491,9001.7314,3.5955,0,0,TIME_RESPAWN); // Sultan
SAPDVehicles[39] = AddStaticVehicleEx(415,484.1988,-1655.9805,9001.7314,5.0119,0,0,TIME_RESPAWN); // Cheetah
SAPDVehicles[40] = AddStaticVehicleEx(421,495.4609,-1638.1056,9001.7295,183.6311,0,0,TIME_RESPAWN);
SAPDVehicles[41] = AddStaticVehicleEx(426,499.7182,-1637.6061,9001.7354,182.9925,0,0,TIME_RESPAWN); // Premier Change
SAPDVehicles[42] = AddStaticVehicleEx(579,503.8369,-1637.5188,9001.7314,184.2466,0,0,TIME_RESPAWN); // Huntley Change
SAPDVehicles[43] = AddStaticVehicleEx(461,507.7335,-1637.1544,9001.7295,184.5250,0,0,TIME_RESPAWN); // PCJ 600
SAPDVehicles[45] = AddStaticVehicleEx(521,511.9490,-1637.0925,9001.7324,181.8966,1,0,TIME_RESPAWN); // fcr 900
SAPDVehicles[46] = AddStaticVehicleEx(506,513.0107,-1654.1715,9001.7334,4.3899,0,0,TIME_RESPAWN); // Super GT

SAPDVehicles[47] = AddStaticVehicleEx(596,631.2089,-610.3391,16.0564,359.2538,57,1,TIME_RESPAWN);
SAPDVehicles[48] = AddStaticVehicleEx(596,634.9767,-610.3834,16.0564,358.8744,57,1,TIME_RESPAWN);
SAPDVehicles[49] = AddStaticVehicleEx(523,627.3511,-610.7618,16.1863,357.9838,57,1,TIME_RESPAWN);
SAPDVehicles[50] = AddStaticVehicleEx(599,613.5255,-601.5044,16.9491,269.6267,57,1,TIME_RESPAWN);
SAPDVehicles[51] = AddStaticVehicleEx(599,613.0554,-597.0876,16.9540,269.1958,57,1,TIME_RESPAWN);
// Transport LS
TaxiTrans[0] = AddStaticVehicleEx(420,1777.3925,-1931.9706,13.1680,270.8230,6,6,TIME_RESPAWN); // 36
TaxiTrans[1] = AddStaticVehicleEx(420,1777.6443,-1926.5598,13.1655,270.1909,6,6,TIME_RESPAWN); //37
TaxiTrans[2] = AddStaticVehicleEx(420,1803.2380,-1932.2668,13.1655,90.3502,6,6,TIME_RESPAWN); // 38
TaxiTrans[3] = AddStaticVehicleEx(420,1802.8896,-1926.4490,13.1920,91.7516,6,6,TIME_RESPAWN); //39
TaxiTrans[4] = AddStaticVehicleEx(420,1803.0070,-1921.0698,13.1679,89.9241,6,6,TIME_RESPAWN); // Taxi          40
// SAMD
SAMCVehicles[0] = AddStaticVehicleEx(416,1096.6676000,-1366.4629000,13.5780000,90.2400000,-1,-1,TIME_RESPAWN); // Ambulancia  52
SAMCVehicles[1] = AddStaticVehicleEx(416,1096.6727000,-1371.5975000,13.5780000,90.2400000,-1,-1,TIME_RESPAWN); // Ambulancia  53
SAMCVehicles[2] = AddStaticVehicleEx(416,1096.6599000,-1361.5613000,13.5780000,90.2400000,-1,-1,TIME_RESPAWN);// Ambulancia 54
SAMCVehicles[3] = AddStaticVehicleEx(416,1096.7361000,-1308.8282000,13.5780000,90.2400000,-1,-1,TIME_RESPAWN); // Ambulancia  55
SAMCVehicles[4] = AddStaticVehicleEx(416,1096.7418000,-1303.5461000,13.5780000,90.2400000,-1,-1,TIME_RESPAWN); // Ambulancia  56
SAMCVehicles[5] = AddStaticVehicleEx(416,1096.6582000,-1298.5181000,13.5780000,90.2400000,-1,-1,TIME_RESPAWN); // Ambulancia  57
SAMCVehicles[6] = AddStaticVehicleEx(487,1117.3091000,-1308.3262000,33.3584000,269.4595000,3,118,TIME_RESPAWN); // Maverick 58
//FBI
FBIVehicle[0] = AddStaticVehicleEx(421,278.43112183,-1535.99670410,24.54375076,236.00000000,0,0,TIME_RESPAWN); //Elegant
FBIVehicle[1] = AddStaticVehicleEx(421,281.64566040,-1531.28723145,24.54375076,233.99731445,0,0,TIME_RESPAWN); //Elegant
FBIVehicle[2] = AddStaticVehicleEx(421,284.66522217,-1526.72875977,24.54375076,235.99731445,0,0,TIME_RESPAWN); //Elegant
FBIVehicle[3] = AddStaticVehicleEx(421,287.99291992,-1521.94006348,24.54375076,233.99230957,0,0,TIME_RESPAWN); //Elegant
FBIVehicle[4] = AddStaticVehicleEx(490,290.92388916,-1517.69372559,24.78887749,236.00000000,-1,-1,TIME_RESPAWN); //FBI Rancher
FBIVehicle[5] = AddStaticVehicleEx(490,294.15356445,-1512.93969727,24.78887749,235.99731445,-1,-1,TIME_RESPAWN); //FBI Rancher
FBIVehicle[6] = AddStaticVehicleEx(490,297.35870361,-1508.31335449,24.78887749,235.99731445,-1,-1,TIME_RESPAWN); //FBI Rancher
FBIVehicle[7] = AddStaticVehicleEx(490,300.32995605,-1504.01623535,24.78887749,235.99731445,-1,-1,TIME_RESPAWN); //FBI Rancher
FBIVehicle[8] = AddStaticVehicleEx(528,300.04907227,-1490.36193848,24.65375137,235.50000000,-1,-1,TIME_RESPAWN); //FBI Truck
FBIVehicle[9] = AddStaticVehicleEx(528,306.08950806,-1481.64025879,24.62875175,235.49743652,-1,-1,TIME_RESPAWN); //FBI Truck
FBIVehicle[10] = AddStaticVehicleEx(521,297.53024292,-1536.71789551,24.25412750,50.00000000,0,0,TIME_RESPAWN); //FCR-900
FBIVehicle[11] = AddStaticVehicleEx(560,295.46044922,-1540.92248535,24.32372665,54.00000000,0,0,TIME_RESPAWN); //Sultan
FBIVehicle[12] = AddStaticVehicleEx(560,302.93893433,-1485.83496094,24.39872551,233.99774170,0,0,TIME_RESPAWN); //Sultan
FBIVehicle[13] = AddStaticVehicleEx(487,319.66525269,-1508.03454590,77.93007660,232.00000000,0,0,TIME_RESPAWN); //Maverick
FBIVehicle[14] = AddStaticVehicleEx(487,339.3534,-1485.7954,76.7156,220.2925,0,0,TIME_RESPAWN); //Maverick
FBIVehicle[15] = AddStaticVehicleEx(487,301.4234,-1532.7819,76.6724,246.3760,0,0,TIME_RESPAWN); //Maverick
// Mecánicos LS
MecanicosVehicle[0] = AddStaticVehicleEx(525,2255.9697,-1958.4779,13.4730,359.2864,-1,103,TIME_RESPAWN); //Tow Truck     92
MecanicosVehicle[1] = AddStaticVehicleEx(525,2260.9211,-1958.7180,13.4595,1.0471,-1,103,TIME_RESPAWN); //Tow Truck     93
MecanicosVehicle[2] = AddStaticVehicleEx(525,2246.1553,-1958.5923,13.4605,0.2604,-1,103,TIME_RESPAWN); //Tow Truck     94
MecanicosVehicle[3] = AddStaticVehicleEx(552,2265.9463,-1958.3639,13.4588,358.9032,96,-1,TIME_RESPAWN);//Utility       98
MecanicosVehicle[4] = AddStaticVehicleEx(552,2271.0620,-1958.5648,13.4717,1.1405,96,-1,TIME_RESPAWN);  //Utility       99
MecanicosVehicle[5] = AddStaticVehicleEx(552,2276.1050,-1958.5712,13.4618,358.3219,96,-1,TIME_RESPAWN); //Utility       100
// CNN Vehículos
CNNVehicle[0] = AddStaticVehicleEx(488,741.7805800,-1369.6355000,25.9572100,180.6610000,3,118,TIME_RESPAWN); // News Van 116
CNNVehicle[1] = AddStaticVehicleEx(582,763.5914900,-1334.6970200,13.7694000,180.2610000,3,118,TIME_RESPAWN); // News Van 117
CNNVehicle[2] = AddStaticVehicleEx(582,758.1728500,-1334.6855500,13.7694000,180.2580000,3,118,TIME_RESPAWN); // News Van 118
CNNVehicle[3] = AddStaticVehicleEx(582,752.6593000,-1334.6239000,13.7694000,180.2580000,3,118,TIME_RESPAWN); // San News 119
CNNVehicle[4] = AddStaticVehicleEx(582,747.0997300,-1334.6927500,13.7694000,180.2580000,3,118,TIME_RESPAWN); // San News 120
// HireCar I
Rentbike[0] = AddStaticVehicleEx(510,1734.0199,-1863.8273,13.1828,359.8940,151,151,TIME_RESPAWN);// 121
Rentbike[1] = AddStaticVehicleEx(510,1732.0968,-1863.8464,13.1830,2.8231,65,65,TIME_RESPAWN);// 121
Rentbike[2] = AddStaticVehicleEx(510,1730.5598,-1863.7780,13.1822,4.1875,4,4,TIME_RESPAWN);// 123
Rentbike[3] = AddStaticVehicleEx(510,1728.7006,-1870.8092,13.1716,358.0268,0,0,TIME_RESPAWN);// 124
Rentbike[4] = AddStaticVehicleEx(510,1728.5775,-1868.2179,13.1771,352.7792,1,1,TIME_RESPAWN);// 125
Rentbike[5] = AddStaticVehicleEx(510,1727.4672,-1870.9015,13.1716,0.2736,2,2,TIME_RESPAWN);// 126
Rentbike[6] = AddStaticVehicleEx(510,1727.3544,-1868.2091,13.1774,4.0482,126,126,TIME_RESPAWN); // 127
Rentbike[7] = AddStaticVehicleEx(510,1729.3662,-1863.9600,13.1828,357.7525,6,6,TIME_RESPAWN); // 128
Rentbike[8] = AddStaticVehicleEx(510,1750.2961,-1862.5370,13.1819,3.4593,7,7,TIME_RESPAWN); // 129
Rentbike[9] = AddStaticVehicleEx(510,1747.7045,-1862.5844,13.1843,1.2277,3,3,TIME_RESPAWN); //130

// Pizza Bike's
PizzaBike[0] = AddStaticVehicleEx(448,2123.00000000,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[1] = AddStaticVehicleEx(448,2121.00000000,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[2] = AddStaticVehicleEx(448,2119.00000000,-1784.30004883,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[3] = AddStaticVehicleEx(448,2116.50000000,-1784.19995117,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[4] = AddStaticVehicleEx(448,2114.19995117,-1784.30004883,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[5] = AddStaticVehicleEx(448,2111.80004883,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[6] = AddStaticVehicleEx(448,2109.00000000,-1784.40002441,13.10000038,0.00000000,17,6,1200); //Pizzaboy
PizzaBike[7] = AddStaticVehicleEx(448,2106.00000000,-1784.50000000,13.10000038,0.00000000,17,6,1200); //Pizzaboy

//Gobierno Cars
GobiernoCar[0] = AddStaticVehicleEx(487,1386.94995117,-1638.79760742,38.59999847,0.00000000,-1,1,TIME_RESPAWN); // Maverick 155
GobiernoCar[1] = AddStaticVehicleEx(409,1364.50000000,-1647.40002441,13.30000019,270.00000000,-1,1,TIME_RESPAWN); // Stretch 156
GobiernoCar[2] = AddStaticVehicleEx(490,1363.59936523,-1642.92443848,13.69999981,270.00000000,-1,-1,TIME_RESPAWN); // FBI Rancher 157
GobiernoCar[3] = AddStaticVehicleEx(490,1363.59960938,-1638.50000000,13.69999981,270.00000000,-1,-1,TIME_RESPAWN); // FBI Rancher 158
GobiernoCar[4] = AddStaticVehicleEx(405,1363.30004883,-1660.50000000,13.39999962,270.00000000,-1,1,TIME_RESPAWN); // Sentinel 159
GobiernoCar[5] = AddStaticVehicleEx(405,1363.19995117,-1651.80004883,13.10000038,270.00000000,-1,1,TIME_RESPAWN); // Sentinel 160
// Camioneros Cars
TruckerVehicles[0] = AddStaticVehicleEx(414,2221.60009766,-2682.10009766,13.69999981,0.00000000,-1,-1,1200); //Mule
TruckerVehicles[1] = AddStaticVehicleEx(414,2224.80004883,-2682.10009766,13.69999981,0.00000000,-1,-1,1200); //Mule
TruckerVehicles[2] = AddStaticVehicleEx(414,2228.10009766,-2682.00000000,13.69999981,0.00000000,-1,-1,1200); //Mule
TruckerVehicles[3] = AddStaticVehicleEx(414,2232.10009766,-2681.89990234,13.69999981,0.00000000,-1,-1,1200); //Mule
TruckerVehicles[4] = AddStaticVehicleEx(414,2238.39990234,-2681.69995117,13.69999981,0.00000000,-1,-1,1200); //Mule
TruckerVehicles[5] = AddStaticVehicleEx(414,2199.80004883,-2636.60009766,13.69999981,181.00000000,-1,-1,1200); //Mule
TruckerVehicles[6] = AddStaticVehicleEx(414,2204.00000000,-2636.10009766,13.69999981,180.99975586,-1,-1,1200); //Mule
TruckerVehicles[7] = AddStaticVehicleEx(414,2210.69995117,-2635.39990234,13.69999981,180.99975586,-1,-1,1200); //Mule
TruckerVehicles[8] = AddStaticVehicleEx(414,2254.69995117,-2631.89990234,13.69999981,180.99969482,-1,-1,1200); //Mule
TruckerVehicles[9] = AddStaticVehicleEx(414,2254.69995117,-2644.89990234,13.69999981,180.99975586,-1,-1,1200); //Mule
TruckerVehicles[10] = AddStaticVehicleEx(414,2265.89990234,-2619.00000000,13.69999981,90.99426270,-1,-1,1200); //Mule
TruckerVehicles[11] = AddStaticVehicleEx(414,2265.69995117,-2626.80004883,13.69999981,90.99426270,-1,-1,1200); //Mule
TruckerVehicles[12] = AddStaticVehicleEx(414,2265.89990234,-2623.00000000,13.69999981,90.99426270,-1,-1,1200); //Mule
TruckerVehicles[13] = AddStaticVehicleEx(414,2218.30004883,-2626.39990234,13.69999981,180.99969482,-1,-1,1200); //Mule
TruckerVehicles[14] = AddStaticVehicleEx(414,2218.60009766,-2613.50000000,13.69999981,180.99426270,-1,-1,1200); //Mule

//SAEM Vehicles
NGLandVehicles[0] = AddStaticVehicleEx(497,195.57128906,1833.85449219,23.49751663,0.00000000,102,102,TIME_RESPAWN); //Police Maverick
NGLandVehicles[1] = AddStaticVehicleEx(497,181.33789062,1833.85449219,23.55751801,0.00000000,102,102,TIME_RESPAWN); //Police Maverick
NGLandVehicles[2] = AddStaticVehicleEx(548,199.41566467,1930.03649902,25.14225006,0.00000000,0,0,TIME_RESPAWN); //Cargobob
NGLandVehicles[3] = AddStaticVehicleEx(548,214.35351562,1930.03613281,25.14225006,0.00000000,0,0,TIME_RESPAWN); //Cargobob
NGLandVehicles[4] = AddStaticVehicleEx(470,220.42968750,1920.66308594,17.75063515,0.00000000,102,102, TIME_RESPAWN); //Patriot
NGLandVehicles[5] = AddStaticVehicleEx(470,211.45117188,1920.66308594,17.78063774,0.00000000,102,102, TIME_RESPAWN); //Patriot
NGLandVehicles[6] = AddStaticVehicleEx(470,202.46191406,1920.66308594,17.75063705,0.00000000,102,102, TIME_RESPAWN); //Patriot
NGLandVehicles[7] = AddStaticVehicleEx(470,193.43652344,1920.66308594,17.75063705,0.00000000,102,102, TIME_RESPAWN); //Patriot
NGLandVehicles[8] = AddStaticVehicleEx(468,136.35937500,1854.04785156,17.58554649,90.00000000,102,102, TIME_RESPAWN); //Sanchez
NGLandVehicles[9] = AddStaticVehicleEx(468,136.35937500,1851.85058594,17.58554649,90.00000000,102,102, TIME_RESPAWN); //Sanchez
NGLandVehicles[10] = AddStaticVehicleEx(468,136.35937500,1848.60058594,17.58554649,90.00000000,102,102, TIME_RESPAWN); //Sanchez
NGLandVehicles[11] = AddStaticVehicleEx(468,136.35937500,1846.46191406,17.58554649,90.00000000,102,102, TIME_RESPAWN); //Sanchez
NGLandVehicles[12] = AddStaticVehicleEx(471,116.42773438,1935.64257812,18.40819359,90.00000000,0,102, TIME_RESPAWN); //Quad
NGLandVehicles[13] = AddStaticVehicleEx(471,116.42773438,1932.22167969,18.40819359,90.00000000,0,102, TIME_RESPAWN); //Quad
NGLandVehicles[14] = AddStaticVehicleEx(416,108.80468750,1935.09082031,18.88158607,180.00000000,102,102, TIME_RESPAWN); //Ambulance
NGLandVehicles[15] = AddStaticVehicleEx(416,103.80468750,1935.09082031,18.88158607,180.00000000,102,102, TIME_RESPAWN); //Ambulance
NGLandVehicles[16] = AddStaticVehicleEx(470,282.00000000,1950.00000000,17.75063705,270.00000000,0,0, TIME_RESPAWN); //Patriot
NGLandVehicles[17] = AddStaticVehicleEx(470,282.00000000,1954.00000000,17.75063705,270.00000000,0,0, TIME_RESPAWN); //Patriot
NGLandVehicles[18] = AddStaticVehicleEx(470,282.00000000,1958.00000000,17.75063705,270.00000000,0,0, TIME_RESPAWN); //Patriot
NGLandVehicles[19] = AddStaticVehicleEx(470,282.00000000,1962.00000000,17.75063705,270.00000000,0,0, TIME_RESPAWN); //Patriot
NGLandVehicles[20] = AddStaticVehicleEx(470,274.00000000,1954.00000000,17.75063705,270.00000000,0,0, TIME_RESPAWN); //Patriot
NGLandVehicles[21] = AddStaticVehicleEx(470,274.00000000,1950.00000000,17.75063705,270.00000000,0,0, TIME_RESPAWN); //Patriot
NGLandVehicles[22] = AddStaticVehicleEx(433,279.50000000,1982.50000000,18.21062469,270.00000000,0,0, TIME_RESPAWN); //Barracks
NGLandVehicles[23] = AddStaticVehicleEx(433,279.50000000,1992.25000000,18.21062469,270.00000000,0,0, TIME_RESPAWN); //Barracks
NGLandVehicles[24] = AddStaticVehicleEx(433,279.50000000,1997.00000000,18.21062469,270.00000000,0,0, TIME_RESPAWN); //Barracks
NGLandVehicles[25] = AddStaticVehicleEx(433,279.50000000,1987.25000000,18.21062469,270.00000000,0,0, TIME_RESPAWN); //Barracks
NGLandVehicles[26] = AddStaticVehicleEx(520,339.8359,1877.2301,19.5668,85.4159,0,0,TIME_RESPAWN); // hydra saem
NGLandVehicles[27] = AddStaticVehicleEx(520,338.6016,1898.4448,19.5974,85.4332,0,0,TIME_RESPAWN); // hydra saem 1
NGLandVehicles[28] = AddStaticVehicleEx(425,373.3807,1922.3223,19.4237,269.6709,0,0,TIME_RESPAWN); // hunter saem 1
NGLandVehicles[29] = AddStaticVehicleEx(425,373.5056,1942.9490,19.4578,269.6758,0,0,TIME_RESPAWN); // hunter saem 2
NGLandVehicles[30] = AddStaticVehicleEx(425,373.5028,1964.5603,19.3237,269.6767,0,0,TIME_RESPAWN); // hunter saem 3
NGLandVehicles[31] = AddStaticVehicleEx(425,373.7556,1986.7355,19.2686,269.6767,0,0,TIME_RESPAWN); // hunter saem 4

BankVehicles[0] = AddStaticVehicleEx(428,1406.6387,-1501.9309,13.6861,344.3550,0,6,TIME_RESPAWN); // Security Car
BankVehicles[1] = AddStaticVehicleEx(428,1402.9019,-1515.3474,13.7213,344.5332,0,6,TIME_RESPAWN); // Security Car
BankVehicles[2] = AddStaticVehicleEx(428,1397.9031,-1533.5629,13.7171,344.7827,0,6,TIME_RESPAWN); // Security Car
BankVehicles[3] = AddStaticVehicleEx(428,1380.5963,-1563.2557,13.7118,164.0996,0,6,TIME_RESPAWN); // Security Car

AddStaticVehicleEx(532,-113.6863,-5.1287,4.0906,70.6139,0,0,60000);
AddStaticVehicleEx(532,-108.5597,6.1032,4.0919,65.7671,0,0,60000);
AddStaticVehicleEx(532,-104.8710,16.5226,4.0923,66.2940,0,0,60000);

CarVIP[0] = AddStaticVehicle(560,829.8030,-1406.2665,4201.7681,359.5879,99,51); // SAFE CAR 1
CarVIP[1] = AddStaticVehicle(451,825.5930,-1406.2361,4201.7729,359.5884,12,45); // SAFE CAR 2
CarVIP[2] = AddStaticVehicle(434,821.3618,-1406.2056,4201.7778,359.5891,56,2); // SAFE CAR 3
CarVIP[3] = AddStaticVehicle(429,817.3420,-1406.1770,4201.7778,359.5891,3,5); // SAFE CAR 4
CarVIP[4] = AddStaticVehicle(424,813.2821,-1406.1481,4201.7778,359.5891,5,7); // SAFE CAR 5
CarVIP[5] = AddStaticVehicle(415,808.9872,-1406.1169,4201.7778,359.5891,7,8); // SAFE CAR 6
CarVIP[6] = AddStaticVehicle(480,805.1777,-1406.0896,4201.7778,359.5891,1,5); // SAFE CAR 7
CarVIP[7] = AddStaticVehicle(494,801.0656,-1406.0602,4201.7778,359.5891,8,3); // SAFE CAR 8
CarVIP[8] = AddStaticVehicle(502,797.0029,-1406.0212,4201.7715,359.5880,5,51); // SAFE CAR 9
CarVIP[9] = AddStaticVehicle(503,792.5965,-1406.2180,4201.7720,359.5880,8,1); // SAFE CAR 10
CarVIP[10] = AddStaticVehicle(506,788.8691,-1406.1912,4201.7720,359.5880,9,45); // SAFE CAR 11
CarVIP[11] = AddStaticVehicle(522,784.6225,-1406.1603,4201.7720,359.5880,34,12); // SAFE CAR 12
CarVIP[12] = AddStaticVehicle(559,780.6603,-1406.1317,4201.7720,359.5880,12,67); // SAFE CAR 13
CarVIP[13] = AddStaticVehicle(562,776.2884,-1406.1002,4201.7725,359.5880,13,76); // SAFE CAR 14
// 3D Label
CreateDynamic3DTextLabel("/ctoys\n Para accesorios Gold +.",COLOR_YELLOW,802.5069,-1419.6813,1016.4688+0.6,4.0); // Gold+ VIP Room
CreateDynamic3DTextLabel("/regalo\npara ver el interior.",COLOR_YELLOW,798.0074,-1419.0095,1016.4688+0.8,8.0);/// VIP Lounge
CreateDynamic3DTextLabel("/lockervip\nPara abrir el VIP locker.",COLOR_YELLOW,798.4911,-1416.1251,1016.4688+0.6,4.0);/// VIP locker room
CreateDynamic3DTextLabel("Tienda\n/comprar - /venderpez",COLOR_YELLOW,991.2456,-1942.9379,2835.0078+1,5);
//CreateDynamic3DTextLabel("Tienda del Puerto\nAccesorios de Pesca",COLOR_WHITE,359.3381,-2071.6580,10.6953+0.6,15.0);
CreateDynamic3DTextLabel("Parking Garage\nUsa /entrar con tu vehiculo para entrar",COLOR_YELLOW,1241.9020,-1734.0985,13.5899+0.6,15.0);
//CreateDynamic3DTextLabel("Luminatti's Company VIP Garage\nUsa /entrar con tu vehiculo para entrar",COLOR_YELLOW,2225.3418,-1770.7305,13.5625+0.6,5.0);
CreateDynamic3DTextLabel("GYM Ganton Garage\nUsa /entrar con tu vehiculo para entrar",COLOR_YELLOW,2281.1748,-1724.4528,13.2521+0.6,8.0);
CreateDynamic3DTextLabel("VIP Garage\nUsa /entrar con tu vehiculo para entrar",COLOR_YELLOW,853.3862,-1387.1884,13.7470+0.6,8.0);
CreateDynamic3DTextLabel("/sacarsangre",COLOR_YELLOW,829.7163,-1225.0900,1195.0468+0.6,4.0);///SAMD
CreateDynamic3DTextLabel("/cobrar\nDeudas del estado.",COLOR_GENERAL,358.8330,178.5853,1008.3828+0.6,4.0);/// /cobrar
CreateDynamic3DTextLabel("/arrestar",COLOR_DBLUE,317.4623,-1506.9045,24.9219+0.6,4.0);///arrest(FBI)
CreateDynamic3DTextLabel("/arrestar",COLOR_DBLUE,1559.3228,-1693.7491,5.8970+0.6,4.0);///arrest(LSPD)
CreateDynamic3DTextLabel("/arrestar",COLOR_DBLUE,613.3228,-589.1623,17.2266+0.6,4.0);///arrest(LSPD)
//CreateDynamic3DTextLabel("/arrestojudicial\n(Sólo Policías)",COLOR_DBLUE,1455.6334,-1692.9596,15.4303+0.6,3.0); // arrest warr jud
CreateDynamic3DTextLabel("SAPD\n/sapd", COLOR_BLUE,1457.1671,-1760.7666,3285.2859+0.8, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
CreateDynamic3DTextLabel("Trajes\n/equipo", 								COLOR_YELLOW, 	1188.8640,-1351.4312,2423.2649, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,600,0);
CreateDynamic3DTextLabel("Armeria\n/equipo", 								COLOR_YELLOW, 	-392.3932,-1446.7029,26.1182, 4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("Depósito\n/embargar", 							COLOR_LIGHTBLUE, 1658.9924,-1807.1152,13.5508, 20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("Multas\n{FFFFFF}/pagarm", 					    COLOR_LIGHTBLUE, 1475.4143,-1752.8630,3285.2859+0.6, 8.0);
CreateDynamic3DTextLabel("/licencia\n{FFFFFF}Para obtener una", 			COLOR_LIGHTBLUE, 1470.1620,-1755.8926,3285.2859+0.6, 8.0);
//CreateDynamic3DTextLabel("Concesionario\n{FFFFFF}/comprarcoche", 			COLOR_LIGHTBLUE, 545.2712,-1293.3248,17.2422+0.6, 30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
//CreateDynamic3DTextLabel("Concesionario\n{FFFFFF}/comprarcoche", 			COLOR_LIGHTBLUE, 2131.9119,-1150.1757,24.1872+0.6, 30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
//CreateDynamic3DTextLabel("Lugar de Cambio de Nombre \nUsa /cambiarnombre para cambiar tu nombre.",COLOR_YELLOW, 1443.5162,-1461.0831,1616.3073+0.6, 6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/cropa\n para cambiar tu skin.",                  COLOR_YELLOW, 208.8970,-100.3289,1005.2578,8.0);
CreateDynamic3DTextLabel("/cropa\n para cambiar tu skin.",                  COLOR_YELLOW, 206.5429,-41.2313,1001.8047,8.0);
CreateDynamic3DTextLabel("/cropa\n para cambiar tu skin.",                  COLOR_YELLOW, 209.3064,-8.3033,1005.2109,8.0);
CreateDynamic3DTextLabel("/cropa\n para cambiar tu skin.",                  COLOR_YELLOW, 159.6771,-83.2866,1001.8120,8.0);
CreateDynamic3DTextLabel("/cropa\n para cambiar tu skin.",                  COLOR_YELLOW, 206.4552,-163.0903,1000.5234,8.0);
CreateDynamic3DTextLabel("/ctoys\n Algún accesorio.",                       COLOR_YELLOW, 206.3253,-100.3268,1005.2578,8.0);
CreateDynamic3DTextLabel("/sapd\n Para equipo.",                       			COLOR_YELLOW, 327.2326,307.2340,999.1484,8.0);
CreateDynamic3DTextLabel("/ctoys\n Algún accesorio.",                       COLOR_YELLOW, 201.0413,-40.1616,1001.8047,8.0);
CreateDynamic3DTextLabel("/ctoys\n Algún accesorio.",                       COLOR_YELLOW, 206.3963,-8.2122,1001.2109,8.0);
CreateDynamic3DTextLabel("/ctoys\n Algún accesorio.",                       COLOR_YELLOW, 162.7706,-83.2726,1001.8047,8.0);
CreateDynamic3DTextLabel("/ctoys\n Algún accesorio.",                       COLOR_YELLOW, 202.6777,-163.0623,1000.5306,8.0);
CreateDynamic3DTextLabel("/apelear\n Para aprender algún estilo de pelea.", COLOR_YELLOW, 767.6719,13.6320,1000.7010,8.0);
CreateDynamic3DTextLabel("/arena\n PaintBall Menu.",                        COLOR_YELLOW, 305.3528,-141.9280,1004.0625+0.6,8.0);
CreateDynamic3DTextLabel("Mercado Negro\n Utiliza: /bmbuy",					COLOR_YELLOW, 1294.8325,-988.5414,32.6953,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/dejarpt",COLOR_LIGHTRED,1120.7758,-1292.4806,13.5688+0.6,4.0);///Deliverpt
CreateDynamic3DTextLabel("/dejarpt",COLOR_LIGHTRED,225.0963,1980.7179,17.6406+0.6,5.0);///Deliverpt
CreateDynamic3DTextLabel("Sube a una bicicleta\npara {FFFFFF}rentarla!",	COLOR_LIGHTGREEN,1727.5811,-1865.1080,13.5730+0.5,6.0);
// Gold Gift
//CreateDynamicObject(19055, 1473.0153, -1720.4349, 15.4303-0.4, 0.0, 0.0, 183.2574, -1, -1, -1, 200.0);
//CreateDynamic3DTextLabel("/goldgift - {FFFFFF}Y abrirás el regalo!",COLOR_YELLOW,1473.0153, -1720.4349, 15.4303+0.35,8.0);
//Hitman
CreateDynamic3DTextLabel("Utiliza: /equipo",COLOR_YELLOW, 2455.6589,-1706.8740,1013.50+0.6,6.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,5000,2);
//Jobs 3D
CreateDynamic3DTextLabel("Usa /tomarpizza\npara comenzar a repartir pizzas!",COLOR_YELLOW,2098.6919,-1789.5027,13.5547, 12.0); //getpizza
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Artesano",					 COLOR_ORANGE,659.3577,-634.6320,16.3359+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
//CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Mecánico",					 COLOR_ORANGE,2285.4197,-1928.1376,13.5902+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Camionero",				 COLOR_ORANGE, 2218.0525,-2662.2483,13.5536+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Cosechador",				 COLOR_ORANGE, -104.2969,9.3283,3.1172+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Pizza Boy",				 COLOR_ORANGE, 2104.8408,-1810.0991,13.5547+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Bartender",				 COLOR_ORANGE,503.2709,-11.6231,1000.6797+0.6,4.0);// Bartender (Alhambra)
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Vendedor de Moviles",		 COLOR_ORANGE, 1289.1171,-1271.7650,13.5422+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Taxista",					 COLOR_ORANGE, 1752.7062,-1894.1708,13.5574+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("/unirse\n{FFFFFF}[Job] Bodyguard",				 COLOR_ORANGE,2226.1716,-1718.1792,13.5165+0.5,4.0);// Bodyguard (LS)
CreateDynamic3DTextLabel("Licencia de Taxi\nUsa /licenciataxi\n\n$1700", 	 COLOR_ORANGE,1752.5104,-1903.1664,13.5631+0.6,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
CreateDynamic3DTextLabel("Escribe /materiales para comprar paquetes.",		 COLOR_YELLOW,2613.3691,-1065.9915,69.9656+0.6,5.0);
CreateDynamic3DTextLabel("Escribe /materiales para comprar paquetes.",		 COLOR_YELLOW,2388.4568,-2008.2374,13.5537+0.6,5.0);
// Icons Maps
CreateDynamicMapIcon(1185.0560,-1323.9019,13.5730, 22, 0, 0, 0, -1, 500.0); // Hospital
CreateDynamicMapIcon(1547.4792,-1675.3093,13.5541, 30, 0, 0, 0, -1, 500.0); // SAPD
CreateDynamicMapIcon(1829.5077,-1842.7311,13.5781, 17, 0, 0, 0, -1, 500.0); // 24-7 UNITY
CreateDynamicMapIcon(1352.1354,-1759.1620,13.5541, 17, 0, 0, 0, -1, 500.0); // 24-7
CreateDynamicMapIcon(1315.63696, -898.36614, 39.57812, 17, 0, 0, 0, -1, 500.0); // 24-7
CreateDynamicMapIcon(1928.6892,-1776.3666,13.5469, 17, 0, 0, 0, -1, 500.0); // 24-7
CreateDynamicMapIcon(559.4346,-1293.3511,17.2482, 55, 0, 0, 0, -1, 500.0); // CAR DEALER
CreateDynamicMapIcon(2131.9119,-1150.1757,24.1872, 55, 0, 0, 0, -1, 500.0); // CAR DEALER
CreateDynamicMapIcon(2098.5596,-1805.6979,13.5546, 29, 0, 0, 0, -1, 500.0); // PizzaangZoneCreate()
CreateDynamicMapIcon(1294.7615,-988.5920,32.6953, 23, 0, 0, 0, -1, 500.0); // Black Market
CreateDynamicMapIcon(2355.1594,-1169.2037,28.0057, 24, 0, 0, 0, -1, 500.0); // traficante JOB
CreateDynamicMapIcon(646.7178,-511.4338,16.3359, 24, 0, 0, 0, -1, 500.0); // traficante lab drug
CreateDynamicMapIcon(2245.9502,-1660.6981,15.2864, 45, 0, 0, 0, -1, 500.0); // Binco
CreateDynamicMapIcon(456.8236,-1501.6539,31.0389, 45, 0, 0, 0, -1, 500.0); // Binco
CreateDynamicMapIcon(2112.6711,-1211.6885,23.9632, 45, 0, 0, 0, -1, 500.0); // Binco
CreateDynamicMapIcon(1456.8384,-1137.7065,23.9601, 45, 0, 0, 0, -1, 500.0); // Binco
CreateDynamicMapIcon(453.9655,-1478.0486,30.8136, 45, 0, 0, 0, -1, 500.0); // Binco
CreateDynamicMapIcon(2229.5786,-1721.5316,13.5638, 54, 0, 0, 0, -1, 500.0); // GYM
CreateDynamicMapIcon(325.6813,-1515.0637,36.0325, 61, 0, 0, 0, -1, 500.0); // FBI
CreateDynamicMapIcon(816.1325,-1386.1024,13.6537, 59, 0, 0, 0, -1, 500.0); // VIP
CreateDynamicMapIcon(2263.9983,-1945.7395,13.5940, 27, 0, 0, 0, -1, 500.0); // Mecanicos
CreateDynamicMapIcon(1368.7128,-1279.8639,13.5541, 6 ,  0, 0, 0, -1, 500.0); // Ammunation
CreateDynamicMapIcon(1797.6865,-1578.5676,14.0869, 49, 0, 0, 0, -1, 500.0); // bar epica
CreateDynamicMapIcon(1836.8391,-1682.6100,13.3312, 48, 0, 0, 0, -1, 500.0); // alahambra
CreateDynamicMapIcon(1480.8044,-1771.8195,18.7958, 3, 0, 0, 0, -1, 500.0); // ayuntamiento
CreateDynamicMapIcon(1309.8909,-1363.6248,18.8594, 50, 0, 0, 0, -1, 500.0); // Restaurante
CreateDynamicMapIcon(2949.7107,-1491.1680,12.9062, 9, 0, 0, 0, -1, 500.0); // PUERTO
CreateDynamicMapIcon(1997.3848,-2330.7671,15.8119, 5, 0, 0, 0, -1, 500.0); // AERO
CreateDynamicMapIcon(661.3555,-566.9883,16.3359, 17, 0, 0, 0, -1, 500.0); // 24-7 Dillimore
CreateDynamicMapIcon(626.9654,-572.3998,17.9207, 30, 0, 0, 0, -1, 500.0); // SAPD Dillimore
CreateDynamicMapIcon(1396.9362,-1569.9027,14.2684, 52, 0, 0, 0, -1, 500.0); // BANK LS
//Jobs
CreateDynamicMapIcon(2218.0525,-2662.2483,13.5536, 56, 0, 0, 0, -1, 500.0); // Job Camionero
CreateDynamicMapIcon(2104.8408,-1810.0991,13.5547, 56, 0, 0, 0, -1, 500.0); // Job
CreateDynamicMapIcon(1289.1171,-1271.7650,13.5422, 56, 0, 0, 0, -1, 500.0); // Job
CreateDynamicMapIcon(1689.9009,-1494.9858,13.5469, 56, 0, 0, 0, -1, 500.0); // Job
CreateDynamicMapIcon(2487.4983,-1410.0270,28.8375, 56, 0, 0, 0, -1, 500.0); // Job
CreateDynamicMapIcon(963.8123,-1465.7533,13.4593, 56, 0, 0, 0, -1, 500.0); // Job
CreateDynamicMapIcon(1752.7062,-1894.1708,13.5574, 56, 0, 0, 0, -1, 500.0); // Job
CreateDynamicMapIcon(-104.2969,9.3283,3.1172, 56, 0, 0, 0, -1, 500.0); // Job cos
CreateDynamicMapIcon(2226.1716,-1718.1792,13.5165, 56, 0, 0, 0, -1, 500.0); // Job bodyguard
//FBI GARAGE - INTERIOR - HELIPORT
CreateDynamic3DTextLabel("Pres. F Para entrar.",COLOR_YELLOW,316.2381,-1513.3770,24.9219+0.6,4.0);
CreateDynamic3DTextLabel("Pres. F", COLOR_YELLOW,301.5812,-1490.6759,-45.1302+0.6,4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,600,0);
CreateDynamic3DTextLabel("Pres. F Para entrar.",COLOR_YELLOW,308.8113,-1509.8134,77.7645+0.6,4.0);
// <<<<<<<<<<<<<<<<Maps>>>>>>>>>>>>>>>>>>>
/*CreateDynamicObject(2103,1507.40002441,-1628.59997559,13.60000038,0.00000000,0.00000000,42.75000000); //object(low_hi_fi_1) (1)
CreateDynamic3DTextLabel("Proximamente BoomBox\nPodrás poner radios\n/setboombox y /changestation",COLOR_YELLOW,1507.40002441,-1628.59997559,13.60000038+0.1,6.0);*/
//FIX (Incognito's streamer v2.3.8) - Stability Glitch for the Welcome
CreateDynamicObject(4729, 682.85186767578, -446.04205322266, -26.629999160767, 20, 90, 0.000000, -1, 1, -1, 200.0);
depgate = CreateDynamicObject(969,1619.69995117,-1852.59997559,12.50000000,0.00000000,0.00000000,2.75000000); //object(electricgate) (1)
// Gas station and blocks
CreateDynamicObject(3187,2529.50000000,-1521.80004883,27.00000000,0.00000000,0.00000000,358.50000000); //object(nt_gasstation) (1)
CreateDynamicObject(983,2150.39990234,-2702.00000000,13.19999981,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (1)
CreateDynamicObject(983,2149.30004883,-2664.10009766,13.19999981,0.00000000,0.00000000,38.00000000); //object(fenceshit3) (2)
CreateDynamicObject(984,1295.80004883,-1862.30004883,13.19999981,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,1226.09997559,-1880.90002441,13.19999981,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (3)
CreateDynamicObject(984,1370.50000000,-1883.59997559,13.19999981,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (4)
CreateDynamicObject(983,1287.40002441,-1877.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
// VIP Lounge
CreateDynamicObject(14607, 812.20, -1388.40, 1022.00,   0.00, 0.00, 270.00);
CreateDynamicObject(14614, 812.20, -1388.40, 1022.00,   0.00, 0.00, 270.00);
CreateDynamicObject(14563, 812.20, -1388.40, 1022.00,   0.00, 0.00, 270.00);
CreateDynamicObject(14561, 812.20, -1381.00, 1021.00,   0.00, 0.00, 270.00);
CreateDynamicObject(14605, 812.20, -1410.25, 1025.80,   0.00, 0.00, 270.00);
CreateDynamicObject(8661, 810.70, -1398.40, 1031.30,   90.00, 0.00, 0.00);
CreateDynamicObject(3528, 811.80, -1400.10, 1024.60,   0.00, 0.00, 270.00);
CreateDynamicObject(3528, 811.80, -1400.10, 1024.60,   0.00, 0.00, 270.00);
CreateDynamicObject(6136, 754.70, -1394.70, 1017.10,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1386.70, 1017.10,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1378.80, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1370.80, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1362.80, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1354.90, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1346.90, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1338.90, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 869.50, -1395.40, 1016.90,   0.00, 0.00, 180.00);
CreateDynamicObject(6136, 869.50, -1387.40, 1016.90,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1379.40, 1016.90,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1371.40, 1016.90,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1363.40, 1016.90,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1355.40, 1016.90,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1347.40, 1016.90,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1339.40, 1016.70,   0.00, 0.00, 179.99);
CreateDynamicObject(9044, 816.80, -1333.00, 1025.40,   0.00, 0.00, 270.00);
CreateDynamicObject(8483, 813.50, -1343.60, 1018.90,   0.00, 0.00, 270.00);
CreateDynamicObject(9831, 811.80, -1352.80, 1013.90,   0.00, 0.00, 180.00);
CreateDynamicObject(6965, 812.60, -1348.40, 1016.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2780, 812.60, -1354.70, 1008.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 803.00, -1350.20, 1014.40,   0.00, 0.00, 12.00);
CreateDynamicObject(2773, 803.40, -1352.10, 1014.40,   0.00, 0.00, 11.99);
CreateDynamicObject(2773, 804.20, -1353.80, 1014.40,   0.00, 0.00, 39.24);
CreateDynamicObject(2773, 805.60, -1355.50, 1014.40,   0.00, 0.00, 38.99);
CreateDynamicObject(2773, 807.10, -1356.80, 1014.40,   0.00, 0.00, 62.99);
CreateDynamicObject(2773, 809.10, -1357.80, 1014.40,   0.00, 0.00, 64.48);
CreateDynamicObject(2773, 811.20, -1358.30, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 813.50, -1358.30, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 815.50, -1357.90, 1014.40,   0.00, 0.00, 116.00);
CreateDynamicObject(2773, 817.40, -1357.00, 1014.40,   0.00, 0.00, 116.00);
CreateDynamicObject(2773, 819.20, -1355.90, 1014.40,   0.00, 0.00, 135.25);
CreateDynamicObject(2773, 820.70, -1354.20, 1014.40,   0.00, 0.00, 141.24);
CreateDynamicObject(2773, 821.80, -1352.20, 1014.40,   0.00, 0.00, 161.49);
CreateDynamicObject(2773, 823.50, -1349.40, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2774, 825.40, -1348.20, 1026.00,   0.00, 0.00, 0.00);
CreateDynamicObject(2774, 798.80, -1348.20, 1026.00,   0.00, 0.00, 0.00);
CreateDynamicObject(9833, 807.00, -1353.20, 1010.20,   0.00, 0.00, 0.00);
CreateDynamicObject(9833, 817.10, -1353.20, 1010.20,   0.00, 0.00, 0.00);
CreateDynamicObject(10771, 932.20, -1371.50, 1003.30,   0.00, 0.00, 179.99);
CreateDynamicObject(2773, 821.80, -1366.30, 1015.60,   0.00, 0.00, 294.99);
CreateDynamicObject(2773, 823.90, -1365.30, 1015.60,   0.00, 0.00, 294.99);
CreateDynamicObject(2773, 821.70, -1376.60, 1015.60,   0.00, 0.00, 65.74);
CreateDynamicObject(2773, 823.80, -1377.60, 1015.60,   0.00, 0.00, 65.74);
CreateDynamicObject(2773, 825.80, -1378.50, 1015.60,   0.00, 0.00, 65.74);
CreateDynamicObject(12950, 825.60, -1360.50, 1011.70,   0.00, 0.00, 180.00);
CreateDynamicObject(12950, 825.60, -1360.50, 1011.70,   0.00, 0.00, 179.99);
CreateDynamicObject(3524, 820.50, -1376.00, 1014.80,   0.00, 0.00, 270.00);
CreateDynamicObject(3524, 820.50, -1376.00, 1014.80,   0.00, 0.00, 270.00);
CreateDynamicObject(3524, 820.40, -1366.90, 1014.80,   0.00, 0.00, 270.00);
CreateDynamicObject(3524, 820.40, -1366.90, 1014.80,   0.00, 0.00, 270.00);
CreateDynamicObject(14391, 821.50, -1371.50, 1015.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2439, 820.70, -1375.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1374.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1373.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1372.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1371.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1370.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1369.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1368.40, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(2439, 820.70, -1367.60, 1015.00,   0.00, 0.00, 270.00);
CreateDynamicObject(3498, 818.90, -1372.60, 1010.40,   0.00, 0.00, 0.00);
CreateDynamicObject(3498, 819.00, -1369.70, 1010.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2595, 822.40, -1368.40, 1015.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 820.60, -1374.50, 1016.60,   0.00, 0.00, 270.00);
CreateDynamicObject(2232, 820.60, -1368.50, 1016.60,   0.00, 0.00, 270.00);
CreateDynamicObject(18102, 821.80, -1367.60, 1017.10,   52.00, 0.00, 90.00);
CreateDynamicObject(16088, 821.00, -1371.60, 1011.90,   0.00, 0.00, 0.00);
CreateDynamicObject(2232, 820.40, -1364.80, 1016.90,   0.00, 0.00, 270.00);
CreateDynamicObject(2232, 820.40, -1364.80, 1015.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2232, 820.30, -1378.30, 1015.30,   0.00, 0.00, 270.00);
CreateDynamicObject(2232, 820.30, -1378.30, 1016.90,   0.00, 0.00, 270.00);
CreateDynamicObject(2773, 816.60, -1405.50, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 816.60, -1407.80, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 816.60, -1410.10, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 816.60, -1412.40, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 816.60, -1414.70, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 807.80, -1405.50, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 807.80, -1407.80, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 807.80, -1410.10, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 807.80, -1412.40, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 807.80, -1414.70, 1016.40,   0.00, 0.00, 0.00);
CreateDynamicObject(14560, 798.30, -1370.54, 1017.90,   0.00, 0.00, 0.00);
CreateDynamicObject(14565, 798.33, -1370.59, 1015.40,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1378.80, 1024.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1370.80, 1024.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1362.80, 1024.90,   0.00, 0.00, 0.00);
CreateDynamicObject(6136, 754.70, -1354.90, 1024.90,   0.00, 0.00, 0.00);
CreateDynamicObject(3524, 800.06, -1360.82, 1013.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2350, 802.60, -1364.44, 1013.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2350, 803.25, -1365.68, 1013.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2350, 803.41, -1367.08, 1013.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2350, 803.48, -1368.54, 1013.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2350, 803.44, -1371.88, 1013.80,   0.00, 0.00, 0.00);
CreateDynamicObject(2350, 803.64, -1369.92, 1013.80,   0.00, 0.00, 0.00);
CreateDynamicObject(8661, 812.60, -1421.60, 1021.00,   90.00, 0.00, 179.99);
CreateDynamicObject(3851, 804.40, -1421.60, 1024.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 808.40, -1421.60, 1024.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 812.40, -1421.60, 1024.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 816.40, -1421.60, 1024.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 820.40, -1421.60, 1024.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 804.40, -1421.60, 1013.50,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 808.40, -1421.60, 1013.50,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 812.40, -1421.60, 1013.50,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 816.40, -1421.60, 1013.50,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 820.40, -1421.60, 1013.50,   90.00, 0.00, 90.00);
CreateDynamicObject(1569, 810.50, -1421.50, 1015.40,   0.00, 0.00, 0.00);
CreateDynamicObject(1569, 813.50, -1421.50, 1015.40,   0.00, 0.00, 180.00);
CreateDynamicObject(13594, 812.00, -1421.50, 1015.00,   0.00, 0.00, 0.00);
CreateDynamicObject(14782, 797.60, -1414.60, 1016.30,   0.00, 0.00, 90.00);
CreateDynamicObject(6136, 869.50, -1379.40, 1025.30,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1371.50, 1025.30,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1363.60, 1025.30,   0.00, 0.00, 179.99);
CreateDynamicObject(6136, 869.50, -1355.70, 1025.30,   0.00, 0.00, 179.99);
CreateDynamicObject(2773, 801.80, -1349.20, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 799.90, -1349.20, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 798.00, -1349.20, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 822.30, -1350.30, 1014.40,   0.00, 0.00, 168.74);
CreateDynamicObject(2773, 825.50, -1349.40, 1014.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2755, 805.40, -1400.50, 1017.20,   0.00, 0.00, 90.00);
CreateDynamicObject(3851, 804.40, -1417.50, 1020.80,   90.00, 0.00, 0.00);
CreateDynamicObject(3533, 804.50, -1420.00, 1019.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3533, 804.50, -1420.00, 1029.60,   180.00, 0.00, 0.00);
CreateDynamicObject(3533, 804.50, -1411.40, 1019.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3533, 804.50, -1411.40, 1029.60,   180.00, 0.00, 0.00);
CreateDynamicObject(3533, 804.50, -1407.70, 1019.70,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 801.90, -1407.50, 1020.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 797.90, -1407.50, 1020.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 804.70, -1409.70, 1023.80,   90.00, 0.00, 0.00);
CreateDynamicObject(3533, 804.50, -1407.70, 1029.60,   180.00, 0.00, 0.00);
CreateDynamicObject(14397, 802.50, -1407.20, 1017.80,   90.00, 0.00, 0.00);
CreateDynamicObject(14397, 797.80, -1409.10, 1020.80,   0.00, 90.00, 0.00);
CreateDynamicObject(14397, 798.20, -1409.10, 1020.80,   0.00, 90.00, 0.00);
CreateDynamicObject(14397, 798.60, -1409.10, 1020.80,   0.00, 90.00, 0.00);
CreateDynamicObject(14397, 799.00, -1409.10, 1020.80,   0.00, 90.00, 0.00);
CreateDynamicObject(14397, 802.50, -1407.20, 1015.90,   90.00, 0.00, 0.00);
CreateDynamicObject(14397, 802.50, -1407.50, 1015.90,   90.00, 0.00, 0.00);
CreateDynamicObject(14397, 802.50, -1407.60, 1015.90,   90.00, 0.00, 0.00);
CreateDynamicObject(3851, 804.40, -1413.50, 1020.80,   90.00, 0.00, 0.00);
CreateDynamicObject(14397, 803.20, -1411.90, 1002.30,   0.00, 90.00, 90.00);
CreateDynamicObject(14397, 803.20, -1412.40, 1002.30,   0.00, 90.00, 90.00);
CreateDynamicObject(14397, 803.20, -1412.10, 1002.30,   0.00, 90.00, 90.00);
CreateDynamicObject(2332, 797.24, -1418.95, 1017.32,   0.00, 0.00, 88.50);
CreateDynamicObject(1703, 803.82, -1414.82, 1015.30,   0.00, 0.00, 270.00);
CreateDynamicObject(8661, 784.00, -1407.40, 1016.30,   90.00, 0.00, 0.00);
CreateDynamicObject(8661, 784.10, -1407.50, 1022.80,   90.00, 0.00, 180.00);
CreateDynamicObject(8661, 804.50, -1431.40, 1018.10,   90.00, 0.00, 270.00);
CreateDynamicObject(8661, 804.40, -1431.40, 1018.10,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 804.40, -1421.70, 1020.80,   90.00, 0.00, 0.00);
CreateDynamicObject(8661, 784.10, -1420.90, 1022.80,   90.00, 0.00, 179.99);
CreateDynamicObject(3851, 801.90, -1420.90, 1020.90,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 797.90, -1420.90, 1020.90,   90.00, 0.00, 90.00);
CreateDynamicObject(14608, 825.40, -1410.30, 1017.10,   0.00, 0.00, 44.50);
CreateDynamicObject(2773, 802.30, -1408.80, 1016.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 800.20, -1408.80, 1016.00,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 798.10, -1408.80, 1016.00,   0.00, 0.00, 90.00);
CreateDynamicObject(1703, 804.88, -1399.50, 1015.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1703, 800.86, -1399.48, 1015.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1703, 801.90, -1401.50, 1015.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2755, 801.40, -1400.40, 1017.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1703, 797.68, -1401.48, 1015.40,   0.00, 0.00, 90.00);
CreateDynamicObject(2755, 801.42, -1405.92, 1017.20,   0.00, 0.00, 90.00);
CreateDynamicObject(2755, 805.40, -1406.00, 1017.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1703, 797.68, -1407.08, 1015.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1703, 800.92, -1405.04, 1015.40,   0.00, 0.00, 270.00);
CreateDynamicObject(1703, 801.94, -1407.06, 1015.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1704, 804.88, -1405.00, 1015.40,   0.00, 0.00, 270.00);
CreateDynamicObject(3533, 804.50, -1398.40, 1016.30,   0.00, 0.00, 0.00);
CreateDynamicObject(3851, 801.70, -1398.60, 1020.80,   90.00, 0.00, 90.00);
CreateDynamicObject(3851, 797.70, -1398.60, 1020.80,   90.00, 0.00, 90.00);
CreateDynamicObject(2631, 799.80, -1403.30, 1015.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2631, 803.70, -1403.30, 1015.50,   0.00, 0.00, 0.00);
CreateDynamicObject(2631, 796.90, -1403.20, 1015.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2100, 797.40, -1403.50, 1015.60,   0.00, 0.00, 90.00);
CreateDynamicObject(18646, 820.39, -1366.92, 1017.05,   0.00, 0.00, 0.00);
CreateDynamicObject(18646, 820.40, -1376.03, 1017.05,   0.00, 0.00, 0.00);
CreateDynamicObject(18653, 814.00, 4583.00, -1351.00,   0.00, 0.00, 0.00);
CreateDynamicObject(18653, 810.35, -1350.08, 1017.07,   0.00, 0.00, 90.00);
CreateDynamicObject(18653, 814.00, 5515.00, -135.00,   0.00, 0.00, 0.00);
CreateDynamicObject(18653, 814.32, -1350.16, 1017.07,   0.00, 0.00, 90.00);
CreateDynamicObject(18653, 811.98, -1398.28, 1022.88,   0.00, 0.00, 90.00);
CreateDynamicObject(18653, 811.98, -1398.28, 1022.88,   0.00, 0.00, 90.00);
CreateDynamicObject(18653, 814.32, -1350.16, 1017.07,   0.00, 0.00, 90.00);
CreateDynamicObject(18654, 820.00, 2551365.00, 5977.00,   0.00, 0.00, 0.00);
CreateDynamicObject(18654, 820.31, -1365.61, 1017.29,   0.00, 0.00, 0.00);
CreateDynamicObject(18654, 820.31, -1377.60, 1017.29,   0.00, 0.00, 0.00);
CreateDynamicObject(18653, 810.35, -1350.08, 1017.07,   0.00, 0.00, 90.00);
CreateDynamicObject(18885, 802.70, -1420.52, 1016.55,   0.00, 0.00, 180.00);
CreateDynamicObject(18646, 805.40, -1402.02, 1018.94,   0.00, 0.00, 0.00);
CreateDynamicObject(18646, 805.39, -1404.48, 1018.94,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, 799.32, -1406.81, 1015.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2311, 799.32, -1401.32, 1015.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2311, 803.38, -1406.81, 1015.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2311, 803.00, 3800.00, -1401.00,   0.00, 0.00, 0.00);
CreateDynamicObject(19129, 815.74, -1370.78, 1013.49,   0.00, 0.00, 0.00);
CreateDynamicObject(19129, 795.77, -1370.79, 1013.49,   0.00, 0.00, 0.00);
CreateDynamicObject(2311, 803.38, -1401.29, 1015.50,   0.00, 0.00, 90.00);
CreateDynamicObject(3524, 799.69, -1380.66, 1013.50,   0.00, 0.00, 90.00);
CreateDynamicObject(2755, 827.00, -1417.40, 1017.20,   0.00, 0.00, 90.00);
CreateDynamicObject(2755, 827.00, -1403.20, 1017.20,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 826.90, -1418.20, 1015.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1569, 826.90, -1402.50, 1015.40,   0.00, 0.00, 270.00);
CreateDynamicObject(2942, 800.34, -1420.55, 1016.11,   0.00, 0.00, 180.84);
CreateDynamicObject(19125, 802.83, -1408.05, 1016.18,   0.00, 0.00, 0.00);
CreateDynamicObject(19125, 801.17, -1408.11, 1016.18,   0.00, 0.00, 0.00);
CreateDynamicObject(19125, 799.77, -1408.10, 1016.18,   0.00, 0.00, 0.00);
CreateDynamicObject(19125, 798.10, -1408.13, 1016.18,   0.00, 0.00, 0.00);
//Families 2 HQ
CreateDynamicObject(14588,-98.29785156,-267.04980469,2703.50634766,0.00000000,0.00000000,0.00000000); //object(ab_abbatoir01) (1)
CreateDynamicObject(13656,-25.18847656,-283.83496094,2647.69531250,0.00000000,0.00000000,0.00000000); //object(fuckknows) (2)
CreateDynamicObject(1508,-95.14941406,-282.77929688,2701.26611328,0.00000000,0.00000000,0.00000000); //object(dyn_garage_door) (1)
CreateDynamicObject(1499,-95.12695312,-285.83886719,2699.61474609,0.00000000,0.00000000,270.49438477); //object(gen_doorint05) (1)
CreateDynamicObject(1499,-95.10786438,-288.82321167,2699.61474609,0.00000000,0.00000000,89.49462891); //object(gen_doorint05) (2)
CreateDynamicObject(1508,-81.33886719,-244.11523438,2701.27294922,0.00000000,0.00000000,0.00000000); //object(dyn_garage_door) (1)
CreateDynamicObject(1508,-95.15917969,-286.80468750,2703.76098633,0.00000000,0.00000000,0.00000000); //object(dyn_garage_door) (1)
CreateDynamicObject(1709,-93.39228821,-232.30055237,2699.60791016,0.00000000,0.00000000,90.75000000); //object(kb_couch08) (2)
CreateDynamicObject(1707,-91.13670349,-226.33976746,2699.60791016,0.00000000,0.00000000,0.00000000); //object(kb_couch01) (1)
CreateDynamicObject(1707,-86.84863281,-226.46289062,2699.60791016,0.00000000,0.00000000,1.74682617); //object(kb_couch01) (2)
CreateDynamicObject(1710,-89.13728333,-234.33372498,2699.60791016,0.00000000,0.00000000,180.00000000); //object(kb_couch07) (1)
CreateDynamicObject(1710,-82.30017090,-227.87661743,2699.60791016,0.00000000,0.00000000,268.49453735); //object(kb_couch07) (2)
CreateDynamicObject(1710,-82.29980469,-227.87597656,2699.60791016,0.00000000,0.00000000,268.48937988); //object(kb_couch07) (3)
CreateDynamicObject(1710,-83.14976501,-234.34671021,2699.60791016,0.00000000,0.00000000,177.98937988); //object(kb_couch07) (4)
CreateDynamicObject(926,-94.07031250,-233.98535156,2699.85717773,0.00000000,0.00000000,316.74133301); //object(rubbish_box2) (1)
CreateDynamicObject(14791,-105.66125488,-233.62854004,2701.50781250,0.00000000,0.00000000,0.00000000); //object(a_vgsgymboxa) (1)
CreateDynamicObject(3819,-97.67595673,-234.05863953,2700.61254883,0.00000000,0.00000000,0.00000000); //object(bleacher_sfsx) (1)
CreateDynamicObject(3819,-112.61670685,-233.88407898,2700.61254883,0.00000000,0.00000000,180.00000000); //object(bleacher_sfsx) (2)
CreateDynamicObject(14782,-111.92964935,-226.19540405,2700.62402344,0.00000000,0.00000000,0.00000000); //object(int3int_boxing30) (1)
CreateDynamicObject(2991,-97.71770477,-227.73004150,2700.23559570,0.00000000,0.00000000,0.00000000); //object(imy_bbox) (2)
CreateDynamicObject(3037,-110.17871094,-256.64355469,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (1)
CreateDynamicObject(3037,-91.67907715,-271.30200195,2703.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(2898,-95.11888123,-260.15966797,2700.65014648,0.03442383,90.24783325,359.99975586); //object(funturf_law) (1)
CreateDynamicObject(1499,-89.47648621,-271.30743408,2699.60791016,0.00000000,0.00000000,359.98632812); //object(gen_doorint05) (1)
CreateDynamicObject(3037,-101.76660156,-256.55371094,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (3)
CreateDynamicObject(3037,-109.07031250,-256.53906250,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (4)
CreateDynamicObject(3037,-106.62500000,-256.57031250,2704.20629883,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (5)
CreateDynamicObject(1492,-89.13627625,-300.95327759,2699.60791016,0.00000000,0.00000000,0.00000000); //object(gen_doorint02) (1)
CreateDynamicObject(2205,-87.28223419,-306.11087036,2699.60913086,0.00000000,0.00000000,0.00000000); //object(med_office8_desk_1) (1)
CreateDynamicObject(1711,-86.83332062,-303.97357178,2699.61083984,0.00000000,0.00000000,0.00000000); //object(kb_chair01) (1)
CreateDynamicObject(1715,-86.63104248,-307.63616943,2699.60693359,0.00000000,0.00000000,181.25000000); //object(kb_swivelchair2) (1)
CreateDynamicObject(3037,-100.31152344,-256.66503906,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(1499,-106.92871094,-256.48925781,2699.60791016,0.00000000,0.00000000,359.73632812); //object(gen_doorint05) (1)
CreateDynamicObject(3037,-84.31444550,-271.33050537,2703.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(1499,-103.91894531,-256.46386719,2699.60791016,0.00000000,0.00000000,179.98901367); //object(gen_doorint05) (1)
CreateDynamicObject(1499,-86.47949219,-271.28143311,2699.60791016,0.00000000,0.00000000,179.98901367); //object(gen_doorint05) (1)
CreateDynamicObject(3037,-93.01473236,-271.24536133,2703.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(3037,-79.91473389,-271.34243774,2703.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(3037,-86.61709595,-271.28967285,2704.29638672,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(3037,-86.06420135,-271.29855347,2707.80639648,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (2)
CreateDynamicObject(18260,-113.46258545,-300.11657715,2704.00634766,0.00000000,0.00000000,244.24462891); //object(crates01) (2)
CreateDynamicObject(2603,-83.08013916,-261.53747559,2700.05981445,0.00000000,0.00000000,270.75000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,-83.21212769,-265.07394409,2700.05981445,0.00000000,0.00000000,270.74707031); //object(police_cell_bed) (2)
CreateDynamicObject(2603,-83.08612823,-268.24624634,2700.05981445,0.00000000,0.00000000,270.74707031); //object(police_cell_bed) (3)
CreateDynamicObject(14699,-84.38232422,-307.48748779,2702.11572266,0.00000000,0.00000000,0.00000000); //object(int_tat_lights) (2)
CreateDynamicObject(14842,-83.17741394,-257.86981201,2701.57153320,0.00000000,0.00000000,270.00000000); //object(int_policea07) (2)
CreateDynamicObject(14384,-85.41957855,-252.83740234,2701.10058594,0.00000000,0.00000000,180.25004578); //object(kitchen_bits) (1)
CreateDynamicObject(3055,-89.21598053,-253.02322388,2701.80590820,0.00000000,0.00000000,90.00000000); //object(kmb_shutter) (1)
CreateDynamicObject(1433,-90.94671631,-254.48638916,2699.78759766,0.00000000,0.00000000,0.00000000); //object(dyn_table_1) (1)
CreateDynamicObject(926,-92.20387268,-254.57051086,2699.85717773,0.00000000,0.00000000,316.74682617); //object(rubbish_box2) (1)
CreateDynamicObject(926,-90.87577057,-253.25616455,2699.85717773,0.00000000,0.00000000,0.24682617); //object(rubbish_box2) (1)
CreateDynamicObject(926,-90.93659973,-256.07272339,2699.85717773,0.00000000,0.00000000,0.24169922); //object(rubbish_box2) (1)
CreateDynamicObject(926,-89.54051971,-254.74157715,2699.85717773,0.00000000,0.00000000,94.24169922); //object(rubbish_box2) (1)
CreateDynamicObject(1432,-93.35039520,-250.83764648,2699.60791016,0.00000000,0.00000000,50.00000000); //object(dyn_table_2) (1)
CreateDynamicObject(2415,-88.39543152,-251.58883667,2699.60791016,0.00000000,0.00000000,90.25000000); //object(cj_ff_fryer) (1)
CreateDynamicObject(2417,-88.54780579,-250.21372986,2699.60791016,0.00000000,0.00000000,89.25000000); //object(cj_ff_cooker) (1)
CreateDynamicObject(2811,-83.72886658,-307.96405029,2699.60620117,0.00000000,0.00000000,52.00000000); //object(gb_romanpot01) (1)
CreateDynamicObject(2811,-89.60726166,-308.14785767,2699.60620117,0.00000000,0.00000000,51.99829102); //object(gb_romanpot01) (2)
CreateDynamicObject(3055,-103.86166382,-295.97775269,2699.51269531,90.00000000,0.00000000,0.00000000); //object(kmb_shutter) (3)
CreateDynamicObject(3055,-104.31262207,-300.93267822,2699.51269531,90.00000000,0.00000000,0.00000000); //object(kmb_shutter) (4)
CreateDynamicObject(3055,-94.18767548,-300.84317017,2699.51269531,90.00000000,0.00000000,0.00000000); //object(kmb_shutter) (5)
CreateDynamicObject(3055,-93.94046783,-295.82284546,2699.51269531,90.00000000,0.00000000,0.00000000); //object(kmb_shutter) (6)
CreateDynamicObject(2000,-88.45681000,-254.22750854,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (1)
CreateDynamicObject(2000,-88.44078064,-254.77642822,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (2)
CreateDynamicObject(2000,-88.41259003,-255.77566528,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (4)
CreateDynamicObject(2000,-87.85582733,-256.00274658,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (5)
CreateDynamicObject(2000,-87.43394470,-256.05642700,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (6)
CreateDynamicObject(2000,-87.09837341,-255.99818420,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (7)
CreateDynamicObject(2000,-86.47454834,-256.05337524,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (8)
CreateDynamicObject(2000,-84.13223267,-256.07916260,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (9)
CreateDynamicObject(2000,-83.73510742,-256.13037109,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (10)
CreateDynamicObject(2000,-83.26325989,-256.19076538,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (11)
CreateDynamicObject(2000,-83.26269531,-256.19042969,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (12)
CreateDynamicObject(2000,-82.96740723,-256.05221558,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (13)
CreateDynamicObject(2000,-82.24776459,-256.14483643,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (14)
CreateDynamicObject(2000,-82.19555664,-255.74787903,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (15)
CreateDynamicObject(2000,-82.19531250,-255.74707031,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (16)
CreateDynamicObject(2000,-82.13465118,-255.25025940,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (17)
CreateDynamicObject(2000,-82.17688751,-254.91281128,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (18)
CreateDynamicObject(2000,-82.17122650,-254.23803711,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (19)
CreateDynamicObject(2000,-81.68807220,-256.37515259,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (20)
CreateDynamicObject(2000,-82.75397491,-256.43182373,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (21)
CreateDynamicObject(2000,-83.34257507,-256.55786133,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (22)
CreateDynamicObject(2000,-83.92103577,-256.71792603,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (23)
CreateDynamicObject(2000,-84.73601532,-256.03085327,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (24)
CreateDynamicObject(2000,-84.74471283,-256.53588867,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (25)
CreateDynamicObject(2000,-85.28645325,-256.44384766,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (26)
CreateDynamicObject(2000,-85.33440399,-255.97868347,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (27)
CreateDynamicObject(2000,-85.94226074,-255.97738647,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (28)
CreateDynamicObject(2000,-86.00389099,-256.34643555,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (29)
CreateDynamicObject(2000,-86.07374573,-256.76489258,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (30)
CreateDynamicObject(2000,-85.40767670,-256.87719727,2699.10791016,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (31)
CreateDynamicObject(2000,-88.16789246,-256.15945435,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (32)
CreateDynamicObject(2000,-88.42578125,-255.30078125,2699.30786133,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (33)
CreateDynamicObject(2232,-88.79286194,-255.48683167,2701.97290039,0.00000000,0.00000000,90.50000000); //object(med_speaker_4) (1)
CreateDynamicObject(2232,-88.76255798,-255.09228516,2701.97290039,0.00000000,0.00000000,90.49987793); //object(med_speaker_4) (2)
CreateDynamicObject(2232,-88.79325867,-254.55815125,2701.97290039,0.00000000,0.00000000,90.49987793); //object(med_speaker_4) (3)
CreateDynamicObject(2230,-88.60476685,-253.18774414,2699.60791016,0.00000000,0.00000000,89.50000000); //object(swank_speaker_2) (1)
CreateDynamicObject(2230,-89.15435791,-253.17642212,2699.60791016,0.00000000,0.00000000,89.49462891); //object(swank_speaker_2) (2)
CreateDynamicObject(2230,-89.14422607,-252.67590332,2699.60791016,0.00000000,0.00000000,89.49462891); //object(swank_speaker_2) (3)
CreateDynamicObject(2230,-88.64468384,-252.73583984,2699.60791016,0.00000000,0.00000000,89.49462891); //object(swank_speaker_2) (4)
CreateDynamicObject(2230,-88.64704895,-252.86032104,2699.60791016,0.00000000,0.00000000,89.49462891); //object(swank_speaker_2) (5)
CreateDynamicObject(2521,-94.37109375,-270.41333008,2699.60791016,0.00000000,0.00000000,90.25000000); //object(cj_toilet2) (1)
CreateDynamicObject(2521,-94.37135315,-268.72851562,2699.60791016,0.00000000,0.00000000,90.24719238); //object(cj_toilet2) (2)
CreateDynamicObject(2521,-94.44329834,-267.07672119,2699.60791016,0.00000000,0.00000000,90.24719238); //object(cj_toilet2) (3)
CreateDynamicObject(2669,-112.99623871,-298.40795898,2700.94824219,0.00000000,0.00000000,157.50000000); //object(cj_chris_crate) (2)
CreateDynamicObject(2567,-109.04917908,-298.23114014,2701.53540039,0.00000000,0.00000000,269.75000000); //object(ab_warehouseshelf) (1)
CreateDynamicObject(2567,-109.06734467,-293.17669678,2701.53540039,0.00000000,0.00000000,269.99731445); //object(ab_warehouseshelf) (2)
CreateDynamicObject(18260,-113.08886719,-276.54882812,2701.18115234,0.00000000,0.00000000,272.99926758); //object(crates01) (2)
CreateDynamicObject(944,-110.85527802,-299.68756104,2700.49267578,0.00000000,359.75000000,63.75000000); //object(packing_carates04) (1)
CreateDynamicObject(944,-110.94170380,-299.62292480,2701.82666016,0.00000000,359.74731445,69.49816895); //object(packing_carates04) (2)
CreateDynamicObject(944,-110.36118317,-298.16342163,2700.49267578,0.00000000,359.74731445,73.49816895); //object(packing_carates04) (3)
CreateDynamicObject(3066,-97.36394501,-299.25558472,2700.66894531,0.00000000,0.00000000,90.00000000); //object(ammotrn_obj) (1)
CreateDynamicObject(1433,-113.40845490,-299.21112061,2699.91040039,0.00000000,0.00000000,337.25000000); //object(dyn_table_1) (2)
CreateDynamicObject(2359,-113.37055206,-299.15924072,2700.62866211,0.00000000,0.00000000,132.00000000); //object(ammo_box_c5) (1)
CreateDynamicObject(1362,-113.37109375,-252.52148438,2700.20629883,0.00000000,0.00000000,0.00000000); //object(cj_firebin) (1)
CreateDynamicObject(2035,-114.33557892,-298.09613037,2701.03857422,0.00000000,90.25021362,337.75000000); //object(cj_m16) (1)
CreateDynamicObject(2035,-114.18252563,-297.61962891,2701.03857422,0.00000000,90.24719238,337.74719238); //object(cj_m16) (2)
CreateDynamicObject(2035,-113.91109467,-297.10217285,2701.03857422,0.00000000,90.24719238,337.74719238); //object(cj_m16) (3)
CreateDynamicObject(3015,-114.71958160,-290.99237061,2699.60791016,0.00000000,0.00000000,0.00000000); //object(cr_cratestack) (1)
CreateDynamicObject(3015,-114.81153870,-291.82714844,2699.60791016,0.00000000,0.00000000,0.00000000); //object(cr_cratestack) (2)
CreateDynamicObject(3015,-113.81753540,-290.95889282,2699.60791016,0.00000000,0.00000000,0.00000000); //object(cr_cratestack) (3)
CreateDynamicObject(5262,-111.23828125,-285.00781250,2702.57250977,0.00000000,0.00000000,178.24768066); //object(las2dkwar04) (1)
CreateDynamicObject(5259,-99.16796875,-267.64843750,2699.00781250,0.00000000,0.00000000,0.00000000); //object(las2dkwar01) (1)
CreateDynamicObject(5269,-96.29828644,-277.31652832,2701.91699219,0.00000000,0.00000000,0.00000000); //object(las2dkwar05) (1)
CreateDynamicObject(3037,-110.08990479,-263.44274902,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (1)
CreateDynamicObject(3037,-106.35923767,-263.46508789,2704.20629883,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (5)
CreateDynamicObject(3037,-101.48292542,-263.38748169,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (3)
CreateDynamicObject(1499,-106.66113281,-263.40820312,2699.60791016,0.00000000,0.00000000,359.73632812); //object(gen_doorint05) (1)
CreateDynamicObject(3037,-108.84178162,-263.43151855,2701.80639648,90.00000000,0.00000000,90.00000000); //object(warehouse_door2b) (4)
CreateDynamicObject(1499,-103.68652344,-263.39160156,2699.60791016,0.00000000,0.00000000,179.98352051); //object(gen_doorint05) (1)
CreateDynamicObject(1710,-97.56065369,-261.74758911,2699.60717773,0.00000000,0.00000000,88.75000000); //object(kb_couch07) (5)
CreateDynamicObject(18090,-97.06172943,-252.09442139,2702.17138672,0.00000000,0.00000000,0.00000000); //object(bar_bar1) (1)
CreateDynamicObject(5269,-111.73889160,-267.81909180,2701.91699219,0.00000000,0.00000000,0.00000000); //object(las2dkwar05) (2)
CreateDynamicObject(5269,-113.69272614,-267.83697510,2701.91699219,0.00000000,0.00000000,0.00000000); //object(las2dkwar05) (3)
CreateDynamicObject(1766,-112.06237030,-255.40557861,2699.60791016,0.00000000,0.00000000,180.00000000); //object(med_couch_1) (1)
CreateDynamicObject(1766,-110.91495514,-251.34416199,2699.60791016,0.00000000,0.00000000,270.24450684); //object(med_couch_1) (2)
CreateDynamicObject(1766,-114.21688843,-249.37316895,2699.60791016,0.00000000,0.00000000,358.74426270); //object(med_couch_1) (3)
CreateDynamicObject(2628,-113.42326355,-240.60705566,2699.61474609,0.00000000,0.00000000,90.00000000); //object(gym_bench2) (1)
CreateDynamicObject(2627,-113.54682159,-243.07095337,2699.61474609,0.00000000,0.00000000,90.75000000); //object(gym_treadmill) (1)
CreateDynamicObject(2630,-113.70320892,-245.05757141,2699.61474609,0.00000000,0.00000000,269.25000000); //object(gym_bike) (1)
CreateDynamicObject(2723,-99.76648712,-255.55334473,2699.97607422,0.00000000,0.00000000,0.00000000); //object(lm_stripstool) (1)
CreateDynamicObject(2723,-99.79714966,-253.95111084,2699.97607422,0.00000000,0.00000000,0.00000000); //object(lm_stripstool) (2)
CreateDynamicObject(2723,-99.80272675,-252.32424927,2699.97607422,0.00000000,0.00000000,0.00000000); //object(lm_stripstool) (3)
CreateDynamicObject(2723,-99.76169586,-250.84957886,2699.97607422,0.00000000,0.00000000,0.00000000); //object(lm_stripstool) (4)
CreateDynamicObject(2723,-99.69508362,-249.34982300,2699.97607422,0.00000000,0.00000000,0.00000000); //object(lm_stripstool) (5)
CreateDynamicObject(2254,-89.91997528,-304.60162354,2701.87353516,0.00000000,0.00000000,90.00000000); //object(frame_clip_1) (1)
CreateDynamicObject(2258,-83.29005432,-304.84344482,2701.97924805,0.00000000,0.00000000,269.99996948); //object(frame_clip_5) (1)
CreateDynamicObject(2256,-85.84432983,-301.11160278,2701.96875000,0.00000000,0.00000000,0.00000000); //object(frame_clip_3) (2)
CreateDynamicObject(2332,-84.78719330,-308.28472900,2700.06884766,0.00000000,0.00000000,180.25000000); //object(kev_safe) (1)
CreateDynamicObject(1728,-85.77057648,-291.63073730,2699.60791016,0.00000000,0.00000000,0.00000000); //object(mrk_seating3) (1)
CreateDynamicObject(1728,-82.89266968,-295.26010132,2699.60791016,0.00000000,359.00000000,269.50000000); //object(mrk_seating3) (2)
CreateDynamicObject(926,-112.19797516,-264.74664307,2704.38842773,0.00000000,0.00000000,316.74133301); //object(rubbish_box2) (1)
CreateDynamicObject(926,-114.45182037,-265.84939575,2704.38842773,0.00000000,0.00000000,262.74133301); //object(rubbish_box2) (1)
CreateDynamicObject(926,-113.22962189,-270.35430908,2704.38842773,0.00000000,0.00000000,192.98583984); //object(rubbish_box2) (1)
CreateDynamicObject(2991,-105.15119934,-264.84152222,2703.60083008,0.00000000,0.00000000,0.00000000); //object(imy_bbox) (1)
CreateDynamicObject(2991,-109.13214874,-264.84539795,2703.60083008,0.00000000,0.00000000,0.00000000); //object(imy_bbox) (3)
CreateDynamicObject(2991,-109.05959320,-266.81820679,2703.60083008,0.00000000,0.00000000,0.00000000); //object(imy_bbox) (4)
CreateDynamicObject(2991,-105.15332794,-266.82180786,2703.60083008,0.00000000,0.00000000,0.00000000); //object(imy_bbox) (5)
CreateDynamicObject(2097,-114.02845001,-262.69500732,2699.90820312,0.00000000,0.00000000,358.25000000); //object(bath_high) (1)
CreateDynamicObject(2738,-114.50225830,-257.31210327,2700.21069336,0.00000000,0.00000000,48.00000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2739,-114.53484344,-260.49368286,2699.60791016,0.00000000,0.00000000,89.25000000); //object(cj_b_sink1) (1)
CreateDynamicObject(2847,-83.51190948,-243.75923157,2699.61474609,0.00000000,0.00000000,269.25000000); //object(gb_bedrug05) (1)
CreateDynamicObject(1499,-106.81237030,-290.21380615,2699.60791016,0.00000000,0.00000000,359.73632812); //object(gen_doorint05) (1)
CreateDynamicObject(1499,-103.78660583,-290.22262573,2699.60791016,0.00000000,0.00000000,179.98352051); //object(gen_doorint05) (1)
CreateDynamicObject(1508,-100.65338898,-290.12677002,2701.26611328,0.00000000,0.00000000,90.25000000); //object(dyn_garage_door) (1)
CreateDynamicObject(1508,-109.89871216,-290.15994263,2701.26611328,0.00000000,0.00000000,90.24719238); //object(dyn_garage_door) (1)
CreateDynamicObject(1508,-105.32691956,-290.07632446,2703.76098633,0.00000000,0.00000000,90.00000000); //object(dyn_garage_door) (1)
CreateDynamicObject(5261,-83.05905151,-281.64044189,2701.84155273,0.00000000,0.00000000,270.25000000); //object(las2dkwar03) (1)
CreateDynamicObject(925,-83.05712891,-274.85308838,2700.67675781,0.00000000,0.00000000,269.99996948); //object(rack2) (1)
CreateDynamicObject(2973,-83.13854980,-287.88128662,2699.61474609,0.00000000,0.00000000,0.00000000); //object(k_cargo2) (1)
CreateDynamicObject(939,-93.64987946,-279.03503418,2702.05102539,0.00000000,0.00000000,88.75000000); //object(cj_df_unit) (1)
CreateDynamicObject(1362,-85.51982117,-294.74984741,2700.21313477,0.00000000,0.00000000,0.00000000); //object(cj_firebin) (1)
CreateDynamicObject(18260,-114.82111359,-305.76583862,2704.00634766,0.00000000,0.00000000,55.74255371); //object(crates01) (2)
//Hospital NG interior:
CreateDynamicObject(14668,1241.97753906,316.33203125,-12.74218750,0.00000000,0.00000000,155.50048828); //object(711_c) (1)
CreateDynamicObject(16500,1250.81274414,320.83963013,-10.74797821,0.00000000,0.00000000,155.54028320); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1239.35351562,326.01269531,-10.74797821,0.00000000,0.00000000,335.35217285); //object(cn2_savgardr1_) (2)
CreateDynamicObject(2948,1247.15527344,325.59375000,-12.74218750,0.00000000,0.00000000,244.99511719); //object(cr_door_02) (1)
CreateDynamicObject(2948,1245.40307617,326.37210083,-12.74218750,0.00000000,0.00000000,66.34619141); //object(cr_door_02) (5)
CreateDynamicObject(2948,1247.12719727,325.60192871,-12.74218750,0.00000000,0.00000000,66.09619141); //object(cr_door_02) (7)
CreateDynamicObject(2948,1245.40234375,326.37207031,-12.74218750,0.00000000,0.00000000,245.70690918); //object(cr_door_02) (9)
CreateDynamicObject(16500,1252.00988770,322.11306763,-10.74797821,0.00000000,0.00000000,65.97290039); //object(cn2_savgardr1_) (4)
CreateDynamicObject(16500,1239.74902344,327.75781250,-10.74797821,0.00000000,0.00000000,65.97290039); //object(cn2_savgardr1_) (5)
CreateDynamicObject(16500,1235.33691406,329.73535156,-10.74797821,0.00000000,0.00000000,65.97290039); //object(cn2_savgardr1_) (6)
CreateDynamicObject(16500,1240.55053711,322.84387207,-10.74797821,0.00000000,0.00000000,65.97290039); //object(cn2_savgardr1_) (10)
CreateDynamicObject(16500,1247.58593750,319.62402344,-10.74797821,0.00000000,0.00000000,65.97290039); //object(cn2_savgardr1_) (11)
CreateDynamicObject(16500,1256.47546387,320.10949707,-10.74797821,0.00000000,0.00000000,65.97290039); //object(cn2_savgardr1_) (4)
CreateDynamicObject(16500,1248.91369629,316.69903564,-10.77296638,0.00000000,0.00000000,334.99853516); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1523,1247.88476562,314.44531250,-12.74218750,0.00000000,0.00000000,244.41835022); //object(gen_doorext10) (1)
CreateDynamicObject(16500,1246.14550781,310.84179688,-10.77296638,0.00000000,0.00000000,334.98962402); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1252.14880371,317.80108643,-10.77296638,0.00000000,0.00000000,245.26428223); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1523,1254.36462402,316.69268799,-12.74218750,0.00000000,0.00000000,336.14318848); //object(gen_doorext10) (3)
CreateDynamicObject(1649,1248.17285156,314.98782349,-8.57648373,0.00000000,0.00000000,244.40539551); //object(wglasssmash) (6)
CreateDynamicObject(1649,1248.17285156,314.98730469,-8.60148335,0.00000000,0.00000000,64.36163330); //object(wglasssmash) (6)
CreateDynamicObject(1649,1246.27282715,311.03753662,-8.55148411,0.00000000,0.00000000,64.36163330); //object(wglasssmash) (6)
CreateDynamicObject(1649,1246.30090332,311.09234619,-8.55148411,0.00000000,0.00000000,244.40185547); //object(wglasssmash) (6)
CreateDynamicObject(1649,1254.16479492,316.79168701,-8.57644939,0.00000000,0.00000000,335.97521973); //object(wglasssmash) (5)
CreateDynamicObject(1649,1254.16406250,316.79101562,-8.57644939,0.00000000,0.00000000,155.72509766); //object(wglasssmash) (7)
CreateDynamicObject(16500,1247.32373047,307.67590332,-10.77296638,0.00000000,0.00000000,245.75933838); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1251.80969238,305.65090942,-10.77296638,0.00000000,0.00000000,245.75939941); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1243.76367188,311.42089844,-10.77296638,0.00000000,0.00000000,245.75866699); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1523,1241.49548340,312.37069702,-12.74218750,0.00000000,0.00000000,244.42028809); //object(gen_doorext10) (1)
CreateDynamicObject(1523,1240.27075195,309.60211182,-12.74218750,0.00000000,0.00000000,65.72796631); //object(gen_doorext10) (1)
CreateDynamicObject(16500,1247.50244141,307.82385254,-10.77296638,0.00000000,0.00000000,65.71850586); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1252.05346680,305.75854492,-10.77296638,0.00000000,0.00000000,65.71472168); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1649,1240.60668945,310.42483521,-8.60148335,0.00000000,0.00000000,64.60791016); //object(wglasssmash) (6)
CreateDynamicObject(1649,1240.60644531,310.42480469,-8.60148335,0.00000000,0.00000000,244.06481934); //object(wglasssmash) (6)
CreateDynamicObject(16500,1239.35998535,326.08981323,-10.74797821,0.00000000,0.00000000,155.89245605); //object(cn2_savgardr1_) (2)
CreateDynamicObject(16500,1239.72460938,327.66137695,-10.74797821,0.00000000,0.00000000,245.43292236); //object(cn2_savgardr1_) (5)
CreateDynamicObject(16500,1235.31457520,329.69033813,-10.74797821,0.00000000,0.00000000,245.43292236); //object(cn2_savgardr1_) (6)
CreateDynamicObject(1533,1234.31518555,309.46380615,-12.74218750,0.00000000,0.00000000,155.50512695); //object(gen_doorext12) (1)
CreateDynamicObject(1533,1232.99584961,310.07183838,-12.74218750,0.00000000,0.00000000,155.50048828); //object(gen_doorext12) (2)
CreateDynamicObject(16500,1238.01562500,310.55383301,-10.77296638,0.00000000,0.00000000,245.75866699); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1234.83642578,309.34338379,-10.77296638,0.00000000,0.00000000,335.48840332); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1649,1238.71875000,306.44982910,-8.60148335,0.00000000,0.00000000,64.60510254); //object(wglasssmash) (6)
CreateDynamicObject(1649,1238.67871094,306.48254395,-8.60148335,0.00000000,0.00000000,244.06127930); //object(wglasssmash) (6)
CreateDynamicObject(16500,1238.48388672,305.86618042,-12.24794388,0.00000000,0.00000000,335.48400879); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1523,1239.58984375,308.04516602,-12.74218750,0.00000000,0.00000000,65.72570801); //object(gen_doorext10) (1)
CreateDynamicObject(16500,1231.15173340,310.99179077,-10.77296638,0.00000000,0.00000000,156.02392578); //object(cn2_savgardr1_) (1)
CreateDynamicObject(16500,1233.19140625,315.54788208,-10.77296638,0.00000000,0.00000000,156.02233887); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1523,1234.16479492,317.82318115,-12.74218750,0.00000000,0.00000000,64.95855713); //object(gen_doorext10) (1)
CreateDynamicObject(1523,1235.37109375,320.58068848,-12.74218750,0.00000000,0.00000000,245.49682617); //object(gen_doorext10) (1)
CreateDynamicObject(16500,1236.36914062,322.84472656,-10.77296638,0.00000000,0.00000000,156.02233887); //object(cn2_savgardr1_) (1)
CreateDynamicObject(1649,1234.76708984,319.18820190,-8.59538078,0.00000000,0.00000000,65.00463867); //object(wglasssmash) (13)
CreateDynamicObject(1649,1236.58801270,323.16397095,-8.54538155,0.00000000,0.00000000,65.98559570); //object(wglasssmash) (14)
CreateDynamicObject(1649,1232.92041016,315.24493408,-8.54538155,0.00000000,0.00000000,65.00463867); //object(wglasssmash) (15)
CreateDynamicObject(1649,1234.76660156,319.18750000,-8.59538078,0.00000000,0.00000000,244.96058655); //object(wglasssmash) (16)
CreateDynamicObject(1649,1232.97607422,315.24398804,-8.54538155,0.00000000,0.00000000,246.19165039); //object(wglasssmash) (17)
CreateDynamicObject(1649,1236.59753418,323.12588501,-8.59538078,0.00000000,0.00000000,245.20666504); //object(wglasssmash) (18)
CreateDynamicObject(3395,1232.95812988,325.62490845,-12.74218750,0.00000000,0.00000000,156.00500488); //object(a51_sdsk_3_) (1)
CreateDynamicObject(3383,1229.17004395,312.88650513,-12.74218750,0.00000000,0.00000000,335.68017578); //object(a51_labtable1_) (1)
CreateDynamicObject(3383,1235.95825195,327.98693848,-12.74218750,0.00000000,0.00000000,155.96655273); //object(a51_labtable1_) (2)
CreateDynamicObject(1997,1236.24475098,309.35018921,-12.74218750,0.00000000,0.00000000,65.77496338); //object(hos_trolley) (1)
CreateDynamicObject(1997,1236.72546387,310.39508057,-12.74218750,0.00000000,0.00000000,65.76965332); //object(hos_trolley) (2)
CreateDynamicObject(3383,1229.52941895,317.27880859,-12.74218750,0.00000000,0.00000000,245.69653320); //object(a51_labtable1_) (3)
CreateDynamicObject(2008,1241.20190430,324.26699829,-12.74218750,0.00000000,0.00000000,336.69519043); //object(officedesk1) (1)
CreateDynamicObject(1738,1240.81738281,326.84960938,-12.08755684,0.00000000,0.00000000,335.69274902); //object(cj_radiator_old) (1)
CreateDynamicObject(2146,1234.80371094,324.82031250,-12.25663662,0.00000000,0.00000000,336.17614746); //object(cj_trolly1) (1)
CreateDynamicObject(1997,1232.04016113,316.25039673,-12.74218750,0.00000000,0.00000000,175.09460449); //object(hos_trolley) (4)
CreateDynamicObject(1997,1248.82653809,304.07025146,-12.74218750,0.00000000,0.00000000,155.49963379); //object(hos_trolley) (5)
CreateDynamicObject(1997,1246.90649414,304.92480469,-12.74218750,0.00000000,0.00000000,155.49499512); //object(hos_trolley) (6)
CreateDynamicObject(1997,1244.87304688,305.83728027,-12.74218750,0.00000000,0.00000000,155.49499512); //object(hos_trolley) (7)
CreateDynamicObject(1997,1244.81933594,309.47732544,-12.74218750,0.00000000,0.00000000,335.24963379); //object(hos_trolley) (8)
CreateDynamicObject(2162,1253.01159668,310.06793213,-11.24219131,0.00000000,0.00000000,244.41833496); //object(med_office_unit_1) (1)
CreateDynamicObject(2008,1251.26916504,309.88665771,-12.74218750,0.00000000,0.00000000,66.50244141); //object(officedesk1) (2)
CreateDynamicObject(1726,1248.90039062,319.74414062,-12.74218750,0.00000000,0.00000000,156.54968262); //object(mrk_seating2) (1)
CreateDynamicObject(2596,1249.45507812,323.78613281,-10.29656029,0.00000000,0.00000000,338.39538574); //object(cj_sex_tv) (1)
CreateDynamicObject(1715,1241.55798340,322.76785278,-12.74218750,0.00000000,0.00000000,156.70996094); //object(kb_swivelchair2) (1)
CreateDynamicObject(1720,1250.06713867,310.47796631,-12.74218750,0.00000000,0.00000000,65.82000732); //object(rest_chair) (4)
CreateDynamicObject(2007,1239.17919922,324.16729736,-12.74218750,0.00000000,0.00000000,65.43457031); //object(filing_cab_nu01) (1)
CreateDynamicObject(2167,1251.28076172,321.43664551,-12.74218750,0.00000000,0.00000000,64.69995117); //object(med_office_unit_7) (1)
CreateDynamicObject(2167,1250.51171875,319.78027344,-12.74218750,0.00000000,0.00000000,64.69299316); //object(med_office_unit_7) (2)
CreateDynamicObject(2690,1239.27392578,327.61547852,-11.28874779,0.00000000,0.00000000,0.00000000); //object(cj_fire_ext) (1)
CreateDynamicObject(1808,1246.33703613,320.47070312,-12.74218750,0.00000000,0.00000000,155.67529297); //object(cj_watercooler2) (1)
CreateDynamicObject(1714,1252.76184082,310.21145630,-12.74218750,0.00000000,0.00000000,246.90087891); //object(kb_swivelchat) (1)
CreateDynamicObject(1720,1250.44445801,311.32257080,-12.74218750,0.00000000,0.00000000,65.81909180); //object(rest_chair) (4)
CreateDynamicObject(2146,1251.83618164,317.28320312,-12.25663662,0.00000000,0.00000000,245.00634766); //object(cj_trolly1) (1)
CreateDynamicObject(2167,1245.82531738,309.92208862,-12.74218750,0.00000000,0.00000000,64.69299316); //object(med_office_unit_7) (2)
CreateDynamicObject(2007,1251.34545898,307.54479980,-12.74218750,0.00000000,0.00000000,246.36035156); //object(filing_cab_nu01) (2)
CreateDynamicObject(2000,1250.98632812,306.63806152,-12.74218750,0.00000000,0.00000000,246.11035156); //object(filing_cab_nu) (1)
CreateDynamicObject(1727,1236.46252441,321.43969727,-12.74218750,0.00000000,0.00000000,65.72991943); //object(mrk_seating2b) (1)
CreateDynamicObject(1726,1246.81396484,319.24847412,-12.74218750,0.00000000,0.00000000,335.78393555); //object(mrk_seating2) (1)
CreateDynamicObject(1726,1243.85375977,312.12213135,-12.74218750,0.00000000,0.00000000,156.32092285); //object(mrk_seating2) (1)
CreateDynamicObject(2855,1246.18347168,317.07830811,-12.66718102,0.00000000,0.00000000,0.00000000); //object(gb_bedmags05) (1)
CreateDynamicObject(2855,1246.80883789,316.68179321,-12.21718025,0.00000000,0.00000000,322.97521973); //object(gb_bedmags05) (3)
CreateDynamicObject(2855,1248.94165039,321.79312134,-12.21718025,0.00000000,0.00000000,359.75000000); //object(gb_bedmags05) (4)
CreateDynamicObject(1738,1246.50134277,312.30136108,-12.08755684,0.00000000,0.00000000,244.38343811); //object(cj_radiator_old) (1)
CreateDynamicObject(1738,1253.85607910,312.57608032,-12.08755684,0.00000000,0.00000000,244.37988281); //object(cj_radiator_old) (1)
CreateDynamicObject(2596,1247.68322754,315.02133179,-10.29656029,0.00000000,0.00000000,230.45617676); //object(cj_sex_tv) (1)
CreateDynamicObject(2596,1242.10974121,321.77346802,-10.29656029,0.00000000,0.00000000,359.31457520); //object(cj_sex_tv) (1)
CreateDynamicObject(2315,1247.90136719,322.11004639,-12.74218750,0.00000000,0.00000000,335.71020508); //object(cj_tv_table4) (1)
CreateDynamicObject(2315,1246.10485840,317.15661621,-12.74218750,0.00000000,0.00000000,335.70922852); //object(cj_tv_table4) (2)
CreateDynamicObject(2380,1254.35302734,320.86846924,-11.49442196,0.00000000,0.00000000,335.16516113); //object(cj_suits) (1)
CreateDynamicObject(2816,1246.20117188,317.14129639,-12.24655533,0.00000000,0.00000000,0.00000000); //object(gb_bedmags01) (1)
CreateDynamicObject(2852,1247.99145508,322.01168823,-12.24655533,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (2)

// LCN Ext (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(3749,1426.8000500,-1886.5000000,18.4000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(3475,1394.6999500,-1903.0000000,18.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1388.8000500,-1902.9000200,18.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1382.9000200,-1902.8000500,18.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1376.9000200,-1902.8000500,18.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1370.9000200,-1902.6999500,18.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1365.5999800,-1902.6999500,18.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1301.8000500,-1880.9000200,19.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1295.8000500,-1880.9000200,19.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1289.8000500,-1880.9000200,19.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1283.8000500,-1880.9000200,19.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1277.9000200,-1880.9000200,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1272.0999800,-1880.9000200,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1266.1999500,-1880.9000200,19.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1260.3000500,-1880.9000200,19.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1254.5000000,-1880.9000200,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1248.5000000,-1880.9000200,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1242.5000000,-1880.9000200,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1236.5000000,-1880.9000200,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1229.0000000,-1883.6999500,19.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(3475,1225.6999500,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1229.0000000,-1888.5000000,19.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(3475,1231.6992200,-1880.8994100,19.1000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1219.9000200,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1208.4000200,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1214.0996100,-1891.3994100,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1202.5000000,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1196.6999500,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1190.8000500,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1185.0000000,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1179.0000000,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1173.1999500,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1167.3000500,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1162.0000000,-1891.4000200,19.9000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1156.1999500,-1891.4000200,19.8000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1150.3000500,-1891.4000200,19.7000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1144.5000000,-1891.4000200,19.7000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1138.6999500,-1891.4000200,19.6000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1132.8000500,-1891.4000200,19.6000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1126.9000200,-1891.4000200,19.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1121.0999800,-1891.4000200,19.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1115.3000500,-1891.4000200,19.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1109.5000000,-1891.4000200,19.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1103.5999800,-1891.4000200,19.6000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1097.5999800,-1891.4000200,19.6000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1091.6999500,-1891.4000200,19.7000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1085.6999500,-1891.4000200,19.7000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1079.9000200,-1891.4000200,19.7000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1074.4000200,-1891.4000200,19.7000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3475,1071.6999500,-1894.1999500,19.7000000,0.0000000,0.0000000,2.0000000);
CreateDynamicObject(3475,1071.9000200,-1900.0999800,19.7000000,0.0000000,0.0000000,2.0000000);
CreateDynamicObject(3475,1072.0999800,-1906.0000000,19.7000000,0.0000000,0.0000000,2.0000000);
CreateDynamicObject(3475,1072.3000500,-1911.8000500,19.7000000,0.0000000,0.0000000,2.0000000);
CreateDynamicObject(3475,1072.8000500,-1923.4000200,19.7000000,0.0000000,0.0000000,4.0000000);
CreateDynamicObject(3475,1072.5000000,-1917.5996100,19.7000000,0.0000000,0.0000000,2.0000000);
CreateDynamicObject(3475,1073.1999500,-1929.3000500,19.7000000,0.0000000,0.0000000,3.9990000);
CreateDynamicObject(3475,1073.1999500,-1935.3000500,20.0000000,0.0000000,0.0000000,359.9990000);
CreateDynamicObject(3475,1073.0999800,-1941.0999800,20.1000000,0.0000000,0.0000000,359.9940000);
CreateDynamicObject(3475,1072.9000200,-1947.0000000,20.2000000,0.0000000,0.0000000,359.9890000);
CreateDynamicObject(3475,1072.4000200,-1952.9000200,20.2000000,0.0000000,0.0000000,351.9890000);
CreateDynamicObject(3475,1071.5000000,-1958.5999800,20.3000000,0.0000000,0.0000000,351.9850000);
CreateDynamicObject(3475,1070.5999800,-1964.3000500,20.4000000,0.0000000,0.0000000,351.9850000);
CreateDynamicObject(3475,1069.9000200,-1968.9000200,20.4000000,0.0000000,0.0000000,351.9850000);
CreateDynamicObject(3475,1519.5000000,-1918.1999500,23.6000000,0.0000000,0.0000000,179.9680000);
CreateDynamicObject(3475,1519.5000000,-1912.2998000,23.6000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1924.0000000,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1929.7998000,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1935.5996100,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1941.3994100,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1947.1992200,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1953.1992200,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1959.0000000,23.3000000,0.0000000,0.0000000,179.9670000);
CreateDynamicObject(3475,1519.3994100,-1964.7998000,23.7000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.3994100,-1970.6992200,24.2000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-1976.5000000,24.6000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-1982.2998000,25.0000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.3994100,-1988.1992200,25.7000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.3994100,-1994.1992200,26.6000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2000.0000000,27.4000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3458,1245.2998000,-2026.1992200,60.4000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3458,1277.5000000,-2026.3000500,59.5000000,0.0000000,0.0000000,90.0000000);
CreateDynamicObject(994,1273.0000000,-2044.0000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1272.8994100,-2037.0000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1272.8994100,-2030.0000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1273.0000000,-2023.0000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1273.0000000,-2015.8994100,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1272.8994100,-2008.5996100,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.2998000,-2040.5996100,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.5996100,-2033.5000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.3994100,-2026.5996100,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.3994100,-2017.6992200,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.5000000,-2019.3994100,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.2998000,-2021.2998000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.2998000,-2010.1992200,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.2998000,-2012.1992200,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.3994100,-2014.0000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1243.5996100,-2043.8994100,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1243.5996100,-2036.5000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1243.5999800,-2029.5000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1243.5996100,-2022.5000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1243.5996100,-2015.5000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(994,1243.5996100,-2008.5000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1243.3000500,-2025.9000200,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1243.0000000,-2040.0996100,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1243.0996100,-2032.7998000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1243.0996100,-2019.0000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1243.0999800,-2012.0000000,58.9000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.2998000,-2024.5996100,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(997,1276.2998000,-2028.5000000,58.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(3475,1519.0000000,-2058.6001000,30.8000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2005.8994100,28.3000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2011.6992200,29.1000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2017.5000000,29.7000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2023.5000000,30.4000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2029.2998000,31.1000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.2998000,-2035.2998000,31.7000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.1992200,-2041.0996100,31.6000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.0996100,-2046.8994100,31.5000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1519.0996100,-2052.6992200,31.7000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1518.8994100,-2064.3994100,31.1000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1518.7998000,-2070.1992200,30.8000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1518.6992200,-2076.0996100,30.6000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1518.5000000,-2081.8994100,30.3000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1518.3994100,-2087.6992200,30.1000000,0.0000000,0.0000000,179.9620000);
CreateDynamicObject(3475,1516.5996100,-2092.7998000,29.9000000,0.0000000,0.0000000,139.9600000);
CreateDynamicObject(3475,1512.3994100,-2097.0000000,29.9000000,0.0000000,0.0000000,129.9570000);
CreateDynamicObject(3475,1087.0000000,-2314.5000000,14.2000000,0.0000000,0.0000000,33.9570000);
CreateDynamicObject(3475,1507.2998000,-2099.3994100,30.1000000,0.0000000,0.0000000,99.9540000);
CreateDynamicObject(3475,1501.6992200,-2101.0000000,30.3000000,0.0000000,0.0000000,111.9560000);
CreateDynamicObject(3475,1496.2998000,-2103.1992200,30.2900000,0.0000000,0.0000000,111.9560000);
CreateDynamicObject(3475,1090.3000500,-2319.3000500,14.2000000,0.0000000,0.0000000,33.9530000);
CreateDynamicObject(3475,1097.4000200,-2328.3999000,14.1000000,0.0000000,0.0000000,51.9530000);
CreateDynamicObject(3475,1093.5000000,-2324.0996100,14.1000000,0.0000000,0.0000000,33.9530000);
CreateDynamicObject(3475,1102.0000000,-2332.0000000,14.3000000,0.0000000,0.0000000,53.9490000);
CreateDynamicObject(3475,1106.6999500,-2335.5000000,13.9000000,0.0000000,0.0000000,51.9480000);
CreateDynamicObject(3475,1111.0999800,-2339.3000500,14.5000000,0.0000000,0.0000000,51.9430000);
CreateDynamicObject(3475,1115.6999500,-2343.0000000,14.6000000,0.0000000,0.0000000,51.9430000);
CreateDynamicObject(3475,1149.3000500,-2345.1001000,14.6000000,0.0000000,0.0000000,99.9430000);
CreateDynamicObject(3475,1120.6992200,-2345.1992200,14.7000000,0.0000000,0.0000000,81.9420000);
CreateDynamicObject(3475,1126.5000000,-2346.0996100,14.6000000,0.0000000,0.0000000,81.9420000);
CreateDynamicObject(3475,1131.7998000,-2346.8994100,14.6000000,0.0000000,0.0000000,81.9420000);
CreateDynamicObject(3475,1137.5000000,-2346.8994100,14.6000000,0.0000000,0.0000000,97.9430000);
CreateDynamicObject(3475,1143.5000000,-2346.0996100,14.5000000,0.0000000,0.0000000,99.9430000);
CreateDynamicObject(3475,1155.0000000,-2344.0996100,14.6000000,0.0000000,0.0000000,99.9430000);
CreateDynamicObject(3475,1160.5996100,-2343.0996100,14.7000000,0.0000000,0.0000000,99.9430000);
CreateDynamicObject(3475,1165.6992200,-2340.8994100,15.0000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1170.3994100,-2337.2998000,15.2000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1175.0000000,-2333.6992200,15.4000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1179.6992200,-2330.0996100,15.7000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1184.3994100,-2326.3994100,15.6000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1204.5999800,-2299.3999000,15.6000000,0.0000000,0.0000000,153.9410000);
CreateDynamicObject(3475,1188.8994100,-2322.8994100,15.6000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1193.3994100,-2319.3994100,15.6000000,0.0000000,0.0000000,127.9410000);
CreateDynamicObject(3475,1196.8994100,-2315.0996100,16.2000000,0.0000000,0.0000000,151.9410000);
CreateDynamicObject(3475,1199.5000000,-2309.8994100,16.0000000,0.0000000,0.0000000,153.9400000);
CreateDynamicObject(3475,1202.0996100,-2304.5996100,15.8000000,0.0000000,0.0000000,153.9400000);
CreateDynamicObject(3475,1218.9000200,-2262.3000500,14.9000000,0.0000000,0.0000000,165.9400000);
CreateDynamicObject(3475,1207.2998000,-2294.1992200,15.4000000,0.0000000,0.0000000,151.9350000);
CreateDynamicObject(3475,1210.0996100,-2289.0996100,15.3000000,0.0000000,0.0000000,151.9350000);
CreateDynamicObject(3475,1212.8994100,-2284.0000000,15.1000000,0.0000000,0.0000000,151.9350000);
CreateDynamicObject(3475,1215.0000000,-2278.5996100,14.9000000,0.0000000,0.0000000,165.9380000);
CreateDynamicObject(3475,1216.3994100,-2273.0000000,14.9000000,0.0000000,0.0000000,167.9370000);
CreateDynamicObject(3475,1217.5996100,-2267.3994100,14.9000000,0.0000000,0.0000000,167.9370000);
CreateDynamicObject(6964,1180.0214800,-2028.6611300,66.1393700,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(6965,1175.0000000,-2037.0000000,71.6500000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(747,1176.9000200,-2036.9000200,68.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(748,1175.9000200,-2038.5000000,68.0000000,0.0000000,0.0000000,284.0000000);
CreateDynamicObject(748,1173.5999800,-2038.4000200,68.0000000,0.0000000,0.0000000,177.9970000);
CreateDynamicObject(747,1173.5000000,-2036.0000000,68.0000000,0.0000000,0.0000000,106.0000000);
CreateDynamicObject(748,1176.0000000,-2035.5999800,68.0000000,0.0000000,0.0000000,37.9950000);
CreateDynamicObject(747,1175.0000000,-2035.0000000,68.0000000,0.0000000,0.0000000,60.0000000);
CreateDynamicObject(6964,1175.0999800,-2036.9000200,67.2000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(760,1174.5000000,-2039.4000200,68.0000000,0.0000000,0.0000000,350.0000000);
CreateDynamicObject(760,1173.0000000,-2036.5999800,68.0000000,0.0000000,0.0000000,335.9970000);
CreateDynamicObject(3934,1153.6999500,-2020.4000200,68.0000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1143.4000200,-2033.5999800,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1139.2998000,-2033.5996100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1147.5000000,-2033.5999800,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1151.5999800,-2033.5999800,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1155.6999500,-2033.5999800,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1159.8000500,-2033.5999800,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1162.3000500,-2033.5999800,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1137.3000500,-2031.5000000,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1137.2998000,-2027.3994100,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1137.2998000,-2023.2998000,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1137.1999500,-2017.5999800,68.5000000,0.0000000,0.0000000,90.0000000);
CreateDynamicObject(1419,1137.1999500,-2013.5000000,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1170.0999800,-2009.4000200,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1167.9000200,-2007.4000200,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1139.1992200,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1143.2998000,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1147.3994100,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1151.5000000,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1155.5996100,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1159.6992200,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1163.7998000,-2007.3994100,68.5000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1419,1137.1992200,-2009.3994100,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1170.0999800,-2013.5000000,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1170.0999800,-2017.5999800,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1170.0999800,-2021.6999500,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1170.0999800,-2025.4000200,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1419,1137.1999500,-2020.0000000,68.5000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3660,1261.6999500,-2022.0000000,61.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(3660,1261.6999500,-2029.8000500,61.0000000,0.0000000,0.0000000,270.0000000);
CreateDynamicObject(1231,1261.4000200,-2040.0000000,61.1000000,0.0000000,0.0000000,0.0000000);
CreateDynamicObject(1231,1261.4000200,-2011.9000200,61.1000000,0.0000000,0.0000000,0.0000000);

//Yakuza Ext (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(3475,1260.8553500,-767.5316200,93.2566000,0.0000000,0.0000000,-270.0000000); //convertffs(0)
CreateDynamicObject(3475,1254.9948700,-767.5118400,93.2566000,0.0000000,0.0000000,-271.0000000); //convertffs(1)
CreateDynamicObject(3475,1266.7797900,-767.5067100,93.2566000,0.0000000,0.0000000,89.5000000); //convertffs(2)
CreateDynamicObject(3475,1272.6838400,-767.5203200,93.2566000,0.0000000,0.0000000,-270.1360000); //convertffs(3)
CreateDynamicObject(3475,1278.6611300,-767.4230300,93.2566000,0.0000000,0.0000000,-269.6360000); //convertffs(4)
CreateDynamicObject(3475,1284.5845900,-767.4188200,93.2566000,0.0000000,0.0000000,-270.1000000); //convertffs(5)
CreateDynamicObject(9482,1245.5666500,-767.3054800,94.5256000,0.0000000,0.0000000,90.5000000); //convertffs(6)
CreateDynamicObject(3475,1239.5312500,-770.2845500,91.9226000,-1.7640000,0.0000000,180.0000000); //convertffs(7)
CreateDynamicObject(9482,1373.3576700,-862.1843300,45.0000000,0.0000000,0.0000000,320.1370000); //convertffs(8)
CreateDynamicObject(3528,1374.9166300,-863.8608400,50.1000000,0.0000000,0.0000000,307.5240000); //convertffs(9)
CreateDynamicObject(1568,1238.0999800,-752.5000000,94.9000000,0.0000000,0.0000000,0.0000000); //convertffs(10)
CreateDynamicObject(1568,1250.6999500,-750.0000000,94.2000000,0.0000000,0.0000000,0.0000000); //convertffs(11)
CreateDynamicObject(1568,1238.9000200,-760.4000200,93.5000000,0.0000000,0.0000000,0.0000000); //convertffs(12)
CreateDynamicObject(1568,1251.8000500,-760.0000000,93.2000000,0.0000000,0.0000000,0.0000000); //convertffs(13)
CreateDynamicObject(3471,1235.9609400,-743.5588400,96.2000000,0.0000000,0.0000000,114.0000000); //convertffs(14)
CreateDynamicObject(3471,1245.3336200,-738.9301800,95.4000000,0.0000000,0.0000000,116.7200000); //convertffs(15)
CreateDynamicObject(3471,1268.9089400,-833.0327100,83.4000000,0.0000000,0.0000000,-90.0000000); //convertffs(16)
CreateDynamicObject(632,1258.6999500,-788.5999800,91.3000000,0.0000000,0.0000000,270.0000000); //convertffs(17)
CreateDynamicObject(632,1258.8000500,-784.2999900,91.3000000,0.0000000,0.0000000,270.0000000); //convertffs(18)
CreateDynamicObject(633,1290.0999800,-821.5000000,84.0000000,0.0000000,0.0000000,0.0000000); //convertffs(19)
CreateDynamicObject(633,1270.8000500,-821.2000100,84.0000000,0.0000000,0.0000000,0.0000000); //convertffs(20)
CreateDynamicObject(3785,1303.8000500,-791.7000100,93.6000000,0.0000000,0.0000000,348.0000000); //convertffs(21)
CreateDynamicObject(970,1280.9697300,-838.6616800,76.7260000,0.0000000,0.0000000,0.0000000); //convertffs(32)
CreateDynamicObject(970,1272.6761500,-838.6616800,76.7260000,0.0000000,0.0000000,0.0000000); //convertffs(33)
CreateDynamicObject(970,1276.8416700,-838.6616800,76.7260000,0.0000000,0.0000000,0.0000000); //convertffs(34)
CreateDynamicObject(970,1285.0516400,-838.6616800,76.7260000,0.0000000,0.0000000,0.0000000); //convertffs(35)
CreateDynamicObject(970,1288.4325000,-838.6616800,76.7260000,0.0000000,0.0000000,0.0000000); //convertffs(36)
CreateDynamicObject(3471,1294.4630100,-833.0264300,83.4000000,0.0000000,0.0000000,-90.0000000); //convertffs(37)
CreateDynamicObject(970,1271.6002200,-833.9755200,82.6660000,0.0000000,0.0000000,0.0000000); //convertffs(38)
CreateDynamicObject(970,1279.8687700,-833.9755200,82.6660000,0.0000000,0.0000000,0.0000000); //convertffs(39)
CreateDynamicObject(970,1275.7126500,-833.9755200,82.6660000,0.0000000,0.0000000,0.0000000); //convertffs(40)
CreateDynamicObject(970,1288.1871300,-833.9755200,82.6660000,0.0000000,0.0000000,0.0000000); //convertffs(41)
CreateDynamicObject(970,1284.0310100,-833.9755200,82.6660000,0.0000000,0.0000000,0.0000000); //convertffs(42)
CreateDynamicObject(970,1291.8068800,-833.9755200,82.6660000,0.0000000,0.0000000,0.0000000); //convertffs(43)
CreateDynamicObject(970,1259.0445600,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(44)
CreateDynamicObject(970,1263.1887200,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(45)
CreateDynamicObject(970,1267.3315400,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(46)
CreateDynamicObject(970,1271.4702100,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(47)
CreateDynamicObject(970,1275.5937500,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(48)
CreateDynamicObject(970,1279.7153300,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(49)
CreateDynamicObject(970,1283.7963900,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(50)
CreateDynamicObject(970,1297.9716800,-806.7963300,87.8480000,0.0000000,0.0000000,-89.7520000); //convertffs(51)
CreateDynamicObject(970,1292.0921600,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(52)
CreateDynamicObject(970,1254.1729700,-792.4476300,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(53)
CreateDynamicObject(970,1258.3031000,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(54)
CreateDynamicObject(970,1262.4333500,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(55)
CreateDynamicObject(970,1266.5958300,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(56)
CreateDynamicObject(970,1270.6949500,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(57)
CreateDynamicObject(970,1274.8354500,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(58)
CreateDynamicObject(970,1279.0061000,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(59)
CreateDynamicObject(970,1283.1001000,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(60)
CreateDynamicObject(970,1287.1467300,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(61)
CreateDynamicObject(970,1254.8330100,-801.4884600,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(62)
CreateDynamicObject(970,1252.8916000,-801.4885300,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(63)
CreateDynamicObject(970,1295.0314900,-829.9160200,82.6660000,0.0000000,0.0000000,-89.5440000); //convertffs(64)
CreateDynamicObject(970,1295.0040300,-825.8303800,82.6660000,0.0000000,0.0000000,-89.5440000); //convertffs(65)
CreateDynamicObject(970,1294.9801000,-822.6292100,82.6660000,0.0000000,0.0000000,-89.5440000); //convertffs(66)
CreateDynamicObject(970,1268.3874500,-829.8966100,82.6660000,0.0000000,0.0000000,-89.9080000); //convertffs(67)
CreateDynamicObject(970,1268.3874500,-825.7260700,82.6660000,0.0000000,0.0000000,-89.9080000); //convertffs(68)
CreateDynamicObject(970,1268.3874500,-822.5952100,82.6660000,0.0000000,0.0000000,-89.9080000); //convertffs(69)
CreateDynamicObject(970,1292.9727800,-820.4674100,83.6210000,0.0000000,0.0000000,-178.9750000); //convertffs(70)
CreateDynamicObject(638,1296.4420200,-819.8767700,83.7490000,0.0000000,0.0000000,-81.2850000); //convertffs(71)
CreateDynamicObject(638,1298.9384800,-819.0944800,83.7490000,0.0000000,0.0000000,-242.8000000); //convertffs(72)
CreateDynamicObject(638,1300.9791300,-817.6231100,83.7490000,0.0000000,0.0000000,-224.7300000); //convertffs(73)
CreateDynamicObject(638,1302.5527300,-815.5319200,83.7490000,0.0000000,0.0000000,-207.0000000); //convertffs(74)
CreateDynamicObject(638,1303.3787800,-812.9804700,83.7490000,0.0000000,0.0000000,-188.3150000); //convertffs(75)
CreateDynamicObject(970,1303.9271200,-808.7750200,83.6210000,0.0000000,0.0000000,-90.4600000); //convertffs(76)
CreateDynamicObject(970,1303.9727800,-804.6547900,83.6210000,0.0000000,0.0000000,-91.0000000); //convertffs(77)
CreateDynamicObject(970,1303.9271200,-809.5795300,83.6210000,0.0000000,0.0000000,-90.4600000); //convertffs(78)
CreateDynamicObject(970,1308.0314900,-800.0452900,83.6210000,0.0000000,0.0000000,-89.9800000); //convertffs(79)
CreateDynamicObject(970,1307.4670400,-795.9636800,83.6210000,0.0000000,0.0000000,-254.3730000); //convertffs(80)
CreateDynamicObject(970,1306.3426500,-791.9696700,83.6210000,0.0000000,0.0000000,-254.3730000); //convertffs(81)
CreateDynamicObject(970,1305.7825900,-789.9333500,83.6210000,0.0000000,0.0000000,105.4250000); //convertffs(82)
CreateDynamicObject(970,1307.1298800,-787.2136800,91.5330000,0.0000000,0.0000000,-339.7680000); //convertffs(83)
CreateDynamicObject(638,1269.1899400,-819.9824800,83.7490000,0.0000000,0.0000000,-89.9280000); //convertffs(84)
CreateDynamicObject(638,1267.5761700,-819.0288100,83.7490000,0.0000000,0.0000000,-328.8480000); //convertffs(85)
CreateDynamicObject(970,1270.1053500,-820.4277300,83.6020000,0.0000000,0.0000000,0.0000000); //convertffs(86)
CreateDynamicObject(970,1265.0728800,-817.6449000,83.6020000,0.0000000,0.0000000,0.0000000); //convertffs(87)
CreateDynamicObject(970,1260.9277300,-817.6449000,83.6020000,0.0000000,0.0000000,0.0000000); //convertffs(88)
CreateDynamicObject(970,1256.7887000,-817.6449000,83.6020000,0.0000000,0.0000000,0.0000000); //convertffs(89)
CreateDynamicObject(970,1254.4398200,-817.6449000,83.6020000,0.0000000,0.0000000,0.0000000); //convertffs(90)
CreateDynamicObject(638,1293.7450000,-812.4611200,87.9090000,0.0000000,0.0000000,-90.9200000); //convertffs(91)
CreateDynamicObject(638,1296.0323500,-811.8743300,87.9090000,0.0000000,0.0000000,-244.0000000); //convertffs(92)
CreateDynamicObject(638,1297.4033200,-810.1377600,87.9090000,0.0000000,0.0000000,-191.5200000); //convertffs(93)
CreateDynamicObject(970,1287.9163800,-812.8883100,87.8480000,0.0000000,0.0000000,0.0000000); //convertffs(94)
CreateDynamicObject(970,1297.9539800,-802.6755400,87.8480000,0.0000000,0.0000000,-89.7520000); //convertffs(95)
CreateDynamicObject(970,1297.9539800,-802.2736200,87.8480000,0.0000000,0.0000000,-89.7520000); //convertffs(96)
CreateDynamicObject(638,1257.3654800,-811.5382700,87.9690000,0.0000000,0.0000000,-360.7320000); //convertffs(97)
CreateDynamicObject(970,1256.9580100,-810.7944900,87.8480000,0.0000000,0.0000000,-89.7520000); //convertffs(98)
CreateDynamicObject(970,1256.9393300,-806.6673600,87.8480000,0.0000000,0.0000000,-89.7520000); //convertffs(99)
CreateDynamicObject(970,1256.9144300,-803.5742200,87.8480000,0.0000000,0.0000000,-89.7520000); //convertffs(100)
CreateDynamicObject(8572,1292.2296100,-793.3812900,89.7836000,0.0000000,0.0000000,0.0000000); //convertffs(101)
CreateDynamicObject(970,1290.8234900,-792.4475700,91.5790000,0.0000000,0.0000000,0.0000000); //convertffs(102)
CreateDynamicObject(970,1295.0376000,-790.1364700,91.5790000,0.0000000,0.0000000,89.9860000); //convertffs(103)
CreateDynamicObject(3475,1367.0477300,-864.8831200,42.0677000,90.0000000,0.0000000,60.0000000); //convertffs(104)
CreateDynamicObject(3475,1378.8358200,-856.1594800,41.8671000,0.0000000,0.0000000,319.9990000); //convertffs(105)
CreateDynamicObject(970,1290.5006100,-836.5975300,76.7440000,0.0000000,0.0000000,-89.5440000); //convertffs(106)
CreateDynamicObject(970,1290.4923100,-836.0031700,76.7440000,0.0000000,0.0000000,-89.5440000); //convertffs(107)
CreateDynamicObject(970,1270.5963100,-836.6063200,76.7440000,0.0000000,0.0000000,-89.6620000); //convertffs(108)
CreateDynamicObject(970,1270.5950900,-835.7211900,76.7440000,0.0000000,0.0000000,-89.6620000); //convertffs(109)
CreateDynamicObject(640,1254.2993200,-792.3400300,87.9690000,0.0000000,0.0000000,90.0000000); //convertffs(110)
CreateDynamicObject(640,1259.1864000,-792.3400300,87.9690000,0.0000000,0.0000000,90.0000000); //convertffs(111)
CreateDynamicObject(640,1264.1690700,-792.3400300,87.9690000,0.0000000,0.0000000,90.0000000); //convertffs(112)
CreateDynamicObject(640,1267.0241700,-792.3400300,87.9690000,0.0000000,0.0000000,90.0000000); //convertffs(113)
CreateDynamicObject(3934,1291.6720000,-787.5583500,95.4487000,0.0000000,0.0000000,98.0000000); //convertffs(114)
CreateDynamicObject(3475,1297.8504600,-769.5626200,93.1566000,0.0000000,0.0000000,60.0000000); //convertffs(115)
CreateDynamicObject(3475,1302.4255400,-773.1995800,93.1566000,0.0000000,0.0000000,45.0000000); //convertffs(116)
CreateDynamicObject(3475,1305.7794200,-777.9442100,93.1566000,0.0000000,0.0000000,30.0000000); //convertffs(117)
CreateDynamicObject(3475,1307.6148700,-783.5033000,93.1566000,0.0000000,0.0000000,10.0000000); //convertffs(118)
CreateDynamicObject(3475,1239.2450000,-776.2561600,91.9226000,-1.7640000,0.0000000,180.0000000); //convertffs(119)
CreateDynamicObject(3475,1239.1209700,-782.1132800,91.9226000,-1.7640000,0.0000000,180.0000000); //convertffs(120)
CreateDynamicObject(3475,1362.9317600,-862.3261100,42.0677000,90.0000000,0.0000000,60.0000000); //convertffs(121)
CreateDynamicObject(3475,1359.0136700,-859.9775400,45.1213100,90.0000000,0.0000000,59.9960000); //convertffs(122)
CreateDynamicObject(3475,1354.5758100,-857.2716100,45.1213100,90.0000000,0.0000000,60.0000000); //convertffs(123)
CreateDynamicObject(3475,1377.9794900,-851.9130900,42.0677000,9.9980000,0.0000000,55.2060000); //convertffs(124)
CreateDynamicObject(3475,1377.2060500,-814.1795000,73.2581700,10.0000000,0.0000000,54.3110000); //convertffs(125)
CreateDynamicObject(3475,1370.3472900,-845.0063500,47.2781100,25.0000000,0.0000000,28.5820000); //convertffs(126)
CreateDynamicObject(3475,1367.8179900,-840.4798000,50.1498600,25.0000000,0.0000000,29.7300000); //convertffs(127)
CreateDynamicObject(14416,1251.8515600,-772.7305300,89.3579000,0.0000000,0.0000000,0.0000000); //convertffs(128)
CreateDynamicObject(3475,1373.6842000,-848.6788900,45.6333800,10.0000000,0.0000000,54.4900000); //convertffs(129)
CreateDynamicObject(3475,1381.7689200,-818.7735000,72.8409000,0.0000000,0.0000000,37.1370000); //convertffs(130)
CreateDynamicObject(3475,1384.5710400,-823.9438500,72.7459100,0.0000000,0.0000000,21.0750000); //convertffs(131)
CreateDynamicObject(3475,1365.9545900,-811.3579100,74.3814000,0.0000000,0.0000000,84.9960000); //convertffs(137)
CreateDynamicObject(3475,1360.0712900,-810.7246100,74.3814000,0.0000000,0.0000000,84.9960000); //convertffs(138)
CreateDynamicObject(3475,1354.2053200,-810.1623500,74.3814000,0.0000000,0.0000000,84.9960000); //convertffs(139)
CreateDynamicObject(3475,1348.3651100,-809.5007900,74.3814000,0.0000000,0.0000000,84.9960000); //convertffs(140)
CreateDynamicObject(3475,1342.4897500,-808.9362800,74.3814000,0.0000000,0.0000000,84.9960000); //convertffs(141)
CreateDynamicObject(3475,1371.7730700,-811.8848300,74.1246000,0.0000000,0.0000000,84.9960000); //convertffs(137)
CreateDynamicObject(3475,1336.1864000,-808.3756100,75.4511000,10.6870000,356.3680000,87.4550000); //convertffs(141)
CreateDynamicObject(3475,1330.2730700,-808.2808200,77.0554700,10.6840000,356.3640000,87.4510000); //convertffs(141)
CreateDynamicObject(3475,1324.7166700,-807.9522100,78.2050100,3.5750000,356.4200000,87.0000000); //convertffs(141)
CreateDynamicObject(3475,1318.9342000,-807.6307400,78.3548100,0.7760000,356.4250000,86.8200000); //convertffs(141)
CreateDynamicObject(3475,1312.9409200,-807.0965600,78.3548100,0.7750000,356.4240000,86.8190000); //convertffs(141)
CreateDynamicObject(3475,1311.2917500,-806.9765600,78.3548100,0.7750000,356.4240000,86.8190000); //convertffs(141)
CreateDynamicObject(3475,1378.2923600,-852.2755700,44.4048000,9.9980000,0.0000000,55.2060000); //convertffs(124)

//Kasama Clan Yakuza Ext By Map Team ZC 2013 (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(2773, 1023.54413, -1122.66003, 23.36000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1021.39917, -1122.66003, 23.36000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1023.54413, -1124.58667, 23.36100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1021.39917, -1124.58667, 23.36100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1021.39917, -1126.52209, 23.36000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1023.54230, -1126.50256, 23.36000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1021.39917, -1128.43982, 23.36000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1023.54230, -1128.43738, 23.36100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1037.64685, -1130.87354, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1034.21704, -1130.87354, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1030.79700, -1130.87061, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1027.35486, -1130.87842, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1025.63245, -1130.87354, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1007.32709, -1130.87109, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1010.75989, -1130.87378, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1014.17291, -1130.87231, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1017.59668, -1130.87354, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, 1019.32697, -1130.87280, 23.36290,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19157, 1054.72510, -1121.16992, 29.86890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19157, -1121.47900, -1121.47900, 30.36890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, 1052.70227, -1121.28906, 32.96800,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, 1056.17993, -1121.29431, 32.96800,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3934, 992.15741, -1083.91882, 44.69486,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1056.05823, -1121.15271, 33.04734,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, 1059.35388, -1121.29431, 32.96820,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19157, 1054.72510, -1121.17310, 30.38890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1054.76965, -1116.51758, 33.58260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1058.89185, -1116.52222, 33.58260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1060.96924, -1119.00269, 33.58260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1060.97729, -1123.53540, 33.58260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1058.88733, -1125.97241, 33.58260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1054.73694, -1125.98315, 33.58260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1060.95862, -1116.72534, 33.60020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1060.95862, -1125.81348, 33.60024,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1060.95837, -1121.30115, 33.60020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1052.64941, -1114.42639, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1052.64941, -1110.27246, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1052.64941, -1128.12134, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1049.04248, -1130.49084, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1044.89832, -1130.50171, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1042.79065, -1130.50427, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1043.05383, -1127.10754, 33.48260,   0.00000, 0.00000, 45.25035);
CreateDynamicObject(970, 1041.58472, -1128.58582, 33.48260,   0.00000, 0.00000, 45.48893);
CreateDynamicObject(970, 1044.64539, -1123.50134, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1044.64014, -1121.25439, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1043.20349, -1117.73438, 33.48260,   0.00000, 0.00000, 316.62164);
CreateDynamicObject(970, 1041.68396, -1116.31812, 33.48260,   0.00000, 0.00000, 317.02670);
CreateDynamicObject(970, 1038.10254, -1114.89087, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1033.97363, -1114.88318, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1029.85840, -1114.87195, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1050.57800, -1108.17712, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1046.45313, -1108.19653, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1042.34045, -1108.19446, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1038.20288, -1108.19751, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1034.08130, -1108.20020, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1029.95886, -1108.20288, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14416, 1003.28040, -1111.64111, 31.04797,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(14416, 1029.92017, -1111.12732, 30.98339,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1026.05701, -1107.25989, 34.69410,   0.00000, 0.00000, 330.93829);
CreateDynamicObject(970, 1022.18402, -1106.29016, 34.69410,   0.00000, 0.00000, 0.91821);
CreateDynamicObject(970, 1018.05731, -1106.34143, 34.69410,   0.00000, 0.00000, 0.91820);
CreateDynamicObject(970, 1013.91284, -1106.40417, 34.69410,   0.00000, 0.00000, 0.91820);
CreateDynamicObject(970, 1011.80988, -1106.43994, 34.69410,   0.00000, 0.00000, 0.91820);
CreateDynamicObject(970, 1007.85406, -1107.34619, 34.69410,   0.00000, 0.00000, 24.95751);
CreateDynamicObject(970, 1014.64142, -1115.06104, 34.77410,   0.00000, 0.00000, 0.91820);
CreateDynamicObject(970, 1010.51300, -1115.10352, 34.77410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1007.76038, -1115.11829, 34.77410,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1003.70844, -1116.17114, 33.45708,   0.00000, 0.00000, 39.31274);
CreateDynamicObject(970, 1001.82629, -1117.71753, 33.45710,   0.00000, 0.00000, 39.31270);
CreateDynamicObject(970, 1000.26288, -1121.50964, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1000.26172, -1123.59070, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 1001.79279, -1127.10815, 33.48260,   0.00000, 0.00000, 317.02670);
CreateDynamicObject(970, 1003.31067, -1128.51660, 33.48260,   0.00000, 0.00000, 317.02670);
CreateDynamicObject(970, 1002.13782, -1130.46851, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 998.02179, -1130.48169, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 995.59357, -1130.47913, 33.48260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 992.91260, -1127.73914, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 992.91260, -1127.73914, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 992.91425, -1123.58691, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 992.90753, -1119.47412, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 992.90594, -1115.33447, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 992.91101, -1111.17969, 33.48260,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 994.99078, -1109.02966, 33.48260,   0.00000, 0.00000, 1.63956);
CreateDynamicObject(970, 999.10266, -1108.91418, 33.48260,   0.00000, 0.00000, 1.63956);
CreateDynamicObject(970, 1003.21973, -1108.78894, 33.48260,   0.00000, 0.00000, 1.63956);
CreateDynamicObject(2990, 980.44025, -1097.85010, 24.50990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 990.33667, -1097.84814, 24.50989,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 995.29919, -1092.86316, 25.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2990, 995.29919, -1085.70361, 26.98270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2990, 1000.12329, -1080.62695, 26.98270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 1010.02612, -1080.62976, 26.98270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 1019.97028, -1080.61780, 26.98270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 1029.89490, -1080.62024, 26.98270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 1034.89307, -1080.62158, 26.98269,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 1043.26819, -1080.61938, 26.98269,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2990, 1048.23108, -1085.61670, 27.01308,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2990, 1048.23962, -1095.57825, 25.79699,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2990, 1048.18726, -1105.53186, 24.25411,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1506, 1015.66180, -1102.00720, 22.81141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(10974, 1018.86963, -1117.40991, -5.31700,   90.00000, 0.00000, 0.40000);
CreateDynamicObject(3851, 1011.03729, -1115.38147, 25.44998,   0.00000, 0.00000, 90.40000);
CreateDynamicObject(3851, 1033.77405, -1115.38147, 25.45000,   0.00000, 0.00000, 90.40000);
CreateDynamicObject(8838, 1018.25684, -1083.42114, 24.23226,   0.00000, 0.00000, 0.20709);

//Schiffer Ext by Map Team ZC 2013 (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(18033,1294.8994141,-1870.5996094,10.6499996,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18033,1283.8994141,-1870.5996094,10.6499996,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(8420,1281.1199951,-1902.2989502,15.9799995,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(8947,1280.0898438,-1874.6699219,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(8947,1296.3000488,-1884.6999512,13.0000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(8947,1312.3291016,-1874.6699219,13.0000000,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1649,1302.7294922,-1862.3496094,14.3000002,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1649,1298.3900146,-1862.3499756,14.3000002,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1649,1294.0799561,-1862.3499756,14.3000002,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1649,1287.8100586,-1862.3499756,14.3000002,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1349,1288.4000244,-1873.4799805,13.1999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1885,1288.6999512,-1870.1999512,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1984,1288.7600098,-1869.3299561,12.6999998,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1983,1300.1999512,-1864.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1987,1299.1999512,-1864.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1988,1303.0999756,-1864.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1981,1302.6500244,-1866.8800049,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1991,1303.6500244,-1866.8800049,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1996,1298.7700195,-1866.8800049,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2412,1292.3193359,-1863.0000000,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2412,1290.3000488,-1863.0999756,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1888,1302.5999756,-1877.0000000,12.6700001,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1887,1299.6999512,-1877.0000000,12.6700001,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1889,1302.5999756,-1873.5999756,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1890,1299.5999756,-1873.5999756,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1842,1301.4000244,-1870.5699463,13.1000004,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1844,1302.5999756,-1867.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1843,1299.8000488,-1867.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1981,1301.6500244,-1866.8800049,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1981,1300.6500244,-1866.8800049,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1981,1299.6999512,-1866.8800049,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1983,1301.1639404,-1864.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1983,1302.0999756,-1864.9000244,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1987,1303.0999756,-1863.9000244,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1983,1302.0999756,-1863.9000244,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1983,1301.0999756,-1863.9000244,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1983,1300.1700439,-1863.9000244,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1988,1299.2199707,-1863.9000244,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1349,1288.4000244,-1872.6600342,13.1999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1349,1288.4000244,-1874.3000488,13.1999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1990,1295.4000244,-1876.8000488,12.6000004,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1990,1294.4200439,-1876.8000488,12.6000004,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(1990,1293.4399414,-1876.8000488,12.6000004,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(2443,1292.4599609,-1876.8000488,12.6000004,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2601,1292.6999512,-1876.8000488,13.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2538,1295.6999512,-1874.0000000,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2539,1294.7099609,-1874.0069580,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2539,1293.7120361,-1874.0069580,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2541,1293.6999512,-1873.0000000,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2540,1292.7199707,-1874.0000000,12.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2542,1294.6999512,-1873.0000000,12.6999998,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2541,1292.6999512,-1873.0000000,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(2542,1295.6999512,-1873.0000000,12.6999998,0.0000000,0.0000000,179.9945068); //
CreateDynamicObject(2601,1292.4000244,-1876.6999512,13.6999998,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1775,1291.4200439,-1876.8000488,13.8000002,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1776,1288.0000000,-1865.5000000,13.8000002,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2948,1291.9000244,-1862.4000244,12.6400003,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2948,1290.0000000,-1862.4090576,12.6400003,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(11292,308.2000122,-1352.4000244,54.9000015,0.0000000,0.0000000,38.0000000); //
CreateDynamicObject(11292,310.1000061,-1354.8299561,54.9009895,0.0000000,0.0000000,38.0000000); //
CreateDynamicObject(946,306.6000061,-1353.5000000,53.2999992,40.0000000,0.0000000,38.0000000); //
CreateDynamicObject(946,309.3999939,-1351.4000244,53.2999992,39.9957275,0.0000000,37.9962158); //
CreateDynamicObject(3051,314.1000061,-1353.7800293,55.0999985,0.0000000,0.0000000,354.0000000); //
CreateDynamicObject(3051,313.2000122,-1354.5000000,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3051,312.2999878,-1355.1899414,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3051,311.5000000,-1355.8000488,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3051,310.6299133,-1356.5000000,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3051,309.7999878,-1357.1800537,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3051,309.0000000,-1357.7869873,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3051,308.2000122,-1358.4000244,55.0999985,0.0000000,0.0000000,353.9959717); //
CreateDynamicObject(3850,313.6000061,-1352.0999756,57.0000000,0.0000000,0.0000000,38.0000000); //
CreateDynamicObject(3850,311.5000000,-1349.4000244,57.0000000,0.0000000,0.0000000,37.9962158); //
CreateDynamicObject(3850,309.2000122,-1357.6999512,57.0000000,0.0000000,0.0000000,128.0000000); //
CreateDynamicObject(3850,313.2998047,-1354.5000000,57.0000000,0.0000000,0.0000000,127.9962158); //
CreateDynamicObject(3850,311.8994141,-1355.5996094,57.0000000,0.0000000,0.0000000,128.0000000); //
CreateDynamicObject(3850,306.7999878,-1357.4000244,57.0000000,0.0000000,0.0000000,38.0000000); //
CreateDynamicObject(3850,304.7000122,-1354.6999512,57.0000000,0.0000000,0.0000000,37.9962158); //
CreateDynamicObject(8615,306.2999878,-1350.0000000,54.7599983,0.0000000,0.0000000,218.0000000); //
CreateDynamicObject(1215,307.7999878,-1358.6999512,57.0999985,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1215,314.6000061,-1353.4000244,57.0999985,0.0000000,0.0000000,0.0000000); //

//Schiffer Interior By Map Team ZC 2013 (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(19370, 297.50000, -1349.49902, -17.50000,   0.12000, 90.00000, 35.00000);
CreateDynamicObject(19370, 295.72000, -1346.96252, -17.50000,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 293.97800, -1344.47119, -17.50060,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 300.26465, -1347.55286, -17.50000,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 298.44519, -1345.03394, -17.50040,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 296.76501, -1342.50232, -17.49900,   0.00000, 90.12000, 35.00000);
CreateDynamicObject(19449, 307.81961, -1338.37231, -17.50000,   -0.06000, 90.00000, 35.10200);
CreateDynamicObject(19449, 304.96951, -1340.36511, -17.51000,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19358, 301.89130, -1339.05713, -15.71400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19358, 298.28159, -1341.59546, -15.71400,   0.12000, 0.00000, 35.00000);
CreateDynamicObject(19370, 300.29999, -1347.53406, -14.01110,   0.00000, 90.06000, 35.00000);
CreateDynamicObject(19370, 298.51199, -1344.98999, -14.01120,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 296.83041, -1342.60266, -14.00990,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 294.03281, -1344.55481, -14.01110,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 295.72000, -1346.96252, -14.01000,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19370, 297.50000, -1349.49902, -14.01110,   0.12000, 90.00000, 35.00000);
CreateDynamicObject(19358, 293.10999, -1343.46985, -15.67800,   0.12000, 0.00000, -55.00000);
CreateDynamicObject(19450, 302.85999, -1336.64490, -15.71400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19450, 295.94760, -1341.48877, -15.71400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19362, 306.18869, -1336.05627, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(19362, 308.01639, -1338.67542, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(19362, 309.63882, -1341.02222, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(19362, 303.33090, -1338.05164, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(19362, 305.13461, -1340.65833, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(19362, 306.78201, -1343.02222, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(8572, 305.33081, -1345.04468, -15.17360,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19362, 300.46701, -1340.05286, -14.01000,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(19362, 299.69330, -1340.59790, -14.01110,   0.06000, 90.00000, 35.00000);
CreateDynamicObject(970, 301.05771, -1341.53918, -13.45595,   0.00000, 0.00000, 35.32410);
CreateDynamicObject(1506, 298.79541, -1339.58691, -17.43000,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19358, 307.65579, -1335.15088, -15.71400,   0.12000, 0.00000, 35.00000);
CreateDynamicObject(19358, 309.47220, -1337.75464, -15.71400,   0.12000, 0.00000, 35.00000);
CreateDynamicObject(19358, 311.08340, -1340.07495, -15.71400,   0.12000, 0.00000, 35.00000);
CreateDynamicObject(19450, 308.03299, -1344.02502, -15.71400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19450, 300.94019, -1348.98425, -15.71400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(8838, 299.15796, -1338.63904, -18.99248,   0.00000, 0.00000, 304.42480);
CreateDynamicObject(19369, 307.37360, -1342.94861, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19450, 294.43051, -1347.97095, -15.71400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19369, 305.53699, -1340.32446, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19461, 309.24551, -1337.58301, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19461, 307.94000, -1344.08423, -12.22400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19369, 303.90121, -1346.91199, -12.22400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19369, 300.09241, -1344.13684, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19369, 301.78320, -1346.54614, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19461, 302.75711, -1336.61707, -12.22400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19369, 298.66550, -1339.47510, -12.22400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(970, 303.98959, -1342.02063, -13.45590,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19369, 302.83151, -1336.46436, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1502, 303.69559, -1337.80237, -13.93300,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19369, 297.38309, -1340.28210, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1502, 298.26398, -1341.60693, -13.93300,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19446, 293.58331, -1343.02576, -12.22400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19446, 298.99649, -1350.35645, -12.22400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19446, 294.43680, -1347.92078, -12.22400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19450, 302.80771, -1348.07483, -15.71400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1502, 299.13965, -1342.92163, -17.47510,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(19450, 306.41299, -1345.48682, -15.71400,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1502, 302.80685, -1340.27600, -17.47510,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(3850, 302.75790, -1340.19153, -14.56240,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(3850, 299.09509, -1342.82410, -14.54240,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(3850, 299.23871, -1342.96936, -10.99970,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(3850, 304.64548, -1339.12402, -10.99100,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(19452, 295.71600, -1346.85706, -10.45640,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19452, 298.57809, -1344.85010, -10.45610,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19449, 301.39789, -1343.07422, -10.45640,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19449, 303.94699, -1341.20081, -10.45600,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19449, 306.76712, -1339.14001, -10.45600,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(19449, 309.59473, -1337.15234, -10.45600,   0.00000, 90.00000, 35.00000);
CreateDynamicObject(3034, 304.06049, -1335.93213, -15.20000,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(3034, 294.74857, -1342.44666, -15.20000,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(14813, 294.75491, -1344.62939, -16.93740,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(2836, 299.63608, -1340.37231, -17.46180,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(2199, 301.81461, -1346.95386, -17.42530,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(2099, 300.68506, -1345.21057, -17.41120,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(2236, 295.73114, -1345.48999, -17.41840,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(2296, 300.26270, -1348.97266, -17.36101,   0.00000, 0.00000, -145.00000);
CreateDynamicObject(2241, 296.98318, -1341.57666, -16.91432,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, 300.84180, -1338.82837, -16.62174,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2164, 304.42609, -1342.84265, -17.48400,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(2147, 306.38007, -1344.45911, -17.42380,   0.00000, 0.00000, -145.00000);
CreateDynamicObject(2132, 308.87213, -1342.83386, -17.65041,   0.00000, 0.00000, -145.00000);
CreateDynamicObject(2149, 307.18680, -1344.03040, -16.36740,   0.00000, 0.00000, -145.00000);
CreateDynamicObject(2135, 309.64948, -1342.20105, -17.65490,   0.00000, 0.00000, -145.00000);
CreateDynamicObject(2133, 307.26218, -1343.94446, -17.52650,   -0.02000, 0.00000, -145.00000);
CreateDynamicObject(2131, 311.32568, -1341.10754, -17.57371,   0.00000, 0.00000, -145.00000);
CreateDynamicObject(1433, 306.37439, -1339.31030, -17.21140,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(1720, 305.99689, -1338.63049, -17.41241,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1720, 307.22330, -1338.87805, -17.41241,   0.00000, 0.00000, 278.80325);
CreateDynamicObject(1720, 306.84927, -1340.07166, -17.41241,   0.00000, 0.00000, 214.91141);
CreateDynamicObject(1720, 305.68979, -1339.66003, -17.41241,   0.00000, 0.00000, 94.47489);
CreateDynamicObject(14480, 308.20618, -1341.17065, -13.41940,   0.00000, 0.00000, 215.00000);
CreateDynamicObject(2517, 308.02655, -1338.56702, -13.92240,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(2566, 298.15881, -1345.83167, -13.52210,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(2297, 296.18674, -1349.74988, -13.91901,   0.00000, 0.00000, 79.68065);
CreateDynamicObject(2069, 298.50760, -1340.78210, -17.14728,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2286, 301.01187, -1345.65100, -11.82280,   0.00000, 0.00000, -55.00000);
CreateDynamicObject(3034, 265.82901, -1358.03430, -11.61190,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3034, 299.66818, -1349.76770, -11.98750,   0.00000, 0.00000, 215.00000);
CreateDynamicObject(3034, 294.68387, -1342.37036, -11.97107,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(2329, 295.10101, -1346.05237, -13.97230,   0.00000, 0.00000, 126.00000);
CreateDynamicObject(2392, 293.82059, -1345.86780, -12.15480,   0.00000, 0.00000, 34.98820);
CreateDynamicObject(2399, 294.37274, -1346.64368, -12.22387,   0.00000, 0.00000, 34.22246);
CreateDynamicObject(2003, 294.48529, -1340.99390, -12.40890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2003, 296.71948, -1350.51782, -13.49030,   0.00000, 0.00000, 125.86784);
CreateDynamicObject(2004, 297.15021, -1350.63477, -13.50080,   0.00000, 0.00000, 71.53730);
CreateDynamicObject(2005, 296.83304, -1350.49512, -13.53545,   0.00000, 0.00000, 121.59395);
CreateDynamicObject(2289, 292.95633, -1345.65454, -15.39357,   0.00000, 0.00000, 124.89884);
CreateDynamicObject(3034, 300.10452, -1338.58643, -11.97107,   0.00000, 0.00000, 35.00000);
CreateDynamicObject(2281, 306.44849, -1342.61768, -12.16516,   0.00000, 0.00000, 305.27448);
CreateDynamicObject(2010, 302.81812, -1337.53528, -13.92510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2272, 306.21869, -1340.34314, -12.54890,   0.00000, 0.00000, 124.82220);

//Familia Benedetti Int By Map Team ZC 2013 (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(6205, 1088.65, -2016.82, 4000.16,   0.00, 0.00, 0.00);
CreateDynamicObject(6205, 1139.19, -2054.52, 4000.16,   0.00, 0.00, 180.00);
CreateDynamicObject(6205, 1096.00, -2061.43, 4000.16,   0.00, 0.00, 90.00);
CreateDynamicObject(6205, 1133.34, -2009.94, 4000.16,   0.00, 0.00, 270.00);
CreateDynamicObject(6205, 1086.81, -2014.33, 4003.60,   0.00, 0.00, 0.00);
CreateDynamicObject(6205, 1143.23, -2027.21, 4000.16,   0.00, 0.00, 225.00);
CreateDynamicObject(19354, 1121.40, -2039.08, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19379, 1117.88, -2040.47, 3992.04,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 1107.38, -2040.46, 3992.04,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 1110.09, -2030.87, 3992.04,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 1120.54, -2030.86, 3992.04,   0.00, 90.00, 0.00);
CreateDynamicObject(19384, 1118.20, -2039.08, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1116.51, -2043.84, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19384, 1115.00, -2039.08, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19354, 1111.82, -2039.07, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1110.29, -2043.81, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19384, 1110.30, -2037.41, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1105.57, -2035.90, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19384, 1110.29, -2034.25, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19354, 1110.28, -2031.06, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1105.40, -2028.98, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19354, 1110.28, -2030.50, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1107.52, -2028.96, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(14407, 1109.64, -2026.91, 3992.12,   0.00, 0.00, 270.00);
CreateDynamicObject(19379, 1102.40, -2024.11, 3995.40,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1110.06, -2033.74, 3995.48,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1110.07, -2043.30, 3995.48,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1120.51, -2040.44, 3995.48,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1117.69, -2024.17, 3995.44,   -0.02, 90.00, 0.00);
CreateDynamicObject(19446, 1120.53, -2033.43, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1115.90, -2038.33, 3997.31,   0.00, 0.00, 0.00);
CreateDynamicObject(19384, 1114.25, -2033.43, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1111.21, -2039.27, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1101.65, -2039.28, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19384, 1107.90, -2033.45, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19354, 1111.08, -2033.45, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19354, 1104.69, -2033.45, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1104.86, -2038.20, 3997.31,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1110.31, -2038.20, 3997.31,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, 1110.70, -2030.58, 3999.15,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1110.70, -2040.10, 3999.15,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1100.30, -2034.43, 3999.15,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1100.22, -2024.81, 3999.15,   -0.02, 90.00, 0.00);
CreateDynamicObject(19446, 1104.77, -2033.74, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1104.76, -2043.37, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1109.31, -2045.33, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1118.92, -2045.34, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1123.00, -2043.84, 3993.65,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, 1120.53, -2030.83, 3995.48,   -0.02, 90.00, 0.00);
CreateDynamicObject(19379, 1124.43, -2025.04, 3992.16,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 1124.21, -2025.32, 3992.08,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 1121.10, -2030.62, 3999.17,   -0.02, 90.00, 0.00);
CreateDynamicObject(18090, 1119.45, -2029.63, 3998.54,   0.00, 0.00, 0.00);
CreateDynamicObject(19446, 1117.66, -2030.19, 4000.75,   0.00, 0.00, 0.00);
CreateDynamicObject(2523, 1115.09, -2036.94, 3995.55,   0.00, 0.00, 180.00);
CreateDynamicObject(2528, 1113.38, -2036.97, 3995.57,   0.00, 0.00, 180.00);
CreateDynamicObject(2520, 1111.05, -2035.92, 3995.57,   0.00, 0.00, 180.00);
CreateDynamicObject(2522, 1110.93, -2035.37, 3995.57,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1115.05, -2037.54, 3997.31,   0.00, 0.00, 90.00);
CreateDynamicObject(19427, 1117.95, -2031.64, 3996.21,   90.00, 90.00, 90.00);
CreateDynamicObject(19427, 1117.94, -2028.14, 3996.21,   90.00, 90.00, 90.00);
CreateDynamicObject(19427, 1117.93, -2024.64, 3996.21,   90.00, 90.00, 90.00);
CreateDynamicObject(19427, 1118.62, -2031.68, 3996.21,   90.00, 90.00, 90.00);
CreateDynamicObject(19427, 1118.63, -2028.25, 3996.21,   90.00, 90.00, 90.00);
CreateDynamicObject(19427, 1118.63, -2024.80, 3996.21,   90.00, 90.00, 90.00);
CreateDynamicObject(19379, 1123.84, -2030.83, 3996.00,   -0.02, 90.00, 0.00);
CreateDynamicObject(1723, 1113.92, -2026.64, 3995.55,   0.00, 0.00, 0.00);
CreateDynamicObject(1663, 1107.38, -2037.85, 3996.01,   0.00, 0.00, 180.00);
CreateDynamicObject(2173, 1106.93, -2036.61, 3995.57,   0.00, 0.00, 0.00);
CreateDynamicObject(1721, 1106.86, -2034.88, 3995.57,   0.00, 0.00, 180.00);
CreateDynamicObject(1721, 1107.92, -2034.88, 3995.57,   0.00, 0.00, 180.00);
CreateDynamicObject(15036, 1118.81, -2043.70, 3993.27,   0.00, 0.00, 0.00);
CreateDynamicObject(2637, 1120.89, -2041.63, 3992.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2079, 1121.37, -2043.07, 3992.77,   0.00, 0.00, 270.00);
CreateDynamicObject(2079, 1120.12, -2043.06, 3992.77,   0.00, 0.00, 270.00);
CreateDynamicObject(2079, 1121.82, -2040.34, 3992.77,   0.00, 0.00, 90.00);
CreateDynamicObject(2079, 1120.39, -2040.44, 3992.77,   0.00, 0.00, 90.00);
CreateDynamicObject(19446, 1105.54, -2031.61, 3993.65,   0.00, 0.00, 90.00);
CreateDynamicObject(1795, 1114.38, -2046.00, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(1795, 1111.50, -2045.99, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2297, 1110.90, -2040.65, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(1795, 1108.25, -2045.84, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(1795, 1105.48, -2045.91, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(1795, 1105.65, -2039.57, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2297, 1109.88, -2039.31, 3992.13,   0.00, 0.00, 226.16);
CreateDynamicObject(1775, 1122.46, -2036.25, 3993.21,   0.00, 0.00, 270.00);
CreateDynamicObject(1723, 1114.25, -2034.00, 3992.13,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 1117.85, -2035.26, 3992.13,   0.00, 0.00, 180.00);
CreateDynamicObject(2314, 1116.01, -2033.53, 3992.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2314, 1117.54, -2032.64, 3992.13,   0.00, 0.00, 180.00);
CreateDynamicObject(1536, 1120.22, -2027.11, 3992.11,   0.00, 0.00, -45.00);
CreateDynamicObject(1536, 1122.34, -2029.18, 3992.11,   0.00, 0.00, 135.00);
CreateDynamicObject(1502, 1117.41, -2039.11, 3991.97,   0.00, 0.00, 0.00);
CreateDynamicObject(1502, 1114.21, -2039.12, 3991.97,   0.00, 0.00, 0.00);
CreateDynamicObject(1502, 1110.26, -2036.62, 3991.97,   0.00, 0.00, 270.00);
CreateDynamicObject(1502, 1110.25, -2033.47, 3991.97,   0.00, 0.00, 270.00);
CreateDynamicObject(1502, 1113.45, -2033.43, 3995.56,   0.00, 0.00, 0.00);
CreateDynamicObject(1502, 1107.09, -2033.48, 3995.56,   0.00, 0.00, 0.00);
CreateDynamicObject(1421, 1105.40, -2034.65, 3992.87,   0.00, 0.00, 90.00);
CreateDynamicObject(1421, 1105.38, -2032.96, 3992.87,   0.00, 0.00, 90.00);
CreateDynamicObject(1421, 1106.25, -2032.99, 3992.87,   0.00, 0.00, 90.00);
CreateDynamicObject(1421, 1106.22, -2034.63, 3992.87,   0.00, 0.00, 90.00);
CreateDynamicObject(1421, 1107.45, -2032.54, 3992.87,   0.00, 0.00, 0.00);
CreateDynamicObject(1421, 1109.14, -2032.53, 3992.87,   0.00, 0.00, 0.00);
CreateDynamicObject(1421, 1107.50, -2035.13, 3992.07,   0.00, 0.00, 21.33);
CreateDynamicObject(1421, 1108.21, -2035.24, 3992.07,   0.00, 0.00, 21.33);
CreateDynamicObject(1421, 1108.95, -2035.32, 3992.07,   0.00, 0.00, 21.33);
CreateDynamicObject(3850, 1109.45, -2028.95, 3996.01,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 1110.77, -2028.95, 3996.01,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 1112.48, -2027.23, 3996.01,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, 1118.35, -2024.77, 3995.46,   -0.02, 90.00, 0.00);
CreateDynamicObject(3850, 1112.49, -2024.49, 3996.01,   0.00, 0.00, 0.00);

//Sacratta Famiglia Int By Map Team ZC 2013 (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(4600, 985.78, -958.88, 4000.00,   0.00, 0.00, 8.90);
CreateDynamicObject(4600, 965.88, -932.98, 4000.00,   0.00, 0.00, 116.47);
CreateDynamicObject(4600, 900.36, -910.44, 4000.00,   0.00, 0.00, 300.37);
CreateDynamicObject(19379, 943.17, -936.55, 4004.64,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 932.68, -936.55, 4004.64,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 922.19, -936.55, 4004.64,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 943.21, -926.91, 4004.64,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 932.71, -926.92, 4004.64,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 922.23, -926.95, 4004.64,   0.00, 90.00, 0.00);
CreateDynamicObject(4600, 948.81, -902.07, 4000.00,   0.00, 0.00, 210.56);
CreateDynamicObject(4600, 961.16, -900.36, 4000.00,   0.00, 0.00, 210.56);
CreateDynamicObject(19378, 925.71, -936.02, 4012.38,   0.00, 90.00, 0.00);
CreateDynamicObject(19378, 936.14, -936.02, 4012.38,   0.00, 90.00, 0.00);
CreateDynamicObject(19378, 925.69, -926.49, 4012.38,   0.00, 90.00, 0.00);
CreateDynamicObject(19378, 936.14, -926.49, 4012.38,   0.00, 90.00, 0.00);
CreateDynamicObject(19378, 946.53, -926.49, 4012.38,   0.00, 90.00, 0.00);
CreateDynamicObject(19378, 946.55, -935.97, 4012.38,   0.00, 90.00, 0.00);
CreateDynamicObject(19465, 941.06, -928.47, 4007.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19464, 941.06, -934.37, 4006.24,   0.00, 0.00, 0.00);
CreateDynamicObject(19465, 938.19, -931.51, 4007.27,   0.00, 0.00, 90.00);
CreateDynamicObject(19465, 932.27, -931.51, 4007.27,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 935.23, -934.38, 4006.24,   0.00, 0.00, 0.00);
CreateDynamicObject(19464, 929.21, -934.42, 4006.24,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, 942.08, -936.32, 4008.72,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 931.60, -936.44, 4008.72,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 924.05, -930.28, 4008.74,   0.00, 90.00, 0.00);
CreateDynamicObject(14407, 925.83, -923.45, 4005.47,   0.00, 0.00, 270.00);
CreateDynamicObject(19465, 929.41, -928.42, 4007.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19464, 926.37, -931.49, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 926.48, -925.60, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 923.57, -928.47, 4006.24,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, 918.39, -920.68, 4008.74,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 921.12, -939.90, 4008.74,   0.00, 90.00, 0.00);
CreateDynamicObject(19464, 941.07, -922.55, 4007.27,   0.00, 0.00, 0.00);
CreateDynamicObject(19379, 946.44, -926.70, 4008.72,   0.00, 90.00, 0.00);
CreateDynamicObject(19379, 946.38, -917.38, 4008.74,   0.00, 90.00, 0.00);
CreateDynamicObject(4600, 968.72, -901.82, 4000.00,   0.00, 0.00, 210.56);
CreateDynamicObject(19464, 926.38, -937.31, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 932.18, -937.33, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 938.13, -937.37, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 944.09, -937.35, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 947.73, -933.80, 4006.24,   0.00, 0.00, 0.00);
CreateDynamicObject(19465, 942.68, -924.96, 4011.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19465, 942.68, -930.88, 4011.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19465, 939.59, -933.31, 4011.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19465, 927.71, -933.31, 4011.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 933.65, -933.31, 4011.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 921.79, -933.31, 4011.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 945.73, -928.20, 4011.35,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 942.68, -936.80, 4011.35,   0.00, 0.00, 0.00);
CreateDynamicObject(19464, 931.72, -936.37, 4011.35,   0.00, 0.00, 0.00);
CreateDynamicObject(1491, 941.01, -927.71, 4004.72,   0.00, 0.00, 270.00);
CreateDynamicObject(1491, 938.96, -931.45, 4004.72,   0.00, 0.00, 180.00);
CreateDynamicObject(1491, 933.03, -931.45, 4004.72,   0.00, 0.00, 180.00);
CreateDynamicObject(1491, 928.46, -933.29, 4008.82,   0.00, 0.00, 180.00);
CreateDynamicObject(1491, 929.46, -929.19, 4004.72,   0.00, 0.00, 90.00);
CreateDynamicObject(1491, 940.34, -933.26, 4008.80,   0.00, 0.00, 180.00);
CreateDynamicObject(1491, 942.62, -930.12, 4008.80,   0.00, 0.00, 270.00);
CreateDynamicObject(1491, 942.63, -924.19, 4008.80,   0.00, 0.00, 270.00);
CreateDynamicObject(2528, 927.16, -936.75, 4008.81,   0.00, 0.00, 180.00);
CreateDynamicObject(2523, 930.44, -936.78, 4008.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2522, 924.19, -933.86, 4008.83,   0.00, 0.00, 0.00);
CreateDynamicObject(19464, 923.55, -936.18, 4011.35,   0.00, 0.00, 0.00);
CreateDynamicObject(2520, 924.46, -935.70, 4008.83,   0.00, 0.00, 180.00);
CreateDynamicObject(1798, 946.32, -935.97, 4008.81,   0.00, 0.00, 90.00);
CreateDynamicObject(1798, 945.12, -931.81, 4008.81,   0.00, 0.00, 0.00);
CreateDynamicObject(2296, 946.75, -933.07, 4008.81,   0.00, 0.00, 270.00);
CreateDynamicObject(2100, 942.93, -929.42, 4008.81,   0.00, 0.00, 90.00);
CreateDynamicObject(2298, 946.16, -924.09, 4008.81,   0.00, 0.00, 180.00);
CreateDynamicObject(2297, 944.48, -922.40, 4008.81,   0.00, 0.00, -45.00);
CreateDynamicObject(19464, 933.42, -936.16, 4011.35,   0.00, 0.00, 0.00);
CreateDynamicObject(1726, 941.92, -934.37, 4008.81,   0.00, 0.00, 270.00);
CreateDynamicObject(1724, 938.17, -935.48, 4008.81,   0.00, 0.00, 270.00);
CreateDynamicObject(1724, 938.18, -934.34, 4008.81,   0.00, 0.00, 270.00);
CreateDynamicObject(2205, 936.21, -934.90, 4008.81,   0.00, 0.00, 270.00);
CreateDynamicObject(1708, 934.51, -936.09, 4008.81,   0.00, 0.00, 90.00);
CreateDynamicObject(16151, 921.50, -929.55, 4009.14,   0.00, 0.00, 180.00);
CreateDynamicObject(1726, 928.76, -926.78, 4008.82,   0.00, 0.00, 270.00);
CreateDynamicObject(1726, 928.75, -929.18, 4008.82,   0.00, 0.00, 270.00);
CreateDynamicObject(1727, 926.75, -926.26, 4008.83,   0.00, 0.00, 0.00);
CreateDynamicObject(15036, 945.37, -928.93, 4005.77,   0.00, 0.00, 90.00);
CreateDynamicObject(19464, 944.09, -931.39, 4006.24,   0.00, 0.00, 90.00);
CreateDynamicObject(2013, 946.36, -925.21, 4004.59,   0.00, 0.00, 270.00);
CreateDynamicObject(2013, 946.36, -923.24, 4004.59,   0.00, 0.00, 270.00);
CreateDynamicObject(2013, 946.36, -921.36, 4004.59,   0.00, 0.00, 270.00);
CreateDynamicObject(1432, 943.48, -924.26, 4004.72,   0.00, 0.00, 0.00);
CreateDynamicObject(1432, 943.05, -926.88, 4004.72,   0.00, 0.00, 29.87);
CreateDynamicObject(2371, 927.17, -929.52, 4004.73,   0.00, 0.00, 90.00);
CreateDynamicObject(2371, 927.19, -927.31, 4004.73,   0.00, 0.00, 90.00);
CreateDynamicObject(2689, 927.41, -927.60, 4005.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2689, 925.78, -926.94, 4005.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2689, 926.52, -926.94, 4005.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2704, 926.26, -927.61, 4005.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2704, 927.02, -927.58, 4005.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2704, 927.22, -926.93, 4005.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2389, 923.97, -929.64, 4006.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2389, 923.95, -928.56, 4006.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2389, 923.97, -927.55, 4006.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2389, 923.94, -926.67, 4006.30,   0.00, 0.00, 90.00);
CreateDynamicObject(2394, 926.53, -929.14, 4005.44,   0.00, 0.00, 0.00);
CreateDynamicObject(2394, 926.49, -929.80, 4005.44,   0.00, 0.00, 0.00);
CreateDynamicObject(2567, 934.09, -934.37, 4006.45,   0.00, 0.00, 90.00);
CreateDynamicObject(1685, 930.26, -936.25, 4005.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1685, 930.26, -936.25, 4006.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1685, 932.01, -936.24, 4005.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1685, 930.28, -934.47, 4005.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1685, 930.22, -934.52, 4006.95,   0.00, 0.00, 0.00);
CreateDynamicObject(1685, 929.86, -932.77, 4005.48,   0.00, 0.00, 0.00);
CreateDynamicObject(1985, 939.75, -935.90, 4007.99,   0.00, 0.00, 0.00);
CreateDynamicObject(1985, 936.78, -935.95, 4007.99,   0.00, 0.00, 0.00);
CreateDynamicObject(2627, 935.87, -933.03, 4004.73,   0.00, 0.00, 0.00);
CreateDynamicObject(2627, 937.01, -932.98, 4004.73,   0.00, 0.00, 0.00);
CreateDynamicObject(2630, 939.86, -932.80, 4004.73,   0.00, 0.00, 0.00);
CreateDynamicObject(3850, 927.55, -925.48, 4009.35,   0.00, 0.00, 90.00);
CreateDynamicObject(3850, 925.84, -925.49, 4009.35,   0.00, 0.00, 90.00);
CreateDynamicObject(1557, 933.22, -922.15, 4004.74,   0.00, 0.00, 0.00);
CreateDynamicObject(1557, 936.22, -922.16, 4004.74,   0.00, 0.00, 180.00);
CreateDynamicObject(1723, 936.46, -928.09, 4004.73,   0.00, 0.00, 180.00);
CreateDynamicObject(1723, 933.11, -926.80, 4004.73,   0.00, 0.00, 90.00);
CreateDynamicObject(1723, 937.68, -924.83, 4004.73,   0.00, 0.00, 270.00);

//Hells Angels Interior By chuck005 from Forum SAMP (o para otras familias en caso de que esta sea removida)
CreateDynamicObject(19378,785.7600000,-499.4600000,-68.5300000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,785.7600000,-498.7200000,-68.4000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,785.7600000,-498.4200000,-68.2800000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,785.7500000,-498.1100000,-68.1700000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,783.7000000,-506.9100000,-72.7800000,90.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19378,785.8400000,-506.9100000,-72.7800000,90.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19378,791.1800000,-507.4700000,-68.0600000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,778.5200000,-507.4700000,-68.0600000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,785.8400000,-497.8400000,-68.0500000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19360,784.7600000,-504.3700000,-66.8400000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19452,783.2500000,-509.1100000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,785.0000000,-506.1200000,-66.2200000,0.0000000,0.0000000,-90.0000000); //
CreateDynamicObject(19452,780.5000000,-501.5700000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,780.5000000,-491.9400000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19360,784.7600000,-504.3700000,-63.3400000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1497,783.9800000,-504.3200000,-68.4600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,782.4000000,-506.4200000,-67.9700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,780.9000000,-506.4200000,-67.9700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,782.4100000,-506.3700000,-67.9400000,275.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,780.9100000,-506.3700000,-67.9400000,275.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,780.2700000,-505.4300000,-67.9400000,275.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1471,780.2700000,-503.9300000,-67.9400000,275.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1471,780.1600000,-505.4300000,-67.9600000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1471,780.1600000,-503.9300000,-67.9600000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(19452,789.4200000,-502.0100000,-68.4900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,789.4200000,-492.3800000,-68.4900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,792.9600000,-494.8200000,-66.2200000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19452,788.1900000,-490.0800000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,788.9300000,-496.9800000,-67.4900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2723,788.6700000,-495.2700000,-67.6200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2723,788.6600000,-498.7300000,-67.6200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(16101,788.6800000,-496.9900000,-78.0100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18001,789.3900000,-498.9800000,-66.2800000,0.0000000,0.0000000,-90.0000000); //
CreateDynamicObject(19452,789.4200000,-492.3800000,-64.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,789.4200000,-508.4200000,-64.9900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18001,789.3900000,-507.0800000,-66.2800000,0.0000000,0.0000000,-90.0000000); //
CreateDynamicObject(19360,789.4200000,-498.8000000,-64.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19360,789.4100000,-502.0000000,-64.9900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19449,789.5000000,-498.2600000,-67.5500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,787.1200000,-506.3700000,-67.9400000,275.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,786.2800000,-509.2700000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,788.6200000,-506.3700000,-67.9400000,275.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,787.0800000,-506.4200000,-67.9700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,788.5900000,-506.4200000,-67.9700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2723,788.6600000,-499.3300000,-67.6200000,0.0000000,0.0000000,32.1000000); //
CreateDynamicObject(1471,788.9300000,-501.1400000,-67.4900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2723,788.5800000,-502.8400000,-67.6200000,0.0000000,0.0000000,27.3600000); //
CreateDynamicObject(16101,788.6800000,-501.1600000,-78.0100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1471,789.6600000,-505.3400000,-67.9400000,275.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1471,789.6600000,-503.8300000,-67.9400000,275.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1471,789.7500000,-503.8300000,-67.9600000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1471,789.7500000,-505.3400000,-67.9600000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19452,787.2300000,-493.1100000,-66.2200000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1499,780.9400000,-493.1300000,-67.9700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,776.1300000,-493.1100000,-66.2200000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19433,781.6800000,-493.1200000,-63.6900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2681,787.3800000,-493.9300000,-67.9700000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2723,781.6200000,-502.3900000,-67.6200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19360,781.2500000,-501.3700000,-68.6100000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19360,782.7700000,-499.7800000,-68.6100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2315,782.3900000,-500.9600000,-67.3300000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2315,782.3600000,-498.5400000,-67.3300000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2723,783.7800000,-500.8700000,-67.6200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2723,783.7500000,-499.3100000,-67.6200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19433,782.0500000,-498.1600000,-68.6100000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1541,781.8500000,-499.3300000,-66.6400000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1544,782.5900000,-500.2700000,-66.8500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1543,782.2100000,-501.1000000,-66.8500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2048,780.6100000,-499.3200000,-65.6400000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2047,787.7900000,-506.0200000,-65.6400000,0.0000000,15.0000000,180.0000000); //
CreateDynamicObject(2282,782.5300000,-505.5500000,-65.5300000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2281,781.3200000,-505.5500000,-66.4500000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2280,788.8300000,-501.4200000,-65.6100000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2279,788.8400000,-502.4800000,-66.2900000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2278,788.8400000,-502.9800000,-65.4900000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1471,780.6400000,-496.5900000,-66.3800000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1471,780.6400000,-495.0800000,-66.3800000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(19378,784.6400000,-506.9100000,-64.4200000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,784.6400000,-497.2800000,-64.4200000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(16153,790.4300000,-489.5200000,-67.5600000,0.0000000,0.0000000,-90.0000000); //
CreateDynamicObject(1544,788.3500000,-496.4800000,-67.1100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1544,788.8600000,-497.5200000,-67.1100000,0.0000000,0.0000000,-40.1400000); //
CreateDynamicObject(1543,788.7900000,-500.6300000,-67.0900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19378,785.3200000,-488.3100000,-68.0500000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(346,782.0200000,-500.8100000,-67.2800000,90.0000000,0.0000000,37.9200000); //
CreateDynamicObject(1544,782.1800000,-498.6300000,-67.2800000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1544,782.4300000,-498.8500000,-67.2800000,0.0000000,0.0000000,-51.0600000); //
CreateDynamicObject(1544,782.1500000,-498.8500000,-67.2800000,0.0000000,0.0000000,-71.3400000); //
CreateDynamicObject(16779,784.4600000,-501.0400000,-64.4900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(16779,784.6900000,-496.2700000,-64.4900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1712,787.3400000,-489.7400000,-68.0100000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1712,786.1500000,-492.1900000,-68.0100000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(19433,783.0600000,-492.3700000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2959,783.0700000,-491.6300000,-67.9700000,0.0000000,0.0000000,-45.0000000); //
CreateDynamicObject(19433,783.0500000,-490.7600000,-63.7100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19433,783.0600000,-489.3200000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2332,788.0900000,-492.4000000,-67.5100000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1712,787.3300000,-486.8900000,-68.0100000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2370,784.8500000,-489.3100000,-68.0900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1543,784.7800000,-489.5400000,-67.2500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1544,784.6900000,-489.1900000,-67.2600000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3017,785.7300000,-489.0100000,-67.2400000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19452,787.9000000,-486.0900000,-66.2200000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19360,783.0600000,-486.9100000,-66.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1744,785.1900000,-486.0100000,-66.1500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2102,785.4900000,-486.3700000,-65.8100000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19452,787.9000000,-486.0900000,-66.2200000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19452,778.2600000,-488.5000000,-66.2200000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,785.3200000,-488.3100000,-64.4100000,0.0000000,90.0000000,0.0000000); //
//Hells Angels Exterior By Alex Morrow (ZC Player)
CreateDynamicObject(14791, 684.09998, -460.10001, 23.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16151, 681.50000, -469.89999, 21.89900,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3524, 675.59998, -474.60001, 16.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3524, 678.50000, -474.60001, 16.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3524, 684.40002, -474.60001, 16.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3524, 687.40002, -474.60001, 16.20000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12950, 672.09998, -448.39999, 16.20000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1368, 674.90002, -462.70001, 22.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1368, 674.90002, -459.70001, 22.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(955, 680.09998, -470.50000, 22.00000,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1516, 675.29980, -469.19922, 21.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14407, 676.50000, -454.60001, 18.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1337, 673.90002, -455.10001, 20.30000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1337, 675.00000, -466.39999, 22.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(643, 688.90002, -452.50000, 20.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(643, 683.50000, -451.60001, 20.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 672.39941, -457.59961, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 706.39941, -457.59961, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3359, 705.40002, -445.20001, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3458, 679.00000, -440.20001, 16.90000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(11393, 701.20001, -444.89999, 16.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 696.00000, -458.39999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 696.00000, -461.39999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 696.00000, -464.39999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 696.00000, -467.39999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 696.09998, -470.39999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 696.00000, -473.39999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1408, 686.20001, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 691.70001, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 697.20001, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 702.70001, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 671.00000, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 665.50000, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 654.50000, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 660.00000, -477.60001, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 651.70001, -474.79999, 15.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1408, 651.70001, -469.29999, 15.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1408, 651.70001, -457.10001, 15.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1408, 651.70001, -451.60001, 15.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1408, 651.70001, -446.10001, 15.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1408, 651.70001, -440.60001, 15.90000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1251, 666.79999, -456.89999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 666.79999, -460.89999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 666.79999, -464.89999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 666.79999, -468.89999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1251, 666.79999, -472.89999, 15.35000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1408, 676.50000, -477.59961, 15.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2991, 675.39941, -447.89941, 16.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2912, 702.20001, -448.60001, 15.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, 711.39941, -449.69922, 16.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2991, 709.20001, -439.20001, 16.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2991, 705.09998, -439.20001, 16.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2991, 701.00000, -439.20001, 16.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2991, 709.20001, -439.20001, 17.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2991, 705.09998, -439.20001, 17.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2991, 701.00000, -439.20001, 17.30000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 686.70123, -470.23077, 21.93044,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 688.76489, -468.12964, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 688.76489, -464.01239, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 688.76422, -458.54401, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 686.71741, -456.48123, 21.93044,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 682.59222, -456.48120, 21.93040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 680.50000, -456.48120, 21.93040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 674.15424, -458.57590, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 674.15417, -462.69470, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 674.15417, -466.78470, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 674.15417, -468.85699, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 676.26770, -470.89389, 21.93040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 672.55969, -456.41211, 20.00417,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 670.50659, -454.36029, 20.00420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 670.50659, -451.10001, 20.00420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 672.59924, -449.06128, 20.00417,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 679.51001, -446.04999, 20.00417,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 683.39777, -446.03467, 20.00417,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 690.47498, -449.07581, 20.00420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 688.76489, -459.86609, 21.93040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 692.51270, -451.19263, 20.00420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 692.51270, -454.30731, 20.00420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(970, 690.47754, -456.37210, 20.00420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, 687.17352, -447.76389, 19.56000,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(970, 686.96216, -447.55380, 20.00420,   0.00000, 0.00000, 314.22458);
CreateDynamicObject(19362, 688.80603, -447.64001, 17.83420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, 687.24286, -446.25937, 17.83420,   0.00000, 0.00000, 90.00000);
//Objetos Decorativos Juzgado, iglesia
CreateDynamicObject(11245,1381.3883100,-1088.8535200,34.9161200,0.0000000,0.0000000,182.1630000); //object(sfsefirehseflag) (1)
CreateDynamicObject(18014,1384.0166000,-1095.4484900,26.8228300,0.0000000,0.0000000,0.0000000); //object(int_rest_veg03) (1)
CreateDynamicObject(18014,1383.9939000,-1082.2876000,26.8228300,0.0000000,0.0000000,0.0000000); //object(int_rest_veg03) (2)
CreateDynamicObject(3439,1382.5354000,-1092.3817100,28.7552300,0.0000000,0.0000000,0.0000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,1382.5804400,-1085.1329300,28.7552300,0.0000000,0.0000000,0.0000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(870,1373.4841300,-1109.7666000,24.0547000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (1)
CreateDynamicObject(870,1373.5935100,-1107.0639600,24.0887900,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (2)
CreateDynamicObject(870,1375.5773900,-1121.1751700,24.0547000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (3)
CreateDynamicObject(870,1373.6127900,-1121.0725100,24.0975000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (4)
CreateDynamicObject(870,1375.4101600,-1109.9257800,24.1403000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (5)
CreateDynamicObject(870,1375.4470200,-1107.1242700,24.0887900,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (6)
CreateDynamicObject(870,1373.7238800,-1123.9073500,24.0975000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (7)
CreateDynamicObject(870,1375.3819600,-1124.0566400,24.0975000,0.0000000,0.0000000,0.0000000); //object(veg_pflowers2wee) (8)
CreateDynamicObject(994,1374.0567600,-1093.6424600,26.4550500,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,1374.0101300,-1085.1527100,26.2410400,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier2) (2)
CreateDynamicObject(997,1409.7451200,-1701.5727500,12.5394900,0.0000000,0.0000000,328.1260000); //object(lhouse_barrier3) (1)
CreateDynamicObject(2614,1411.3297100,-1699.4248000,15.5255300,0.0000000,0.0000000,59.1800000); //object(cj_us_flag) (1)
CreateDynamicObject(638,1410.8388700,-1702.8327600,13.2365200,0.0000000,0.0000000,57.9950000); //object(kb_planter_bush) (2)
CreateDynamicObject(1361,1412.7281500,-1698.3623000,13.2828300,0.0000000,0.0000000,0.0000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(997,1412.7959000,-1697.2426800,12.5394900,0.0000000,0.0000000,328.1230000); //object(lhouse_barrier3) (2)
CreateDynamicObject(1361,1410.7337600,-1701.2282700,13.2828300,0.0000000,0.0000000,0.0000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(638,1414.4304200,-1697.6716300,13.2365200,0.0000000,0.0000000,57.9910000); //object(kb_planter_bush) (3)
CreateDynamicObject(3439,2232.7653800,-1335.8761000,27.0955600,0.0000000,0.0000000,0.0000000); //object(aprtree01_lvs) (3)
CreateDynamicObject(3439,2232.7453600,-1330.6637000,27.0955600,0.0000000,0.0000000,0.0000000); //object(aprtree01_lvs) (4)
//Taxi Cab Ext By Map Team ZC 2013
CreateDynamicObject(970, 1808.38367, -1897.57764, 13.12961,   0.00000, 0.00000, 240.00000);
CreateDynamicObject(970, 1807.19714, -1901.43835, 13.12978,   0.00000, 0.00000, 265.99634);
CreateDynamicObject(970, 1790.86682, -1886.89099, 12.94876,   0.00000, 0.00000, 179.99634);
CreateDynamicObject(970, 1805.53601, -1884.55676, 13.13142,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1805.53516, -1884.55664, 13.13142,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1791.10632, -1911.10217, 13.25716,   0.00000, 0.00000, 87.99451);
CreateDynamicObject(1215, 1811.54309, -1897.19043, 13.13385,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1806.39111, -1899.71155, 12.96680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1811.75659, -1884.10132, 12.97839,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1790.08008, -1900.36206, 13.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11547, 1777.70667, -1926.42578, 15.33229,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11547, 1803.05334, -1926.58472, 15.33401,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11547, 1777.76648, -1907.13354, 15.33234,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8841, 1790.06970, -1914.89478, 15.72130,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(11547, 1803.05823, -1907.01440, 15.34357,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1790.37988, -1902.11157, 13.47770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1790.27856, -1904.88318, 13.47770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1360, 1790.32715, -1907.74670, 13.47770,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(1360, 1790.11914, -1910.46326, 13.47770,   0.00000, 0.00000, 357.99500);
CreateDynamicObject(970, 1801.40332, -1884.55566, 13.12839,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1791.30176, -1902.81055, 13.25716,   0.00000, 0.00000, 89.99451);
CreateDynamicObject(970, 1791.24023, -1906.98535, 13.25716,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(970, 1789.22803, -1910.84656, 13.25716,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(970, 1789.36804, -1906.67358, 13.25716,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(970, 1789.50854, -1902.55359, 13.25716,   0.00000, 0.00000, 87.98950);
CreateDynamicObject(870, 1790.25891, -1902.08813, 14.28822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1790.24646, -1904.53589, 14.28822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1789.86230, -1907.89258, 14.28822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1789.88965, -1910.47375, 14.28822,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1806.43970, -1883.99170, 13.14493,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1789.95410, -1912.43994, 13.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1789.24146, -1906.18823, 13.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1789.42957, -1925.17175, 13.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1597, 1792.31421, -1885.52881, 15.05572,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(970, 1809.67578, -1884.55566, 13.13446,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1795.00000, -1886.90430, 12.95179,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1790.86621, -1886.89063, 12.94876,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1794.57397, -1884.75684, 12.95147,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1790.45850, -1884.75232, 12.94846,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3660, 1759.68103, -1884.58472, 15.20872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1799.42969, -1884.00098, 13.13979,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1792.26501, -1883.96216, 13.13459,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1755.36328, -1885.55676, 14.38287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1766.29492, -1885.59277, 14.38287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1760.40625, -1885.43555, 14.38287,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1752.91675, -1885.81250, 14.36445,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1360, 1751.73645, -1898.55774, 13.32961,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(870, 1751.55920, -1898.38708, 14.14013,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1808.17432, -1922.53857, 13.12644,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1752.92383, -1896.30664, 13.12162,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1752.37695, -1898.62598, 13.10334,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1769.39172, -1883.92395, 14.36445,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3850, 1756.34863, -1885.82324, 14.36445,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3850, 1759.76074, -1885.83105, 14.36445,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3850, 1763.19727, -1885.83691, 14.36445,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3850, 1766.61426, -1885.84082, 14.36445,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1364, 1789.81873, -1916.62000, 13.48980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1364, 1789.72949, -1922.64343, 13.48980,   0.00000, 0.00000, 178.00000);
CreateDynamicObject(640, 1770.00769, -1931.32336, 13.25465,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(640, 1769.99426, -1923.21069, 13.25467,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1770.02783, -1927.22363, 13.12190,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1770.16602, -1919.90039, 13.12163,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1770.07581, -1934.83411, 13.12180,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1791.51758, -1907.30176, 13.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1789.00293, -1933.43457, 13.27000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(638, 1765.00647, -1906.71753, 13.26490,   0.00000, 0.00000, 268.00000);
CreateDynamicObject(638, 1760.54077, -1906.59180, 13.26374,   0.00000, 0.00000, 267.99500);
CreateDynamicObject(1215, 1762.58057, -1906.65259, 13.13156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(625, 1809.81335, -1927.23914, 12.55358,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(625, 1810.51563, -1904.61523, 12.56515,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(625, 1810.51270, -1915.58398, 12.55979,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1752.87891, -1891.77148, 13.12163,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1808.54578, -1910.45581, 13.13502,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1811.89282, -1892.89294, 12.38606,   0.00000, 0.00000, 90.00008);
CreateDynamicObject(19425, 1811.88306, -1889.56323, 12.38606,   0.00000, 0.00000, 90.00008);
CreateDynamicObject(19425, 1811.88281, -1886.22046, 12.38606,   0.00000, 0.00000, 90.00008);
CreateDynamicObject(1364, 1760.37280, -1924.39832, 13.48980,   0.00000, 0.00000, 90.66003);
CreateDynamicObject(1364, 1760.45361, -1916.28503, 13.48980,   0.00000, 0.00000, 90.66003);
CreateDynamicObject(1364, 1760.45142, -1931.63916, 13.48980,   0.00000, 0.00000, 90.66003);
CreateDynamicObject(970, 1779.24866, -1941.57886, 13.05256,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1775.07092, -1941.58618, 13.05256,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1770.93103, -1941.57349, 13.05256,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(970, 1768.82813, -1939.49854, 13.05256,   0.00000, 0.00000, 270.05466);
CreateDynamicObject(970, 1768.82324, -1935.37170, 13.05256,   0.00000, 0.00000, 270.05466);
CreateDynamicObject(640, 1769.31396, -1938.48792, 13.25465,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1769.27405, -1941.34875, 13.12180,   0.00000, 0.00000, 0.00000);
//Mercado Negro
CreateDynamicObject(2567,1294.81750488,-978.98455811,33.62291336,0.00000000,0.00000000,0.00000000); //object(ab_warehouseshelf) (1)
CreateDynamicObject(18092,1296.00244141,-990.46081543,32.20999908,0.00000000,0.00000000,0.00000000); //object(ammun3_counter) (1)
CreateDynamicObject(2422,1296.52600098,-990.35791016,32.71051788,0.00000000,0.00000000,160.78454590); //object(cj_ff_till) (1)
CreateDynamicObject(3461,1292.31811523,-994.84704590,33.27032471,0.00000000,0.00000000,0.00000000); //object(tikitorch01_lvs) (1)
CreateDynamicObject(3267,1286.42675781,-985.30664062,31.14999962,0.00000000,0.00000000,330.22155762); //object(mil_samsite) (1)
CreateDynamicObject(2044,1295.48876953,-990.27124023,32.73805237,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (1)
CreateDynamicObject(2045,1293.91699219,-990.37402344,32.75000000,0.00000000,0.00000000,354.03991699); //object(cj_bbat_nails) (1)
CreateDynamicObject(2036,1294.88964844,-990.03063965,32.74444199,0.00000000,0.00000000,0.00000000); //object(cj_psg1) (1)
CreateDynamicObject(1654,1293.51074219,-990.80664062,32.91500092,0.00000000,0.00000000,0.00000000); //object(dynamite) (1)
CreateDynamicObject(1550,1298.07629395,-992.53210449,32.08865356,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (1)
CreateDynamicObject(939,1295.61181641,-984.74456787,34.13853836,0.00000000,0.00000000,0.00000000); //object(cj_df_unit) (1)
CreateDynamicObject(2062,1286.66577148,-980.18432617,32.26394653,0.00000000,0.00000000,0.00000000); //object(cj_oildrum2) (1)
CreateDynamicObject(2062,1286.01989746,-979.52478027,32.26394653,0.00000000,0.00000000,0.00000000); //object(cj_oildrum2) (2)
CreateDynamicObject(1224,1291.07080078,-978.88385010,32.31022644,0.00000000,0.00000000,0.00000000); //object(woodenbox) (1)
CreateDynamicObject(1429,1291.29919434,-979.00555420,33.17756271,0.00000000,0.00000000,342.13513184); //object(dyn_tv) (1)
CreateDynamicObject(2619,1297.24609375,-992.90002441,34.41531754,0.00000000,0.00000000,272.66064453); //object(mp_ammoambient) (1)
CreateDynamicObject(8229,1290.59997559,-966.26641846,35.59999847,0.00000000,0.00000000,181.35131836); //object(vgsbikeschl02) (1)
CreateDynamicObject(16637,1286.84692383,-1005.00000000,32.86999893,0.00000000,70.00000000,90.00000000); //object(ghostgardoor) (1)
CreateDynamicObject(1499,1286.50891113,-1006.00000000,29.84202576,0.00000000,0.00000000,0.00000000); //object(gen_doorint05) (1)
CreateDynamicObject(1499,1289.51452637,-1006.00000000,29.84202576,0.00000000,0.00000000,180.00000000); //object(gen_doorint05) (2)
CreateDynamicObject(16637,1290.50000000,-1005.00000000,32.86999893,0.00000000,69.99938965,90.00000000); //object(ghostgardoor) (2)
CreateDynamicObject(16637,1284.65002441,-1005.97998047,31.00000000,0.00000000,0.00000000,90.00000000); //object(ghostgardoor) (3)
CreateDynamicObject(16637,1291.40002441,-1005.97998047,31.00000000,0.00000000,0.00000000,90.00000000); //object(ghostgardoor) (4)
//Groove Street Families Exterior
CreateDynamicObject(2637,2526.59106445,-1667.50537109,14.57349968,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2) (1)
CreateDynamicObject(2637,2528.70117188,-1667.50292969,14.57349777,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2) (2)
CreateDynamicObject(3657,2534.00415039,-1665.28442383,14.68090057,0.00000000,0.00000000,268.68994141); //object(airseata_las) (1)
CreateDynamicObject(2310,2529.22387695,-1666.00354004,14.66687489,0.00000000,0.00000000,87.34002686); //object(mike_din_chair) (1)
CreateDynamicObject(2310,2527.71435547,-1665.95349121,14.66683769,0.00000000,0.00000000,87.33581543); //object(mike_din_chair) (2)
CreateDynamicObject(2310,2526.21044922,-1665.92517090,14.66007900,0.00000000,0.00000000,87.33581543); //object(mike_din_chair) (3)
CreateDynamicObject(2310,2526.82739258,-1669.11584473,14.66915417,0.00000000,0.00000000,269.95996094); //object(mike_din_chair) (5)
CreateDynamicObject(2310,2528.42041016,-1669.17773438,14.66919994,0.00000000,0.00000000,269.95605469); //object(mike_din_chair) (6)
CreateDynamicObject(2837,2528.87500000,-1667.26025391,14.98282433,0.00000000,0.00000000,0.00000000); //object(gb_takeaway02) (1)
CreateDynamicObject(2837,2528.02734375,-1667.75170898,14.98282433,0.00000000,0.00000000,0.00000000); //object(gb_takeaway02) (2)
CreateDynamicObject(2647,2529.24194336,-1667.84899902,15.13936043,0.00000000,0.00000000,0.00000000); //object(cj_bs_cup) (1)
CreateDynamicObject(1487,2527.20092773,-1667.15991211,15.18028069,0.00000000,0.00000000,0.00000000); //object(dyn_wine_1) (1)
CreateDynamicObject(1543,2527.21459961,-1667.75305176,14.98282623,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2) (1)
CreateDynamicObject(1544,2527.03491211,-1667.45031738,14.98282623,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_1) (1)
CreateDynamicObject(1543,2526.65087891,-1667.15808105,14.98282623,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2) (2)
CreateDynamicObject(1543,2526.50634766,-1667.72705078,14.98282623,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2) (3)
CreateDynamicObject(1728,2532.29370117,-1670.72253418,14.16807556,0.00000000,0.00000000,181.34997559); //object(mrk_seating3) (1)
CreateDynamicObject(1728,2529.55468750,-1670.77331543,14.17115402,0.00000000,0.00000000,181.34582520); //object(mrk_seating3) (2)
// Ministros ?¿
CreateDynamicObject(14597,1431.41015625,-1781.28710938,-90.62748718,0.00000000,0.00000000,0.00000000); //object(paperchase07) (1)
CreateDynamicObject(2395,1444.51635742,-1780.00183105,-92.74468231,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,1444.51562500,-1780.00097656,-89.99462128,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(1557,1444.62768555,-1780.32690430,-92.64467621,0.00000000,0.00000000,270.00000000); //object(gen_doorext19) (1)
CreateDynamicObject(2167,1441.65515137,-1794.90246582,-92.61967468,0.00000000,0.00000000,180.00000000); //object(med_office_unit_7) (1)
CreateDynamicObject(2191,1439.71142578,-1794.32141113,-92.61967468,0.00000000,0.00000000,180.00000000); //object(med_office2_cab) (1)
CreateDynamicObject(2197,1437.21057129,-1793.38488770,-92.62262726,0.00000000,0.00000000,180.00000000); //object(filling_cabinet) (1)
CreateDynamicObject(2197,1436.48425293,-1793.37768555,-92.62262726,0.00000000,0.00000000,179.99450684); //object(filling_cabinet) (2)
CreateDynamicObject(2008,1438.51928711,-1790.96655273,-92.61235046,0.00000000,0.00000000,0.00000000); //object(officedesk1) (1)
CreateDynamicObject(1715,1439.35217285,-1792.29382324,-92.61235046,0.00000000,0.00000000,180.00000000); //object(kb_swivelchair2) (1)
CreateDynamicObject(1726,1442.09167480,-1785.55163574,-92.61967468,0.00000000,0.00000000,270.00000000); //object(mrk_seating2) (1)
CreateDynamicObject(1726,1427.98046875,-1787.65539551,-92.61967468,0.00000000,0.00000000,90.00000000); //object(mrk_seating2) (2)
CreateDynamicObject(949,1435.74816895,-1788.14562988,-91.97606659,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
CreateDynamicObject(949,1442.09289551,-1788.14550781,-91.98339081,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
CreateDynamicObject(2001,1444.02868652,-1782.93432617,-92.61967468,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (1)
CreateDynamicObject(2001,1443.99951172,-1779.41137695,-92.61235046,0.00000000,0.00000000,0.00000000); //object(nu_plant_ofc) (2)
CreateDynamicObject(2167,1429.37585449,-1794.82531738,-92.61967468,0.00000000,0.00000000,179.99450684); //object(med_office_unit_7) (2)
CreateDynamicObject(2197,1431.20996094,-1793.39160156,-92.61967468,0.00000000,0.00000000,179.99450684); //object(filling_cabinet) (3)
CreateDynamicObject(2197,1431.93151855,-1793.39538574,-92.61967468,0.00000000,0.00000000,179.99450684); //object(filling_cabinet) (4)
CreateDynamicObject(2182,1434.36962891,-1793.34375000,-92.61967468,0.00000000,0.00000000,180.00000000); //object(med_office5_desk_1) (1)
CreateDynamicObject(2167,1428.41613770,-1794.82275391,-92.61967468,0.00000000,0.00000000,179.99450684); //object(med_office_unit_7) (3)
CreateDynamicObject(2008,1430.73657227,-1790.59472656,-92.61235046,0.00000000,0.00000000,0.00000000); //object(officedesk1) (2)
CreateDynamicObject(1715,1431.69116211,-1791.90270996,-92.61967468,0.00000000,0.00000000,179.99450684); //object(kb_swivelchair2) (2)
CreateDynamicObject(1726,1434.27844238,-1785.66357422,-92.61967468,0.00000000,0.00000000,270.00000000); //object(mrk_seating2) (3)
CreateDynamicObject(949,1434.10107422,-1788.28515625,-91.98339081,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (3)
CreateDynamicObject(1726,1435.81250000,-1787.52832031,-92.61235046,0.00000000,0.00000000,90.00000000); //object(mrk_seating2) (5)
CreateDynamicObject(949,1428.10339355,-1788.27990723,-91.98339081,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (4)
CreateDynamicObject(2198,1418.79418945,-1783.16394043,-92.61967468,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_3) (1)
CreateDynamicObject(2308,1418.74938965,-1779.86413574,-92.61967468,0.00000000,0.00000000,0.00000000); //object(med_office4_desk_4) (1)
CreateDynamicObject(1715,1420.18200684,-1782.64599609,-92.61967468,0.00000000,0.00000000,299.99450684); //object(kb_swivelchair2) (3)
CreateDynamicObject(2008,1422.68444824,-1780.92236328,-92.61967468,0.00000000,0.00000000,270.00000000); //object(officedesk1) (3)
CreateDynamicObject(1715,1421.37683105,-1781.88781738,-92.61235046,0.00000000,0.00000000,91.98852539); //object(kb_swivelchair2) (4)
CreateDynamicObject(949,1426.48547363,-1782.30175781,-91.98339081,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (5)
CreateDynamicObject(1727,1424.99707031,-1778.93566895,-92.61967468,0.00000000,0.00000000,0.00000000); //object(mrk_seating2b) (1)
CreateDynamicObject(1727,1425.99536133,-1783.61975098,-92.61967468,0.00000000,0.00000000,180.00000000); //object(mrk_seating2b) (2)
CreateDynamicObject(2197,1419.76025391,-1780.99829102,-92.61235046,0.00000000,0.00000000,89.99450684); //object(filling_cabinet) (3)
CreateDynamicObject(2395,1444.80664062,-1779.96997070,-90.56965637,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,1427.91748047,-1778.14965820,-92.66978455,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,1427.92028809,-1778.14941406,-89.94461823,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,1431.64990234,-1778.14978027,-92.66967773,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,1431.64941406,-1778.14941406,-89.94452667,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(16151,1438.94958496,-1768.73510742,-92.29465485,0.00000000,0.00000000,90.00000000); //object(ufo_bar) (1)
CreateDynamicObject(2637,1436.92224121,-1775.42260742,-92.21493530,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table2) (1)
CreateDynamicObject(2808,1436.87939453,-1777.14929199,-91.96589661,0.00000000,0.00000000,0.00000000); //object(cj_pizza_chair4) (1)
CreateDynamicObject(2808,1436.90222168,-1773.65148926,-91.96589661,0.00000000,0.00000000,180.00000000); //object(cj_pizza_chair4) (2)
CreateDynamicObject(2635,1441.52368164,-1775.84655762,-92.21493530,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table) (1)
CreateDynamicObject(2636,1441.59399414,-1777.17248535,-91.98388672,0.00000000,0.00000000,270.00000000); //object(cj_pizza_chair) (1)
CreateDynamicObject(2636,1441.65002441,-1774.47619629,-91.98388672,0.00000000,0.00000000,90.00000000); //object(cj_pizza_chair) (2)
CreateDynamicObject(2635,1441.55664062,-1772.18225098,-92.21493530,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table) (2)
CreateDynamicObject(2636,1441.56921387,-1773.48974609,-91.98388672,0.00000000,0.00000000,270.00000000); //object(cj_pizza_chair) (3)
CreateDynamicObject(2636,1441.64038086,-1770.79077148,-91.98388672,0.00000000,0.00000000,90.00000000); //object(cj_pizza_chair) (4)
CreateDynamicObject(949,1426.48339844,-1780.31542969,-91.98339081,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (6)
CreateDynamicObject(1749,1436.92639160,-1767.83996582,-90.76416779,0.00000000,0.00000000,0.00000000); //object(med_tv_3) (1)

/* National Guard new Objects */
saem1 = CreateDynamicObject(980,135.332427,1941.738647,20.890346,0.000000,0.000000,0.000000); // Cerrada
saem2 = CreateDynamicObject(980,349.008087,1801.077392,20.078582,-1.000000,1.000000,-137.000000); // Cerrada
CreateObject(3115,373.40872192,1986.67773438,17.52946091,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (1)   ****STATIC OBJECT (NOT STREAMED)****
CreateObject(3115,373.40820312,1964.92773438,17.52946091,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (2)    ****STATIC OBJECT (NOT STREAMED)****
CreateObject(3115,373.40820312,1943.51293945,17.52946091,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (3)    ****STATIC OBJECT (NOT STREAMED)****
CreateObject(3115,373.40820312,1922.23828125,17.52946091,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (4)    ****STATIC OBJECT (NOT STREAMED)****
CreateDynamicObject(3934,373.47860718,1922.23742676,17.84273529,0.00000000,0.00000000,0.00000000); //object(helipad01) (1)
CreateDynamicObject(3934,373.47851562,1943.49877930,17.84273529,0.00000000,0.00000000,0.00000000); //object(helipad01) (2)
CreateDynamicObject(3934,373.47851562,1964.93994141,17.84273529,0.00000000,0.00000000,0.00000000); //object(helipad01) (3)
CreateDynamicObject(3934,373.47851562,1986.68676758,17.84273529,0.00000000,0.00000000,0.00000000); //object(helipad01) (4)
CreateDynamicObject(5153,365.49765015,1975.91833496,17.66380692,0.00000000,23.58499146,270.00000000); //object(stuntramp7_las2) (1)
CreateDynamicObject(5153,365.49707031,1954.41796875,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (2)
CreateDynamicObject(5153,365.49707031,1932.66796875,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (3)
CreateDynamicObject(5153,380.99707031,1932.66796875,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (4)
CreateDynamicObject(5153,380.99707031,1954.41796875,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (5)
CreateDynamicObject(5153,380.99707031,1975.66796875,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (6)
CreateDynamicObject(8572,361.96191406,1966.92834473,16.57840347,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (1)
CreateDynamicObject(8572,361.96191406,1988.54028320,16.57840347,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (2)
CreateDynamicObject(8572,361.96191406,1945.44348145,16.57840347,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (3)
CreateDynamicObject(8572,361.96191406,1924.16210938,16.57840347,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (4)
CreateDynamicObject(3934,225.69238281,1881.49804688,16.62695312,0.00000000,0.00000000,90.00000000); //object(helipad) (2)
CreateDynamicObject(3934,201.84863281,1881.49804688,16.62695312,0.00000000,0.00000000,90.00000000); //object(helipad) (3)
CreateDynamicObject(3934,195.55175781,1834.80175781,22.22851562,0.00000000,0.00000000,90.00000000); //object(helipad) (7)
CreateDynamicObject(3934,181.30175781,1834.80175781,22.22851562,0.00000000,0.00000000,90.00000000); //object(helipad) (8)
CreateDynamicObject(8251,339.86621094,1985.07617188,20.56843948,0.00000000,0.00000000,180.00000000); //object(pltschlhnger02_lvs) (1)
CreateDynamicObject(8251,339.86621094,1954.32617188,20.56843948,0.00000000,0.00000000,179.99450684); //object(pltschlhnger02_lvs) (3)
CreateDynamicObject(8251,339.86621094,1924.19482422,20.56843948,0.00000000,0.00000000,179.99450684); //object(pltschlhnger02_lvs) (4)
CreateDynamicObject(3934,214.31835938,1931.70703125,22.22851562,0.00000000,0.00000000,90.00000000); //object(helipad) (5)
CreateDynamicObject(3934,199.32226562,1931.70703125,22.22851562,0.00000000,0.00000000,90.00000000); //object(helipad) (9)
CreateObject(3115,339.07037354,1898.16918945,17.52946091,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (5)  ****STATIC OBJECT (NOT STREAMED)****
CreateObject(3115,339.07031250,1876.91894531,17.52946091,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (6)  ****STATIC OBJECT (NOT STREAMED)****
CreateDynamicObject(3934,339.15417480,1898.23852539,17.84161377,0.00000000,0.00000000,0.00000000); //object(helipad01) (8)
CreateDynamicObject(3934,339.15332031,1876.93334961,17.84161377,0.00000000,0.00000000,0.00000000); //object(helipad01) (9)
CreateDynamicObject(5153,330.91625977,1887.89770508,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (3)
CreateDynamicObject(5153,346.93994141,1887.89746094,17.66380692,0.00000000,23.58215332,270.00000000); //object(stuntramp7_las2) (3)
CreateDynamicObject(8572,327.60913086,1900.00219727,16.57840347,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (4)
CreateDynamicObject(8572,327.60839844,1878.79394531,16.57840347,0.00000000,0.00000000,270.00000000); //object(vgssstairs02_lvs) (4)
CreateDynamicObject(16137,255.20703125,2020.55371094,16.64062500,0.00000000,0.00000000,0.00000000); //object(des_teleshed2_) (1)
CreateDynamicObject(16138,228.29296875,2039.78027344,16.64062500,0.00000000,0.00000000,90.00000000); //object(des_teleshed2_01) (1)
CreateDynamicObject(18274,200.38671875,2022.47827148,16.64062500,0.00000000,0.00000000,180.00000000); //object(cuntw_shed3_01) (1)
CreateDynamicObject(18234,199.06445312,1997.45568848,16.64062500,0.00000000,0.00000000,180.00000000); //object(cuntw_shed2_) (1)
CreateDynamicObject(11492,339.18524170,1854.61938477,16.80530357,0.00000000,0.00000000,0.00000000); //object(des_rshed1_) (1)
CreateDynamicObject(11492,339.18261719,1842.16894531,16.80530357,0.00000000,0.00000000,0.00000000); //object(des_rshed1_) (2)
CreateObject(8038,274.99511719,2078.70019531,26.14540863,0.00000000,0.00000000,0.00000000); //object(arprtermnl01_lvs)(1)     ****STATIC OBJECT (NOT STREAMED)****
CreateDynamicObject(3095,276.30273438,2047.54296875,49.78401566,0.00000000,0.00000000,0.00000000); //object(a51_jetdoor)(3)
CreateDynamicObject(1649,280.67871094,2047.55664062,47.93206406,0.00000000,90.00000000,269.99450684); //object(wglasssmash)(4)
CreateDynamicObject(1649,280.70410156,2044.77343750,47.93206406,0.00000000,90.00000000,269.99450684); //object(wglasssmash)(3)
CreateDynamicObject(1649,280.70410156,2050.25488281,47.93206406,0.00000000,90.00000000,269.99450684); //object(wglasssmash)(5)
CreateDynamicObject(1649,279.03710938,2051.91503906,47.93206406,0.00000000,90.00000000,0.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,273.58691406,2051.91503906,47.93206406,0.00000000,90.00000000,0.00000000); //object(wglasssmash)(9)
CreateDynamicObject(1649,276.27832031,2051.89843750,47.93206406,0.00000000,90.00000000,0.00000000); //object(wglasssmash)(10)
CreateDynamicObject(1649,271.92675781,2044.78417969,47.93206406,0.00000000,90.00000000,89.99450684); //object(wglasssmash)(11)
CreateDynamicObject(1649,271.93554688,2050.25488281,47.93206406,0.00000000,90.00000000,89.99450684); //object(wglasssmash)(12)
CreateDynamicObject(1649,273.58691406,2043.11816406,47.93206406,0.00000000,90.00000000,179.99450684); //object(wglasssmash)(14)
CreateDynamicObject(1649,279.03710938,2043.12792969,47.93206406,0.00000000,90.00000000,179.99450684); //object(wglasssmash)(15)
CreateDynamicObject(1649,276.27832031,2043.13476562,47.93206406,0.00000000,90.00000000,179.99450684); //object(wglasssmash)(16)
CreateDynamicObject(1649,280.72070312,2050.25488281,47.93206406,0.00000000,90.00000000,90.00000000); //object(wglasssmash)(5)
CreateDynamicObject(1649,280.72070312,2044.79003906,47.93206406,0.00000000,90.00000000,90.00000000); //object(wglasssmash)(3)
CreateDynamicObject(1649,279.05371094,2043.11914062,47.93206406,0.00000000,90.00000000,0.00000000); //object(wglasssmash)(15)
CreateDynamicObject(1649,276.27832031,2043.12597656,47.93206406,0.00000000,90.00000000,0.00000000); //object(wglasssmash)(16)
CreateDynamicObject(1649,273.58691406,2043.10937500,47.93206406,0.00000000,90.00000000,0.00000000); //object(wglasssmash)(14)
CreateDynamicObject(1649,271.91796875,2044.77539062,47.93206406,0.00000000,90.00000000,270.00000000); //object(wglasssmash)(11)
CreateDynamicObject(1649,271.92675781,2050.25488281,47.93206406,0.00000000,90.00000000,270.00000000); //object(wglasssmash)(12)
CreateDynamicObject(1649,279.05371094,2051.92285156,47.93206406,0.00000000,90.00000000,179.99450684); //object(wglasssmash)(8)
CreateDynamicObject(1649,276.27832031,2051.91503906,47.93206406,0.00000000,90.00000000,179.99450684); //object(wglasssmash)(10)
CreateDynamicObject(1649,273.58691406,2051.92285156,47.93206406,0.00000000,90.00000000,179.99450684); //object(wglasssmash)(9)
CreateDynamicObject(1649,271.93457031,2047.55664062,47.93206406,0.00000000,90.00000000,89.99450684); //object(wglasssmash)(13)
CreateDynamicObject(9819,276.05957031,2050.54882812,46.35825729,0.00000000,0.00000000,90.00000000); //object(shpbridge_sfw02)(1)
CreateDynamicObject(16782,272.38143921,2045.37402344,48.59830856,0.00000000,0.00000000,0.00000000); //object(a51_radar_scan)(2)
CreateDynamicObject(1714,278.32400513,2045.13916016,45.50478363,0.00000000,0.00000000,53.00000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(9819,276.58789062,2044.49316406,46.35825729,0.00000000,0.00000000,270.00000000); //object(shpbridge_sfw02)(3)
CreateDynamicObject(1714,276.14788818,2044.91381836,45.50478363,0.00000000,0.00000000,332.95721436); //object(kb_swivelchair1)(3)
CreateDynamicObject(1714,273.89709473,2050.08471680,45.50478363,0.00000000,0.00000000,218.93884277); //object(kb_swivelchair1)(4)
CreateDynamicObject(1714,276.44689941,2049.85913086,45.50478363,0.00000000,0.00000000,150.79260254); //object(kb_swivelchair1)(5)
CreateDynamicObject(16095,282.36621094,2047.64160156,16.64062500,0.00000000,0.00000000,270.00000000); //object(des_a51guardbox02)(1)
CreateDynamicObject(11631,272.59884644,2046.80554199,46.75068665,0.00000000,0.00000000,90.00000000); //object(ranch_desk)(1)
CreateDynamicObject(2356,273.24221802,2047.59997559,45.50478363,0.00000000,0.00000000,142.77572632); //object(police_off_chair)(1)
CreateDynamicObject(1596,275.30822754,2045.97631836,52.89406967,0.00000000,0.00000000,90.00000000); //object(satdishsml)(1)
CreateDynamicObject(1649,280.69531250,2047.55664062,47.93206406,0.00000000,90.00000000,90.00000000); //object(wglasssmash)(4)
CreateDynamicObject(1649,271.92578125,2047.55664062,47.93206406,0.00000000,90.00000000,270.00000000); //object(wglasssmash)(13)
CreateDynamicObject(964,280.35427856,2048.18750000,44.88024521,270.00000000,180.00000000,270.00000000); //object(cj_metal_crate) (5)
CreateDynamicObject(8615,169.41894531,1835.92675781,19.36531258,0.00000000,0.00000000,270.00000000); //object(vgssstairs04_lvs) (1)
CreateDynamicObject(8615,188.00640869,1932.39831543,19.43106079,0.00000000,0.00000000,270.00000000); //object(vgssstairs04_lvs) (1)
CreateObject(16564,228.07202148,1971.12109375,16.64062500,0.00000000,0.00000000,0.00000000); //object(des_stmedicentre_) (1)     ****STATIC OBJECT (NOT STREAMED)****
CreateDynamicObject(6959,227.28906250,2009.24414062,16.66999245,0.00000000,0.00000000,0.00000000); //object(vegasnbball1) (1)
CreateDynamicObject(16101,228.07118225,2009.43530273,16.64062500,0.00000000,0.00000000,0.00000000); //object(des_windsockpole) (1)
CreateDynamicObject(11245,228.56005859,2009.23730469,24.43177414,0.00000000,289.84985352,338.16503906); //object(sfsefirehseflag) (1)
CreateDynamicObject(2928,233.58303833,1822.79882812,7.66293716,0.00000000,0.00000000,90.00000000); //object(a51_intdoor) (2)
CreateDynamicObject(10764,308.50976562,1748.53906250,19.04363251,0.00000000,0.00000000,45.00000000); //object(app_light_sfs05e) (1)
CreateDynamicObject(3934,118.37077332,1836.56054688,16.64062500,0.00000000,0.00000000,90.00000000); //object(helipad01) (5)
CreateDynamicObject(16137,245.95703125,2071.25463867,16.64062500,0.00000000,0.00000000,90.00000000); //object(des_teleshed2_) (1)
CreateDynamicObject(3108,69.26209259,2503.05493164,15.48437500,0.00000000,0.00000000,0.00000000); //object(basejump_target) (1)
CreateObject(16665,442.55957031,2295.00854492,8903.91503906,0.00000000,0.00000000,0.00000000); //object(a51_radarroom) (1)
CreateDynamicObject(8150, 95.86, 1870.99, 17.86,   0.00, 0.00, 90.00);
CreateDynamicObject(987, 128.58, 1941.59, 17.16,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 116.62, 1941.58, 17.16,   0.00, 0.00, 179.99);
CreateDynamicObject(987, 104.70, 1941.58, 17.16,   0.00, 0.00, 219.99);
CreateDynamicObject(8150, 179.36, 1798.32, 17.86,   0.00, 0.00, 180.00);
CreateDynamicObject(987, 95.64, 1807.95, 16.64,   0.00, 0.00, 319.99);
CreateDynamicObject(987, 242.43, 1798.18, 16.65,   0.00, 0.00, 1.99);
CreateDynamicObject(987, 104.77, 1800.28, 16.64,   0.00, 0.00, 349.99);
CreateDynamicObject(987, 254.34, 1798.55, 16.65,   0.00, 0.00, 1.98);
CreateDynamicObject(987, 266.32, 1798.95, 16.65,   0.00, 0.00, 311.98);
CreateDynamicObject(987, 274.33, 1790.08, 16.65,   0.00, 0.00, 329.98);
CreateDynamicObject(987, 284.65, 1784.08, 16.65,   0.00, 0.00, 359.97);
CreateDynamicObject(987, 296.58, 1784.06, 16.65,   0.00, 0.00, 359.97);
CreateDynamicObject(987, 308.56, 1784.08, 16.65,   0.00, 0.00, 359.97);
CreateDynamicObject(987, 320.48, 1784.03, 16.65,   0.00, 0.00, 29.97);
CreateDynamicObject(987, 355.68, 1807.82, 16.73,   0.00, 0.00, 91.97);
CreateDynamicObject(3749, 348.14, 1801.88, 23.32,   0.00, 358.25, 41.75);
CreateDynamicObject(987, 330.82, 1790.00, 16.65,   0.00, 0.00, 29.97);
CreateDynamicObject(987, 355.29, 1819.74, 16.65,   0.00, 0.00, 91.97);
CreateDynamicObject(987, 354.85, 1831.64, 16.65,   0.00, 0.00, 91.97);
CreateDynamicObject(987, 354.42, 1843.58, 16.65,   0.00, 0.00, 91.97);
CreateDynamicObject(3749, 135.24, 1941.69, 24.19,   0.00, 0.00, 0.00);
CreateDynamicObject(987, 354.03, 1855.53, 16.65,   0.00, 0.00, 91.97);
CreateDynamicObject(987, 353.64, 1867.50, 16.65,   0.00, 0.00, 55.97);
CreateDynamicObject(987, 360.34, 1877.43, 16.65,   0.00, 0.00, 25.96);
CreateDynamicObject(987, 371.09, 1882.61, 16.65,   0.00, 0.00, 25.96);
CreateDynamicObject(987, 381.82, 1887.77, 16.65,   0.00, 0.00, 65.96);
CreateDynamicObject(987, 386.70, 1898.66, 16.65,   0.00, 0.00, 87.96);
CreateDynamicObject(987, 387.11, 1910.60, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 387.58, 1922.53, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 387.99, 1934.49, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 388.42, 1946.43, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 388.83, 1958.37, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 389.26, 1970.31, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 389.66, 1982.26, 16.65,   0.00, 0.00, 87.95);
CreateDynamicObject(987, 390.12, 1994.16, 16.65,   0.00, 0.00, 95.95);
CreateDynamicObject(987, 388.92, 2006.05, 16.65,   0.00, 0.00, 95.95);
CreateDynamicObject(987, 387.71, 2017.97, 16.65,   0.00, 0.00, 85.95);
CreateDynamicObject(987, 388.56, 2029.90, 16.65,   0.00, 0.00, 85.95);
CreateDynamicObject(987, 389.38, 2041.83, 16.65,   0.00, 0.00, 95.95);
CreateDynamicObject(987, 388.14, 2053.70, 16.65,   0.00, 0.00, 125.94);
CreateDynamicObject(987, 381.12, 2063.37, 16.65,   0.00, 0.00, 125.94);
CreateDynamicObject(987, 374.13, 2073.03, 16.65,   0.00, 0.00, 145.94);
CreateDynamicObject(987, 364.27, 2079.74, 16.65,   0.00, 0.00, 177.94);
CreateDynamicObject(987, 352.32, 2080.18, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 340.38, 2080.60, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 328.43, 2081.04, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 316.49, 2081.47, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 304.56, 2081.91, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 292.62, 2082.34, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 280.67, 2082.74, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 268.72, 2083.17, 16.65,   0.00, 0.00, 177.93);
CreateDynamicObject(987, 256.73, 2083.60, 16.65,   0.00, 0.00, 127.93);
CreateDynamicObject(987, 249.42, 2093.05, 16.65,   0.00, 0.00, 127.93);
CreateDynamicObject(987, 242.07, 2102.49, 16.65,   0.00, 0.00, 157.93);
CreateDynamicObject(987, 231.01, 2106.96, 16.65,   0.00, 0.00, 157.93);
CreateDynamicObject(987, 219.96, 2111.43, 16.65,   0.00, 0.00, 179.93);
CreateDynamicObject(987, 208.03, 2111.49, 16.65,   0.00, 0.00, 157.92);
CreateDynamicObject(987, 196.98, 2115.97, 16.65,   0.00, 0.00, 181.92);
CreateDynamicObject(987, 185.06, 2115.57, 16.65,   0.00, 0.00, 181.92);
CreateDynamicObject(987, 173.12, 2115.21, 16.65,   0.00, 0.00, 221.92);
CreateDynamicObject(987, 164.24, 2107.23, 16.65,   0.00, 0.00, 221.92);
CreateDynamicObject(987, 155.34, 2099.29, 16.65,   0.00, 0.00, 241.92);
CreateDynamicObject(987, 149.72, 2088.77, 16.65,   0.00, 0.00, 241.91);
CreateDynamicObject(987, 144.09, 2078.26, 16.65,   0.00, 0.00, 271.91);
CreateDynamicObject(987, 144.48, 2066.35, 16.65,   0.00, 0.00, 307.91);
CreateDynamicObject(987, 151.82, 2056.91, 16.65,   0.00, 0.00, 307.91);
CreateDynamicObject(987, 159.19, 2047.50, 16.65,   0.00, 0.00, 307.91);
CreateDynamicObject(987, 166.53, 2038.07, 16.65,   0.00, 0.00, 307.91);
CreateDynamicObject(987, 173.87, 2028.64, 16.65,   0.00, 0.00, 307.91);
CreateDynamicObject(987, 181.25, 2019.19, 16.65,   0.00, 0.00, 287.91);
CreateDynamicObject(987, 184.90, 2007.79, 16.65,   0.00, 0.00, 269.91);
CreateDynamicObject(987, 184.88, 1995.84, 16.65,   0.00, 0.00, 267.91);
CreateDynamicObject(987, 184.45, 1983.88, 16.65,   0.00, 0.00, 267.90);
CreateDynamicObject(987, 184.01, 1971.93, 16.65,   0.00, 0.00, 247.90);
CreateDynamicObject(987, 179.51, 1960.85, 16.65,   0.00, 0.00, 227.90);
CreateDynamicObject(987, 171.50, 1951.98, 16.65,   0.00, 0.00, 207.90);
CreateDynamicObject(987, 160.91, 1946.36, 16.65,   0.00, 0.00, 197.90);
CreateDynamicObject(3475, 146.62, 1941.61, 19.79,   0.00, 0.00, 288.00);
// Custom Int.
CreateDynamicObject(16662,431.07250977,2295.58618164,8904.12695312,0.00000000,0.00000000,64.25500488); //object(a51_radar_stuff) (1)
CreateDynamicObject(16782,429.41915894,2295.08764648,8905.13574219,0.00000000,0.00000000,0.00000000); //object(a51_radar_scan) (1)
CreateDynamicObject(1714,439.69134521,2298.13720703,8902.92285156,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair1) (1)
CreateDynamicObject(1714,438.25097656,2298.09448242,8902.92285156,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair1) (2)
CreateDynamicObject(1714,435.94042969,2295.25708008,8902.92285156,0.00000000,0.00000000,90.00000000); //object(kb_swivelchair1) (3)
CreateDynamicObject(1714,438.25097656,2292.34375000,8902.92285156,0.00000000,0.00000000,180.00000000); //object(kb_swivelchair1) (4)
CreateDynamicObject(1714,439.75097656,2292.34375000,8902.92285156,0.00000000,0.00000000,179.99450684); //object(kb_swivelchair1) (5)
CreateDynamicObject(1714,441.90039062,2294.66455078,8902.92285156,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair1) (6)
CreateDynamicObject(1714,441.90039062,2295.88378906,8902.92285156,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair1) (7)
CreateDynamicObject(2928,448.66021729,2296.34545898,8905.11328125,0.00000000,0.00000000,284.56994629); //object(a51_intdoor) (1)
CreateDynamicObject(2928,448.70410156,2293.74731445,8905.13867188,0.00000000,0.00000000,256.33801270); //object(a51_intdoor) (2)
CreateDynamicObject(16656,323.33789062,2349.18554688,8907.41796875,0.00000000,0.00000000,0.00000000); //object(a51_rocketlab) (1)
CreateDynamicObject(2929,311.09713745,2345.27685547,8906.06152344,0.00000000,0.00000000,90.00000000); //object(a51_blastdoorl) (2)
CreateDynamicObject(3095,314.78579712,2359.58300781,8904.41796875,90.00000000,0.00000000,180.00000000); //object(a51_jetdoor) (1)
CreateDynamicObject(14782,333.39361572,2354.51611328,8905.43359375,0.00000000,0.00000000,270.00000000); //object(int3int_boxing30) (1)
CreateDynamicObject(14782,333.39355469,2344.51562500,8905.43359375,0.00000000,0.00000000,270.00000000); //object(int3int_boxing30) (3)
CreateDynamicObject(11631,323.16818237,2348.00073242,8905.67089844,0.00000000,0.00000000,90.00000000); //object(ranch_desk) (1)
CreateDynamicObject(2063,320.52636719,2347.62792969,8905.32714844,0.00000000,0.00000000,179.99450684); //object(cj_greenshelves) (1)
CreateDynamicObject(2063,317.98242188,2347.62792969,8905.32714844,0.00000000,0.00000000,179.99450684); //object(cj_greenshelves) (2)
CreateDynamicObject(2063,315.44213867,2347.62792969,8905.32714844,0.00000000,0.00000000,179.99450684); //object(cj_greenshelves) (3)
CreateDynamicObject(2063,312.90380859,2347.62792969,8905.32714844,0.00000000,0.00000000,180.00000000); //object(cj_greenshelves) (4)
CreateDynamicObject(964,312.18411255,2352.98901367,8904.42480469,0.00000000,0.00000000,90.00000000); //object(cj_metal_crate) (1)
CreateDynamicObject(964,312.45776367,2354.40039062,8904.42480469,0.00000000,0.00000000,90.00000000); //object(cj_metal_crate) (2)
CreateDynamicObject(964,312.18359375,2355.83178711,8904.42480469,0.00000000,0.00000000,90.00000000); //object(cj_metal_crate) (3)
CreateDynamicObject(964,312.43359375,2357.38110352,8904.42480469,0.00000000,0.00000000,99.92498779); //object(cj_metal_crate) (4)
CreateDynamicObject(2612,324.55102539,2340.80957031,8906.29687500,0.00000000,0.00000000,179.99450684); //object(police_nb2) (1)
CreateDynamicObject(2611,331.74023438,2340.81835938,8906.31445312,0.00000000,0.00000000,180.00000000); //object(police_nb1) (2)
CreateDynamicObject(2614,328.25524902,2357.53417969,8908.07519531,12.25000000,0.25000000,1.25000000); //object(cj_us_flag) (1)
CreateDynamicObject(925,320.99563599,2358.16088867,8905.47949219,0.00000000,0.00000000,270.00000000); //object(rack2) (1)
CreateDynamicObject(931,321.01129150,2355.60913086,8905.47949219,0.00000000,0.00000000,270.00000000); //object(rack3) (1)
CreateDynamicObject(2358,312.25878906,2350.14062500,8904.54101562,0.00000000,0.00000000,97.94000244); //object(ammo_box_c2) (4)
CreateDynamicObject(2358,311.75878906,2350.90209961,8904.54101562,0.00000000,0.00000000,90.00000000); //object(ammo_box_c2) (5)
CreateDynamicObject(2358,311.75878906,2351.73925781,8904.54101562,0.00000000,0.00000000,90.00000000); //object(ammo_box_c2) (6)
CreateDynamicObject(2985,311.95950317,2359.00903320,8904.41796875,0.00000000,0.00000000,304.41998291); //object(minigun_base) (1)
CreateDynamicObject(2985,313.45898438,2359.00878906,8904.41796875,0.00000000,0.00000000,340.14999390); //object(minigun_base) (2)
CreateDynamicObject(3794,315.27972412,2356.30175781,8905.01757812,0.00000000,0.00000000,258.09008789); //object(missile_07_sfxr) (2)
CreateDynamicObject(3794,317.55319214,2355.90356445,8905.01757812,0.00000000,0.00000000,271.98498535); //object(missile_07_sfxr) (1)
CreateDynamicObject(2971,317.58398438,2350.74316406,8904.41796875,0.00000000,0.00000000,59.55001831); //object(k_smashboxes) (3)
CreateDynamicObject(1714,324.25930786,2348.30932617,8904.42480469,0.00000000,0.00000000,280.59997559); //object(kb_swivelchair1) (8)
CreateDynamicObject(1431,322.96432495,2342.16528320,8904.95898438,0.00000000,0.00000000,90.00000000); //object(dyn_box_pile) (1)
CreateDynamicObject(14782,328.14355469,2357.38647461,8905.43359375,0.00000000,0.00000000,0.00000000); //object(int3int_boxing30) (6)
CreateDynamicObject(2358,311.81372070,2349.09277344,8904.54101562,0.00000000,0.00000000,79.00000000); //object(ammo_box_c2) (7)
CreateDynamicObject(1584,329.27993774,2340.46069336,8904.74804688,0.00000000,0.00000000,0.00000000); //object(tar_gun1) (2)
CreateDynamicObject(1583,327.66278076,2340.46020508,8904.94140625,0.00000000,0.00000000,0.00000000); //object(tar_gun2) (1)
CreateDynamicObject(1585,328.45837402,2340.41625977,8905.14746094,0.00000000,0.00000000,0.00000000); //object(tar_civ2) (1)
CreateDynamicObject(1330,322.95446777,2356.10888672,8904.89453125,0.00000000,0.00000000,0.00000000); //object(binnt14_la) (1)
CreateDynamicObject(1808,322.75033569,2355.04394531,8904.41796875,0.00000000,0.00000000,90.00000000); //object(cj_watercooler2) (1)
CreateDynamicObject(1738,323.70986938,2357.44580078,8905.02343750,0.00000000,0.00000000,0.00000000); //object(cj_radiator_old) (1)
CreateDynamicObject(16782,333.36019897,2349.37866211,8907.83691406,0.00000000,12.00000000,180.00000000); //object(a51_radar_scan) (2)
CreateDynamicObject(2606,333.72656250,2352.78222656,8908.05761719,29.99816895,0.00000000,270.00000000); //object(cj_police_counter2) (4)
CreateDynamicObject(2606,333.72656250,2355.78222656,8908.05761719,29.99816895,0.00000000,270.00000000); //object(cj_police_counter2) (5)
CreateDynamicObject(2606,333.72656250,2345.99267578,8908.05761719,29.99816895,0.00000000,270.00000000); //object(cj_police_counter2) (6)
CreateDynamicObject(2606,333.72656250,2343.07739258,8908.05761719,29.99816895,0.00000000,270.00000000); //object(cj_police_counter2) (7)
CreateDynamicObject(964,314.68359375,2353.48828125,8904.42480469,0.00000000,0.00000000,54.26998901); //object(cj_metal_crate) (5)
CreateDynamicObject(1217,316.38775635,2352.38525391,8904.83886719,0.00000000,0.00000000,0.00000000); //object(barrel2) (1)
CreateDynamicObject(1217,316.88769531,2353.09521484,8904.83886719,0.00000000,0.00000000,0.00000000); //object(barrel2) (2)
CreateDynamicObject(918,320.94042969,2348.87646484,8904.78906250,0.00000000,0.00000000,0.00000000); //object(cj_flame_drum) (1)
CreateDynamicObject(918,321.41455078,2349.57324219,8904.78906250,0.00000000,0.00000000,0.00000000); //object(cj_flame_drum) (2)
CreateDynamicObject(2358,312.50878906,2351.39062500,8904.54101562,0.00000000,0.00000000,147.56262207); //object(ammo_box_c2) (8)
CreateDynamicObject(2973,314.67163086,2349.98974609,8904.41796875,0.00000000,0.00000000,0.00000000); //object(k_cargo2) (2)
CreateDynamicObject(3013,314.89898682,2353.52539062,8905.53808594,0.00000000,0.00000000,0.00000000); //object(cr_ammobox) (1)
CreateDynamicObject(2852,317.89605713,2352.42358398,8904.41796875,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (1)
CreateDynamicObject(14666,317.74313354,2350.72070312,8904.47949219,0.00000000,90.00000000,258.76498413); //object(cj_sex_counter03) (1)
CreateDynamicObject(2690,333.67639160,2350.83715820,8904.78417969,0.00000000,0.00000000,270.00000000); //object(cj_fire_ext) (1)
CreateDynamicObject(2007,333.30935669,2349.85449219,8904.42480469,0.00000000,0.00000000,270.00000000); //object(filing_cab_nu01) (1)
CreateDynamicObject(2007,333.30859375,2348.87695312,8904.42480469,0.00000000,0.00000000,270.00000000); //object(filing_cab_nu01) (2)
CreateDynamicObject(2332,332.20907593,2357.98144531,8906.00292969,0.00000000,0.00000000,0.00000000); //object(kev_safe) (1)
// HITMAN
CreateDynamicObject(14444,293.2177700,-101.7871100,984.3525400,0.0000000,0.0000000,0.0000000); //convertffs(0)
CreateDynamicObject(1550,296.8179000,-103.1542100,984.9256000,0.0000000,0.0000000,300.2200000); //convertffs(16)
CreateDynamicObject(1666,312.2840000,-111.8890500,985.4154700,0.0000000,0.0000000,0.4000000); //convertffs(33)
CreateDynamicObject(14782,296.8398400,-104.0761700,985.5482800,0.0000000,0.0000000,90.0000000); //convertffs(36)
CreateDynamicObject(14782,296.8598600,-110.2754600,985.5482800,0.0000000,0.0000000,90.0000000); //convertffs(37)
CreateDynamicObject(2828,302.9747900,-107.5901800,985.5869100,0.0000000,0.0000000,0.0000000); //convertffs(44)
CreateDynamicObject(347,302.3816200,-104.5992000,985.5918000,87.7910000,95.1930000,264.8040000); //convertffs(46)
CreateDynamicObject(347,302.3252000,-105.0117200,985.5893600,86.4620000,132.6770000,227.6680000); //convertffs(47)
CreateDynamicObject(3111,302.8574200,-106.0146500,985.5869100,0.0000000,0.0000000,270.3310000); //convertffs(52)
CreateDynamicObject(3031,296.7194800,-89.5867900,986.1359900,0.0000000,0.0000000,320.1470000); //convertffs(53)
CreateDynamicObject(2290,314.5000000,-114.0234400,984.5322300,0.0000000,0.0000000,180.2580000); //convertffs(54)
CreateDynamicObject(2111,311.9638700,-111.8212900,984.9218800,0.0000000,0.0000000,0.0000000); //convertffs(57)
CreateDynamicObject(2041,302.8233900,-103.4580800,985.7918700,0.0000000,0.0000000,0.0000000); //convertffs(60)
CreateDynamicObject(2041,303.1934200,-103.4646500,985.7918700,0.0000000,0.0000000,0.0000000); //convertffs(61)
CreateDynamicObject(3013,302.9989000,-103.0085800,985.7341900,0.0000000,0.0000000,0.0000000); //convertffs(62)
CreateDynamicObject(3013,302.5118400,-103.0097400,985.7341900,0.0000000,0.0000000,0.0000000); //convertffs(63)
CreateDynamicObject(2040,293.8865700,-98.7858100,985.5938700,0.0000000,0.0000000,0.0000000); //convertffs(64)
CreateDynamicObject(14391,288.4814500,-95.8391200,985.4923100,0.0000000,0.0000000,0.0000000); //convertffs(65)
CreateDynamicObject(1715,300.9203500,-105.1893100,984.5322300,0.0000000,0.0000000,93.2000000); //convertffs(67)
CreateDynamicObject(1715,290.8935500,-95.5645000,984.5322300,0.0000000,0.0000000,270.2000000); //convertffs(68)
CreateDynamicObject(1671,313.8681600,-102.8758800,984.9924300,0.0000000,0.0000000,182.2540000); //convertffs(82)
CreateDynamicObject(1715,300.9216900,-106.3272900,984.5322300,0.0000000,0.0000000,88.0000000); //convertffs(67)
CreateDynamicObject(2606,287.5773600,-96.6723900,986.5339400,0.0000000,0.0000000,90.0690000); //convertffs(4)
CreateDynamicObject(2606,287.5771500,-96.6718700,986.9624000,0.0000000,0.0000000,90.0660000); //convertffs(4)
CreateDynamicObject(2606,287.5771500,-96.6718700,987.4166900,0.0000000,0.0000000,90.0660000); //convertffs(4)
CreateDynamicObject(2606,287.5683600,-94.7262100,987.4166900,0.0000000,0.0000000,90.0660000); //convertffs(4)
CreateDynamicObject(2606,287.5683600,-94.7255900,986.9668000,0.0000000,0.0000000,90.2660000); //convertffs(4)
CreateDynamicObject(2606,287.5683600,-94.7255900,986.5383300,0.0000000,0.0000000,90.2640000); //convertffs(4)
CreateDynamicObject(9819,291.6650400,-89.4228500,985.4243200,0.0000000,0.0000000,90.1980000); //convertffs(66)
CreateDynamicObject(16782,287.8109100,-90.2856400,987.3162200,0.0000000,0.0000000,0.0390000); //convertffs(3)
CreateDynamicObject(1210,296.8151200,-108.9850900,984.6806600,0.0000000,0.0000000,0.0000000); //convertffs(12)
CreateDynamicObject(2190,312.3000800,-97.9135100,985.3079800,0.0000000,0.0000000,190.2940000); //convertffs(24)
CreateDynamicObject(1818,317.4182700,-114.1604000,984.5322300,0.0000000,0.0000000,46.9920000); //convertffs(8)
CreateDynamicObject(18092,292.4588900,-99.2767600,984.9821200,0.0000000,0.0000000,359.6620000); //object(ammun3_counter) (1)
CreateDynamicObject(1654,303.4209900,-109.4876200,985.7893700,0.0000000,0.0000000,0.0000000); //object(dynamite) (1)
CreateDynamicObject(1654,303.0229200,-109.4911200,985.7893700,0.0000000,0.0000000,0.0000000); //object(dynamite) (2)
CreateDynamicObject(1654,302.2877200,-109.4795800,985.7893700,0.0000000,0.0000000,0.0000000); //object(dynamite) (3)
CreateDynamicObject(1654,302.6289100,-109.5035400,985.7893700,0.0000000,0.0000000,0.0000000); //object(dynamite) (4)
CreateDynamicObject(1715,300.3255900,-103.5082400,984.5322300,0.0000000,0.0000000,159.2360000); //convertffs(67)
CreateDynamicObject(1210,296.8096600,-109.3959000,984.6806600,0.0000000,0.0000000,0.0000000); //convertffs(12)
CreateDynamicObject(1210,296.8148800,-109.1341800,984.6806600,0.0000000,0.0000000,0.0000000); //convertffs(12)
CreateDynamicObject(1210,296.8148200,-109.2621900,984.6806600,0.0000000,0.0000000,0.0000000); //convertffs(12)
CreateDynamicObject(2180,302.7618400,-114.1709900,984.5322300,0.0000000,0.0000000,179.9170000); //convertffs(72)
CreateDynamicObject(2180,300.7813700,-114.1582300,984.5322300,0.0000000,0.0000000,179.9120000); //convertffs(72)
CreateDynamicObject(2180,298.8129900,-114.1608800,984.5322300,0.0000000,0.0000000,179.9120000); //convertffs(72)
CreateDynamicObject(2395,303.4120800,-91.0945100,984.5322300,0.0000000,0.0000000,269.9310000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,303.4116500,-87.3921200,984.5322300,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,303.4111300,-91.0937500,987.2434700,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (3)
CreateDynamicObject(2395,303.4111300,-91.0937500,989.9503200,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (4)
CreateDynamicObject(2395,303.4111300,-91.0937500,992.6842700,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (5)
CreateDynamicObject(2395,303.4111300,-87.3916000,987.2617800,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (7)
CreateDynamicObject(2395,303.4111300,-87.3916000,989.9629500,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (8)
CreateDynamicObject(2395,303.4111300,-87.3916000,992.6710800,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (9)
CreateDynamicObject(2395,305.8360900,-95.0495700,984.5322300,0.0000000,0.0000000,1.3830000); //object(cj_sports_wall) (10)
CreateDynamicObject(2395,309.5301200,-94.9528200,984.5322300,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (11)
CreateDynamicObject(2395,313.2432900,-94.8677200,984.5322300,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (12)
CreateDynamicObject(2395,316.9639600,-94.7752500,984.5322300,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (13)
CreateDynamicObject(2395,305.8359400,-95.0488300,987.2674600,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.8359400,-95.0488300,989.9900500,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (15)
CreateDynamicObject(2395,305.8359400,-95.0488300,992.7227200,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (16)
CreateDynamicObject(2395,309.5293000,-94.9521500,987.2548200,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (17)
CreateDynamicObject(2395,309.5293000,-94.9521500,989.9887700,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (18)
CreateDynamicObject(2395,309.5293000,-94.9521500,992.7227200,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (19)
CreateDynamicObject(2395,313.2431600,-94.8671900,987.2718500,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (20)
CreateDynamicObject(2395,313.2431600,-94.8671900,990.0101900,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (21)
CreateDynamicObject(2395,313.2431600,-94.8671900,992.7327900,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (22)
CreateDynamicObject(2395,316.9638700,-94.7744100,987.2605000,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (23)
CreateDynamicObject(2395,316.9638700,-94.7744100,989.9900500,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (24)
CreateDynamicObject(2395,316.9638700,-94.7744100,992.7340700,0.0000000,0.0000000,1.3790000); //object(cj_sports_wall) (25)
CreateDynamicObject(1583,290.5112900,-106.0854200,985.4950000,0.0000000,0.0000000,0.0000000); //object(tar_gun2) (1)
CreateDynamicObject(1584,292.5803500,-106.0386200,985.4748500,0.0000000,0.0000000,0.0000000); //object(tar_gun1) (1)
CreateDynamicObject(1587,292.6156600,-103.1910400,986.3726200,0.0000000,0.0000000,0.0000000); //object(tar_frame) (1)
CreateDynamicObject(1588,292.6123000,-103.1993400,986.4205900,0.0000000,0.0000000,0.2000000); //object(tar_top) (1)
CreateDynamicObject(1589,292.5891400,-103.1778300,986.3607200,0.0000000,0.0000000,0.0000000); //object(tar_upright) (1)
CreateDynamicObject(1590,292.6541700,-103.1821300,986.3607200,0.0000000,0.0000000,0.0000000); //object(tar_upleft) (1)
CreateDynamicObject(1591,292.6488000,-103.1695900,986.3554100,0.0000000,0.0000000,0.0000000); //object(tar_downleft) (1)
CreateDynamicObject(1592,292.5640300,-103.1968400,986.3554100,0.0000000,0.0000000,0.0000000); //object(tar_downright) (1)
CreateDynamicObject(2393,294.6731600,-107.6145600,985.7916900,270.1800000,0.0000000,1.2400000); //object(cj_duds_rail_3) (1)
CreateDynamicObject(2393,292.8200700,-107.6112500,985.7916900,270.1760000,0.0000000,1.2360000); //object(cj_duds_rail_3) (2)
CreateDynamicObject(2393,290.8771100,-107.6412700,985.7916900,270.1760000,0.0000000,1.2360000); //object(cj_duds_rail_3) (3)
CreateDynamicObject(1583,294.3448500,-106.0812100,985.4950000,0.0000000,0.0000000,0.0000000); //object(tar_gun2) (2)
CreateDynamicObject(1587,292.6152300,-103.1904300,989.1210300,0.0000000,0.0000000,0.0000000); //object(tar_frame) (2)
CreateDynamicObject(2051,302.8606300,-107.8146300,986.6110800,0.0000000,0.0000000,180.3790000); //object(cj_target4) (1)
CreateDynamicObject(2040,296.8574200,-100.5781200,984.6434300,0.0000000,0.0000000,0.0000000); //convertffs(64)
CreateDynamicObject(2040,291.1138900,-98.7815800,985.5938700,0.0000000,0.0000000,0.0000000); //convertffs(64)
CreateDynamicObject(2611,303.3890400,-89.5260800,986.0670200,0.0000000,0.0000000,270.3310000); //object(police_nb1) (1)
CreateDynamicObject(2612,303.3910800,-92.8659100,986.0427900,0.0000000,0.0000000,270.3310000); //object(police_nb2) (1)
CreateDynamicObject(1619,303.4552600,-91.1459700,986.1523400,0.0000000,0.0000000,0.0000000); //object(nt_vent1_01) (1)
CreateDynamicObject(2894,311.6697100,-97.5571300,985.3079800,0.0000000,0.0000000,359.9960000); //convertffs(50)
CreateDynamicObject(1715,292.6481900,-90.3328200,984.5322300,0.0000000,0.0000000,190.4920000); //convertffs(68)
CreateDynamicObject(1715,289.9135400,-90.4897400,984.5322300,0.0000000,0.0000000,220.3760000); //convertffs(68)
CreateDynamicObject(1786,317.4696400,-113.4331000,985.0377800,0.0000000,0.0000000,226.9080000); //object(swank_tv_4) (1)
CreateDynamicObject(1788,317.2357800,-112.8456600,984.6951900,0.0000000,0.0000000,226.5300000); //object(swank_video_1) (1)
CreateDynamicObject(2184,310.6386700,-98.0758000,984.5322300,0.0000000,0.0000000,0.0000000); //object(med_office6_desk_2) (1)
CreateDynamicObject(1714,311.7132300,-95.7757200,984.5322300,0.0000000,0.0000000,0.0000000); //object(kb_swivelchair1) (1)
CreateDynamicObject(2180,313.8441800,-101.3296700,984.5322300,0.0000000,0.0000000,91.4500000); //convertffs(70)
CreateDynamicObject(2180,312.9880400,-101.3527100,984.5322300,0.0000000,0.0000000,91.4500000); //convertffs(70)
CreateDynamicObject(2180,312.1315900,-101.3760400,984.5322300,0.0000000,0.0000000,91.4500000); //convertffs(70)
CreateDynamicObject(2180,311.2753600,-101.3949700,984.5322300,0.0000000,0.0000000,91.4500000); //convertffs(70)
CreateDynamicObject(2180,310.4185800,-101.4253200,984.5322300,0.0000000,0.0000000,91.4500000); //convertffs(70)
CreateDynamicObject(2180,309.6686400,-100.4703000,984.5322300,0.0000000,0.0000000,270.7890000); //convertffs(70)
CreateDynamicObject(1671,312.9917600,-102.9188100,984.9924300,0.0000000,0.0000000,181.6670000); //convertffs(82)
CreateDynamicObject(1671,312.0886500,-102.9627000,984.9924300,0.0000000,0.0000000,180.4670000); //convertffs(82)
CreateDynamicObject(1671,311.1921400,-102.9638100,984.9924300,0.0000000,0.0000000,179.8820000); //convertffs(82)
CreateDynamicObject(1671,309.6143800,-103.0299500,984.9924300,0.0000000,0.0000000,180.4670000); //convertffs(82)
CreateDynamicObject(1671,310.4018600,-103.0284300,984.9924300,0.0000000,0.0000000,180.4670000); //convertffs(82)
CreateDynamicObject(2737,311.9427800,-94.8913800,986.2206400,0.0000000,0.0000000,1.5850000); //object(police_nb_car) (1)
CreateDynamicObject(2608,307.6987300,-95.1742800,986.1962900,0.0000000,0.0000000,1.4000000); //object(polce_shelf) (1)
CreateDynamicObject(2610,315.0622600,-95.1478000,985.3576700,0.0000000,0.0000000,1.7850000); //object(cj_p_fileing2) (1)
CreateDynamicObject(2610,315.5753500,-95.1357700,985.3576700,0.0000000,0.0000000,1.7800000); //object(cj_p_fileing2) (2)
CreateDynamicObject(2610,316.0890200,-95.1240500,985.3576700,0.0000000,0.0000000,1.7800000); //object(cj_p_fileing2) (3)
CreateDynamicObject(2610,316.6003400,-95.1016200,985.3576700,0.0000000,0.0000000,1.7800000); //object(cj_p_fileing2) (4)
CreateDynamicObject(2191,317.9995700,-97.9375800,984.5322300,0.0000000,0.0000000,270.3310000); //object(med_office2_cab) (1)
CreateDynamicObject(2200,318.3574500,-102.1382700,984.5322300,0.0000000,0.0000000,269.7710000); //object(med_office5_unit_1) (1)
CreateDynamicObject(2332,318.5767800,-100.1932000,985.7436500,0.0000000,0.0000000,270.3310000); //object(kev_safe) (2)
CreateDynamicObject(2290,311.3886700,-114.0439500,984.5322300,0.0000000,0.0000000,180.4560000); //convertffs(54)
CreateDynamicObject(1666,312.2029400,-111.9700900,985.4154700,0.0000000,0.0000000,0.0000000); //convertffs(33)
CreateDynamicObject(1666,311.4283400,-112.1660500,985.4154700,0.0000000,0.0000000,0.0000000); //convertffs(33)
CreateDynamicObject(1666,311.3666400,-112.0159900,985.4154700,0.0000000,0.0000000,0.0000000); //convertffs(33)
CreateDynamicObject(2894,302.8222700,-107.0908200,985.5869100,0.0000000,0.0000000,89.6650000); //convertffs(50)
CreateDynamicObject(2190,301.5058600,-101.8652300,985.5869100,0.0000000,0.0000000,309.8530000); //convertffs(24)
CreateDynamicObject(351,299.2060500,-114.0503700,985.3910500,278.5430000,52.3430000,247.4740000); //object(1)
CreateDynamicObject(2041,302.4843800,-103.4453100,985.7918700,0.0000000,0.0000000,0.0000000); //convertffs(59)
CreateDynamicObject(2041,297.7294900,-114.3271500,985.5388200,0.0000000,0.0000000,109.5940000); //convertffs(59)
CreateDynamicObject(2041,303.0244100,-114.3359400,985.5388200,0.0000000,0.0000000,239.1170000); //convertffs(59)
CreateDynamicObject(359,300.3801300,-114.1979800,985.3688400,87.8940000,0.0000000,0.0000000); //object(4)
CreateDynamicObject(358,300.1666900,-113.8592900,985.3267800,81.4170000,336.9200000,22.8480000); //object(5)
CreateDynamicObject(353,298.3193100,-114.0058800,985.3267800,82.3870000,240.1780000,143.4420000); //object(6)
CreateDynamicObject(373,301.7595800,-114.3271000,985.7981000,331.4460000,306.9260000,88.7880000); //object(7)
CreateDynamicObject(373,302.2936100,-114.3328500,985.7981000,331.4410000,306.9250000,88.7860000); //object(8)
CreateDynamicObject(348,302.4543500,-113.9747400,985.3482100,84.4510000,205.6620000,166.9360000); //object(9)
CreateDynamicObject(356,299.6047100,-101.5466600,985.6441000,275.8250000,63.2620000,12.9810000); //object(10)
CreateDynamicObject(1550,302.4114400,-109.5641200,984.9256000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag) (1)
CreateDynamicObject(1666,311.6049200,-111.4303100,985.4154700,0.0000000,0.0000000,0.0000000); //convertffs(33)
CreateDynamicObject(2395,296.1607400,-99.3773100,984.3092000,0.0000000,0.0000000,26.3650000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,302.2016600,-96.3675200,984.3092000,0.0000000,0.0000000,28.1460000); //object(cj_sports_wall) (14)
CreateDynamicObject(1502,299.0175500,-97.8728600,984.5322300,0.0000000,0.0000000,26.3200000); //object(gen_doorint04) (1)
CreateDynamicObject(1502,301.7217400,-96.4641100,984.5322300,0.0000000,0.0000000,206.9790000); //object(gen_doorint04) (2)
CreateDynamicObject(2395,302.2011700,-96.3671900,987.0330800,0.0000000,0.0000000,28.1410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,296.1601600,-99.3769500,987.0374800,0.0000000,0.0000000,26.3620000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,296.1291500,-99.3474300,989.7814900,0.0000000,0.0000000,26.3620000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,296.1162700,-99.3579000,992.5141600,0.0000000,0.0000000,26.3620000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,299.3034100,-97.8242500,987.0330800,0.0000000,0.0000000,26.3570000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,299.3027300,-97.8242200,989.7727100,0.0000000,0.0000000,26.3560000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,299.3027300,-97.8242200,992.4852300,0.0000000,0.0000000,26.3560000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,302.2011700,-96.3671900,989.7714200,0.0000000,0.0000000,28.1410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,302.2011700,-96.3671900,992.5141600,0.0000000,0.0000000,28.1410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.5314300,-94.8877600,984.3092000,0.0000000,0.0000000,207.6800000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.5312500,-94.8877000,987.0361900,0.0000000,0.0000000,207.6800000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.5312500,-94.8877000,989.7688600,0.0000000,0.0000000,207.6800000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.5312500,-94.8877000,992.5015300,0.0000000,0.0000000,207.6800000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,298.5314300,-97.9693100,984.3092000,0.0000000,0.0000000,206.0950000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,298.5312500,-97.9687500,987.0475500,0.0000000,0.0000000,206.0930000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,298.5312500,-97.9687500,989.7902800,0.0000000,0.0000000,206.0930000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,298.5312500,-97.9687500,992.5399800,0.0000000,0.0000000,206.0930000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,301.5735500,-96.4608700,987.0387600,0.0000000,0.0000000,206.6950000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,301.5732400,-96.4599600,989.7827800,0.0000000,0.0000000,206.6910000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,301.5732400,-96.4599600,992.5255100,0.0000000,0.0000000,206.6910000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.3531500,-96.4168000,984.3092000,0.0000000,0.0000000,290.8730000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.6812700,-99.8875400,984.3092000,0.0000000,0.0000000,290.8690000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,307.1022300,-103.3059300,984.3092000,0.0000000,0.0000000,306.5460000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,309.5613700,-105.9637200,984.3092000,0.0000000,0.0000000,356.7480000); //object(cj_sports_wall) (14)
CreateDynamicObject(1502,312.7853100,-106.0547200,984.5322300,0.0000000,0.0000000,356.4280000); //object(gen_doorint04) (4)
CreateDynamicObject(1502,315.8235200,-106.2191700,984.5322300,0.0000000,0.0000000,175.7630000); //object(gen_doorint04) (5)
CreateDynamicObject(2395,316.2843600,-106.3898900,984.3092000,0.0000000,0.0000000,356.7430000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,319.0422400,-106.3154300,984.3092000,0.0000000,0.0000000,176.6040000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,312.3212600,-105.8867900,984.3092000,0.0000000,0.0000000,176.0810000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,308.8560200,-105.3218300,984.3092000,0.0000000,0.0000000,125.5620000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,306.8202200,-102.2649100,984.3092000,0.0000000,0.0000000,111.3450000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.4735400,-98.9044300,984.3092000,0.0000000,0.0000000,110.4070000); //object(cj_sports_wall) (14)
CreateDynamicObject(1550,303.1384900,-109.5419500,984.9256000,0.0000000,0.0000000,0.0000000); //object(cj_money_bag) (1)
CreateDynamicObject(2290,308.3251300,-114.0525700,984.5322300,0.0000000,0.0000000,180.6560000); //convertffs(54)
CreateDynamicObject(2111,308.7044400,-111.8442500,984.9218800,0.0000000,0.0000000,0.0000000); //convertffs(57)
CreateDynamicObject(2395,316.2841800,-106.3896500,987.0488300,0.0000000,0.0000000,356.7430000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,316.2841800,-106.3896500,989.7871700,0.0000000,0.0000000,356.7430000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,309.5605500,-105.9628900,987.0475500,0.0000000,0.0000000,356.7430000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,309.5605500,-105.9628900,989.7915600,0.0000000,0.0000000,356.7430000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,307.1015600,-103.3056600,987.0418700,0.0000000,0.0000000,306.5410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,307.1015600,-103.3056600,989.7745400,0.0000000,0.0000000,306.5410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.6806600,-99.8867200,987.0318000,0.0000000,0.0000000,290.8690000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.6806600,-99.8867200,989.7644700,0.0000000,0.0000000,290.8690000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.3525400,-96.4160200,987.0431500,0.0000000,0.0000000,290.8690000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.3525400,-96.4160200,989.7657500,0.0000000,0.0000000,290.8690000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,304.3525400,-96.4160200,992.4984100,0.0000000,0.0000000,290.8690000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,313.2780500,-106.1656100,987.0475500,0.0000000,0.0000000,355.9430000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,313.2773400,-106.1650400,989.7915600,0.0000000,0.0000000,355.9410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,319.0419900,-106.3154300,987.0217300,0.0000000,0.0000000,176.6000000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,312.3203100,-105.8867200,987.0374800,0.0000000,0.0000000,176.0780000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,312.3203100,-105.8867200,989.7858900,0.0000000,0.0000000,176.0780000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,315.8140000,-106.1266100,987.0374800,0.0000000,0.0000000,176.0780000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,315.8134800,-106.1259800,989.7600700,0.0000000,0.0000000,176.0780000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,319.0419900,-106.3154300,989.7456100,0.0000000,0.0000000,176.6000000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,308.8554700,-105.3212900,987.0475500,0.0000000,0.0000000,125.5570000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,308.8554700,-105.3212900,989.7802100,0.0000000,0.0000000,125.5570000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,306.8193400,-102.2646500,987.0374800,0.0000000,0.0000000,111.3410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,306.8193400,-102.2646500,989.7846100,0.0000000,0.0000000,111.3410000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.4726600,-98.9043000,987.0475500,0.0000000,0.0000000,110.4070000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.4726600,-98.9043000,989.7802100,0.0000000,0.0000000,110.4070000); //object(cj_sports_wall) (14)
CreateDynamicObject(2395,305.4726600,-98.9043000,992.5072000,0.0000000,0.0000000,110.4070000); //object(cj_sports_wall) (14)
CreateDynamicObject(3963,306.1302500,-100.5618100,986.4044800,0.0000000,0.0000000,290.4570000); //object(lee_plane08) (1)
CreateDynamicObject(2286,308.0644800,-104.2537800,986.3656000,0.0000000,0.0000000,125.5130000); //object(frame_5) (1)
CreateDynamicObject(2283,311.2314500,-105.8354300,986.0852100,0.0000000,0.0000000,176.3690000); //object(frame_thick_3) (1)
CreateDynamicObject(2267,311.9914200,-114.5308600,986.5564000,0.0000000,0.0000000,180.1390000); //object(frame_wood_3) (1)
CreateDynamicObject(2266,308.7100800,-114.0683500,986.1784100,0.0000000,0.0000000,179.9230000); //object(frame_wood_5) (1)
CreateDynamicObject(2257,305.6666600,-99.7676800,986.1242700,0.0000000,0.0000000,290.8570000); //object(frame_clip_4) (1)
CreateDynamicObject(2256,307.9144000,-104.3707500,986.3634000,0.0000000,0.0000000,306.6140000); //object(frame_clip_3) (1)
CreateDynamicObject(2238,308.7453600,-111.8649600,985.7426100,0.0000000,0.0000000,0.0000000); //object(cj_lava_lamp) (1)
CreateDynamicObject(948,318.0200800,-95.2178600,984.5322300,0.0000000,0.0000000,0.4000000); //object(plant_pot_10) (1)
CreateDynamicObject(949,296.9594400,-99.4327000,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (1)
CreateDynamicObject(949,318.1274400,-110.5758100,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (2)
CreateDynamicObject(949,303.6728500,-96.3750000,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (3)
CreateDynamicObject(2254,297.7805500,-98.5676300,986.2376700,0.0000000,0.0000000,26.7700000); //object(frame_clip_1) (1)
CreateDynamicObject(949,312.3460700,-106.5663500,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (4)
CreateDynamicObject(2259,311.0318600,-106.4849100,985.6777300,0.0000000,0.0000000,356.8310000); //object(frame_clip_6) (1)
CreateDynamicObject(2255,300.1554300,-114.0610300,985.8631000,0.0000000,0.0000000,179.4440000); //object(frame_clip_2) (1)
CreateDynamicObject(948,305.7265600,-95.4130900,984.5322300,0.0000000,0.0000000,0.3960000); //object(plant_pot_10) (2)
CreateDynamicObject(1569,318.5957600,-107.0561400,984.5322300,0.0000000,0.0000000,270.3170000); //object(adam_v_door) (1)
CreateDynamicObject(1569,318.6020500,-110.0670200,984.5322300,0.0000000,0.0000000,89.6520000); //object(adam_v_door) (2)
CreateDynamicObject(2395,318.5874600,-107.1842600,983.8877000,359.6460000,0.0000000,270.3470000); //object(cj_sports_wall) (14)
CreateDynamicObject(949,318.0582600,-105.7857200,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (5)
CreateDynamicObject(949,302.7104500,-95.3560000,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (6)
CreateDynamicObject(2267,297.6718100,-98.4014300,986.0148900,0.0000000,0.0000000,206.4580000); //object(frame_wood_3) (2)
CreateDynamicObject(2290,299.0039100,-88.6114900,984.5322300,0.0000000,0.0000000,0.3200000); //convertffs(54)
CreateDynamicObject(949,302.4966100,-88.5710100,985.1685200,0.0000000,0.0000000,0.0000000); //object(plant_pot_4) (7)
/*End National guard Objects */
//Cyber Café
CreateDynamicObject(5710,2650.34179688,1210.87890625,29.59794617,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2181,2647.87426758,1204.22021484,25.92329025,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(2182,2649.76000977,1207.95739746,25.92329025,0.00000000,0.00000000,272.00000000); //
CreateDynamicObject(2205,2642.46142578,1220.61389160,26.02409363,0.00000000,0.00000000,180.00000000); //
CreateDynamicObject(2309,2645.73559570,1217.13720703,26.04828835,0.00000000,0.00000000,180.00000000); //
CreateDynamicObject(2356,2649.93041992,1206.99792480,26.04828835,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2356,2648.74340820,1204.61730957,26.04828835,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1738,2646.03369141,1203.86816406,26.57792091,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1808,2639.95581055,1213.00427246,26.00969315,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(2201,2647.68530273,1205.57617188,26.75452232,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(2202,2650.65820312,1205.24023438,25.92329025,0.00000000,0.00000000,270.00000000); //
CreateDynamicObject(2847,2650.72070312,1210.08593750,26.06373596,0.00000000,0.00000000,88.39599609); //
CreateDynamicObject(8947,2644.51342773,1225.77575684,23.98533440,0.00000000,270.00000000,90.00000000); //
CreateDynamicObject(8947,2654.64331055,1220.27539062,23.98533440,0.00000000,270.00000000,0.00000000); //
CreateDynamicObject(2108,2640.36132812,1222.06347656,26.03966904,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2108,2650.85180664,1219.06347656,26.03966904,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2286,2645.58837891,1222.53796387,28.79940605,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2284,2640.20874023,1213.27050781,28.06148338,0.00000000,358.01147461,88.13232422); //
CreateDynamicObject(2270,2640.22216797,1218.01708984,27.90663147,0.00000000,0.00000000,90.11535645); //
CreateDynamicObject(633,2647.59765625,1222.23046875,26.91719818,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1649,2639.65039062,1211.05859375,28.64663506,0.00000000,0.00000000,89.82421875); //
CreateDynamicObject(2190,2648.92016602,1215.80590820,26.96055603,0.00000000,0.00000000,160.00000000); //
CreateDynamicObject(2233,2649.54296875,1215.71813965,26.28005600,0.00000000,0.00000000,180.00000000); //
CreateDynamicObject(2182,2647.96899414,1207.05212402,25.92329025,0.00000000,0.00000000,2.25000000); //
CreateDynamicObject(1744,2647.58886719,1205.62023926,26.34828377,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(2205,2646.13134766,1220.64404297,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2649.80810547,1220.66113281,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2642.57666016,1218.27453613,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2646.20019531,1218.26879883,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2649.74487305,1218.23925781,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2649.82397461,1215.91516113,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2646.21264648,1215.87573242,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2205,2642.50585938,1215.89355469,26.02409363,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2641.97534180,1217.23754883,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2641.91381836,1219.58300781,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2641.80273438,1221.95300293,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2645.54345703,1221.90429688,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2645.57006836,1219.57397461,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2649.14916992,1221.90930176,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2649.17211914,1219.36022949,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2309,2649.11376953,1217.15295410,26.04828835,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2647.91845703,1215.68603516,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2646.04345703,1215.64892578,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2644.29296875,1215.61425781,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2642.31689453,1215.57568359,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2640.56640625,1215.54101562,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2640.69018555,1217.89221191,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2642.33959961,1217.95715332,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2644.26416016,1217.99462891,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2645.96289062,1218.02734375,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2647.78808594,1218.03796387,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2649.48730469,1218.02026367,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2649.59960938,1220.41687012,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2647.85449219,1220.42041016,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2645.93115234,1220.35803223,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2644.20507812,1220.37695312,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2642.28247070,1220.31457520,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2233,2640.63354492,1220.26147461,26.28005600,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(2190,2645.27636719,1215.77197266,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2641.54418945,1215.80554199,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2641.52880859,1218.15747070,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2641.51293945,1220.42602539,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2645.18139648,1220.52832031,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2645.12158203,1218.20190430,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2648.72070312,1218.22387695,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(2190,2648.82031250,1220.54675293,26.96055603,0.00000000,0.00000000,159.99938965); //
CreateDynamicObject(1808,2639.93823242,1213.53063965,26.00969315,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1566,2651.45092773,1209.22692871,27.26370430,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1566,2651.45800781,1212.38281250,27.26370430,0.00000000,0.00000000,270.00000000); //
CreateDynamicObject(1738,2639.75341797,1217.86193848,26.57792091,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1738,2651.20483398,1217.73986816,26.57792091,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1723,2640.21362305,1204.27453613,25.92329025,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1723,2642.14843750,1204.29101562,25.92329025,0.00000000,0.00000000,180.00000000); //
CreateDynamicObject(1723,2644.52539062,1204.28894043,25.92329025,0.00000000,0.00000000,179.99450684); //
CreateDynamicObject(1723,2640.21557617,1206.64196777,25.92329025,0.00000000,0.00000000,90.00000000); //
CreateDynamicObject(1723,2642.63134766,1208.45861816,25.92329025,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1723,2644.59082031,1208.49218750,25.92329025,0.00000000,0.00000000,270.00000000); //
CreateDynamicObject(1827,2642.45361328,1206.48669434,25.92329025,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2836,2641.99194336,1205.65649414,26.04828835,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2836,2641.98388672,1206.35888672,26.04828835,0.00000000,0.00000000,0.00000000); //
//Hospital Exterior By Map Team ZC 2013 - No pasar a CreateDynamicObject, los vehículos se caerían
CreateObject(6959,1165.5000000,-1365.6999500,12.6123000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1165.5000000,-1325.8000500,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1165.6999500,-1310.9000200,12.5900000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1125.6999500,-1310.6999500,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1125.0845900,-1350.3549800,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1125.5999800,-1365.3000500,12.5848700,0.0000000,0.0000000,0.0000000); //
CreateObject(8079,1120.8000500,-1334.0000000,25.8413700,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1143.0999800,-1383.8000500,15.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1162.0000000,-1383.8000500,15.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1176.3000500,-1383.8000500,15.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1143.0000000,-1291.5000000,15.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1162.5000000,-1291.5000000,15.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1176.3000500,-1291.5000000,15.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(18014,1146.1999500,-1330.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(18014,1146.5000000,-1351.0999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3920,1145.5000000,-1352.8000500,32.1223100,0.0000000,0.0000000,270.0000000); //
CreateObject(3920,1145.5000000,-1341.3000500,32.1089200,0.0000000,0.0000000,270.0000000); //
CreateObject(3920,1145.5000000,-1328.8000500,32.0585200,0.0000000,0.0000000,270.0000000); //
CreateObject(3920,1145.5999800,-1323.5000000,32.0298000,0.0000000,0.0000000,270.0000000); //
CreateObject(1596,1126.0000000,-1295.4000200,34.6759000,0.0000000,0.0000000,112.0000000); //
CreateObject(1596,1127.0000000,-1380.1999500,34.6120900,0.0000000,0.0000000,74.0000000); //
CreateObject(8131,1139.4921900,-1337.7983400,42.4581600,0.0000000,0.0000000,-0.7200100); //
CreateObject(10832,1076.5152600,-1379.6375700,14.2253000,0.0000000,0.0000000,0.0000000); //
CreateObject(3660,1142.6999500,-1306.0999800,14.0000000,0.0000000,0.0000000,270.0000000); //
CreateObject(3660,1142.5999800,-1368.0000000,14.0000000,0.0000000,0.0000000,270.0000000); //
CreateObject(620,1143.4000200,-1306.0999800,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1143.5000000,-1298.1999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1143.1999500,-1314.5000000,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1143.0999800,-1361.0000000,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1143.0999800,-1367.9000200,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1142.9000200,-1376.3000500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(3660,1163.0000000,-1356.3000500,14.0000000,0.0000000,0.0000000,180.0000000); //
CreateObject(3660,1163.0000000,-1354.0000000,14.0000000,0.0000000,0.0000000,359.9950000); //
CreateObject(3660,1163.0999800,-1352.5999800,14.0000000,0.0000000,0.0000000,179.9950000); //
CreateObject(3660,1162.4000200,-1331.8000500,14.0000000,0.0000000,0.0000000,179.9950000); //
CreateObject(3660,1162.4000200,-1329.9000200,14.0000000,0.0000000,0.0000000,179.9950000); //
CreateObject(3660,1162.4000200,-1327.9000200,14.0000000,0.0000000,0.0000000,179.9950000); //
CreateObject(889,1157.6999500,-1329.6999500,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(889,1167.9000200,-1329.6999500,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(889,1169.0999800,-1354.0999800,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(889,1157.3000500,-1354.0999800,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(8645,1186.1999500,-1307.8000500,13.4000000,0.0000000,0.0000000,89.9950000); //
CreateObject(8645,1185.9000200,-1368.5000000,13.4000000,0.0000000,0.0000000,89.9950000); //
CreateObject(7914,1108.5753200,-1341.0245400,35.6803400,0.0000000,0.0000000,270.0000000); //
CreateObject(3462,1147.8000500,-1331.4000200,14.1000000,0.0000000,0.0000000,0.0000000); //
CreateObject(3462,1147.8000500,-1350.8000500,14.1000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1233,1190.0999800,-1355.3000500,14.1000000,0.0000000,0.0000000,152.0000000); //
CreateObject(1229,1190.1999500,-1315.9000200,14.1000000,0.0000000,0.0000000,174.0000000); //
CreateObject(1290,1159.0000000,-1341.9000200,18.1000000,0.0000000,0.0000000,268.0000000); //
CreateObject(1290,1169.3000500,-1342.4000200,18.1000000,0.0000000,0.0000000,267.9950000); //
CreateObject(1297,1187.0999800,-1293.0999800,15.5000000,0.0000000,0.0000000,180.0000000); //
CreateObject(1297,1187.0000000,-1300.5999800,15.5000000,0.0000000,0.0000000,180.0000000); //
CreateObject(1297,1186.9000200,-1308.4000200,15.5000000,0.0000000,0.0000000,179.9950000); //
CreateObject(1297,1187.0999800,-1316.0999800,15.5000000,0.0000000,0.0000000,179.9950000); //
CreateObject(1297,1186.6999500,-1353.9000200,15.5000000,0.0000000,0.0000000,179.9950000); //
CreateObject(1297,1186.6999500,-1361.4000200,15.5000000,0.0000000,0.0000000,179.9950000); //
CreateObject(1297,1186.6999500,-1369.1999500,15.5000000,0.0000000,0.0000000,179.9950000); //
CreateObject(1297,1186.6999500,-1377.0000000,15.5000000,0.0000000,0.0000000,179.9950000); //
CreateObject(1341,1186.8000500,-1356.0999800,13.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1346,1146.5999800,-1318.8000500,13.9000000,0.0000000,0.0000000,90.0000000); //
CreateObject(1346,1146.5999800,-1321.5999800,13.9000000,0.0000000,0.0000000,90.0000000); //
CreateObject(1346,1146.5999800,-1324.4000200,13.9000000,0.0000000,0.0000000,90.0000000); //
CreateObject(1297,1096.0999800,-1383.1999500,16.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1297,1103.0999800,-1381.1999500,16.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1439,1101.6999500,-1376.0999800,12.6000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.5999800,-1319.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.6999500,-1311.9000200,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.6999500,-1303.8000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.5000000,-1297.1999500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.4000200,-1357.8000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.3000500,-1365.0999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.3000500,-1373.0999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(1280,1185.3000500,-1380.3000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateObject(620,1140.8000500,-1291.6999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1157.0999800,-1291.6999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1174.8000500,-1291.6999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1186.0000000,-1291.6999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1137.4000200,-1384.0000000,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1156.6999500,-1384.0000000,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1174.4000200,-1383.9000200,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1185.1999500,-1384.3000500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(3934,1118.4659400,-1308.3276400,32.2632400,0.0000000,0.0000000,-0.4200000); //
CreateObject(1280,1168.5999800,-1351.0999800,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateObject(1280,1161.6999500,-1351.0999800,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateObject(1280,1156.4000200,-1351.0000000,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateObject(1280,1155.6999500,-1332.6999500,13.0000000,0.0000000,0.0000000,90.0000000); //
CreateObject(1280,1162.6999500,-1332.6999500,13.0000000,0.0000000,0.0000000,90.0000000); //
CreateObject(1280,1167.9000200,-1332.8000500,13.0000000,0.0000000,0.0000000,90.0000000); //
CreateObject(1257,1187.5999800,-1303.9000200,13.8000000,0.0000000,0.0000000,180.0000000); //
CreateObject(620,1186.4000200,-1353.1999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(620,1186.4000200,-1322.1999500,12.6000000,0.0000000,0.0000000,353.2160000); //
CreateObject(4639,1142.5000000,-1294.8000500,14.3000000,0.0000000,0.0000000,90.0000000); //
CreateObject(4639,1142.4000200,-1379.4000200,14.3000000,0.0000000,0.0000000,90.0000000); //
CreateObject(6959,1092.4741200,-1306.0755600,12.5320000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1092.9614300,-1325.3206800,12.5380000,0.0000000,0.0000000,0.0000000); //
CreateObject(2990,1100.3062700,-1384.7088600,16.3366200,0.0000000,0.0000000,0.0000000); //
CreateObject(3749,1089.1805400,-1383.1982400,17.9285700,0.0000000,0.0000000,0.0000000); //
CreateObject(2990,1072.9451900,-1379.6980000,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1077.9390900,-1384.7442600,16.1366200,0.0000000,0.0000000,0.0000000); //
CreateObject(2990,1072.9451900,-1349.9061300,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1072.9451900,-1369.7890600,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1072.9451900,-1359.8048100,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1072.9451900,-1340.0327100,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1072.9451900,-1330.0389400,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1072.9451900,-1320.0410200,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1072.9451900,-1310.1849400,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1077.4281000,-1293.1328100,16.1366000,0.0000000,0.0000000,24.6007700); //
CreateObject(2990,1072.9451900,-1300.2677000,16.1366000,0.0000000,0.0000000,90.0000000); //
CreateObject(2990,1086.9857200,-1290.9639900,16.1366000,0.0000000,0.0000000,0.0000000); //
CreateObject(2990,1096.8778100,-1290.9639900,16.1366000,0.0000000,0.0000000,0.0000000); //
CreateObject(2990,1105.9310300,-1293.6070600,16.1366000,0.0000000,0.0000000,327.2514600); //
CreateObject(6959,1091.8391100,-1370.3651100,12.5380000,0.0000000,0.0000000,0.0000000); //
CreateObject(6959,1091.2888200,-1348.7797900,12.5300000,0.0000000,0.0000000,0.0000000); //
CreateObject(1251,1099.3455800,-1311.4707000,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3455800,-1306.2668500,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3455800,-1301.0811800,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3455800,-1295.7813700,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3455800,-1359.2262000,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3375200,-1364.1539300,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3411900,-1369.2733200,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,1099.3455800,-1374.2091100,12.4987000,0.0000000,0.0000000,90.0000000); //
CreateObject(716,1073.7587900,-1292.2579300,12.5189200,356.8584000,0.0000000,3.1415900); //
CreateObject(4639,1118.9765600,-1323.8800000,33.9285100,0.0000000,0.0000000,180.6599400); //
CreateObject(3115,1118.8138400,-1308.2082500,31.9762200,0.0000000,0.0000000,0.0000000); //
hospitalgate = CreateDynamicObject(980, 1089.19568, -1383.82886, 15.23783,   0.00000, 0.00000, 0.00000);
// Interiors TEST
CreateObject(14701,-561.1992200,2832.6992200,57.8000000,0.0000000,0.0000000,0.0000000); //object(int2hoose2) (1)
CreateObject(1506,-562.2999900,2822.3999000,55.7000000,0.0000000,0.0000000,0.0000000); //object(gen_doorext08) (2)

CreateObject(14718,-588.7998000,2829.0996100,51.6000000,0.0000000,0.0000000,0.0000000); //object(int2lasmone04) (1)
CreateObject(1506,-586.5996100,2824.1992200,51.6000000,0.0000000,0.0000000,0.0000000); //object(gen_doorext08) (3)

CreateObject(14803,-587.6992200,2828.0996100,59.5000000,0.0000000,0.0000000,0.0000000); //object(bdupsnew) (1)
CreateObject(1505,-583.7000100,2825.6001000,57.5000000,0.0000000,0.0000000,90.0000000); //object(gen_doorext07) (1)
CreateObject(1505,-591.4000200,2825.6001000,57.5000000,0.0000000,0.0000000,90.0000000); //object(gen_doorext07) (2)
CreateObject(985,-587.5999800,2823.1001000,56.9000000,0.0000000,0.0000000,0.0000000); //object(gate_autor) (1)
CreateObject(985,-583.7000100,2827.3000500,57.7000000,358.0000000,0.0000000,270.0000000); //object(gate_autor) (2)
CreateObject(985,-583.7000100,2831.5000000,57.7000000,357.9950000,0.0000000,270.0000000); //object(gate_autor) (3)
CreateObject(985,-587.4000200,2833.1001000,57.5000000,0.0000000,0.0000000,0.0000000); //object(gate_autor) (4)
CreateObject(985,-591.5999800,2829.1999500,57.5000000,358.2450000,0.0000000,270.0000000); //object(gate_autor) (5)
CreateObject(985,-591.5000000,2827.0000000,57.5000000,358.7450000,0.0000000,270.0000000); //object(gate_autor) (6)
CreateObject(15034,-564.9000200,2805.8000500,57.5000000,0.0000000,0.0000000,0.0000000); //object(hotelgen_sv) (1)
CreateObject(1506,-565.2000100,2801.1999500,55.7000000,0.0000000,0.0000000,0.0000000); //object(gen_doorext08) (3)

CreateObject(15030,-412.8999900,2795.1001000,70.6000000,0.0000000,0.0000000,0.0000000); //object(genmotel_sv) (1)
CreateObject(1506,-407.2999900,2795.0000000,68.9000000,0.0000000,0.0000000,271.2500000); //object(gen_doorext08) (3)
CreateObject(1506,-407.2999900,2793.6001000,68.9000000,0.0000000,0.0000000,271.2470000); //object(gen_doorext08) (3)

CreateObject(15029,-408.5000000,2772.8000500,70.9000000,0.0000000,0.0000000,0.0000000); //object(genmotel2_sv) (1)
CreateObject(1506,-414.1000100,2775.1999500,69.2000000,0.0000000,0.0000000,269.2470000); //object(gen_doorext08) (3)

CreateObject(14712,-444.3999900,2779.3000500,71.0000000,0.0000000,0.0000000,0.0000000); //object(int2hoose11) (1)
CreateObject(1506,-442.2000100,2771.6001000,69.4000000,0.0000000,0.0000000,359.2420000); //object(gen_doorext08) (3)

CreateObject(14717,-463.7999900,2772.1999500,70.0000000,0.0000000,0.0000000,0.0000000); //object(int2lasmtwo02) (1)
CreateObject(1506,-460.7999900,2765.6001000,68.3000000,0.0000000,359.5000000,90.2500000); //object(gen_doorext08) (3)

CreateObject(14859,-447.1000100,2799.6001000,70.4000000,0.0000000,0.0000000,0.0000000); //object(coochie-room) (1)

CreateObject(14865,-498.2999900,2812.0000000,70.3000000,0.0000000,0.0000000,0.0000000); //object(bobbi-room01) (1)

CreateObject(15054,95.6000000,2782.3000500,55.6000000,0.0000000,0.0000000,0.0000000); //object(svvgmedhoose) (1)
CreateObject(1506,108.2000000,2791.8999000,52.1000000,0.0000000,0.0000000,269.2420000); //object(gen_doorext08) (3)
CreateObject(1506,100.7000000,2785.5000000,53.6000000,0.0000000,0.0000000,269.2420000); //object(gen_doorext08) (3)
//Int Rico 1:
CreateObject(1504, 1837.4267578125, -786.0791015625, -24.10000038147, 0, 0, 0);
CreateObject(14702, 1835.5, -772.70001220703, -19.799999237061, 0, 0, 0);
//Int Rico 2:
CreateObject(14706, 1531, -987.90002441406, -66.10000610352, 0, 0, 0);
//Int Rico 3:
CreateObject(14707, 2465.6999511719, -1354.8000488281, -12.39999389648, 0, 0, 0);
//Int Pobre 1:
CreateObject(15031, 1294.3000488281, -670.90002441406, 5.9000000953674, 0, 0, 0);
CreateObject(1507, 1296.5500488281, -675.79998779297, 5.8899998664856, 0, 0, 0);
//Int Pobre 2:
CreateObject(14756, 1353.6999511719, -812.79998779297, -15.10000038147, 0, 0, 0);
CreateObject(1507, 1354.5200195313, -813.55999755859, -17.10000038147, 0, 0, 90);
// Small
CreateDynamicObject(18024,272.6613500,-43.0453700,1013.7531700,0.0000000,0.0000000,0.0000000); //object(int_clothe_ship) (1)
CreateDynamicObject(14603,-303.5734600,27.2062100,1563.0783700,0.0000000,0.0000000,0.0000000); //object(bikeschl_main) (1)
CreateDynamicObject(2576,-310.6527100,22.6223200,1561.3044400,0.0000000,0.0000000,89.6690000); //object(hotel_dresser_8) (1)
CreateDynamicObject(2323,-309.6318100,26.3882000,1561.2971200,0.0000000,0.0000000,89.6690000); //object(cj_bedroom1) (1)
CreateDynamicObject(2141,-306.0357700,28.7305600,1561.2996800,0.0000000,0.0000000,0.0000000); //object(cj_kitch2_l) (1)
CreateDynamicObject(2152,-307.6021400,28.8427700,1561.2971200,0.0000000,0.0000000,0.0000000); //object(cj_k5_low_unit3) (1)
CreateDynamicObject(2153,-308.5807800,28.8672600,1561.5963100,0.0000000,0.0000000,0.0000000); //object(cj_k5_unit1) (1)
CreateDynamicObject(2154,-310.1636400,28.8898900,1561.2971200,0.0000000,0.0000000,0.0000000); //object(cj_k5_low_unit1) (1)
CreateDynamicObject(2292,-296.4629500,23.1987400,1561.2971200,0.0000000,0.0000000,180.6610000); //object(swk_single_1b) (1)
CreateDynamicObject(2291,-297.0071100,23.2156700,1561.2971200,0.0000000,0.0000000,180.6610000); //object(swk_single_1) (1)
CreateDynamicObject(2291,-296.4935300,24.7258800,1561.2971200,0.0000000,0.0000000,270.3280000); //object(swk_single_1) (2)
CreateDynamicObject(1819,-297.1093400,25.0436400,1561.2971200,0.0000000,0.0000000,0.0000000); //object(coffee_swank_4) (1)
CreateDynamicObject(1885,-305.8192700,22.9377700,1561.2971200,0.0000000,0.0000000,0.0000000); //object(shop_baskets) (1)
CreateDynamicObject(1513,-303.6767300,26.0387800,1562.6347700,0.0000000,0.0000000,0.0000000); //object(dyn_sweetie_tray) (1)
CreateDynamicObject(2626,-304.3555600,26.0382300,1561.8194600,0.0000000,0.0000000,0.0000000); //object(cj_urb_counter) (1)
CreateDynamicObject(2460,-304.7089200,28.7384200,1561.2899200,0.0000000,0.0000000,0.0000000); //object(cj_hobby_c_1) (1)
CreateDynamicObject(2366,-297.1619000,28.1461900,1561.2971200,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail) (1)
CreateDynamicObject(2610,-296.3804300,27.1188100,1562.1225600,0.0000000,0.0000000,270.3310000); //object(cj_p_fileing2) (1)
CreateDynamicObject(1429,-296.8884900,28.3507300,1562.8093300,0.0000000,0.0000000,310.1840000); //object(dyn_tv) (1)
CreateDynamicObject(2460,-301.3688400,28.7365400,1561.2899200,0.0000000,0.0000000,0.0000000); //object(cj_hobby_c_1) (2)
CreateDynamicObject(2863,-307.3873600,28.5896900,1562.3503400,0.0000000,0.0000000,39.8530000); //object(gb_kitchplatecln03) (1)
CreateDynamicObject(2028,-304.7306500,28.6701600,1562.4752200,0.0000000,0.0000000,0.0000000); //object(swank_console) (1)
CreateDynamicObject(1839,-304.7185400,28.7001500,1561.5644500,0.0000000,0.0000000,89.6690000); //object(k_hifi_1) (1)
CreateDynamicObject(1809,-301.4221800,28.6752500,1561.5429700,0.0000000,0.0000000,0.0000000); //object(med_hi_fi) (1)
CreateDynamicObject(1790,-303.4400000,28.5980300,1562.4615500,0.0000000,0.0000000,0.0000000); //object(swank_video_3) (1)
CreateDynamicObject(1786,-300.7778600,28.8604400,1562.3918500,0.0000000,0.0000000,0.0000000); //object(swank_tv_4) (1)
CreateDynamicObject(1809,-299.9176600,28.6709600,1561.5429700,0.0000000,0.0000000,0.0000000); //object(med_hi_fi) (2)
CreateDynamicObject(1839,-303.3327000,28.6926300,1561.5644500,0.0000000,0.0000000,89.6650000); //object(k_hifi_1) (2)
CreateDynamicObject(1536,-303.7430100,22.5324100,1561.2971200,0.0000000,0.0000000,179.9390000); //object(gen_doorext15) (1)
CreateDynamicObject(2149,-309.6383700,28.7016700,1562.5017100,0.0000000,0.0000000,0.0000000); //object(cj_microwave1) (1)
CreateDynamicObject(2726,-310.7690100,24.9926900,1562.7683100,0.0000000,0.0000000,0.0000000); //object(lm_striplamp) (1)
CreateDynamicObject(1728,-299.6133700,23.2314700,1561.2971200,0.0000000,0.0000000,180.6610000); //object(mrk_seating3) (1)
// Shops All Saints
CreateDynamicObject(18030,-46.9147300,-723.3098800,642.3903800,0.0000000,0.0000000,360.0000000); //object(gap) (1)
CreateDynamicObject(18070,-51.8152500,-721.2872300,640.5229500,0.0000000,0.0000000,0.0000000); //object(gap_counter) (1)
CreateDynamicObject(2395,-35.1332700,-726.4094200,640.0231900,0.0000000,0.0000000,269.9310000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,-35.1328100,-726.4091800,642.7571400,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,-35.1440000,-722.6924400,640.0231900,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (3)
CreateDynamicObject(2395,-35.1435500,-722.6923800,642.7615400,0.0000000,0.0000000,269.9290000); //object(cj_sports_wall) (4)
CreateDynamicObject(1885,-53.3497400,-727.7302200,640.0231900,0.0000000,0.0000000,270.3310000); //object(shop_baskets) (1)
CreateDynamicObject(2366,-52.2028200,-713.3746300,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail) (1)
CreateDynamicObject(2385,-52.5510500,-709.3567500,642.5674400,0.0000000,0.0000000,0.0000000); //object(shop_set_2_unit4) (1)
CreateDynamicObject(2388,-58.1429400,-726.8118300,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail_2) (1)
CreateDynamicObject(2412,-52.5547100,-736.2899200,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_detector) (1)
CreateDynamicObject(2413,-56.6197800,-727.1138300,640.0231900,0.0000000,0.0000000,180.1790000); //object(shop_counter_3a) (1)
CreateDynamicObject(2434,-48.8637500,-709.8554100,640.0304600,0.0000000,0.0000000,270.3310000); //object(cj_ff_conter_2b) (1)
CreateDynamicObject(2491,-57.4450000,-709.5990600,640.0304600,0.0000000,0.0000000,0.0000000); //object(model_stand) (1)
CreateDynamicObject(2593,-54.5694800,-723.1735200,641.8852500,0.0000000,0.0000000,0.0000000); //object(roleplay_rack) (1)
CreateDynamicObject(18070,-51.8144500,-721.2871100,640.5015300,0.0000000,0.0000000,181.1230000); //object(gap_counter) (2)
CreateDynamicObject(9339,-61.4924600,-723.1589400,640.7295500,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (1)
CreateDynamicObject(9339,-61.4921900,-723.1582000,642.1207900,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (7)
CreateDynamicObject(9339,-61.4921900,-723.1582000,643.5019500,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (10)
CreateDynamicObject(9339,-61.4921900,-723.1582000,644.8931900,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (11)
CreateDynamicObject(9339,-42.4022900,-723.1339100,640.7295500,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (12)
CreateDynamicObject(9339,-42.4013700,-723.1337900,642.1138300,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (13)
CreateDynamicObject(9339,-42.4013700,-723.1337900,643.4993900,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (14)
CreateDynamicObject(9339,-42.4013700,-723.1337900,644.8836700,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (15)
CreateDynamicObject(3851,-59.2078000,-736.7946800,641.8663300,0.0000000,0.0000000,269.9310000); //object(carshowwin_sfsx) (1)
CreateDynamicObject(3851,-44.1534700,-736.8129300,641.8663300,0.0000000,0.0000000,269.9290000); //object(carshowwin_sfsx) (2)
CreateDynamicObject(2385,-52.5507800,-709.3564500,640.6847500,0.0000000,0.0000000,0.0000000); //object(shop_set_2_unit4) (2)
CreateDynamicObject(2460,-56.3633300,-709.8587600,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_hobby_c_1) (2)
CreateDynamicObject(2434,-44.0341100,-710.0040300,640.0304600,0.0000000,0.0000000,359.9590000); //object(cj_ff_conter_2b) (2)
CreateDynamicObject(2366,-60.8882900,-717.2826500,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail) (3)
CreateDynamicObject(2366,-44.0356500,-713.0693400,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail) (4)
CreateDynamicObject(2366,-44.1161100,-716.7514000,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_duds_rail) (5)
CreateDynamicObject(2593,-54.7627000,-719.6425800,641.8852500,0.0000000,0.0000000,0.0000000); //object(roleplay_rack) (2)
CreateDynamicObject(2593,-49.0771500,-719.6347700,641.8852500,0.0000000,0.0000000,0.0000000); //object(roleplay_rack) (3)
CreateDynamicObject(2593,-49.0654300,-723.1298800,641.8852500,0.0000000,0.0000000,0.0000000); //object(roleplay_rack) (4)
CreateDynamicObject(1885,-50.5944300,-727.7470700,640.0231900,0.0000000,0.0000000,270.3300000); //object(shop_baskets) (2)
CreateDynamicObject(2412,-50.7126500,-736.2846100,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_detector) (2)
CreateDynamicObject(9339,-53.7881300,-740.5745800,640.6413000,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (16)
CreateDynamicObject(9339,-53.7880900,-740.5742200,642.0268600,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (17)
CreateDynamicObject(9339,-53.7880900,-740.5742200,643.4124100,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (18)
CreateDynamicObject(9339,-53.7880900,-740.5742200,644.8080400,0.0000000,0.0000000,0.0000000); //object(sfnvilla001_cm) (19)
CreateDynamicObject(2366,-52.1710100,-716.4940800,640.0231900,0.0000000,0.0000000,0.2000000); //object(cj_duds_rail) (6)
CreateDynamicObject(9339,-66.9915300,-727.6546000,640.6413000,0.0000000,0.0000000,270.3310000); //object(sfnvilla001_cm) (20)
CreateDynamicObject(9339,-66.9912100,-727.6543000,642.0268600,0.0000000,0.0000000,270.3300000); //object(sfnvilla001_cm) (21)
CreateDynamicObject(9339,-66.9912100,-727.6543000,643.4180900,0.0000000,0.0000000,270.3300000); //object(sfnvilla001_cm) (22)
CreateDynamicObject(9339,-36.6439300,-727.5496800,640.6413000,0.0000000,0.0000000,270.3300000); //object(sfnvilla001_cm) (23)
CreateDynamicObject(9339,-36.6435500,-727.5488300,642.0268600,0.0000000,0.0000000,270.3300000); //object(sfnvilla001_cm) (24)
CreateDynamicObject(9339,-36.6435500,-727.5488300,643.4237700,0.0000000,0.0000000,270.3300000); //object(sfnvilla001_cm) (25)
CreateDynamicObject(9339,-50.1284600,-740.4989600,640.6413000,0.0000000,0.0000000,0.2000000); //object(sfnvilla001_cm) (26)
CreateDynamicObject(9339,-50.1279300,-740.4980500,642.0010400,0.0000000,0.0000000,0.1980000); //object(sfnvilla001_cm) (29)
CreateDynamicObject(9339,-50.1279300,-740.4980500,643.3909900,0.0000000,0.0000000,0.1980000); //object(sfnvilla001_cm) (30)
CreateDynamicObject(9339,-50.1279300,-740.4980500,644.7778300,0.0000000,0.0000000,0.1980000); //object(sfnvilla001_cm) (31)
CreateDynamicObject(2714,-52.0033900,-736.7598300,643.1151700,0.0000000,0.0000000,179.3390000); //object(cj_open_sign_2) (1)
CreateDynamicObject(2413,-59.4133200,-727.1279300,640.0231900,0.0000000,0.0000000,180.3760000); //object(shop_counter_3a) (2)
CreateDynamicObject(2330,-44.1213000,-724.9823600,640.0304600,0.0000000,0.0000000,270.3310000); //object(cj_bedroom1_w) (1)
CreateDynamicObject(2573,-43.0498400,-719.9024000,640.0304600,0.0000000,0.0000000,270.3310000); //object(hotel_dresser_6) (1)
CreateDynamicObject(2110,-48.9574200,-726.9287700,640.0231900,0.0000000,0.0000000,0.0000000); //object(low_dinning_4) (1)
CreateDynamicObject(1755,-45.7330100,-726.9483000,640.0231900,0.0000000,0.0000000,180.6610000); //object(med_single_2) (1)
CreateDynamicObject(1762,-44.2690000,-726.9124100,640.0231900,0.0000000,0.0000000,180.6610000); //object(swank_single_2) (1)
CreateDynamicObject(2141,-60.2940800,-709.9464100,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_kitch2_l) (1)
CreateDynamicObject(2142,-59.1131400,-709.6601000,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_k4_low_unit2) (1)
CreateDynamicObject(2154,-61.0817400,-712.1540500,640.0231900,0.0000000,0.0000000,90.7090000); //object(cj_k5_low_unit1) (1)
CreateDynamicObject(2855,-53.8790700,-723.1767000,641.0333300,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (1)
CreateDynamicObject(2852,-51.1714400,-719.5255700,641.0119000,0.0000000,0.0000000,169.3750000); //object(gb_bedmags02) (1)
CreateDynamicObject(2822,-59.3648000,-727.0239300,641.0648200,0.0000000,0.0000000,92.4940000); //object(gb_kitchplatecln01) (1)
CreateDynamicObject(2738,-46.1840600,-709.8738400,640.6333000,0.0000000,0.0000000,0.0000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2595,-55.0986500,-709.9652100,641.4826700,0.0000000,0.0000000,273.9000000); //object(cj_shop_tv_video) (1)
CreateDynamicObject(2517,-47.5556500,-710.9232200,640.0231900,0.0000000,0.0000000,0.0000000); //object(cj_shower1) (2)
CreateDynamicObject(2312,-56.9157600,-726.9522700,641.4559300,0.0000000,0.0000000,179.3390000); //object(cj_tele_2) (1)
CreateDynamicObject(2316,-43.6972800,-712.6993400,641.6323900,0.0000000,0.0000000,270.3310000); //object(cj_tele_4) (1)
CreateDynamicObject(2302,-57.7960200,-721.2315700,640.0231900,0.0000000,0.0000000,90.0690000); //object(low_bed_06) (1)
CreateDynamicObject(2302,-57.7963100,-724.0719000,640.0231900,0.0000000,0.0000000,90.0660000); //object(low_bed_06) (2)
CreateDynamicObject(2226,-56.2460200,-710.0727500,641.1250600,0.0000000,0.0000000,0.0000000); //object(low_hi_fi_3) (1)
CreateDynamicObject(2101,-52.4929400,-709.6732800,640.7404800,0.0000000,0.0000000,0.0000000); //object(med_hi_fi_3) (1)
CreateDynamicObject(2190,-60.6844200,-716.6173100,641.2826500,0.0000000,0.0000000,59.7800000); //object(pc_1) (1)
CreateDynamicObject(2149,-60.1356200,-726.9794900,641.2163100,0.0000000,0.0000000,179.3390000); //object(cj_microwave1) (1)
CreateDynamicObject(2028,-51.9095400,-713.1778600,641.3659700,0.0000000,0.0000000,0.0000000); //object(swank_console) (1)
CreateDynamicObject(1839,-56.2543800,-710.1035800,640.2816800,0.0000000,0.0000000,89.6690000); //object(k_hifi_1) (1)
CreateDynamicObject(1809,-43.8927400,-716.4799800,641.2826500,0.0000000,0.0000000,270.3310000); //object(med_hi_fi) (1)
CreateDynamicObject(1790,-56.6013600,-726.9767500,640.6633900,0.0000000,0.0000000,0.0000000); //object(swank_video_3) (1)
CreateDynamicObject(1786,-51.9978400,-709.4014900,642.8779900,0.0000000,0.0000000,0.0000000); //object(swank_tv_4) (1)
CreateDynamicObject(1783,-57.8114900,-709.8468000,642.2556800,359.9930000,269.6450000,359.0310000); //object(swank_video_2) (1)
CreateDynamicObject(1719,-51.8850800,-716.2343100,641.3371000,0.0000000,0.0000000,0.0000000); //object(low_console) (1)
CreateDynamicObject(1738,-45.1870700,-709.5747700,640.6778000,0.0000000,0.0000000,0.0000000); //object(cj_radiator_old) (1)
CreateDynamicObject(1783,-57.5751800,-709.8433200,642.2556800,359.9890000,269.6430000,359.0280000); //object(swank_video_2) (2)
CreateDynamicObject(2101,-51.3396100,-709.7355300,640.7833300,0.0000000,0.0000000,0.0000000); //object(med_hi_fi_3) (4)
CreateDynamicObject(2101,-52.4921900,-709.6728500,641.2974900,0.0000000,0.0000000,0.0000000); //object(med_hi_fi_3) (5)
CreateDynamicObject(2101,-51.3388700,-709.7353500,641.3289800,0.0000000,0.0000000,0.0000000); //object(med_hi_fi_3) (6)
CreateDynamicObject(1790,-57.2861100,-726.9783900,640.6633900,0.0000000,0.0000000,0.0000000); //object(swank_video_3) (2)
CreateDynamicObject(2852,-52.5629200,-719.4226700,641.0119000,0.0000000,0.0000000,169.3710000); //object(gb_bedmags02) (2)
CreateDynamicObject(2855,-49.6512000,-723.2414600,641.0333300,0.0000000,0.0000000,0.0000000); //object(gb_bedmags05) (2)
CreateDynamicObject(2855,-48.9327600,-720.2126500,641.0333300,0.0000000,0.0000000,89.6690000); //object(gb_bedmags05) (3)
CreateDynamicObject(2855,-54.8103100,-720.2238800,641.0333300,0.0000000,0.0000000,269.0040000); //object(gb_bedmags05) (4)
CreateDynamicObject(1839,-55.0552300,-710.0835600,640.2816800,0.0000000,0.0000000,89.6650000); //object(k_hifi_1) (2)
CreateDynamicObject(2142,-61.0608900,-713.7272900,640.0231900,0.0000000,0.0000000,89.6690000); //object(cj_k4_low_unit2) (2)
CreateDynamicObject(1536,-51.1906500,-736.8948400,640.0231900,0.0000000,0.0000000,179.8840000); //object(gen_doorext15) (1)
// 2013 HOSPITAL
CreateDynamicObject(2395, 839.32983, -1221.60046, 1194.04675,   0.00000, 0.00000, 180.73399);
CreateDynamicObject(2855, 814.99536, -1228.32422, 1194.59363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18030, 827.90820, -1215.27246, 1196.41394,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3851, 830.80371, -1228.77637, 1196.59363,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 814.59863, -1228.77539, 1196.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 803.34570, -1228.76758, 1196.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3851, 844.50574, -1220.30408, 1196.46851,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, 823.64160, -1228.87891, 1194.06458,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1557, 842.10339, -1217.77026, 1194.26550,   0.00000, 0.00000, 359.99500);
CreateDynamicObject(1491, 843.61426, -1221.70898, 1194.27283,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1491, 823.00049, -1210.69629, 1194.04675,   0.00000, 0.00000, 0.99500);
CreateDynamicObject(9339, 813.24115, -1234.65063, 1194.74585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 813.24023, -1234.65039, 1196.14624,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 813.24023, -1234.65039, 1197.54614,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 813.24023, -1234.65039, 1198.94653,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 813.17566, -1220.09583, 1209.57117,   90.00000, 180.04401, 179.95599);
CreateDynamicObject(14782, 843.59570, -1224.45801, 1195.28149,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2597, 841.17969, -1222.77539, 1195.11743,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 813.17090, -1220.89648, 1209.57117,   90.00000, 180.04401, 179.95100);
CreateDynamicObject(9339, 799.85168, -1219.53528, 1194.74585,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, 799.85156, -1219.53516, 1196.14648,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, 799.85156, -1219.53516, 1197.54785,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1775, 813.96881, -1226.55847, 1195.14380,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 818.18921, -1227.50293, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1723, 813.90363, -1224.85999, 1194.04675,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(2855, 814.61993, -1228.31067, 1194.59363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 813.31696, -1206.32800, 1194.74585,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(9339, 813.31641, -1206.32715, 1196.14526,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 813.31641, -1206.32715, 1197.54517,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 813.31641, -1206.32715, 1198.89575,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 825.04785, -1232.48145, 1196.14648,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(9339, 825.04785, -1232.48145, 1197.49780,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(9339, 825.04785, -1232.48145, 1198.89722,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(9339, 832.67139, -1232.68628, 1194.74585,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(9339, 832.67090, -1232.68555, 1196.12122,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(9339, 832.67090, -1232.68555, 1197.52136,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(9339, 832.67090, -1232.68555, 1198.92175,   0.00000, 0.00000, 0.73600);
CreateDynamicObject(1723, 837.17102, -1221.14429, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2855, 814.08008, -1212.75781, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 834.00519, -1211.22266, 1194.04675,   0.00000, 0.00000, 0.99500);
CreateDynamicObject(1776, 819.21973, -1211.40552, 1195.14612,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 814.45447, -1211.73303, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 833.21002, -1211.20203, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 824.09088, -1228.51843, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 809.95520, -1210.61401, 1194.74585,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(1491, 813.25684, -1221.61523, 1194.02173,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(9339, 809.95508, -1210.61328, 1196.14648,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(9339, 809.95508, -1210.61328, 1197.54785,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(9339, 823.45306, -1210.59790, 1209.59619,   90.00000, 180.04401, 270.95099);
CreateDynamicObject(9339, 823.97772, -1210.56042, 1209.59619,   90.00000, 180.03799, 270.95001);
CreateDynamicObject(9339, 825.04785, -1197.66455, 1194.74585,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 825.04785, -1197.66406, 1196.14722,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 825.04785, -1197.66406, 1197.54761,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 825.04785, -1197.66406, 1198.94800,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 839.73804, -1210.47375, 1194.74585,   0.00000, 0.00000, 270.49500);
CreateDynamicObject(1491, 825.17389, -1210.69031, 1194.04675,   0.00000, 0.00000, 0.99400);
CreateDynamicObject(9339, 839.73730, -1210.47363, 1196.14624,   0.00000, 0.00000, 270.49399);
CreateDynamicObject(9339, 839.73730, -1210.47363, 1197.54639,   0.00000, 0.00000, 270.49399);
CreateDynamicObject(9339, 826.10229, -1210.57349, 1209.59619,   90.00000, 180.03799, 270.95001);
CreateDynamicObject(9339, 825.20282, -1210.57190, 1209.59619,   90.00000, 180.03799, 270.95001);
CreateDynamicObject(9339, 831.97852, -1197.33716, 1194.74585,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(9339, 831.97852, -1197.33691, 1196.14722,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(9339, 831.97852, -1197.33691, 1197.54858,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(9339, 831.97852, -1197.33691, 1198.94824,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(2395, 835.65234, -1221.67188, 1194.06812,   0.00000, 0.00000, 180.73100);
CreateDynamicObject(2395, 835.92480, -1221.65820, 1196.79700,   0.00000, 0.00000, 180.73100);
CreateDynamicObject(2395, 839.32910, -1221.59961, 1196.77222,   0.00000, 0.00000, 180.73100);
CreateDynamicObject(18001, 831.84229, -1205.96338, 1195.89636,   0.00000, 0.00000, 270.50000);
CreateDynamicObject(2524, 831.40009, -1206.49231, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2524, 831.40198, -1208.56860, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2524, 831.37225, -1204.48572, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(9339, 826.16412, -1190.60828, 1194.74585,   0.00000, 0.00000, 180.74500);
CreateDynamicObject(9339, 827.46631, -1190.58276, 1194.74585,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(9339, 828.74115, -1190.60693, 1194.74585,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(9339, 829.94141, -1190.62988, 1194.74585,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(2525, 829.43671, -1201.87720, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2525, 828.21063, -1201.90125, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2525, 826.98499, -1201.92578, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2525, 825.63403, -1201.92896, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1778, 831.56964, -1201.37024, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, 826.16406, -1190.60742, 1196.12146,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(9339, 827.46582, -1190.58203, 1196.12219,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(9339, 828.74023, -1190.60645, 1196.14600,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(9339, 829.94141, -1190.62988, 1196.14600,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(1997, 809.57275, -1226.39648, 1194.04675,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(9339, 845.65619, -1215.00403, 1194.74585,   0.00000, 0.00000, 270.49399);
CreateDynamicObject(9339, 832.60309, -1200.41577, 1194.74585,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(1491, 832.63379, -1213.45117, 1194.04675,   0.00000, 0.00000, 270.99399);
CreateDynamicObject(9339, 845.65527, -1215.00391, 1196.14624,   0.00000, 0.00000, 270.49399);
CreateDynamicObject(9339, 845.65527, -1215.00391, 1197.54663,   0.00000, 0.00000, 270.49399);
CreateDynamicObject(9339, 845.65527, -1215.00391, 1198.94702,   0.00000, 0.00000, 270.49399);
CreateDynamicObject(9339, 832.60254, -1200.41504, 1196.14600,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(9339, 832.60254, -1200.41504, 1197.54736,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(9339, 832.60254, -1200.41504, 1198.94727,   0.00000, 0.00000, 0.49400);
CreateDynamicObject(9339, 832.74414, -1214.44141, 1209.59619,   90.00000, 180.03300, 0.95000);
CreateDynamicObject(9339, 832.71912, -1213.09021, 1209.59619,   90.00000, 180.03300, 0.95000);
CreateDynamicObject(1723, 813.98047, -1215.78516, 1194.04675,   0.00000, 0.00000, 89.99500);
CreateDynamicObject(2855, 834.15167, -1221.18262, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 834.15137, -1221.18262, 1194.22192,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 835.42719, -1215.75769, 1194.04675,   0.00000, 0.00000, 359.99500);
CreateDynamicObject(2855, 838.28241, -1215.71375, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 815.27734, -1211.63477, 1194.04675,   0.00000, 0.00000, 1.99400);
CreateDynamicObject(2855, 831.37091, -1211.20496, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 831.37012, -1211.20410, 1194.19690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 821.70313, -1228.52930, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 831.58691, -1210.03894, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 833.02075, -1221.31409, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2700, 813.44208, -1227.91565, 1197.60034,   0.00000, 0.00000, 10.00000);
CreateDynamicObject(2700, 832.73828, -1221.28516, 1197.03735,   0.00000, 0.00000, 29.99800);
CreateDynamicObject(2700, 813.56641, -1210.80859, 1196.84387,   0.00000, 0.00000, 309.99600);
CreateDynamicObject(3395, 812.52209, -1226.59814, 1194.04675,   0.00000, 0.00000, 1.24700);
CreateDynamicObject(3389, 831.79785, -1227.04102, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3388, 825.60516, -1223.41394, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3386, 825.60449, -1222.42969, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2008, 837.79071, -1213.34558, 1194.04675,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(949, 832.12207, -1211.13086, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 828.59570, -1211.22266, 1194.04675,   0.00000, 0.00000, 0.98900);
CreateDynamicObject(1714, 839.05817, -1212.83289, 1194.04675,   0.00000, 0.00000, 268.75000);
CreateDynamicObject(949, 825.56500, -1221.56787, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 831.81628, -1222.37964, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1997, 828.83832, -1225.15332, 1194.05396,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(3395, 831.82227, -1224.64258, 1194.04675,   0.00000, 0.00000, 1.24700);
CreateDynamicObject(3389, 806.55951, -1227.52234, 1194.04675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3386, 812.55432, -1224.03271, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(9339, 825.04785, -1232.48145, 1194.74585,   0.00000, 0.00000, 0.73100);
CreateDynamicObject(3386, 806.56641, -1226.50195, 1194.04675,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2163, 839.71283, -1212.45752, 1195.70715,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(936, 809.48364, -1220.24988, 1194.52148,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3396, 806.69409, -1223.59546, 1194.04675,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3396, 825.73865, -1226.04114, 1194.05396,   0.00000, 0.00000, 179.99600);
CreateDynamicObject(14532, 819.76495, -1204.21277, 1195.02942,   0.00000, 0.00000, 0.75000);
CreateDynamicObject(14532, 817.18848, -1204.18848, 1195.02942,   0.00000, 0.00000, 0.74200);
CreateDynamicObject(14532, 814.58691, -1204.16406, 1195.02942,   0.00000, 0.00000, 0.54200);
CreateDynamicObject(14532, 819.76581, -1207.64319, 1195.02942,   0.00000, 0.00000, 180.74699);
CreateDynamicObject(14532, 817.31396, -1207.72949, 1195.02942,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(14532, 814.81335, -1207.73987, 1195.02942,   0.00000, 0.00000, 180.74200);
CreateDynamicObject(2323, 823.37555, -1203.37170, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2307, 823.33789, -1206.20435, 1194.04675,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(949, 821.53107, -1210.17993, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, 824.40552, -1204.45520, 1195.89734,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 824.43317, -1203.22620, 1195.33484,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2254, 824.87872, -1203.84888, 1196.40808,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2689, 824.65692, -1206.18762, 1195.71082,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2704, 824.63831, -1207.08093, 1195.70898,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1433, 815.88702, -1201.92249, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1433, 815.88672, -1201.92188, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1433, 818.45868, -1201.92542, 1194.23364,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1433, 818.52478, -1209.86072, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1433, 816.04993, -1209.88123, 1194.22644,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 816.10199, -1209.86182, 1194.73438,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 818.48395, -1209.82996, 1194.73438,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 818.43457, -1202.02502, 1194.74158,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2855, 815.87921, -1201.92188, 1194.73438,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(949, 806.42969, -1220.07178, 1194.68298,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2395, 844.51154, -1218.54639, 1194.42139,   0.00000, 0.00000, 269.73099);
CreateDynamicObject(1800, 814.44196, -1204.89624, 1194.04675,   0.00000, 0.00000, 359.39999);
CreateDynamicObject(1800, 816.98975, -1204.86792, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateDynamicObject(1800, 819.63751, -1204.88367, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateDynamicObject(1800, 819.61090, -1211.47046, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateDynamicObject(1800, 817.14044, -1211.50903, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateDynamicObject(1800, 814.56702, -1211.50610, 1194.04675,   0.00000, 0.00000, 359.39600);
CreateDynamicObject(9339, 831.68567, -1219.53296, 1206.87415,   90.00000, 180.03300, 89.20400);
CreateDynamicObject(9339, 830.29846, -1219.52380, 1206.87415,   90.00000, 180.02699, 89.20300);
CreateDynamicObject(1491, 829.61041, -1219.44678, 1194.04675,   0.00000, 0.00000, 179.63499);
CreateDynamicObject(1491, 826.58917, -1219.45837, 1194.04675,   0.00000, 0.00000, 0.01000);
CreateDynamicObject(9339, 825.90076, -1219.54248, 1206.87415,   90.00000, 180.03300, 269.86600);
CreateDynamicObject(9339, 828.90533, -1219.53137, 1209.59753,   90.00000, 180.02699, 89.60400);
CreateDynamicObject(9339, 827.26331, -1219.53333, 1209.59753,   90.00000, 180.02699, 90.00400);
CreateDynamicObject(9339, 827.73401, -1219.54126, 1209.59753,   90.00000, 180.02699, 90.00000);
CreateDynamicObject(2886, 843.96527, -1217.77722, 1195.75793,   0.00000, 0.00000, 0.00000);
//DynamicObject | IntCentralBank by John Gomez - GodzGameplays [JG Mapps]
CreateDynamicObject(14602, 376.53, 173.76, 2000.41,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 364.88, 184.77, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 364.88, 156.27, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 364.88, 165.68, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 364.88, 175.26, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(14598, 364.72, 173.90, 2010.59,   0.00, 0.00, 0.00);
CreateDynamicObject(14576, 370.18, 175.11, 1990.63,   0.00, 0.00, 180.00);
CreateDynamicObject(19172, 373.14, 189.45, 1997.84,   0.00, 0.00, 0.00);
CreateDynamicObject(19088, 371.21, 170.32, 1990.32,   22.00, -108.00, 98.00);
CreateDynamicObject(19089, 370.45, 171.88, 1990.32,   0.00, 0.00, 76.00);
CreateDynamicObject(1536, 365.78, 189.50, 1995.03,   0.00, 0.00, 0.00);
CreateDynamicObject(18643, 364.21, 171.83, 1986.67,   15.00, 25.00, 0.00);
CreateDynamicObject(18643, 364.21, 176.98, 1986.67,   15.00, 25.00, 0.00);
CreateDynamicObject(18643, 364.21, 182.13, 1986.67,   15.00, 25.00, 0.00);
CreateDynamicObject(18643, 377.79, 171.83, 1986.67,   -15.00, 25.00, 180.00);
CreateDynamicObject(18643, 377.79, 176.98, 1986.67,   -15.00, 25.00, 180.00);
CreateDynamicObject(18643, 377.79, 182.13, 1986.67,   -15.00, 25.00, 180.00);
CreateDynamicObject(18643, 364.21, 182.13, 1986.67,   15.00, 155.00, 0.00);
CreateDynamicObject(18643, 364.21, 176.98, 1986.67,   15.00, 155.00, 0.00);
CreateDynamicObject(18643, 364.21, 171.83, 1986.67,   15.00, 155.00, 0.00);
CreateDynamicObject(18643, 377.79, 171.83, 1986.67,   0.00, 151.00, 180.00);
CreateDynamicObject(18643, 377.79, 176.98, 1986.67,   0.00, 151.00, 180.00);
CreateDynamicObject(18643, 377.79, 182.13, 1986.67,   0.00, 151.00, 180.00);
CreateDynamicObject(18643, 364.21, 171.83, 1986.67,   55.00, 120.00, 0.00);
CreateDynamicObject(18643, 364.21, 176.98, 1986.67,   55.00, 120.00, 0.00);
CreateDynamicObject(18643, 364.21, 182.13, 1986.67,   55.00, 120.00, 0.00);
CreateDynamicObject(18643, 377.79, 182.13, 1986.67,   -125.00, -60.00, 0.00);
CreateDynamicObject(18643, 377.79, 176.98, 1986.67,   -125.00, -60.00, 0.00);
CreateDynamicObject(18643, 377.79, 171.83, 1986.67,   -125.00, -60.00, 0.00);
CreateDynamicObject(18643, 377.79, 182.13, 1986.67,   -15.00, 60.00, 180.00);
CreateDynamicObject(18643, 377.79, 176.98, 1986.67,   -15.00, 60.00, 180.00);
CreateDynamicObject(18643, 377.79, 171.83, 1986.67,   -15.00, 60.00, 180.00);
CreateDynamicObject(18643, 364.21, 171.83, 1986.67,   15.00, 55.00, 0.00);
CreateDynamicObject(18643, 364.21, 176.98, 1986.67,   15.00, 55.00, 0.00);
CreateDynamicObject(18643, 364.21, 182.13, 1986.67,   15.00, 55.00, 0.00);
CreateDynamicObject(1829, 372.72, 152.20, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.87, 151.89, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.02, 151.89, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(1522, 391.21, 173.04, 1995.03,   0.00, 0.00, 90.00);
CreateDynamicObject(1892, 390.06, 176.37, 1995.04,   0.00, 0.00, 90.00);
CreateDynamicObject(1892, 390.06, 173.30, 1995.04,   0.00, 0.00, 90.00);
CreateDynamicObject(1892, 390.06, 170.27, 1995.04,   0.00, 0.00, 90.00);
CreateDynamicObject(1615, 390.04, 169.54, 1997.52,   0.00, 0.00, -90.00);
CreateDynamicObject(2332, 370.16, 151.89, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 369.31, 151.89, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(1428, 373.06, 155.39, 1983.96,   0.00, 0.00, -90.00);
CreateDynamicObject(2332, 368.45, 151.89, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 367.60, 151.89, 1982.90,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.87, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 372.73, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.02, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 370.16, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 369.31, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 368.45, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 367.60, 151.89, 1983.83,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 372.73, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.87, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.02, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 370.16, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 369.31, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 368.45, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 367.60, 151.89, 1984.76,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 372.73, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.87, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.02, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 370.16, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 369.31, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 368.45, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 367.60, 151.89, 1985.70,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 367.60, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(1437, 367.75, 158.90, 1981.52,   0.00, 0.00, 90.00);
CreateDynamicObject(2332, 368.45, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 369.31, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 370.16, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.02, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 371.87, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(2332, 372.73, 151.89, 1986.63,   0.00, 0.00, 180.00);
CreateDynamicObject(1886, 371.37, 188.68, 1986.67,   24.00, 0.00, -148.00);
CreateDynamicObject(1886, 371.39, 198.42, 1988.62,   9.00, 0.00, 302.42);
CreateDynamicObject(1886, 365.19, 190.38, 1990.81,   12.00, 0.00, 123.00);
CreateDynamicObject(1886, 371.26, 198.37, 1992.81,   17.00, 0.00, -55.00);
CreateDynamicObject(1886, 365.01, 190.35, 1994.99,   18.00, 0.00, -229.00);
CreateDynamicObject(1886, 371.38, 198.42, 1996.94,   9.00, 0.00, -53.00);
CreateDynamicObject(1886, 371.27, 193.11, 1999.10,   18.00, 0.00, -63.00);
CreateDynamicObject(1886, 377.22, 189.14, 2000.69,   0.00, 0.00, -36.00);
CreateDynamicObject(1886, 365.18, 189.05, 2000.78,   0.00, 0.00, 15.19);
CreateDynamicObject(1886, 369.45, 167.05, 2000.76,   12.00, 0.00, 135.60);
CreateDynamicObject(1886, 389.87, 177.55, 1998.48,   11.00, 0.00, 345.68);
CreateDynamicObject(1886, 389.87, 170.01, 1998.48,   11.00, 0.00, 200.00);
CreateDynamicObject(1886, 377.96, 177.63, 1998.48,   10.00, 0.00, 48.70);
CreateDynamicObject(1886, 374.12, 176.71, 2000.72,   18.00, 0.00, 15.70);
CreateDynamicObject(1549, 377.33, 166.87, 1995.04,   0.00, 0.00, 42.44);
CreateDynamicObject(1549, 377.35, 179.22, 1995.04,   0.00, 0.00, -35.00);
CreateDynamicObject(14699, 370.94, 171.21, 1998.88,   0.00, 0.00, 0.00);
CreateDynamicObject(14699, 375.76, 171.21, 1998.88,   0.00, 0.00, 0.00);
CreateDynamicObject(2634, 370.17, 167.53, 1984.13,   0.00, 0.00, 0.00);
CreateDynamicObject(2610, 373.31, 160.24, 1995.77,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 373.31, 160.24, 1997.38,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 372.81, 160.24, 1995.77,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 372.32, 160.24, 1995.77,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 371.83, 160.24, 1995.77,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 371.33, 160.24, 1995.77,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 370.84, 160.24, 1995.77,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 372.81, 160.24, 1997.38,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 372.32, 160.24, 1997.38,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 371.83, 160.24, 1997.38,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 371.33, 160.24, 1997.38,   0.00, 0.00, 180.00);
CreateDynamicObject(2610, 370.84, 160.24, 1997.38,   0.00, 0.00, 180.00);
CreateDynamicObject(1536, 372.77, 166.62, 1995.04,   0.00, 0.00, 180.00);
CreateDynamicObject(1428, 373.15, 162.09, 1996.21,   0.00, 0.00, -90.00);
CreateDynamicObject(2610, 373.05, 160.27, 1998.44,   90.00, 0.00, 90.00);
CreateDynamicObject(2610, 371.40, 160.27, 1998.44,   90.00, 0.00, 90.00);
CreateDynamicObject(2886, 373.08, 166.31, 1996.49,   0.00, 0.00, 0.00);
CreateDynamicObject(2886, 365.25, 189.90, 1996.49,   0.00, 0.00, 180.00);
CreateDynamicObject(2886, 367.82, 189.48, 1996.49,   0.00, 0.00, 0.00);
CreateDynamicObject(2886, 370.63, 166.64, 1996.49,   0.00, 0.00, 180.00);
CreateDynamicObject(2182, 375.89, 187.99, 1995.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2181, 377.40, 184.58, 1995.04,   0.00, 0.00, -90.00);
CreateDynamicObject(2182, 375.89, 184.81, 1995.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2182, 375.89, 181.35, 1995.04,   0.00, 0.00, 0.00);
CreateDynamicObject(2182, 370.57, 187.60, 1995.04,   0.00, 0.00, -180.00);
CreateDynamicObject(2181, 377.40, 187.95, 1995.04,   0.00, 0.00, -90.00);
CreateDynamicObject(2181, 377.40, 181.29, 1995.04,   0.00, 0.00, -90.00);
CreateDynamicObject(2182, 370.57, 184.42, 1995.04,   0.00, 0.00, -180.00);
CreateDynamicObject(2310, 371.94, 184.81, 1995.54,   0.00, 0.00, 25.74);
CreateDynamicObject(2356, 369.28, 184.11, 1995.04,   0.00, 0.00, 305.68);
CreateDynamicObject(2356, 369.26, 187.30, 1995.04,   0.00, 0.00, 273.00);
CreateDynamicObject(2356, 376.78, 188.39, 1995.04,   0.00, 0.00, 131.74);
CreateDynamicObject(2356, 376.57, 184.79, 1995.04,   0.00, 0.00, 194.00);
CreateDynamicObject(2356, 376.84, 181.75, 1995.04,   0.00, 0.00, 113.00);
CreateDynamicObject(2310, 372.07, 183.48, 1995.54,   0.00, 0.00, -14.00);
CreateDynamicObject(2310, 371.98, 187.88, 1995.54,   0.00, 0.00, 14.00);
CreateDynamicObject(2310, 371.86, 186.63, 1995.54,   0.00, 0.00, -40.00);
CreateDynamicObject(2310, 374.52, 188.99, 1995.54,   0.00, 0.00, 156.00);
CreateDynamicObject(2310, 374.35, 187.69, 1995.54,   0.00, 0.00, 193.00);
CreateDynamicObject(2310, 374.45, 185.80, 1995.54,   0.00, 0.00, 164.00);
CreateDynamicObject(2310, 374.58, 184.60, 1995.54,   0.00, 0.00, 200.00);
CreateDynamicObject(2310, 374.57, 182.34, 1995.54,   0.00, 0.00, 178.00);
CreateDynamicObject(2310, 374.54, 181.22, 1995.54,   0.00, 0.00, 185.00);
CreateDynamicObject(14699, 375.63, 187.20, 1998.88,   0.00, 0.00, 90.00);
CreateDynamicObject(1523, 368.89, 166.64, 1995.03,   0.00, 0.00, 180.00);
CreateDynamicObject(19377, 364.12, 166.58, 2002.80,   0.00, 0.00, 90.00);
CreateDynamicObject(1523, 365.68, 166.57, 1995.03,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 367.28, 161.85, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 365.61, 161.85, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 360.71, 165.90, 2000.28,   0.00, 0.00, 90.00);
CreateDynamicObject(19377, 368.85, 161.85, 2000.14,   0.00, 0.00, 0.00);
CreateDynamicObject(19377, 364.01, 163.63, 1999.49,   0.00, 0.00, 90.00);
CreateDynamicObject(1886, 364.98, 171.98, 1987.69,   18.00, 0.00, 135.00);
CreateDynamicObject(1886, 377.11, 171.98, 1987.69,   18.00, 0.00, 213.00);
CreateDynamicObject(1778, 365.51, 166.26, 1995.05,   0.00, 0.00, -76.00);
CreateDynamicObject(2738, 368.08, 164.02, 1995.65,   0.00, 0.00, 180.00);
CreateDynamicObject(2738, 366.47, 164.02, 1995.65,   0.00, 0.00, 180.00);
CreateDynamicObject(2518, 367.85, 165.04, 1995.37,   0.00, 0.00, 90.00);
CreateDynamicObject(2518, 366.16, 165.04, 1995.37,   0.00, 0.00, 90.00);
CreateDynamicObject(2169, 366.81, 172.33, 1995.04,   0.00, 0.00, -90.00);
CreateDynamicObject(2169, 366.81, 174.30, 1995.04,   0.00, 0.00, -90.00);
CreateDynamicObject(2169, 366.81, 176.26, 1995.04,   0.00, 0.00, -90.00);
CreateDynamicObject(1808, 373.13, 189.26, 1995.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1502, 364.95, 170.88, 1995.04,   0.00, 0.00, 0.00);
CreateDynamicObject(1502, 364.95, 176.65, 1995.04,   0.00, 0.00, 0.00);
CreateDynamicObject(3859, 367.26, 173.46, 1999.00,   0.00, 0.00, 17.00);
CreateDynamicObject(3859, 367.26, 174.09, 1999.00,   0.00, 0.00, 17.00);
CreateDynamicObject(3859, 363.65, 170.85, 2000.46,   0.00, 0.00, 107.00);
CreateDynamicObject(3859, 363.66, 176.71, 2000.46,   0.00, 0.00, 107.00);
CreateDynamicObject(14684, 366.32, 178.47, 1996.60,   0.00, -90.00, 0.00);
CreateDynamicObject(14684, 366.32, 178.47, 1997.60,   0.00, -90.00, 0.00);
CreateDynamicObject(14684, 366.31, 172.61, 1996.60,   0.00, -90.00, 0.00);
CreateDynamicObject(14684, 366.31, 172.61, 1997.60,   0.00, -90.00, 0.00);
CreateDynamicObject(14684, 366.31, 172.61, 2000.60,   0.00, -90.00, 0.00);
CreateDynamicObject(14684, 366.32, 178.47, 2000.60,   0.00, -90.00, 0.00);
CreateDynamicObject(1514, 366.89, 176.14, 1996.09,   0.00, 0.00, 90.00);
CreateDynamicObject(1514, 366.89, 174.14, 1996.09,   0.00, 0.00, 90.00);
CreateDynamicObject(1514, 366.89, 172.14, 1996.09,   0.00, 0.00, 90.00);
CreateDynamicObject(2356, 365.45, 175.50, 1995.04,   0.00, 0.00, -76.00);
CreateDynamicObject(2356, 365.45, 173.50, 1995.04,   0.00, 0.00, -105.00);
CreateDynamicObject(2356, 365.45, 172.00, 1995.04,   0.00, 0.00, -89.00);
CreateDynamicObject(1274, 367.24, 173.80, 1995.33,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 368.52, 171.69, 1995.56,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 368.52, 175.82, 1995.56,   0.00, 0.00, 0.00);
CreateDynamicObject(2773, 369.50, 173.09, 1995.56,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 369.50, 174.43, 1995.56,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 371.87, 174.43, 1995.56,   0.00, 0.00, 90.00);
CreateDynamicObject(2773, 371.87, 173.09, 1995.56,   0.00, 0.00, 90.00);
CreateDynamicObject(942, 367.34, 178.37, 1992.28,   0.00, 0.00, 90.00);
CreateDynamicObject(939, 371.47, 177.99, 1992.28,   0.00, 0.00, 0.00);
CreateDynamicObject(942, 369.62, 185.77, 1992.28,   0.00, 0.00, 127.00);
CreateDynamicObject(1499, 371.56, 187.89, 1982.43,   0.00, 0.00, 180.00);
CreateDynamicObject(1499, 368.55, 187.87, 1982.43,   0.00, 0.00, 0.00);
CreateDynamicObject(1508, 368.75, 187.96, 1986.60,   0.00, 0.00, 90.00);
CreateDynamicObject(2199, 371.28, 188.13, 1989.84,   0.00, 0.00, -90.00);
CreateDynamicObject(2191, 370.01, 179.70, 1989.84,   0.00, 0.00, 180.00);
CreateDynamicObject(19364, 362.93, 190.81, 1991.97,   0.00, 0.00, 90.00);
CreateDynamicObject(19362, 362.80, 191.81, 1990.75,   0.00, 90.00, 0.00);
CreateDynamicObject(19364, 361.42, 192.33, 1991.97,   0.00, 0.00, 0.00);
CreateDynamicObject(19364, 362.93, 192.50, 1991.97,   0.00, 0.00, 90.00);
CreateDynamicObject(19364, 362.79, 192.23, 1993.63,   0.00, 90.00, 0.00);
CreateDynamicObject(2173, 361.75, 191.14, 1990.64,   0.00, 0.00, 90.00);
CreateDynamicObject(2356, 363.77, 191.34, 1990.83,   0.00, 0.00, 67.00);
CreateDynamicObject(1886, 367.78, 166.00, 1987.65,   20.00, 0.00, 14.47);
CreateDynamicObject(1886, 372.87, 166.00, 1987.65,   20.00, 0.00, -20.00);
CreateDynamicObject(1749, 361.36, 191.54, 1991.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 192.13, 1991.40,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 191.54, 1991.91,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 192.13, 1991.91,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 191.54, 1992.42,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 192.13, 1992.42,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 191.54, 1992.93,   0.00, 0.00, 90.00);
CreateDynamicObject(1749, 361.36, 192.13, 1992.93,   0.00, 0.00, 90.00);
CreateDynamicObject(2986, 373.60, 188.27, 1989.84,   0.00, 66.00, -91.00);
CreateDynamicObject(19087, 374.82, 187.78, 1992.10,   -32.00, 0.00, -90.00);
CreateDynamicObject(2754, 375.06, 187.80, 1990.92,   90.00, 80.88, 180.00);
CreateDynamicObject(2961, 370.17, 166.68, 1996.45,   0.00, 0.00, 180.00);
CreateDynamicObject(2690, 377.43, 178.90, 1996.43,   0.00, 0.00, -90.00);
CreateDynamicObject(2690, 365.09, 173.80, 1996.43,   0.00, 0.00, 90.00);
CreateDynamicObject(2690, 372.19, 167.03, 1983.79,   0.00, 0.00, 0.00);
//Villa
CreateDynamicObject(2669,1645.00561523,-2162.94628906,13.89496040,0.00000000,0.00000000,270.00000000); //object(cj_chris_crate) (1)
CreateDynamicObject(2935,1645.83801270,-2159.77954102,14.00660706,0.00000000,0.00000000,270.00000000); //object(kmb_container_yel) (1)
CreateDynamicObject(3043,1646.17761230,-2152.95825195,14.00660706,0.00000000,0.00000000,270.00000000); //object(kmb_container_open) (1)
CreateDynamicObject(3073,1645.92565918,-2156.20263672,14.21700478,0.00000000,0.00000000,273.96997070); //object(kmb_container_broke) (1)
CreateDynamicObject(3043,1646.30737305,-2149.90063477,14.00660706,0.00000000,0.00000000,270.00000000); //object(kmb_container_open) (2)
CreateDynamicObject(2669,1645.51513672,-2146.80249023,13.89496040,0.00000000,0.00000000,270.00000000); //object(cj_chris_crate) (2)
CreateDynamicObject(2669,1646.97424316,-2149.87036133,16.80029488,0.00000000,0.00000000,270.00000000); //object(cj_chris_crate) (3)
CreateDynamicObject(2669,1647.18896484,-2152.95043945,16.80029488,0.00000000,0.00000000,270.00000000); //object(cj_chris_crate) (4)
CreateDynamicObject(3174,1650.77416992,-2143.92382812,12.55468750,0.00000000,0.00000000,0.00000000); //object(sm_airstrm_sml_) (1)
CreateDynamicObject(11444,1645.38073730,-2141.04785156,12.55468750,0.00000000,0.00000000,0.00000000); //object(des_pueblo2) (1)
CreateDynamicObject(3093,1642.27404785,-2160.46191406,14.02021408,0.00000000,0.00000000,0.00000000); //object(cuntgirldoor) (1)
CreateDynamicObject(1492,1642.98486328,-2146.04467773,12.67731285,0.00000000,0.00000000,270.67565918); //object(gen_doorint02) (1)
CreateDynamicObject(2904,1635.03100586,-2138.26074219,13.86085129,0.00000000,0.00000000,0.00000000); //object(warehouse_door1) (1)
CreateDynamicObject(2904,1632.84265137,-2138.26293945,13.86085129,0.00000000,0.00000000,0.00000000); //object(warehouse_door1) (2)
CreateDynamicObject(2904,1636.26416016,-2139.53076172,13.86085129,0.00000000,0.00000000,90.00000000); //object(warehouse_door1) (3)
CreateDynamicObject(2904,1631.65026855,-2139.47851562,13.86085129,0.00000000,0.00000000,90.00000000); //object(warehouse_door1) (4)
CreateDynamicObject(2904,1635.05529785,-2140.76464844,13.86085129,0.00000000,0.00000000,0.00000000); //object(warehouse_door1) (5)
CreateDynamicObject(2904,1634.40002441,-2140.78198242,13.86085129,0.00000000,0.00000000,0.00000000); //object(warehouse_door1) (6)
CreateDynamicObject(2904,1635.00000000,-2139.50000000,15.17701626,90.00000000,0.00000000,0.00000000); //object(warehouse_door1) (7)
CreateDynamicObject(2904,1632.69995117,-2139.47314453,15.17701626,90.00000000,0.00000000,0.00000000); //object(warehouse_door1) (8)
CreateDynamicObject(1499,1631.66003418,-2140.70532227,12.62311554,0.00000000,0.00000000,0.00000000); //object(gen_doorint05) (1)
CreateDynamicObject(16637,1635.80249023,-2147.50170898,14.06256485,0.00000000,0.00000000,180.00000000); //object(ghostgardoor) (1)
CreateDynamicObject(16637,1633.94628906,-2145.62646484,14.06256485,0.00000000,0.00000000,270.00000000); //object(ghostgardoor) (2)
CreateDynamicObject(16637,1632.07910156,-2147.50463867,14.06256485,0.00000000,0.00000000,0.00000000); //object(ghostgardoor) (3)
CreateDynamicObject(16637,1632.09240723,-2149.39282227,14.06256485,0.00000000,0.00000000,90.00000000); //object(ghostgardoor) (4)
CreateDynamicObject(16637,1630.17309570,-2145.61303711,14.06256485,0.00000000,0.00000000,270.00000000); //object(ghostgardoor) (5)
CreateDynamicObject(16637,1628.30493164,-2147.48217773,14.06256485,0.00000000,0.00000000,0.00000000); //object(ghostgardoor) (6)
CreateDynamicObject(16637,1629.83642578,-2147.55249023,15.61999989,0.00000000,90.00000000,0.00000000); //object(ghostgardoor) (7)
CreateDynamicObject(16637,1634.34082031,-2147.57641602,15.61999989,0.00000000,90.00000000,0.00000000); //object(ghostgardoor) (8)
CreateDynamicObject(16637,1631.59997559,-2147.60009766,15.75000000,0.00000000,90.00000000,0.00000000); //object(ghostgardoor) (9)
CreateDynamicObject(16501,1636.03210449,-2157.25659180,13.50000000,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_) (1)
CreateDynamicObject(16501,1633.81579590,-2160.63256836,12.14999962,90.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_) (2)
CreateDynamicObject(16501,1633.71276855,-2153.67333984,12.19999981,90.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_) (3)
CreateDynamicObject(16501,1634.00000000,-2157.19995117,15.68999958,0.00000000,90.00000000,0.00000000); //object(cn2_savgardr2_) (4)
CreateDynamicObject(16501,1631.55993652,-2155.99584961,12.19999981,90.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_) (5)
CreateDynamicObject(16501,1631.55993652,-2156.72534180,12.10000038,90.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_) (6)
CreateDynamicObject(2934,1625.92065430,-2156.61791992,14.00660706,0.00000000,0.00000000,0.00000000); //object(kmb_container_red) (1)
CreateDynamicObject(3585,1624.29174805,-2146.73510742,14.18457603,0.00000000,0.00000000,258.76574707); //object(lastran1_la02) (2)
CreateDynamicObject(3564,1618.75878906,-2153.72241211,14.18457603,0.00000000,0.00000000,308.39038086); //object(lastran1_la01) (1)
CreateDynamicObject(13025,1645.25683594,-2131.34277344,15.73667336,0.00000000,0.00000000,0.00000000); //object(sw_fueldrum01) (1)
CreateDynamicObject(2679,1623.44396973,-2145.71948242,14.48768234,0.00000000,0.00000000,75.42956543); //object(cj_chris_crate_rd) (1)
CreateDynamicObject(2679,1623.23352051,-2146.59667969,14.48768234,0.00000000,0.00000000,75.42663574); //object(cj_chris_crate_rd) (2)
CreateDynamicObject(2679,1623.28344727,-2146.19067383,14.48768234,0.00000000,0.00000000,75.42663574); //object(cj_chris_crate_rd) (3)
CreateDynamicObject(11458,1658.43469238,-2168.24194336,12.55468750,0.00000000,0.00000000,0.00000000); //object(des_pueblo10) (1)
CreateDynamicObject(3564,1615.73034668,-2163.10156250,14.18457603,0.00000000,0.00000000,286.55139160); //object(lastran1_la01) (2)
CreateDynamicObject(2669,1627.13439941,-2163.28027344,13.89496040,0.00000000,0.00000000,271.98498535); //object(cj_chris_crate) (6)
CreateDynamicObject(2669,1632.73718262,-2163.30883789,13.89496040,0.00000000,0.00000000,90.00000000); //object(cj_chris_crate) (7)
CreateDynamicObject(11457,1603.56262207,-2155.78759766,12.55468750,0.00000000,0.00000000,0.00000000); //object(des_pueblo09) (1)
CreateDynamicObject(3073,1612.95434570,-2145.71533203,14.21700478,0.00000000,0.00000000,273.96606445); //object(kmb_container_broke) (2)
CreateDynamicObject(3043,1634.53857422,-2157.35180664,17.23999977,0.00000000,0.00000000,0.00000000); //object(kmb_container_open) (3)
CreateDynamicObject(3364,1632.05676270,-2171.45312500,12.55468750,0.00000000,0.00000000,286.55554199); //object(des_ruin3_) (1)
CreateDynamicObject(5153,1627.00000000,-2147.87304688,16.00818825,0.00000000,25.00000000,0.00000000); //object(stuntramp7_las2) (1)
CreateDynamicObject(5153,1637.85742188,-2147.94458008,15.55550766,0.00000000,25.00000000,0.00000000); //object(stuntramp7_las2) (2)
CreateDynamicObject(5153,1641.00000000,-2147.56738281,15.55550766,0.00000000,30.00000000,0.00000000); //object(stuntramp7_las2) (3)
CreateDynamicObject(16317,1615.65283203,-2130.69433594,12.55468845,0.00000000,0.00000000,0.00000000); //object(des_quarstmound_03) (1)
CreateDynamicObject(3594,1632.16601562,-2133.26513672,13.18586445,0.00000000,0.00000000,5.95495605); //object(la_fuckcar1) (1)
CreateDynamicObject(3593,1638.69482422,-2145.81250000,13.26485538,0.00000000,0.00000000,0.00000000); //object(la_fuckcar2) (1)
CreateDynamicObject(1336,1616.88378906,-2168.01635742,13.61862850,0.00000000,0.00000000,0.00000000); //object(binnt06_la) (1)
CreateDynamicObject(1335,1618.33251953,-2169.02319336,13.68023014,0.00000000,0.00000000,342.13513184); //object(binnt05_la) (1)
CreateDynamicObject(12957,1622.11962891,-2173.05688477,13.43290424,0.00000000,0.00000000,0.00000000); //object(sw_pickupwreck01) (1)
CreateDynamicObject(1327,1626.99731445,-2174.53808594,13.52266216,0.00000000,0.00000000,0.00000000); //object(junk_tyre) (1)
CreateDynamicObject(1358,1624.69238281,-2131.86010742,13.75823402,0.00000000,0.00000000,0.00000000); //object(cj_skip_rubbish) (1)
CreateDynamicObject(1365,1623.53845215,-2135.96777344,13.69759941,0.00000000,0.00000000,334.19519043); //object(cj_big_skip1) (1)
CreateDynamicObject(1442,1634.03820801,-2152.83007812,13.15317059,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0) (1)
CreateDynamicObject(14861,1633.37524414,-2147.19653320,13.00171852,0.00000000,0.00000000,0.00000000); //object(choochie-bed) (2)
CreateDynamicObject(1771,1634.73596191,-2139.17211914,13.18835449,0.00000000,0.00000000,264.72070312); //object(cj_bunk_bed1) (1)
CreateDynamicObject(933,1630.85046387,-2148.07055664,12.55468750,0.00000000,0.00000000,0.00000000); //object(cj_cableroll) (2)
CreateDynamicObject(1429,1630.45800781,-2148.02612305,13.82118320,0.00000000,0.00000000,254.79577637); //object(dyn_tv) (1)
CreateDynamicObject(1265,1624.31323242,-2149.19262695,13.87250137,0.00000000,0.00000000,0.00000000); //object(blackbag2) (1)
CreateDynamicObject(1338,1623.86425781,-2147.88720703,14.11476707,0.00000000,0.00000000,13.89489746); //object(binnt08_la) (1)
CreateDynamicObject(1499,1644.33532715,-2149.11840820,15.58264732,0.00000000,0.00000000,270.67565918); //object(gen_doorint05) (4)
CreateDynamicObject(1575,1648.45300293,-2149.00317383,15.60000038,0.00000000,0.00000000,0.00000000); //object(drug_white) (1)
CreateDynamicObject(1575,1648.44836426,-2149.41943359,15.60000038,0.00000000,0.00000000,0.00000000); //object(drug_white) (2)
CreateDynamicObject(1575,1648.42041016,-2149.82763672,15.60000038,0.00000000,0.00000000,0.00000000); //object(drug_white) (3)
CreateDynamicObject(1577,1647.62695312,-2149.10278320,15.60000038,0.00000000,0.00000000,356.03002930); //object(drug_yellow) (1)
CreateDynamicObject(1578,1647.65832520,-2149.48193359,15.60000038,0.00000000,0.00000000,0.00000000); //object(drug_green) (1)
CreateDynamicObject(2035,1647.89282227,-2150.91772461,15.60708427,0.00000000,0.00000000,0.00000000); //object(cj_m16) (1)
CreateDynamicObject(2034,1647.95166016,-2150.55297852,15.61346531,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff) (1)
CreateDynamicObject(1279,1647.43505859,-2150.06469727,15.60000038,0.00000000,0.00000000,0.00000000); //object(craigpackage) (1)
CreateDynamicObject(1499,1644.61047363,-2153.71533203,15.64314175,0.00000000,0.00000000,90.00000000); //object(gen_doorint05) (5)
CreateDynamicObject(14666,1649.69995117,-2152.83007812,16.81925774,0.00000000,0.00000000,0.00000000); //object(cj_sex_counter03) (1)
CreateDynamicObject(14890,1646.35729980,-2153.89672852,15.61610794,0.00000000,0.00000000,0.00000000); //object(millie-vibrators) (1)
CreateDynamicObject(2587,1648.74499512,-2154.54223633,17.28391457,0.00000000,0.00000000,0.00000000); //object(sex_2) (1)
CreateDynamicObject(2588,1647.15466309,-2151.59008789,17.24910164,0.00000000,0.00000000,0.00000000); //object(sex_3) (1)
CreateDynamicObject(853,1626.42138672,-2126.25317383,12.95536137,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_5) (1)
CreateDynamicObject(851,1628.82434082,-2155.33789062,12.86755848,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2) (1)
CreateDynamicObject(849,1610.69799805,-2154.61157227,12.85444164,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3) (1)
CreateDynamicObject(851,1611.15344238,-2155.73364258,12.86755848,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2) (2)
CreateDynamicObject(854,1609.45385742,-2155.41381836,12.76142979,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3b) (1)
CreateDynamicObject(849,1607.86535645,-2152.93603516,12.85444164,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3) (2)
CreateDynamicObject(849,1611.40405273,-2151.72363281,12.85444164,0.00000000,0.00000000,27.78979492); //object(cj_urb_rub_3) (3)
CreateDynamicObject(3461,1633.83471680,-2152.85375977,11.83356953,0.00000000,0.00000000,0.00000000); //object(tikitorch01_lvs) (1)
CreateDynamicObject(2890,1618.69409180,-2130.32397461,14.16937733,0.00000000,0.00000000,0.00000000); //object(kmb_skip) (1)
CreateDynamicObject(1327,1615.57617188,-2132.61767578,15.71517372,0.00000000,90.00000000,0.00000000); //object(junk_tyre) (2)
CreateDynamicObject(1299,1612.67956543,-2135.49487305,15.68411446,0.00000000,0.00000000,0.00000000); //object(smashboxpile) (1)
CreateDynamicObject(12954,1616.55578613,-2128.47265625,14.50312424,0.00000000,0.00000000,306.40539551); //object(sw_furnipile01) (1)
CreateDynamicObject(12957,1613.50756836,-2137.30249023,14.42149830,0.00000000,0.00000000,0.00000000); //object(sw_pickupwreck01) (2)
CreateDynamicObject(13591,1612.89892578,-2135.77929688,13.80224609,0.00000000,0.00000000,0.00000000); //object(kickcar28) (1)
CreateDynamicObject(3461,1620.31665039,-2132.15405273,12.86850357,0.00000000,0.00000000,0.00000000); //object(tikitorch01_lvs) (4)
CreateDynamicObject(3461,1617.93798828,-2129.17871094,13.92798805,0.00000000,0.00000000,0.00000000); //object(tikitorch01_lvs) (5)
CreateDynamicObject(3461,1611.25244141,-2132.87353516,13.96831512,0.00000000,0.00000000,0.00000000); //object(tikitorch01_lvs) (6)
// Speed Bump entrace SAPD
CreateDynamicObject(19425, 1539.43, -1623.66, 12.37,   0.00, 0.00, -90.66);
CreateDynamicObject(19425, 1539.40, -1626.96, 12.37,   0.00, 0.00, -90.66);
CreateDynamicObject(19425, 1539.36, -1630.26, 12.37,   0.00, 0.00, -90.66);
CreateDynamicObject(19425, 1539.31, -1633.54, 12.37,   0.00, 0.00, -90.66);
//========================== Gobierno Exterior ==================================
CreateDynamicObject(1225,-4505.29980469,802.09997559,0.00000000,0.00000000,0.00000000,0.00000000); //object(barrel4) (3)
CreateDynamicObject(866,-4466.00000000,941.70001221,5.80000019,0.00000000,0.00000000,0.00000000); //object(sand_combush03) (2)
CreateDynamicObject(866,-4496.00000000,918.79998779,5.09999990,0.00000000,0.00000000,0.00000000); //object(sand_combush03) (5)
CreateDynamicObject(1251,1363.30004883,-1662.69995117,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (1)
CreateDynamicObject(3881,1393.69921875,-1654.89941406,14.19999981,0.00000000,0.00000000,270.00000000); //object(airsecbooth_sfse) (1)
CreateDynamicObject(1232,1358.59997559,-1631.69995117,15.19999981,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (1)
CreateDynamicObject(2774,1389.80004883,-1654.59997559,7.40000010,0.00000000,179.99450684,0.00000000); //object(cj_airp_pillars) (3)
CreateDynamicObject(2774,1390.09997559,-1644.09997559,7.40000010,0.00000000,179.99450684,0.00000000); //object(cj_airp_pillars) (4)
CreateDynamicObject(3660,1405.89941406,-1653.89941406,15.19999981,0.00000000,0.00000000,0.00000000); //object(lasairfbed_las) (1)
CreateDynamicObject(8843,1409.19995117,-1648.69995117,12.39999962,0.00000000,0.00000000,90.00000000); //object(arrows01_lvs) (1)
CreateDynamicObject(3851,1391.29980469,-1627.39941406,13.25000095,90.00000000,180.00549316,269.97802734); //object(carshowwin_sfsx) (2)
CreateDynamicObject(3934,1386.87487793,-1638.10144043,37.29999924,0.00000000,0.00000000,270.00000000); //object(helipad01) (1)
CreateDynamicObject(3851,1393.30004883,-1629.40002441,13.30000019,90.00000000,179.99450684,0.00000000); //object(carshowwin_sfsx) (15)
CreateDynamicObject(3851,1389.30004883,-1629.40002441,24.50000000,90.00000000,179.99450684,359.99450684); //object(carshowwin_sfsx) (20)
CreateDynamicObject(3851,1393.30004883,-1629.40002441,24.50000000,90.00000000,180.00549316,359.98901367); //object(carshowwin_sfsx) (21)
CreateDynamicObject(3851,1393.30004883,-1629.40002441,35.79999924,90.00000000,179.99450684,359.99447632); //object(carshowwin_sfsx) (22)
CreateDynamicObject(3851,1391.30004883,-1627.40002441,24.50000000,90.00000000,180.00549316,269.97802734); //object(carshowwin_sfsx) (23)
CreateDynamicObject(3851,1391.30004883,-1627.40002441,35.79999924,90.00000000,179.99450684,269.98901367); //object(carshowwin_sfsx) (24)
CreateDynamicObject(3851,1389.30004883,-1629.40002441,35.79999924,90.00000000,180.00549316,359.98352051); //object(carshowwin_sfsx) (25)
CreateDynamicObject(1232,1415.59960938,-1653.00000000,15.19999981,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (3)
CreateDynamicObject(2774,1352.19995117,-1618.80004883,3.90000010,0.00000000,179.99450684,0.00000000); //object(cj_airp_pillars) (7)
CreateDynamicObject(4100,1386.59960938,-1679.59960938,15.30000019,0.00000000,0.00000000,317.99926758); //object(meshfence1_lan) (2)
CreateDynamicObject(3578,1384.50000000,-1679.50000000,13.30000019,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (1)
CreateDynamicObject(3578,1359.40002441,-1684.30004883,12.60000038,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (2)
CreateDynamicObject(3578,1359.19995117,-1618.80004883,12.60000038,0.00000000,0.00000000,180.00000000); //object(dockbarr1_la) (3)
CreateDynamicObject(996,1355.90002441,-1618.90002441,14.10000038,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier1) (2)
CreateDynamicObject(1215,1354.90002441,-1684.30004883,13.89999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(1215,1363.89941406,-1618.89941406,13.89999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(1215,1354.69921875,-1618.79980469,13.89999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(1215,1364.00000000,-1684.30004883,13.89999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(3660,1359.19995117,-1653.30004883,15.10000038,0.00000000,0.00000000,270.00000000); //object(lasairfbed_las) (2)
CreateDynamicObject(3660,1359.19995117,-1641.30004883,15.10000038,0.00000000,0.00000000,270.00000000); //object(lasairfbed_las) (3)
CreateDynamicObject(1251,1363.40002441,-1658.30004883,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (2)
CreateDynamicObject(1251,1363.30004883,-1654.00000000,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (3)
CreateDynamicObject(1251,1363.00000000,-1649.59997559,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (4)
CreateDynamicObject(1251,1363.40002441,-1640.80004883,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (5)
CreateDynamicObject(1251,1363.19921875,-1645.19921875,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (6)
CreateDynamicObject(1251,1363.30004883,-1636.50000000,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (7)
CreateDynamicObject(1251,1363.30004883,-1632.09997559,12.50000000,0.00000000,0.00000000,90.00000000); //object(smashbar) (8)
CreateDynamicObject(1232,1358.40002441,-1663.09997559,15.19999981,0.00000000,0.00000000,0.00000000); //object(streetlamp1) (4)
CreateDynamicObject(2774,1352.30004883,-1684.09997559,4.90000010,0.00000000,179.99450684,0.00000000); //object(cj_airp_pillars) (11)
CreateDynamicObject(996,1356.09960938,-1684.19921875,14.10000038,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier1) (3)
CreateDynamicObject(3578,1374.40002441,-1598.50000000,12.60000038,0.00000000,0.00000000,339.99450684); //object(dockbarr1_la) (4)
CreateDynamicObject(4100,1376.27062988,-1599.10229492,14.89999962,0.00000000,0.00000000,299.99816895); //object(meshfence1_lan) (4)
CreateDynamicObject(975,1352.69995117,-1682.00000000,12.60000038,0.00000000,270.00000000,89.99981689); //object(columbiangate) (1)
CreateDynamicObject(2774,1352.19921875,-1623.50000000,3.90000010,0.00000000,179.99450684,0.00000000); //object(cj_airp_pillars) (13)
CreateDynamicObject(2774,1352.40002441,-1676.90002441,4.69999981,0.00000000,179.99450684,0.00000000); //object(cj_airp_pillars) (14)
CreateDynamicObject(975,1352.19921875,-1621.00000000,12.39999962,0.00000000,270.00000000,89.99450684); //object(columbiangate) (2)
CreateDynamicObject(975,1352.69995117,-1678.80004883,12.60000038,0.00000000,270.00000000,89.99450684); //object(columbiangate) (3)
CreateDynamicObject(2922,1388.80004883,-1631.40002441,14.19999981,0.00000000,0.00000000,0.00000000); //object(kmb_keypad) (1)
CreateDynamicObject(2922,1393.59960938,-1632.29980469,38.40000153,0.00000000,0.00000000,89.99597168); //object(kmb_keypad) (2)
CreateDynamicObject(4100,1375.77355957,-1679.40356445,15.30000019,0.00000000,0.00000000,317.99926758); //object(meshfence1_lan) (2)
CreateDynamicObject(4100,1375.77343750,-1679.40332031,12.52500820,0.00000000,0.00000000,317.99926758); //object(meshfence1_lan) (2)
gobiernogate = CreateDynamicObject(2990,1390.39941406,-1649.69921875,16.29999924,0.00000000,0.00000000,90.00000000); //object(wongs_gate) (1)
gobiernogate1 = CreateDynamicObject(16500,1391.29980469,-1629.89941406,12.52500343,0.00000000,90.00000000,0.00000000); //object(cn2_savgardr1_) (1)
//FBI Exterior
CreateDynamicObject(3439,332.08187866,-1529.53442383,37.02546692,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,341.40625000,-1516.39941406,37.02957916,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(4003,331.78771973,-1517.19641113,45.05106354,0.00000000,0.00000000,230.00000000); //object(lacityhalltrans_lan) (1)
CreateDynamicObject(1569,324.23699951,-1515.80017090,35.03250885,0.00000000,0.00000000,52.00000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,326.08874512,-1513.44812012,35.03250885,0.00000000,0.00000000,231.49829102); //object(adam_v_door) (2)
CreateDynamicObject(3433,326.12500000,-1515.38476562,38.28454208,0.00000000,0.00000000,141.49841309); //object(htlcnpy01_lvs) (4)
CreateDynamicObject(1361,326.86715698,-1513.38122559,35.77585220,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (1)
CreateDynamicObject(1361,324.32687378,-1516.54394531,35.77585220,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (2)
CreateDynamicObject(1215,326.85195923,-1513.34582520,36.33979034,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,324.35073853,-1516.53479004,36.33979034,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(3115,320.04174805,-1508.22338867,76.42503357,0.00000000,0.00000000,322.00000000); //object(carrier_lift1_sfse) (1)
CreateDynamicObject(4638,307.87362671,-1508.37023926,78.45610809,0.00000000,0.00000000,52.00000000); //object(paypark_lan01) (1)
CreateDynamicObject(3877,322.47674561,-1521.57324219,78.37759399,0.00000000,0.00000000,322.00000000); //object(sf_rooflite) (1)
CreateDynamicObject(3877,317.59277344,-1494.85351562,78.40345764,0.00000000,0.00000000,321.99829102); //object(sf_rooflite) (2)
CreateDynamicObject(3877,333.58984375,-1507.36132812,78.37911987,0.00000000,0.00000000,321.99829102); //object(sf_rooflite) (3)
CreateDynamicObject(3934,320.10107422,-1508.41491699,76.73970795,0.00000000,0.00000000,322.00000000); //object(helipad01) (1)
// ¿?
CreateDynamicObject(1569, 2294, 2492.92, 2.29, 0, 0, 90);
CreateDynamicObject(1569, 2294, 2492.92, 4.8, 0, 0, 90);
//Campo de Entrenamiento de SAPD
CreateDynamicObject(14700,217.27461243,1278.90893555,1059.52526855,0.00000000,0.00000000,0.00000000); //object(int2smsf01_int01)(1)
CreateDynamicObject(1535,216.49923706,1274.77746582,1058.03503418,0.00000000,0.00000000,0.00000000); //object(gen_doorext14)(1)
CreateDynamicObject(2313,209.82182312,1280.35266113,1058.02526855,0.00000000,0.00000000,130.00000000); //object(cj_tv_table1)(1)
CreateDynamicObject(1752,209.06710815,1280.72155762,1058.52502441,0.00000000,0.00000000,130.00000000); //object(swank_tv_3)(1)
CreateDynamicObject(2344,209.74432373,1280.48876953,1058.53515625,0.00000000,0.00000000,0.00000000); //object(cj_remote)(1)
CreateDynamicObject(2114,216.95445251,1287.68640137,1058.25512695,0.00000000,0.00000000,0.00000000); //object(basketball)(1)
CreateDynamicObject(1741,209.94746399,1283.68017578,1058.03332520,0.00000000,0.00000000,90.00000000); //object(low_cabinet_1)(1)
CreateDynamicObject(1839,208.84902954,1284.16491699,1059.18334961,0.00000000,0.00000000,180.00000000); //object(k_hifi_1)(1)
CreateDynamicObject(2028,209.91929626,1281.49743652,1058.11669922,0.00000000,0.00000000,150.00000000); //object(swank_console)(1)
CreateDynamicObject(2232,209.19935608,1287.25427246,1058.63061523,0.00000000,0.00000000,50.00000000); //object(med_speaker_4)(1)
CreateDynamicObject(2232,216.02755737,1287.30261230,1058.63061523,0.00000000,0.00000000,310.00122070); //object(med_speaker_4)(2)
CreateDynamicObject(1796,220.30661011,1287.01818848,1058.02526855,0.00000000,0.00000000,270.00000000); //object(low_bed_4)(1)
CreateDynamicObject(14556,217.62779236,1288.27038574,1059.54785156,0.00000000,0.00000000,270.00000000); //object(zerowardrobe)(1)
CreateDynamicObject(2390,216.71415710,1288.08508301,1060.04431152,0.00000000,0.00000000,90.00000000); //object(cj_4way_clothes)(1)
CreateDynamicObject(2389,216.71337891,1288.61621094,1060.09216309,0.00000000,0.00000000,90.00000000); //object(cj_4_sweaters)(1)
CreateDynamicObject(2397,216.71261597,1289.14111328,1060.04858398,0.00000000,0.00000000,90.00000000); //object(cj_trackies_dark)(1)
CreateDynamicObject(2399,216.71386719,1288.28576660,1059.12512207,0.00000000,0.00000000,90.00000000); //object(cj_4_s_sweater_2)(1)
CreateDynamicObject(2398,216.71293640,1288.91760254,1059.13244629,0.00000000,0.00000000,90.00000000); //object(cj_trackies_light)(1)
CreateDynamicObject(2705,217.22317505,1289.34252930,1059.42626953,0.00000000,0.00000000,0.00000000); //object(cj_hoodie_04)(1)
CreateDynamicObject(2704,217.08239746,1287.51110840,1059.42626953,0.00000000,0.00000000,180.00000000); //object(cj_hoodie_3)(1)
CreateDynamicObject(2654,217.08201599,1288.63464355,1058.32312012,0.00000000,0.00000000,0.00000000); //object(cj_shoe_box)(1)
CreateDynamicObject(1529,216.56367493,1285.46350098,1059.77526855,0.00000000,0.00000000,0.00000000); //object(tag_temple)(1)
CreateDynamicObject(2514,222.09709167,1282.78015137,1058.02648926,0.00000000,0.00000000,0.00000000); //object(cj_toilet1)(1)
CreateDynamicObject(1494,222.39762878,1279.16894531,1058.03125000,0.00000000,0.00000000,0.00000000); //object(gen_doorint03)(1)
CreateDynamicObject(1494,220.10760498,1280.44799805,1058.03356934,0.00000000,0.00000000,90.00000000); //object(gen_doorint03)(2)
CreateDynamicObject(1494,217.97439575,1284.33496094,1058.05517578,0.00000000,0.00000000,0.00000000); //object(gen_doorint03)(3)
CreateDynamicObject(1494,216.66673279,1282.03442383,1058.02526855,0.00000000,0.00000000,90.00000000); //object(gen_doorint03)(4)
CreateDynamicObject(2334,209.02296448,1278.53906250,1058.03271484,0.00000000,0.00000000,0.00000000); //object(cj_kitch1_m)(1)
CreateDynamicObject(2336,210.00914001,1278.53552246,1058.03247070,0.00000000,0.00000000,0.00000000); //object(cj_kitch1_sink)(1)
CreateDynamicObject(2337,212.00039673,1278.53332520,1058.03588867,0.00000000,0.00000000,0.00000000); //object(cj_kitch1_washer)(1)
CreateDynamicObject(2518,220.47747803,1282.68835449,1058.32653809,0.00000000,0.00000000,0.00000000); //object(cj_b_sink2)(1)
CreateDynamicObject(2519,223.66102600,1281.48742676,1058.02648926,0.00000000,0.00000000,90.00000000); //object(cj_bath2)(1)
CreateDynamicObject(2226,209.23408508,1278.72326660,1059.09228516,0.00000000,0.00000000,0.00000000); //object(low_hi_fi_3)(1)
CreateDynamicObject(1486,209.95878601,1278.80224609,1059.23535156,0.00000000,0.00000000,0.00000000); //object(dyn_beer_1)(1)
CreateDynamicObject(1512,210.19105530,1278.65246582,1059.28796387,0.00000000,0.00000000,0.00000000); //object(dyn_wine_03)(1)
CreateDynamicObject(1520,209.82179260,1278.52001953,1059.09045410,0.00000000,0.00000000,0.00000000); //object(dyn_wine_bounce)(1)
CreateDynamicObject(1665,210.01005554,1278.62683105,1059.10095215,0.00000000,0.00000000,0.00000000); //object(propashtray1)(1)
CreateDynamicObject(1950,211.65641785,1278.83349609,1059.28088379,0.00000000,0.00000000,0.00000000); //object(kb_beer)(1)
CreateDynamicObject(1668,211.80738831,1278.65148926,1059.25952148,0.00000000,0.00000000,0.00000000); //object(propvodkabotl1)(1)
CreateDynamicObject(1432,209.99845886,1275.98791504,1058.03271484,0.00000000,0.00000000,0.00000000); //object(dyn_table_2)(1)
CreateDynamicObject(2837,209.89578247,1275.78210449,1058.64807129,0.00000000,0.00000000,0.00000000); //object(gb_takeaway02)(1)
CreateDynamicObject(2768,209.98265076,1276.40100098,1058.69042969,0.00000000,0.00000000,0.00000000); //object(cj_cb_burg)(1)
CreateDynamicObject(1486,209.96511841,1276.12585449,1058.79296875,0.00000000,0.00000000,0.00000000); //object(dyn_beer_1)(2)
CreateDynamicObject(1517,210.28862000,1276.05566406,1058.84777832,0.00000000,0.00000000,0.00000000); //object(dyn_wine_break)(1)
CreateDynamicObject(1543,210.13034058,1275.52722168,1058.64807129,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(1)
CreateDynamicObject(1544,210.30041504,1276.32580566,1058.64807129,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_1)(1)
CreateDynamicObject(1485,210.38171387,1276.21362305,1058.64807129,0.00000000,0.00000000,0.00000000); //object(cj_ciggy)(1)
CreateDynamicObject(1665,210.13696289,1276.09985352,1058.65856934,0.00000000,0.00000000,0.00000000); //object(propashtray1)(2)
CreateDynamicObject(1712,211.94508362,1287.42480469,1058.02526855,0.00000000,0.00000000,0.00000000); //object(kb_couch05)(1)
CreateDynamicObject(1711,215.13133240,1281.23852539,1058.02893066,0.00000000,0.00000000,220.00000000); //object(kb_chair01)(1)
CreateDynamicObject(2855,215.24818420,1279.48059082,1059.13464355,0.00000000,0.00000000,0.00000000); //object(gb_bedmags05)(1)
CreateDynamicObject(2826,214.84992981,1279.39489746,1059.13464355,0.00000000,0.00000000,0.00000000); //object(gb_novels04)(1)
CreateDynamicObject(2844,222.21261597,1285.07324219,1058.03271484,0.00000000,0.00000000,0.00000000); //object(gb_bedclothes03)(1)
CreateDynamicObject(2845,221.68145752,1288.21289062,1058.02526855,0.00000000,0.00000000,0.00000000); //object(gb_bedclothes04)(1)
CreateDynamicObject(15028,221.63931274,1287.88842773,1058.17761230,0.00000000,0.00000000,0.00000000); //object(genmotel2sh_sv)(1)
CreateDynamicObject(1529,223.72531128,1286.97705078,1060.06408691,0.00000000,0.00000000,0.00000000); //object(tag_temple)(2)
CreateDynamicObject(1768,224.29664612,1274.55346680,1058.02416992,0.00000000,0.00000000,180.00000000); //object(low_couch_3)(1)
CreateDynamicObject(2346,220.65817261,1278.02294922,1058.02416992,0.00000000,0.00000000,40.00000000); //object(cj_hifi_table)(1)
CreateDynamicObject(1786,220.85505676,1278.37231445,1058.52050781,0.00000000,0.00000000,40.00000000); //object(swank_tv_4)(1)
CreateDynamicObject(1768,225.57792664,1277.65795898,1058.02416992,0.00000000,0.00000000,270.00000000); //object(low_couch_3)(2)
CreateDynamicObject(1529,226.15275574,1276.63073730,1060.01940918,0.00000000,0.00000000,0.00000000); //object(tag_temple)(3)
CreateDynamicObject(980,1067.25402832,1357.95312500,12.45134926,0.00000000,0.00000000,0.00000000); //object(airportgate)(1)
CreateDynamicObject(14408,1032.06738281,1256.96679688,1814.11389160,0.00000000,0.00000000,0.00000000); //object(carter-floors04)(1)
CreateDynamicObject(14412,1085.99316406,1252.99414062,1816.29663086,0.00000000,0.00000000,0.00000000); //object(carter_drugfloor)(1)
CreateDynamicObject(1649,1042.01757812,1256.65527344,1806.18286133,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1041.89660645,1256.87927246,1805.68286133,0.00000000,0.00000000,270.00000000); //object(wglasssmash)(2)
CreateDynamicObject(1649,1042.01770020,1264.75781250,1805.68286133,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(3)
CreateDynamicObject(1649,1041.91711426,1264.78955078,1805.68286133,0.00000000,0.00000000,269.99450684); //object(wglasssmash)(4)
CreateDynamicObject(14409,1019.60839844,1237.17285156,1801.62536621,0.00000000,0.00000000,0.00000000); //object(carter-stairs02)(1)
CreateDynamicObject(14409,1051.82324219,1252.73144531,1807.93701172,0.00000000,0.00000000,0.00000000); //object(carter-stairs02)(2)
CreateDynamicObject(14438,1081.48400879,1251.52807617,1816.19848633,0.00000000,0.00000000,0.00000000); //object(carter-light04)(1)
CreateDynamicObject(3851,1041.88940430,1261.80383301,1813.89514160,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(1)
CreateDynamicObject(3851,1041.89538574,1250.72460938,1813.89514160,0.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(2)
CreateDynamicObject(3851,1062.85937500,1258.83496094,1813.76538086,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(3)
CreateDynamicObject(3851,1062.81323242,1254.93188477,1813.76538086,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(4)
CreateDynamicObject(3851,1062.79199219,1250.81738281,1813.76538086,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(5)
CreateDynamicObject(3851,1062.83654785,1246.87292480,1813.76538086,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(6)
CreateDynamicObject(14438,1019.76062012,1250.07116699,1816.01574707,0.00000000,0.00000000,0.00000000); //object(carter-light04)(2)
CreateDynamicObject(5422,1037.93188477,1270.69458008,1806.78247070,0.00000000,0.00000000,90.00000000); //object(laespraydoor1)(1)
CreateDynamicObject(8613,1012.80468750,1249.00781250,1807.54162598,0.00000000,0.00000000,179.99450684); //object(vgssstairs03_lvs)(1)
CreateDynamicObject(16501,1018.80560303,1246.59912109,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(1)
CreateDynamicObject(14438,1019.17675781,1264.25097656,1816.01574707,0.00000000,0.00000000,0.00000000); //object(carter-light04)(4)
CreateDynamicObject(16501,1018.80755615,1250.15429688,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(2)
CreateDynamicObject(16501,1015.35937500,1253.58007812,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(3)
CreateDynamicObject(16501,1007.02423096,1246.03552246,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(4)
CreateDynamicObject(16501,1007.02801514,1250.09643555,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(5)
CreateDynamicObject(16501,1013.06414795,1253.59167480,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(6)
CreateDynamicObject(16501,1013.28546143,1257.12292480,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(7)
CreateDynamicObject(16501,1013.33398438,1267.26464844,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(8)
CreateDynamicObject(16501,1016.78320312,1263.79785156,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(9)
CreateDynamicObject(16501,1016.75097656,1260.58007812,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(10)
CreateDynamicObject(16501,1025.29003906,1262.25097656,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(11)
CreateDynamicObject(16501,1025.28222656,1255.17968750,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(12)
CreateDynamicObject(16501,1025.29101562,1264.13281250,1806.97058105,0.00000000,0.00000000,0.00000000); //object(cn2_savgardr2_)(13)
CreateDynamicObject(3025,1014.45117188,1265.14843750,1808.36279297,0.00000000,0.00000000,90.00000000); //object(target_frame)(1)
CreateDynamicObject(3025,1014.56988525,1269.69238281,1808.36279297,0.00000000,0.00000000,90.00000000); //object(target_frame)(2)
CreateDynamicObject(3025,1014.42675781,1267.47265625,1808.36279297,0.00000000,0.00000000,90.00000000); //object(target_frame)(3)
CreateDynamicObject(3018,1014.43127441,1265.10180664,1808.41162109,0.00000000,0.00000000,90.00000000); //object(target_rleg)(1)
CreateDynamicObject(3019,1014.45349121,1265.10461426,1808.41821289,0.00000000,0.00000000,90.00000000); //object(target_lleg)(1)
CreateDynamicObject(3020,1014.49346924,1265.11071777,1808.35620117,0.00000000,0.00000000,90.00000000); //object(target_ltorso)(1)
CreateDynamicObject(3021,1014.38989258,1265.10095215,1808.41076660,0.00000000,0.00000000,90.00000000); //object(target_rtorso)(1)
CreateDynamicObject(3022,1014.39947510,1265.35852051,1808.55566406,0.00000000,0.00000000,90.00000000); //object(target_rarm)(1)
CreateDynamicObject(3023,1014.41833496,1265.09875488,1808.35119629,0.00000000,0.00000000,90.00000000); //object(target_larm)(1)
CreateDynamicObject(3024,1014.43872070,1265.20214844,1808.62255859,0.00000000,0.00000000,90.00000000); //object(target_head)(1)
CreateDynamicObject(3077,1011.52154541,1268.36791992,1804.77014160,0.00000000,0.00000000,300.00000000); //object(nf_blackboard)(1)
CreateDynamicObject(2051,931.03369141,1226.70092773,1805.27514648,0.00000000,0.00000000,0.00000000); //object(cj_target4)(1)
CreateDynamicObject(2055,1012.08203125,1267.28698730,1807.23266602,0.00000000,0.00000000,300.00000000); //object(cj_target5)(1)
CreateDynamicObject(3111,1035.33190918,1361.30822754,1801.65588379,0.00000000,0.00000000,0.00000000); //object(st_arch_plan)(1)
CreateDynamicObject(3111,1011.21423340,1268.86230469,1806.96154785,90.00000000,90.00000000,30.00000000); //object(st_arch_plan)(2)
CreateDynamicObject(1499,1020.25500488,1260.68676758,1804.77258301,0.00000000,0.00000000,90.00000000); //object(gen_doorint05)(1)
CreateDynamicObject(1499,1020.22186279,1263.69848633,1804.77014160,0.00000000,0.00000000,270.00000000); //object(gen_doorint05)(2)
CreateDynamicObject(3785,1005.77832031,1254.84484863,1807.02368164,0.00000000,0.00000000,0.00000000); //object(bulkheadlight)(1)
CreateDynamicObject(3785,1005.77832031,1258.62414551,1807.00622559,0.00000000,0.00000000,0.00000000); //object(bulkheadlight)(2)
CreateDynamicObject(18625,1013.43945312,1269.10351562,1882.07409668,0.00000000,0.00000000,0.00000000); //object(cs_landbit_48_a)(1)
CreateDynamicObject(1583,1014.40332031,1267.44335938,1805.77014160,0.00000000,0.00000000,90.00000000); //object(tar_gun2)(1)
CreateDynamicObject(1584,1014.56884766,1269.63781738,1805.77014160,0.00000000,0.00000000,90.00000000); //object(tar_gun1)(1)
CreateDynamicObject(1291,1019.66436768,1266.65417480,1805.18457031,0.00000000,0.00000000,90.00000000); //object(postbox1)(1)
CreateDynamicObject(1291,1019.66210938,1267.37805176,1805.18457031,0.00000000,0.00000000,90.00000000); //object(postbox1)(2)
CreateDynamicObject(1262,1024.69604492,1261.87219238,1808.30993652,0.00000000,0.00000000,90.00000000); //object(mtraffic4)(1)
CreateDynamicObject(7191,1021.98242188,1254.31835938,1810.94482422,0.00000000,90.00000000,0.00000000); //object(vegasnnewfence2b)(1)
CreateDynamicObject(983,1020.08728027,1248.21923828,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(1)
CreateDynamicObject(983,1020.07598877,1254.61022949,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(2)
CreateDynamicObject(983,1020.06976318,1261.01049805,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(3)
CreateDynamicObject(983,1023.79479980,1248.23742676,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(5)
CreateDynamicObject(983,1023.81378174,1254.67102051,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(6)
CreateDynamicObject(983,1023.80224609,1261.04699707,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(7)
CreateDynamicObject(983,1023.80963135,1265.84606934,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(8)
CreateDynamicObject(983,1007.67498779,1265.62756348,1811.80529785,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(9)
CreateDynamicObject(983,1007.66528320,1259.26586914,1811.80529785,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(10)
CreateDynamicObject(983,1007.65051270,1252.86010742,1811.80529785,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(11)
CreateDynamicObject(983,1007.64526367,1248.04357910,1811.80529785,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(12)
CreateDynamicObject(983,1016.79278564,1244.97460938,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(13)
CreateDynamicObject(983,1013.60156250,1244.97460938,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1030.54675293,1244.94738770,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(15)
CreateDynamicObject(983,1017.24914551,1268.82775879,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(16)
CreateDynamicObject(983,1010.86755371,1268.82470703,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(17)
CreateDynamicObject(983,1020.07897949,1265.81201172,1811.72570801,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(18)
CreateDynamicObject(983,1030.48791504,1268.79370117,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(19)
CreateDynamicObject(983,1027.28637695,1268.80371094,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(20)
CreateDynamicObject(983,1027.35009766,1244.94848633,1811.80529785,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(21)
CreateDynamicObject(983,1033.72705078,1241.73815918,1811.80529785,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(22)
CreateDynamicObject(983,1033.63012695,1272.01403809,1811.80529785,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(23)
CreateDynamicObject(11245,1065.91186523,1252.68151855,1814.33349609,0.00000000,0.00000000,0.00000000); //object(sfsefirehseflag)(1)
CreateDynamicObject(14438,1036.57080078,1257.45507812,1816.11303711,0.00000000,0.00000000,90.00000000); //object(carter-light04)(4)
CreateDynamicObject(3025,1014.45800781,1254.82910156,1808.36279297,0.00000000,0.00000000,90.00000000); //object(target_frame)(4)
CreateDynamicObject(3025,1014.53759766,1257.00842285,1808.36279297,0.00000000,0.00000000,90.00000000); //object(target_frame)(5)
CreateDynamicObject(3025,1014.55773926,1259.07385254,1808.36279297,0.00000000,0.00000000,90.00000000); //object(target_frame)(6)
CreateDynamicObject(1588,1014.46270752,1257.01513672,1806.77014160,0.00000000,0.00000000,0.00000000); //object(tar_top)(1)
CreateDynamicObject(1590,1014.45367432,1256.99829102,1806.77014160,0.00000000,0.00000000,90.00000000); //object(tar_upleft)(1)
CreateDynamicObject(1589,1014.36846924,1256.99816895,1806.77014160,0.00000000,0.00000000,90.00000000); //object(tar_upright)(1)
CreateDynamicObject(1591,1014.33441162,1257.00671387,1806.80065918,0.00000000,0.00000000,90.00000000); //object(tar_downleft)(1)
CreateDynamicObject(1592,1014.40777588,1257.00927734,1806.80065918,0.00000000,0.00000000,90.00000000); //object(tar_downright)(1)
CreateDynamicObject(1584,1014.53808594,1259.07714844,1805.77014160,0.00000000,0.00000000,90.00000000); //object(tar_gun1)(2)
CreateDynamicObject(1583,1014.48254395,1254.80957031,1805.77014160,0.00000000,0.00000000,90.00000000); //object(tar_gun2)(2)
CreateDynamicObject(3800,1018.91870117,1256.85742188,1804.77014160,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs)(1)
CreateDynamicObject(3800,1018.91455078,1257.92932129,1804.77014160,0.00000000,0.00000000,0.00000000); //object(acbox4_sfs)(2)
CreateDynamicObject(16501,1022.14398193,1251.99255371,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(12)
CreateDynamicObject(16770,1034.02917480,1270.72460938,1806.36071777,0.00000000,0.00000000,270.00000000); //object(des_gunbldg01)(1)
CreateDynamicObject(3659,1043.36364746,1265.80822754,1805.78088379,0.00000000,0.00000000,0.00000000); //object(airfinfoa_las)(4)
CreateDynamicObject(3659,1044.21740723,1267.16772461,1805.78088379,0.00000000,0.00000000,90.00000000); //object(airfinfoa_las)(9)
CreateDynamicObject(3659,1044.23095703,1267.02990723,1807.80688477,0.00000000,0.00000000,90.00000000); //object(airfinfoa_las)(10)
CreateDynamicObject(3025,1041.00915527,1258.86694336,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(7)
CreateDynamicObject(3025,1039.63537598,1260.91979980,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(8)
CreateDynamicObject(3025,1035.50952148,1255.95532227,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(9)
CreateDynamicObject(3025,1036.93920898,1259.54516602,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(10)
CreateDynamicObject(3025,1038.36706543,1258.12121582,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(11)
CreateDynamicObject(3025,1034.01245117,1260.36596680,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(12)
CreateDynamicObject(3025,1032.34350586,1255.27636719,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(13)
CreateDynamicObject(3025,1030.81152344,1258.20153809,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(14)
CreateDynamicObject(16501,1038.35107422,1250.94262695,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(10)
CreateDynamicObject(16501,1031.76794434,1250.92065430,1806.97058105,0.00000000,0.00000000,90.00000000); //object(cn2_savgardr2_)(10)
CreateDynamicObject(3659,1043.34008789,1265.80639648,1807.80688477,0.00000000,0.00000000,0.00000000); //object(airfinfoa_las)(4)
CreateDynamicObject(3659,1043.39501953,1268.52893066,1805.78088379,0.00000000,0.00000000,0.00000000); //object(airfinfoa_las)(4)
CreateDynamicObject(3659,1043.35571289,1268.52807617,1807.80688477,0.00000000,0.00000000,0.00000000); //object(airfinfoa_las)(4)
CreateDynamicObject(3025,1029.33544922,1256.31628418,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(13)
CreateDynamicObject(3025,1028.07653809,1261.66015625,1808.36279297,0.00000000,0.00000000,0.00000000); //object(target_frame)(13)
CreateDynamicObject(1584,1040.95605469,1259.02990723,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(3)
CreateDynamicObject(1583,1039.59313965,1261.06542969,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(3)
CreateDynamicObject(1585,1038.32287598,1258.27124023,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_civ2)(1)
CreateDynamicObject(1583,1036.85058594,1259.68847656,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(4)
CreateDynamicObject(1584,1035.41284180,1256.15380859,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(4)
CreateDynamicObject(1585,1033.85778809,1260.48950195,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_civ2)(2)
CreateDynamicObject(1584,1032.30236816,1255.44372559,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(5)
CreateDynamicObject(1583,1030.75512695,1258.33544922,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(5)
CreateDynamicObject(1584,1029.26477051,1256.52685547,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(6)
CreateDynamicObject(1585,1027.95678711,1261.82434082,1805.77014160,0.00000000,0.00000000,0.00000000); //object(tar_civ2)(3)
CreateDynamicObject(1614,1041.77832031,1248.87463379,1808.26965332,0.00000000,0.00000000,0.00000000); //object(nt_alarm1_01)(1)
CreateDynamicObject(1615,1062.71191406,1241.40356445,1814.58288574,0.00000000,0.00000000,0.00000000); //object(nt_alarm2_01)(1)
CreateDynamicObject(14410,1112.13208008,1252.09692383,1803.76757812,0.00000000,0.00000000,0.00000000); //object(carter-stairs03)(1)
CreateDynamicObject(3851,1117.63391113,1259.28955078,1809.85131836,0.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx)(7)
CreateDynamicObject(3799,1043.56188965,1253.45800781,1804.47009277,0.00000000,0.00000000,0.00000000); //object(acbox2_sfs)(1)
CreateDynamicObject(3798,1048.35937500,1257.80200195,1804.77014160,0.00000000,0.00000000,0.00000000); //object(acbox3_sfs)(1)
CreateDynamicObject(1584,1044.16174316,1265.83886719,1808.82214355,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(7)
CreateDynamicObject(1583,1047.65246582,1270.72485352,1808.10705566,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(6)
CreateDynamicObject(1584,1045.45129395,1270.72485352,1806.42932129,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(8)
CreateDynamicObject(1584,1042.19238281,1245.00439453,1814.13537598,0.00000000,0.00000000,90.00000000); //object(tar_gun1)(2)
CreateDynamicObject(1583,1042.19238281,1247.91760254,1813.03100586,0.00000000,0.00000000,90.00000000); //object(tar_gun2)(1)
CreateDynamicObject(3798,1048.58020020,1249.37365723,1811.12170410,0.00000000,0.00000000,0.00000000); //object(acbox3_sfs)(2)
CreateDynamicObject(1654,1053.20996094,1269.41699219,1812.44030762,0.00000000,0.00000000,0.00000000); //object(dynamite)(1)
CreateDynamicObject(1217,1053.50927734,1269.55615234,1811.54309082,0.00000000,0.00000000,0.00000000); //object(barrel2)(1)
CreateDynamicObject(1218,1052.77966309,1270.03967285,1811.61340332,0.00000000,0.00000000,0.00000000); //object(barrel1)(1)
CreateDynamicObject(1222,1053.16320801,1263.92675781,1811.59777832,0.00000000,0.00000000,0.00000000); //object(barrel3)(1)
CreateDynamicObject(3057,1053.50000000,1268.41906738,1811.50769043,0.00000000,0.00000000,0.00000000); //object(kb_barrel_exp)(1)
CreateDynamicObject(2894,1004.65319824,1258.94567871,1805.66857910,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook)(1)
CreateDynamicObject(2919,1051.50781250,1270.14147949,1811.78833008,0.00000000,0.00000000,0.00000000); //object(kmb_holdall)(1)
CreateDynamicObject(1252,1052.63269043,1269.25012207,1812.09228516,0.00000000,0.00000000,0.00000000); //object(barrelexpos)(1)
CreateDynamicObject(1318,1041.77832031,1248.92858887,1809.97326660,0.00000000,0.00000000,0.00000000); //object(arrow)(1)
CreateDynamicObject(1318,1053.87988281,1245.07080078,1814.42529297,0.00000000,0.00000000,0.00000000); //object(arrow)(2)
CreateDynamicObject(1318,1005.27832031,1256.72460938,1807.97509766,0.00000000,0.00000000,0.00000000); //object(arrow)(3)
CreateDynamicObject(1318,1103.20825195,1245.17211914,1810.11596680,0.00000000,0.00000000,0.00000000); //object(arrow)(4)
CreateDynamicObject(1318,1110.19726562,1241.11437988,1803.88366699,0.00000000,0.00000000,0.00000000); //object(arrow)(5)
CreateDynamicObject(3798,1048.44445801,1254.98608398,1811.12170410,0.00000000,0.00000000,0.00000000); //object(acbox3_sfs)(3)
CreateDynamicObject(3796,1044.69885254,1268.20910645,1811.12170410,0.00000000,0.00000000,0.00000000); //object(acbox1_sfs)(1)
CreateDynamicObject(1584,1043.55395508,1267.74267578,1811.22326660,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(10)
CreateDynamicObject(1583,1044.25964355,1268.69555664,1811.22326660,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(8)
CreateDynamicObject(1584,1045.83190918,1270.72485352,1813.84643555,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(11)
CreateDynamicObject(1583,1049.09045410,1263.46911621,1811.12170410,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(9)
CreateDynamicObject(1584,1046.78308105,1270.45410156,1811.12170410,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(12)
CreateDynamicObject(7191,1081.25317383,1257.22290039,1810.92761230,0.00000000,90.00000000,0.00000000); //object(vegasnnewfence2b)(1)
CreateDynamicObject(983,1079.39892578,1259.77587891,1811.70849609,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(4)
CreateDynamicObject(983,1079.40551758,1253.39904785,1811.70849609,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(24)
CreateDynamicObject(983,1079.42846680,1247.01428223,1811.70849609,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(25)
CreateDynamicObject(983,1083.17626953,1259.75561523,1811.70849609,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(26)
CreateDynamicObject(983,1083.17749023,1253.37231445,1811.70849609,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(27)
CreateDynamicObject(983,1083.19250488,1246.99987793,1811.70849609,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(28)
CreateDynamicObject(983,1066.39013672,1242.78894043,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1072.75195312,1242.77966309,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1075.94567871,1242.75988770,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1070.51196289,1263.09448242,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1075.31079102,1263.08496094,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1096.05590820,1263.07019043,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1089.67700195,1263.06201172,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1086.50598145,1263.03625488,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1095.97497559,1242.93933105,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1089.58532715,1242.91088867,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1086.40356445,1242.91748047,1811.80053711,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(14)
CreateDynamicObject(983,1099.25878906,1259.87780762,1811.80053711,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(40)
CreateDynamicObject(983,1099.27575684,1253.49426270,1811.80053711,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(41)
CreateDynamicObject(983,1099.29638672,1247.09643555,1811.80053711,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(42)
CreateDynamicObject(14416,1065.28515625,1259.96655273,1807.85290527,0.00000000,0.00000000,0.00000000); //object(carter-stairs07)(1)
CreateDynamicObject(9589,1095.45239258,1250.17468262,1809.86938477,0.00000000,0.00000000,0.00000000); //object(frght_boxes08)(1)
CreateDynamicObject(1584,1105.14526367,1266.97070312,1809.68005371,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(13)
CreateDynamicObject(1583,1095.00000000,1250.22802734,1812.79235840,0.00000000,0.00000000,90.00000000); //object(tar_gun2)(1)
CreateDynamicObject(1583,1094.16394043,1257.75549316,1806.95288086,0.00000000,0.00000000,90.00000000); //object(tar_gun2)(1)
CreateDynamicObject(1583,1082.85498047,1249.00000000,1806.95288086,0.00000000,0.00000000,90.00000000); //object(tar_gun2)(1)
CreateDynamicObject(1584,1095.47985840,1251.40527344,1809.95288086,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(14)
CreateDynamicObject(1616,1103.21191406,1240.23657227,1816.06909180,0.00000000,0.00000000,0.00000000); //object(nt_securecam1_01)(1)
CreateDynamicObject(1616,1041.77832031,1243.93554688,1815.90222168,0.00000000,0.00000000,0.00000000); //object(nt_securecam1_01)(2)
CreateDynamicObject(1614,1109.71191406,1256.83288574,1810.44628906,180.00000000,0.00000000,0.00000000); //object(nt_alarm1_01)(2)
CreateDynamicObject(967,1104.48864746,1261.02294922,1806.95288086,0.00000000,0.00000000,270.00000000); //object(bar_gatebox01)(1)
CreateDynamicObject(1584,1105.29711914,1261.47961426,1806.95288086,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(15)
CreateDynamicObject(1583,1108.52258301,1266.97070312,1810.90954590,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(13)
CreateDynamicObject(1431,1108.63977051,1262.09973145,1807.50048828,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(1)
CreateDynamicObject(1685,1106.49572754,1264.87548828,1807.70288086,0.00000000,0.00000000,0.00000000); //object(blockpallet)(1)
CreateDynamicObject(1583,1106.34106445,1265.14270020,1808.45288086,0.00000000,0.00000000,0.00000000); //object(tar_gun2)(14)
CreateDynamicObject(1584,1108.07385254,1263.18078613,1806.95288086,0.00000000,0.00000000,0.00000000); //object(tar_gun1)(16)
CreateDynamicObject(1271,1109.36865234,1248.91638184,1807.30285645,0.00000000,0.00000000,0.00000000); //object(gunbox)(1)
CreateDynamicObject(964,1106.90588379,1249.63854980,1806.95288086,0.00000000,0.00000000,0.00000000); //object(cj_metal_crate)(1)
CreateDynamicObject(1569,1110.20739746,1239.72851562,1800.60131836,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(1)
CreateDynamicObject(1569,1110.20227051,1242.72668457,1800.61132812,0.00000000,0.00000000,270.00000000); //object(adam_v_door)(2)
/*GYM FENCES*/
CreateDynamicObject(997,2222.03759766,-1724.51440430,12.56250000,0.00000000,0.00000000,318.00000000); //object(lhouse_barrier3) (4)
CreateDynamicObject(997,2224.60229492,-1726.74780273,12.56248093,0.00000000,0.00000000,353.99926758); //object(lhouse_barrier3) (5)
CreateDynamicObject(997,2227.98657227,-1727.06042480,12.54687500,0.00000000,0.00000000,359.99597168); //object(lhouse_barrier3) (6)
CreateDynamicObject(997,2231.35937500,-1727.07556152,12.54687500,0.00000000,0.00000000,359.99450684); //object(lhouse_barrier3) (7)
CreateDynamicObject(997,2234.75170898,-1727.05432129,12.54687500,0.00000000,0.00000000,359.99450684); //object(lhouse_barrier3) (8)
CreateDynamicObject(997,2238.13330078,-1727.05114746,12.54687500,0.00000000,0.00000000,359.99450684); //object(lhouse_barrier3) (9)
CreateDynamicObject(997,2241.51562500,-1727.02880859,12.54687500,0.00000000,0.00000000,359.99450684); //object(lhouse_barrier3) (10)
CreateDynamicObject(997,2245.09936523,-1727.10620117,12.54687500,0.00000000,0.00000000,89.99450684); //object(lhouse_barrier3) (11)
CreateDynamicObject(997,2245.10205078,-1723.72290039,12.54687500,0.00000000,0.00000000,89.99450684); //object(lhouse_barrier3) (12)
CreateDynamicObject(997,2221.89672852,-1724.42663574,12.56250000,0.00000000,0.00000000,97.99450684); //object(lhouse_barrier3) (13)
CreateDynamicObject(997,2221.49975586,-1721.07861328,12.54973793,0.00000000,0.00000000,83.99255371); //object(lhouse_barrier3) (14)
CreateDynamicObject(997,2221.84814453,-1717.73120117,12.51132011,0.00000000,0.00000000,83.99047852); //object(lhouse_barrier3) (15)
CreateDynamicObject(997,2222.22924805,-1714.37670898,12.52777100,0.00000000,0.00000000,81.99047852); //object(lhouse_barrier3) (16)
CreateDynamicObject(997,2222.69628906,-1711.03369141,12.57920074,0.00000000,0.00000000,81.98547363); //object(lhouse_barrier3) (17)
CreateDynamicObject(997,2223.15771484,-1707.72033691,12.63017654,0.00000000,0.00000000,81.98547363); //object(lhouse_barrier3) (18)
CreateDynamicObject(997,2223.60131836,-1704.37365723,12.68166256,0.00000000,0.00000000,83.98547363); //object(lhouse_barrier3) (19)
CreateDynamicObject(997,2223.90234375,-1701.04443359,12.73288250,0.00000000,0.00000000,359.98498535); //object(lhouse_barrier3) (20)
CreateDynamicObject(997,2227.32348633,-1701.07043457,12.73248291,0.00000000,0.00000000,359.98352051); //object(lhouse_barrier3) (21)
/*PARK GYM AND CITY HALL*/
//CreateDynamicObject(4232,2257.50000000,-1727.50000000,2030.59997559,0.00000000,0.00000000,176.00000000); //object(carimp2_lan) (1)
//CreateDynamicObject(10010,1170.80004883,-1622.09997559,6601.50000000,0.00000000,0.00000000,0.00000000); //object(ugcarpark_sfe) (2)
CreateObject(4232,2257.50000000,-1727.50000000,2030.59997559,0.00000000,0.00000000,176.00000000); //object(carimp2_lan) (1) NOT STREAMED
CreateObject(10010,1170.80004883,-1622.09997559,6601.50000000,0.00000000,0.00000000,0.00000000); //object(ugcarpark_sfe) (1) NOT STREAMED
CreateDynamicObject(16773,1136.09997559,-1588.90002441,6605.89990234,0.00000000,0.00000000,0.00000000); //object(door_savhangr1) (1)
CreateDynamicObject(7891,1242.09997559,-1736.09997559,14.89999962,0.00000000,0.00000000,270.00000000); //object(vgwspry1) (3)
CreateDynamicObject(1215,1246.19995117,-1735.59997559,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,1238.09997559,-1735.40002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(4642,1236.59997559,-1737.30004883,14.30000019,0.00000000,0.00000000,90.75000000); //object(paypark_lan) (1)
CreateDynamicObject(7891,2281.19995117,-1721.59997559,14.19999981,0.00000000,0.00000000,270.00000000); //object(vgwspry1) (4)
CreateDynamicObject(4642,2285.00000000,-1720.80004883,14.19999981,0.00000000,0.00000000,90.00000000); //object(paypark_lan) (2)
CreateDynamicObject(16773,2246.00000000,-1707.50000000,2028.69995117,0.00000000,0.00000000,266.00000000); //object(door_savhangr1) (2)
CreateDynamicObject(16773,2247.00000000,-1692.90002441,2028.69995117,0.00000000,0.00000000,265.99548340); //object(door_savhangr1) (3)
CreateDynamicObject(16773,2248.00000000,-1678.40002441,2028.69995117,0.00000000,0.00000000,265.99548340); //object(door_savhangr1) (4)
CreateDynamicObject(16773,2235.89990234,-1765.80004883,2034.09997559,0.00000000,0.00000000,175.99548340); //object(door_savhangr1) (5)
// Parking SAPD
CreateDynamicObject(2957, 1581.03, -1677.83, 6.09,   0.00, 0.00, 89.76);
CreateObject(10010, 498.96, -1658.33, 9001.45,   0.00, 0.00, 3.88);
CreateObject(16773, 463.47, -1633.39, 9004.31,   0.00, 0.00, 0.00);
/* Punto Add*/
CreateDynamicObject(967, 2387.08, -2008.35, 12.55,   0.00, 0.00, 180.00);
CreateDynamicObject(1508, 2391.20, -2007.40, 14.21,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2294.02, -1118.62, 37.53,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2294.01, -1114.51, 37.53,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2294.01, -1110.38, 37.53,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2294.01, -1106.26, 37.53,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 2294.01, -1102.11, 37.53,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1940.88, -1775.05, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1940.88, -1779.19, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1940.88, -1770.94, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1940.89, -1766.82, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1942.43, -1779.09, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1942.43, -1774.95, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1942.43, -1770.83, 12.94,   0.00, 0.00, 90.00);
CreateDynamicObject(970, 1942.43, -1766.69, 12.94,   0.00, 0.00, 90.00);
// Memorial - Stairs To Roof
CreateDynamicObject(12950, 1215.8565673828, 306.17776489258, 19.985977172852, 0.000000, 0.000000, 334.06005859375); //
//-------------Crack Lab Fixes-------------//
CreateDynamicObject(7191,2338.39135742,-1182.56323242,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(1)
CreateDynamicObject(13656,2292.93872070,-1132.04724121,1017.29772949,0.00000000,0.00000000,0.00000000, -1, 5); //object(fuckknows)(1)
CreateDynamicObject(7191,2337.95458984,-1182.54309082,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(2)
CreateDynamicObject(7191,2338.43408203,-1182.39440918,1032.95129395,90.00000000,180.00000000,90.24850464, -1, 5); //object(vegasnnewfence2b)(3)
CreateDynamicObject(7191,2337.97314453,-1182.39111328,1032.95129395,90.00000000,179.99450684,90.24719238, -1, 5); //object(vegasnnewfence2b)(4)
CreateDynamicObject(7191,2328.80346680,-1180.43066406,1034.70544434,0.00000000,270.00000000,88.50006104, -1, 5); //object(vegasnnewfence2b)(5)
CreateDynamicObject(3055,2319.78198242,-1184.82641602,1032.36450195,63.75003052,269.99996948,178.5001220, -1, 5); //object(kmb_shutter)(1)
CreateDynamicObject(7191,2328.83715820,-1186.81262207,1030.70446777,0.00000000,90.74990845,359.99481201, -1, 5); //object(vegasnnewfence2b)(6)
CreateDynamicObject(7191,2326.84863281,-1187.03125000,1030.70446777,0.00000000,90.74707031,359.99450684, -1, 5); //object(vegasnnewfence2b)(8)
CreateDynamicObject(7191,2337.31689453,-1186.55639648,1030.70446777,0.00000000,90.74707031,359.99450684, -1, 5); //object(vegasnnewfence2b)(9)
CreateDynamicObject(7191,2339.06689453,-1186.13159180,1030.70446777,0.00000000,91.24694824,359.99453735, -1, 5); //object(vegasnnewfence2b)(10)
CreateDynamicObject(7191,2338.39062500,-1182.56250000,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(11)
CreateDynamicObject(7191,2337.95947266,-1179.38879395,1032.95129395,90.00000000,180.00000000,270.00000000, -1, 5); //object(vegasnnewfence2b)(12)
CreateDynamicObject(7191,2338.38476562,-1179.43066406,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(13)
CreateDynamicObject(7191,2337.96630859,-1179.23559570,1032.95129395,90.00000000,179.99450684,90.24719238, -1, 5); //object(vegasnnewfence2b)(14)
//SAPD EXT BACK
CreateDynamicObject(1508,1603.90002441,-1646.30004883,14.19999981,0.00000000,0.00000000,0.00000000); //object(dyn_garage_door) (1)
CreateDynamicObject(1215,1605.40002441,-1643.00000000,13.30000019,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,1607.50000000,-1643.19995117,13.30000019,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,1609.30004883,-1642.90002441,13.30000019,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1216,1607.69995117,-1638.40002441,13.39999962,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (3)
CreateDynamicObject(1216,1606.90002441,-1638.40002441,13.39999962,0.00000000,0.00000000,0.00000000); //object(phonebooth1) (4)
// County SAPD Interior 5
CreateDynamicObject(1536, 321.43, 301.91, 998.12,   0.00, 0.02, 0.00);
CreateDynamicObject(19302, 320.90, 313.02, 999.41,   0.00, 0.00, -90.24);
CreateDynamicObject(19302, 320.89, 317.10, 999.41,   0.00, 0.00, -90.24);
CreateDynamicObject(19303, 320.90, 311.34, 999.40,   0.00, 0.00, -89.94);
CreateDynamicObject(19303, 320.90, 315.33, 999.40,   0.00, 0.00, -89.94);
CreateDynamicObject(19304, 320.89, 312.22, 1001.25,   0.00, 0.00, 90.24);
CreateDynamicObject(19304, 320.89, 316.23, 1001.25,   0.00, 0.00, 90.24);

// SAPD NEW VERSION 2013
//Doors
LSPDDoor1 = CreateDynamicObject(1536, 1468.57507, -1758.27209, 3284.30005,   0.00000, 0.00000, 180.00000);
LSPDDoor2 = CreateDynamicObject(1536, 1481.38684, -1758.28503, 3284.30005,   0.00000, 0.00000, 180.00000);
//Buttons
LSPDDoor1ButtonEx = CreateButton(1466.71057, -1758.25513, 3285.88208, 179.78889);
LSPDDoor1ButtonInt = CreateButton(1466.77942, -1758.30713, 3285.88208, 0.31212);

LSPDDoor2ButtonEx = CreateButton(1479.61255, -1758.30884, 3285.88208, 359.79349);
LSPDDoor2ButtonInt = CreateButton(1479.56689, -1758.26489, 3285.88208, 179.78889);
//SAPD TEST
CreateDynamicObject(19379, 1469.39941, -1754.00000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1479.00000, -1754.00000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(1536, 1475.69995, -1748.86304, 3284.30005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1536, 1472.69922, -1748.89941, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 1464.50000, -1753.59961, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 1483.79980, -1753.59961, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18070, 1474.19922, -1755.89941, 3284.80005,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(19379, 1479.00000, -1764.50000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1469.39941, -1764.50000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(18070, 1474.19995, -1755.80005, 3287.10010,   0.00000, 179.99451, 179.99451);
CreateDynamicObject(19435, 1477.80103, -1756.59961, 3284.60010,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1477.80078, -1755.09961, 3284.60010,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1476.13904, -1753.40002, 3284.60010,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1472.69995, -1753.40002, 3284.60010,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1472.26074, -1753.40039, 3284.60010,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1470.59961, -1755.09961, 3284.60010,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1470.59961, -1756.59961, 3284.60010,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1479.00000, -1754.00000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1469.40002, -1754.00000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, 1477.80103, -1756.59961, 3287.30005,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1477.79980, -1755.09961, 3287.30005,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1476.09961, -1753.39941, 3287.30005,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1472.69922, -1753.39941, 3287.30005,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1472.30005, -1753.40100, 3287.30005,   90.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, 1470.59961, -1755.09961, 3287.30005,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, 1470.60095, -1756.59961, 3287.30005,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1459.79980, -1764.50000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1488.59961, -1764.50000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19388, 1483.79980, -1763.19922, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1464.50000, -1760.00000, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 1465.39941, -1758.29980, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19388, 1467.80005, -1758.30005, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1471.00000, -1758.30005, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1477.39941, -1758.29980, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 1480.59961, -1758.29980, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1483.79980, -1766.39941, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1483.79980, -1760.00000, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 1464.50000, -1763.19922, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1464.50000, -1766.39941, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 1483.00000, -1768.00000, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1479.00000, -1769.51563, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1477.39941, -1768.00000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14416, 1474.09961, -1771.00000, 3284.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(19450, 1475.79980, -1772.72900, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 1472.50000, -1772.72852, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1479.00000, -1762.79980, 3287.70093,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1469.39941, -1762.79980, 3287.70093,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1477.29980, -1778.29980, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 1467.77197, -1773.00000, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1477.30005, -1768.00000, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1480.52698, -1773.00000, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1485.30005, -1777.90002, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 1463.00000, -1777.90002, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1480.50000, -1777.89941, 3291.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1470.90002, -1777.90002, 3291.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1461.29980, -1777.89941, 3291.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1470.90002, -1767.40002, 3291.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 1472.50000, -1768.09961, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 1475.80005, -1768.09998, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1467.69922, -1778.29980, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1486.90002, -1778.30005, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 1467.80005, -1782.69995, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1480.50000, -1782.69995, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19388, 1474.09998, -1782.69995, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19379, 1474.09961, -1788.79980, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 1478.79980, -1787.59961, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19450, 1469.39941, -1787.59961, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1474.09961, -1788.39941, 3291.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19431, 1483.00000, -1758.29980, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19431, 1474.09998, -1786.40002, 3289.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19431, 1474.81299, -1785.59998, 3289.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19388, 1477.19995, -1785.59998, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19431, 1474.09961, -1791.19922, 3289.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(19358, 1474.09961, -1788.79980, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19431, 1478.80005, -1793.19995, 3289.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(19388, 1474.19922, -1758.29980, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1485.48157, -1765.32288, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1485.40002, -1759.30005, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1487.00000, -1766.40002, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 1487.00000, -1763.19995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1487.00000, -1760.00000, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1498.19995, -1764.50000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1507.80005, -1764.50000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1488.59998, -1754.00000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1498.19995, -1754.00000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1507.80005, -1754.00000, 3284.19995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19447, 1487.09998, -1756.80005, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19385, 1487.09998, -1763.19995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1492.00000, -1769.69922, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19355, 1488.79980, -1761.50000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19355, 1488.80005, -1764.90002, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19385, 1492.00000, -1761.50000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19447, 1490.39941, -1756.59961, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19385, 1495.19922, -1761.50000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19385, 1498.39941, -1761.50000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19385, 1501.59998, -1761.50000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19447, 1493.59998, -1756.69995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1496.80005, -1756.59998, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1500.09998, -1756.59998, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1503.30005, -1756.69995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1503.29980, -1766.29980, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19385, 1492.00000, -1764.90002, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19385, 1495.19922, -1764.89941, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19385, 1498.40002, -1764.90002, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19385, 1501.59998, -1764.90002, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19447, 1487.09961, -1769.59961, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1501.59998, -1769.69995, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19447, 1490.40002, -1769.80005, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1493.59998, -1769.80005, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1496.79980, -1769.79980, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1500.00000, -1769.80005, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 1492.00000, -1757.09998, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19447, 1501.59961, -1757.09961, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19379, 1488.59961, -1764.50000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1498.19995, -1764.50000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1507.79980, -1764.50000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1507.80005, -1754.00000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1498.19995, -1754.00000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19379, 1488.59998, -1754.00000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19450, 1459.59998, -1759.19995, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1459.69922, -1768.00000, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1454.90002, -1763.19995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, 1459.80005, -1764.50000, 3287.69995,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(2008, 1474.69995, -1754.30005, 3284.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2008, 1472.59998, -1754.30005, 3284.48999,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2607, 1471.40002, -1755.90002, 3284.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1486.40002, -1759.90002, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2007, 1485.40002, -1759.90002, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2007, 1484.39941, -1759.89941, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2162, 1471.81006, -1758.09998, 3284.38501,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2606, 1473.19995, -1754.40002, 3287.00000,   6.50000, 0.00000, 0.00000);
CreateDynamicObject(2606, 1475.19995, -1754.40002, 3287.00000,   6.49841, 0.00000, 0.00000);
CreateDynamicObject(2162, 1476.69995, -1754.19995, 3284.38501,   0.00000, 0.00000, 312.74451);
CreateDynamicObject(1811, 1483.19995, -1752.40002, 3284.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1483.19922, -1753.19922, 3284.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1483.19995, -1754.00000, 3284.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1483.19995, -1754.80005, 3284.89990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2111, 1482.69995, -1750.90002, 3284.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2816, 1482.59998, -1751.19995, 3285.11011,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14401, 1453.30005, -1747.40002, 3284.60010,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14401, 1443.09961, -1773.59961, 3284.60010,   0.00000, 0.00000, 269.99451);
CreateDynamicObject(1502, 1464.43945, -1762.41504, 3284.23999,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14782, 1461.30005, -1759.69995, 3285.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14782, 1455.69995, -1760.00000, 3285.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2846, 1456.09998, -1760.59998, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 1474.15002, -1768.12500, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2007, 1463.00000, -1767.40002, 3284.30005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2007, 1462.00000, -1767.40002, 3284.30005,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2007, 1461.00000, -1767.40002, 3284.30005,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(2400, 1464.40002, -1764.59998, 3284.39990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2689, 1464.00000, -1765.09998, 3285.69995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2704, 1464.09998, -1765.69995, 3285.69995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1482.19995, -1769.51599, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14416, 1480.59998, -1772.80005, 3281.10010,   0.00000, 0.00000, 359.99451);
CreateDynamicObject(19358, 1482.19995, -1769.59998, 3282.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1482.19995, -1772.80005, 3282.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1482.19995, -1772.69995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1479.00000, -1769.59998, 3282.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1479.00000, -1772.80005, 3282.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1479.00000, -1772.69995, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14416, 1480.50000, -1779.09998, 3277.60010,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(19358, 1482.19995, -1776.00000, 3282.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1479.00000, -1776.00000, 3282.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1482.19995, -1775.90002, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1479.00000, -1775.90002, 3286.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1480.59961, -1777.50000, 3282.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1480.59998, -1777.50000, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19370, 1480.50000, -1769.59961, 3287.69995,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1480.50000, -1772.79980, 3287.69800,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19370, 1480.59961, -1776.00000, 3287.69800,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14416, 1480.50000, -1780.30005, 3277.60010,   0.00000, 0.00000, 359.98901);
CreateDynamicObject(1536, 1479.09998, -1777.43701, 3280.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1536, 1482.09998, -1777.40002, 3280.80005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1464.00000, -1777.80005, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1464.90002, -1777.80005, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1465.80005, -1777.80005, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1466.69995, -1777.80005, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1467.59998, -1777.80005, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1467.59998, -1776.09998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1466.69995, -1776.09998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1465.80005, -1776.09998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1464.90002, -1776.09998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1464.00000, -1776.09998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1467.59998, -1774.59998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1466.69995, -1774.59998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1465.90002, -1774.59998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1465.00000, -1774.59998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1464.09998, -1774.59998, 3288.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3077, 1466.80005, -1781.80005, 3287.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14532, 1464.09961, -1781.19922, 3288.80005,   0.00000, 0.00000, 349.99695);
CreateDynamicObject(19358, 1470.50000, -1774.69995, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19388, 1470.50000, -1777.90002, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19358, 1470.50000, -1781.09998, 3289.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2357, 1471.59961, -1787.69922, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 1513.09998, -1837.50000, 3216.69995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1714, 1471.59839, -1790.95898, 3287.80005,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1671, 1470.13562, -1788.92749, 3288.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1671, 1470.13977, -1787.69519, 3288.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1671, 1470.16028, -1786.50122, 3288.19995,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1671, 1473.04041, -1788.87939, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1473.06714, -1787.64014, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1473.04370, -1786.46130, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(14532, 1470.09961, -1791.59961, 3288.80005,   0.00000, 0.00000, 337.99438);
CreateDynamicObject(2186, 1476.59998, -1773.59998, 3287.80005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2165, 1479.19995, -1775.59998, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2165, 1479.30005, -1778.50000, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2165, 1479.40002, -1781.50000, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2165, 1482.30005, -1775.59998, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2165, 1482.40002, -1778.50000, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2165, 1482.50000, -1781.50000, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1671, 1483.19995, -1775.00000, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1480.19995, -1775.00000, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1483.30005, -1778.00000, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1483.50000, -1781.00000, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1480.40002, -1781.09998, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1671, 1480.19995, -1778.00000, 3288.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1471.19995, -1773.69995, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2007, 1471.19995, -1774.69995, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2007, 1471.19995, -1775.69995, 3287.80005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2166, 1471.90002, -1779.09998, 3287.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2165, 1472.90002, -1781.09998, 3287.80005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1714, 1471.69995, -1781.69995, 3287.80005,   0.00000, 0.00000, 89.99451);
CreateDynamicObject(1800, 1492.69995, -1760.80005, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1495.90002, -1760.80005, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1499.19995, -1760.80005, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1502.40002, -1760.80005, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1491.00000, -1770.59998, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1494.19995, -1770.50000, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1497.40002, -1770.50000, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1800, 1500.59998, -1770.59998, 3284.30005,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2738, 1500.59998, -1766.09998, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1497.30005, -1766.09998, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1494.09998, -1766.09998, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1490.90002, -1766.09998, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1491.00000, -1759.90002, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1494.09998, -1760.00000, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1497.30005, -1760.00000, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2738, 1500.59998, -1759.90002, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2524, 1500.69995, -1758.59998, 3284.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2524, 1497.40002, -1758.69995, 3284.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2524, 1494.19995, -1758.80005, 3284.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2524, 1491.00000, -1758.90002, 3284.30005,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2524, 1493.00000, -1767.59998, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2524, 1496.19995, -1767.59998, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2524, 1499.40002, -1767.59998, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2524, 1502.69995, -1767.59998, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1493.00000, -1760.59998, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1496.19995, -1760.50000, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1499.50000, -1760.40002, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1502.69995, -1760.30005, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1502.69995, -1766.30005, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1499.40002, -1766.30005, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1496.19995, -1766.30005, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2007, 1493.00000, -1766.30005, 3284.30005,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, 1467.59998, -1768.00098, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1811, 1472.30005, -1758.90002, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1471.50000, -1758.90002, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1470.69995, -1758.90002, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1811, 1469.90002, -1758.90002, 3284.89990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18608, 1473.50000, -1763.19995, 3288.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1452.09998, -1763.80005, 3288.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1474.80005, -1756.40002, 3288.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1470.90002, -1750.90002, 3288.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1474.69995, -1777.80005, 3292.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1464.09998, -1786.69995, 3292.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1483.89941, -1788.89941, 3292.19995,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(18608, 1492.80005, -1763.19995, 3288.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1886, 1465.09998, -1757.59998, 3287.69995,   8.49991, 0.25278, 139.71265);
CreateDynamicObject(1886, 1483.40002, -1757.80005, 3287.50000,   8.49792, 0.25269, 219.70764);
CreateDynamicObject(1886, 1502.69995, -1764.40002, 3287.80005,   12.49789, 0.25598, 243.68652);
CreateDynamicObject(1886, 1465.19922, -1767.50000, 3287.80005,   8.49792, 0.25269, 123.70056);
CreateDynamicObject(19431, 1469.40002, -1793.19995, 3289.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(19431, 1474.09961, -1792.79980, 3289.50000,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(19450, 1471.69995, -1793.50000, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19431, 1474.09998, -1793.50000, 3289.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19431, 1469.30005, -1793.50000, 3289.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 1476.45996, -1793.49878, 3289.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19431, 1478.90002, -1793.50000, 3289.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1482.19995, -1748.80005, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 1479.00000, -1748.80005, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1475.80005, -1748.80005, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19358, 1472.59998, -1748.80005, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, 1469.40002, -1748.80005, 3286.00000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19358, 1466.19995, -1748.80005, 3286.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1502, 1473.34351, -1782.71521, 3287.73511,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 1470.53394, -1778.64233, 3287.73511,   0.00000, 0.00000, 89.72512);
CreateDynamicObject(1502, 1473.45862, -1758.32239, 3284.28613,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1502, 1483.79248, -1762.41101, 3284.28662,   0.00000, 0.00000, 270.01318);
CreateDynamicObject(1536, 1477.98901, -1785.56555, 3287.78711,   0.00000, 0.00000, 180.01405);
CreateDynamicObject(19273, 1490.76208, -1761.52686, 3285.82251,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19273, 1493.63965, -1761.51208, 3285.78296,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19273, 1496.82996, -1761.51318, 3285.79321,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19273, 1500.00024, -1761.51135, 3285.74512,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19273, 1490.76782, -1764.87036, 3285.74512,   0.00000, 0.00000, 180.44632);
CreateDynamicObject(19273, 1493.67603, -1764.86890, 3285.74512,   0.00000, 0.00000, 180.44632);
CreateDynamicObject(19273, 1496.83948, -1764.86084, 3285.74512,   0.00000, 0.00000, 180.44632);
CreateDynamicObject(19273, 1500.18604, -1764.86938, 3285.74512,   0.00000, 0.00000, 180.44632);
CreateDynamicObject(19273, 1476.11829, -1785.58167, 3289.35278,   0.00000, 0.00000, 180.64687);
CreateDynamicObject(1536, 1482.88843, -1758.28772, 3284.30005,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(1536, 1470.08459, -1758.26404, 3284.30005,   0.00000, 0.00000, 179.99500);
CreateDynamicObject(2930, 1491.15002, -1761.50378, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1494.32520, -1761.50732, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1497.55640, -1761.49414, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1500.74524, -1761.51294, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1500.73499, -1764.83960, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1497.51416, -1764.84583, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1494.32617, -1764.85266, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(2930, 1491.11670, -1764.87439, 3286.87695,   0.00000, 0.00000, 90.43925);
CreateDynamicObject(19273, 1466.72998, -1758.25989, 3285.88208,   0.00000, 0.00000, 179.78889);
CreateDynamicObject(2930, 1491.14941, -1761.50293, 3289.46875,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1494.32520, -1761.50684, 3289.49658,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1497.55566, -1761.49414, 3289.50146,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1500.74512, -1761.51270, 3289.51172,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1491.11621, -1764.87402, 3289.50537,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1494.32617, -1764.85254, 3289.49268,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1497.51367, -1764.84570, 3289.50146,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(2930, 1500.73438, -1764.83887, 3289.50537,   0.00000, 0.00000, 90.43400);
CreateDynamicObject(19273, 1482.16443, -1776.74268, 3282.33423,   0.00000, 0.00000, 269.92017);
//ATM
CreateDynamicObject(2942, 664.33, -577.96, 15.96,   0.00, 0.00, 0.00);
CreateDynamicObject(2942, 665.59, -577.97, 15.96,   0.00, 0.00, 0.00);
//Casa
CreateDynamicObject(3640, 663.58, -616.37, 19.78,   0.00, 0.00, 539.58);
// Entrada
CreateDynamicObject(19425, 678.42, -710.08, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(19425, 681.70, -710.07, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(19425, 685.02, -710.08, 15.11,   0.00, 0.00, 0.00);
CreateDynamicObject(4639, 675.63, -708.88, 16.89,   0.00, 0.00, -91.26);
CreateDynamicObject(3578, 676.32, -716.05, 14.67,   0.00, 0.00, -87.90);
CreateDynamicObject(3578, 676.69, -726.13, 14.67,   0.00, 0.00, -87.90);
CreateDynamicObject(3578, 671.53, -728.59, 14.67,   0.00, 0.00, -2.40);
CreateDynamicObject(970, 676.23, -713.61, 15.95,   0.00, 0.00, 92.34);
CreateDynamicObject(970, 676.42, -717.77, 15.95,   0.00, 0.00, 92.34);
CreateDynamicObject(970, 676.62, -721.92, 15.95,   0.00, 0.00, 92.34);
CreateDynamicObject(970, 676.81, -726.06, 15.95,   0.00, 0.00, 92.34);
CreateDynamicObject(970, 674.16, -728.69, 15.95,   0.00, 0.00, -3.24);
CreateDynamicObject(19124, 676.61, -728.63, 16.04,   0.00, 0.00, 0.00);
// Interiores sólidos
CreateDynamicObject(2395, 680.76, -450.74, -26.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 680.76, -450.74, -23.88,   298.00, 359.96, 359.96);
CreateDynamicObject(1493, 680.87, -450.72, -26.62,   0.00, 0.00, 0.00);
CreateDynamicObject(2765, 677.89, -450.36, -23.68,   0.00, 0.00, 0.00);
CreateDynamicObject(2766, 686.85, -451.72, -23.60,   0.00, 0.00, 0.00);
CreateDynamicObject(1966, 661.83, -568.60, 15.66,   0.00, 0.00, 90.00);
CreateDynamicObject(2395, 669.83, -565.28, 15.33,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 666.63, -565.37, 15.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 662.90, -565.37, 15.34,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 665.79, -570.59, 14.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 665.79, -574.92, 14.15,   0.00, 0.00, 0.00);
CreateDynamicObject(2837, 682.88, -457.87, -25.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2838, 679.95, -456.98, -25.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2839, 680.39, -454.61, -25.55,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 461.40, -15.44, 1000.13,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 461.40, -19.17, 1000.13,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 461.10, -20.20, 1000.14,   0.00, 0.00, 236.00);
CreateDynamicObject(2395, 459.67, -22.85, 1000.14,   0.00, 0.00, 180.00);
CreateDynamicObject(2395, 456.48, -22.66, 1000.14,   0.00, 0.00, 90.00);
CreateDynamicObject(2395, 456.33, -19.92, 1000.14,   0.00, 0.00, 270.00);
CreateDynamicObject(2395, 456.88, -23.09, 998.38,   0.00, 0.00, 179.99);
CreateDynamicObject(2395, 455.94, -23.31, 1000.88,   46.00, 0.00, 179.99);
CreateDynamicObject(1532, 456.01, -23.13, 998.53,   0.00, 0.00, 180.00);
CreateDynamicObject(2945, 1.12, 34.35, 1199.92,   0.00, 0.00, 0.00);
CreateDynamicObject(17951, 608.95, -128.31, 998.63,   0.00, 0.00, 0.00);
CreateDynamicObject(17951, 608.95, -122.15, 998.63,   0.00, 0.00, 0.00);
CreateDynamicObject(2395, 662.68, -567.73, 13.30,   0.00, 0.00, 0.00);
// SAPD Prision New
CreateDynamicObject(14412,1424.09960938,-1560.39941406,4348.50000000,0.00000000,0.00000000,0.00000000); //object(carter_drugfloor) (1)
CreateDynamicObject(2928,1441.69921875,-1567.09960938,4340.39990234,0.00000000,0.00000000,270.00000000); //object(a51_intdoor) (1)
CreateDynamicObject(2928,1441.69995117,-1569.69995117,4340.39990234,0.00000000,0.00000000,270.00000000); //object(a51_intdoor) (2)
CreateDynamicObject(980,1411.30004883,-1550.40002441,4346.10009766,0.00000000,0.00000000,0.00000000); //object(airportgate) (1)
CreateDynamicObject(980,1422.80004883,-1550.30004883,4346.10009766,0.00000000,0.00000000,359.75000000); //object(airportgate) (2)
CreateDynamicObject(980,1431.39941406,-1550.29980469,4346.10009766,0.00000000,0.00000000,0.00000000); //object(airportgate) (3)
CreateDynamicObject(980,1431.50000000,-1570.50000000,4346.10009766,0.00000000,0.00000000,0.00000000); //object(airportgate) (4)
CreateDynamicObject(980,1420.50000000,-1570.50000000,4346.10009766,0.00000000,0.00000000,0.25000000); //object(airportgate) (5)
CreateDynamicObject(980,1409.09960938,-1570.50000000,4346.10009766,0.00000000,0.00000000,0.00000000); //object(airportgate) (6)
CreateDynamicObject(7191,1410.29980469,-1532.19921875,4341.10009766,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (1)
CreateDynamicObject(7191,1418.09960938,-1532.19921875,4341.10009766,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (2)
CreateDynamicObject(7191,1426.09997559,-1532.19995117,4341.10009766,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (3)
CreateDynamicObject(7191,1434.09960938,-1532.09960938,4341.10009766,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b) (4)
CreateDynamicObject(7191,1427.79980469,-1552.29980469,4343.20019531,0.00000000,270.00000000,90.24719238); //object(vegasnnewfence2b) (5)
CreateDynamicObject(14407,1403.29980469,-1553.50000000,4340.10009766,0.00000000,0.00000000,179.49462891); //object(carter-stairs01) (1)
CreateDynamicObject(980,1437.19921875,-1556.00000000,4346.10009766,0.00000000,0.00000000,270.24719238); //object(airportgate) (8)
CreateDynamicObject(980,1437.29980469,-1564.69921875,4346.10009766,0.00000000,0.00000000,270.24719238); //object(airportgate) (9)
CreateDynamicObject(7191,1410.09960938,-1589.39941406,4341.10009766,0.00000000,0.00000000,179.99450684); //object(vegasnnewfence2b) (6)
CreateDynamicObject(7191,1418.09960938,-1589.29980469,4341.10009766,0.00000000,0.00000000,179.99450684); //object(vegasnnewfence2b) (7)
CreateDynamicObject(7191,1425.80004883,-1589.40002441,4341.20019531,0.00000000,0.00000000,179.99450684); //object(vegasnnewfence2b) (8)
CreateDynamicObject(7191,1433.90002441,-1589.30004883,4341.10009766,0.00000000,0.00000000,180.24450684); //object(vegasnnewfence2b) (9)
CreateDynamicObject(7191,1419.09997559,-1569.19995117,4343.20019531,0.00000000,270.00000000,89.74716187); //object(vegasnnewfence2b) (10)
CreateDynamicObject(8656,1419.00000000,-1567.00000000,4328.10009766,270.00000000,180.00000000,89.75006104); //object(shbbyhswall09_lvs) (1)
CreateDynamicObject(8656,1421.09997559,-1567.00000000,4328.10009766,270.00000000,180.00149536,90.00430298); //object(shbbyhswall09_lvs) (2)
CreateDynamicObject(8656,1427.09997559,-1567.09997559,4328.29980469,270.00000000,180.00000000,90.00000000); //object(shbbyhswall09_lvs) (4)
CreateDynamicObject(8656,1429.09997559,-1567.09997559,4328.29980469,270.00000000,180.00000000,90.00000000); //object(shbbyhswall09_lvs) (5)
CreateDynamicObject(8656,1411.50000000,-1567.09997559,4328.20019531,270.00000000,180.00152588,89.75427246); //object(shbbyhswall09_lvs) (6)
CreateDynamicObject(8656,1413.69921875,-1567.09960938,4328.20019531,270.00000000,179.99450684,89.74731445); //object(shbbyhswall09_lvs) (7)
CreateDynamicObject(8656,1411.69921875,-1554.50000000,4328.20019531,270.00000000,179.99450684,89.74731445); //object(shbbyhswall09_lvs) (8)
CreateDynamicObject(8656,1413.89941406,-1554.50000000,4328.20019531,270.00000000,179.99450684,89.74731445); //object(shbbyhswall09_lvs) (9)
CreateDynamicObject(8656,1419.50000000,-1554.50000000,4328.20019531,270.00000000,180.00149536,89.75427246); //object(shbbyhswall09_lvs) (10)
CreateDynamicObject(8656,1421.69921875,-1554.50000000,4328.20019531,270.00000000,179.99450684,89.74731445); //object(shbbyhswall09_lvs) (11)
CreateDynamicObject(8656,1432.69995117,-1554.40002441,4328.10009766,270.00000000,179.99450684,89.74731445); //object(shbbyhswall09_lvs) (12)
CreateDynamicObject(8656,1430.50000000,-1554.39941406,4328.10009766,270.00000000,180.00000000,269.74731445); //object(shbbyhswall09_lvs) (13)
CreateDynamicObject(1649,1401.19995117,-1562.69995117,4345.29980469,0.00000000,0.00000000,89.75000000); //object(wglasssmash) (1)
CreateDynamicObject(1649,1401.19995117,-1558.69995117,4345.29980469,0.00000000,0.00000000,89.74731445); //object(wglasssmash) (2)
CreateDynamicObject(1649,1401.19995117,-1554.50000000,4345.29980469,0.00000000,0.00000000,89.74731445); //object(wglasssmash) (3)
CreateDynamicObject(1649,1401.19995117,-1566.69995117,4345.20019531,0.00000000,0.00000000,89.74731445); //object(wglasssmash) (4)
CreateDynamicObject(1649,1400.90002441,-1566.90002441,4345.39990234,0.00000000,0.00000000,269.49731445); //object(wglasssmash) (5)
CreateDynamicObject(1649,1400.90002441,-1562.80004883,4345.39990234,0.00000000,0.00000000,269.99462891); //object(wglasssmash) (6)
CreateDynamicObject(1649,1400.90002441,-1558.69995117,4345.39990234,0.00000000,0.00000000,269.99450684); //object(wglasssmash) (7)
CreateDynamicObject(1649,1400.90002441,-1554.69995117,4345.39990234,0.00000000,0.00000000,269.99450684); //object(wglasssmash) (8)
CreateDynamicObject(984,1407.79980469,-1567.19921875,4343.89990234,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,1420.69921875,-1567.19921875,4343.89990234,0.00000000,0.00000000,269.24743652); //object(fenceshit2) (2)
CreateDynamicObject(984,1430.79980469,-1567.29980469,4343.89990234,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (3)
CreateDynamicObject(2605,1399.00000000,-1551.80004883,4343.70019531,0.00000000,0.00000000,90.00000000); //object(polce_desk1) (1)
CreateDynamicObject(2612,1400.69995117,-1551.50000000,4345.39990234,0.00000000,0.00000000,270.00000000); //object(police_nb2) (1)
CreateDynamicObject(2614,1401.40002441,-1560.80004883,4348.29980469,0.00000000,0.00000000,92.00000000); //object(cj_us_flag) (1)
CreateDynamicObject(2356,1400.40002441,-1552.00000000,4343.29980469,0.00000000,0.00000000,82.75000000); //object(police_off_chair) (2)
CreateDynamicObject(2604,1394.80004883,-1546.90002441,4344.10009766,0.00000000,0.00000000,0.00000000); //object(cj_police_counter) (1)
CreateDynamicObject(980,1407.09997559,-1550.40002441,4348.79980469,0.00000000,0.00000000,180.50000000); //object(airportgate) (10)
CreateDynamicObject(2608,1393.00000000,-1550.19995117,4345.89990234,0.00000000,0.00000000,90.50000000); //object(polce_shelf) (1)
CreateDynamicObject(2610,1393.00000000,-1550.80004883,4344.10009766,0.00000000,0.00000000,89.25000000); //object(cj_p_fileing2) (1)
CreateDynamicObject(2610,1393.00000000,-1550.30004883,4344.10009766,0.00000000,0.00000000,89.24743652); //object(cj_p_fileing2) (2)
CreateDynamicObject(2610,1393.00000000,-1549.80004883,4344.10009766,0.00000000,0.00000000,89.24743652); //object(cj_p_fileing2) (3)
CreateDynamicObject(1723,1393.40002441,-1556.59997559,4343.29980469,0.00000000,0.00000000,89.25000000); //object(mrk_seating1) (1)
CreateDynamicObject(1723,1393.40002441,-1560.09997559,4343.29980469,0.00000000,0.00000000,89.24743652); //object(mrk_seating1) (2)
CreateDynamicObject(2762,1407.09997559,-1571.69995117,4339.60009766,0.00000000,0.00000000,270.00000000); //object(cj_chick_table) (1)
CreateDynamicObject(2762,1407.09997559,-1569.69995117,4339.60009766,0.00000000,0.00000000,270.00000000); //object(cj_chick_table) (2)
CreateDynamicObject(2762,1407.09997559,-1567.69995117,4339.60009766,0.00000000,0.00000000,270.00000000); //object(cj_chick_table) (3)
CreateDynamicObject(2762,1403.19995117,-1567.69995117,4339.60009766,0.00000000,0.00000000,270.00000000); //object(cj_chick_table) (4)
CreateDynamicObject(2762,1403.19995117,-1569.69995117,4339.60009766,0.00000000,0.00000000,270.00000000); //object(cj_chick_table) (5)
CreateDynamicObject(2762,1403.19995117,-1571.69995117,4339.60009766,0.00000000,0.00000000,270.00000000); //object(cj_chick_table) (6)
CreateDynamicObject(1844,1401.50000000,-1564.40002441,4339.20019531,0.00000000,0.00000000,89.75000000); //object(shop_shelf03) (1)
CreateDynamicObject(1886,1404.90002441,-1568.00000000,4343.20019531,0.00000000,0.00000000,178.00000000); //object(shop_sec_cam) (1)
CreateDynamicObject(955,1401.30004883,-1562.19995117,4339.60009766,0.00000000,0.00000000,92.00000000); //object(cj_ext_sprunk) (1)
CreateDynamicObject(2342,1407.09997559,-1567.19995117,4340.12988281,0.00000000,0.00000000,0.00000000); //object(donut_disp) (1)
CreateDynamicObject(2603,1410.90002441,-1568.90002441,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (1)
CreateDynamicObject(2603,1416.69995117,-1573.30004883,4339.60009766,0.00000000,0.00000000,270.00000000); //object(police_cell_bed) (2)
CreateDynamicObject(2603,1419.69995117,-1573.00000000,4339.60009766,0.00000000,0.00000000,270.00000000); //object(police_cell_bed) (3)
CreateDynamicObject(2603,1424.69995117,-1572.50000000,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (4)
CreateDynamicObject(2603,1432.80004883,-1572.30004883,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (5)
CreateDynamicObject(2603,1430.19995117,-1572.30004883,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (6)
CreateDynamicObject(2603,1433.19995117,-1548.09997559,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (7)
CreateDynamicObject(2603,1433.19995117,-1552.50000000,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (8)
CreateDynamicObject(2603,1419.40002441,-1548.09997559,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (9)
CreateDynamicObject(2603,1419.40002441,-1552.30004883,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (10)
CreateDynamicObject(2603,1411.40002441,-1552.50000000,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (11)
CreateDynamicObject(2603,1413.19995117,-1552.50000000,4339.60009766,0.00000000,0.00000000,0.00000000); //object(police_cell_bed) (12)
CreateDynamicObject(2738,1410.80004883,-1547.19995117,4339.79980469,0.00000000,0.00000000,92.00000000); //object(cj_toilet_bs) (1)
CreateDynamicObject(2738,1423.30004883,-1546.80004883,4339.79980469,0.00000000,0.00000000,0.74951172); //object(cj_toilet_bs) (2)
CreateDynamicObject(2738,1429.30004883,-1546.90002441,4339.79980469,0.00000000,0.00000000,0.74707031); //object(cj_toilet_bs) (3)
CreateDynamicObject(2738,1426.59997559,-1568.09997559,4339.79980469,0.00000000,0.00000000,0.74707031); //object(cj_toilet_bs) (4)
CreateDynamicObject(2738,1419.50000000,-1568.00000000,4339.79980469,0.00000000,0.00000000,0.74707031); //object(cj_toilet_bs) (5)
CreateDynamicObject(2738,1410.69995117,-1573.00000000,4339.79980469,0.00000000,0.00000000,90.99707031); //object(cj_toilet_bs) (6)
CreateDynamicObject(2684,1400.19995117,-1546.50000000,4345.60009766,0.00000000,0.00000000,0.00000000); //object(cj_food_post) (1)
CreateDynamicObject(2588,1416.40002441,-1546.40002441,4341.89990234,0.00000000,0.00000000,0.00000000); //object(sex_3) (1)
CreateDynamicObject(2587,1420.40002441,-1546.40002441,4341.70019531,0.00000000,0.00000000,0.00000000); //object(sex_2) (1)
CreateDynamicObject(2928,1392.80004883,-1569.69995117,4344.60009766,0.00000000,0.00000000,270.25000000); //object(a51_intdoor) (1)
CreateDynamicObject(2928,1392.80004883,-1567.19995117,4344.60009766,0.00000000,0.00000000,270.00000000); //object(a51_intdoor) (1)
CreateDynamicObject(1280,1441.00000000,-1550.19995117,4339.60009766,0.00000000,0.00000000,0.00000000); //object(parkbench1) (1)
CreateDynamicObject(1280,1441.00000000,-1554.19995117,4339.60009766,0.00000000,0.00000000,0.00000000); //object(parkbench1) (2)
CreateDynamicObject(2181,1397.09997559,-1546.90002441,4343.29980469,0.00000000,0.00000000,0.00000000); //object(med_office5_desk_2) (1)
fen1 = CreateDynamicObject(969,1417.90002441,-1554.90002441,4334.70019531,0.00000000,269.74975586,358.50000000); //object(electricgate) (1)
fen2 = CreateDynamicObject(969,1425.90002441,-1555.00000000,4334.70019531,0.00000000,269.74743652,359.49755859); //object(electricgate) (2)
fen3 = CreateDynamicObject(969,1429.50000000,-1554.80004883,4334.70019531,0.00000000,269.74731445,359.49462891); //object(electricgate) (3)
fen4 = CreateDynamicObject(969,1422.19995117,-1567.00000000,4334.60009766,0.00000000,269.74743652,179.99456787); //object(electricgate) (4)
fen5 = CreateDynamicObject(969,1414.80004883,-1566.69995117,4334.60009766,0.00000000,269.74182129,179.99450684); //object(electricgate) (5)
fen6 = CreateDynamicObject(969,1430.19995117,-1566.69995117,4334.70019531,0.00000000,269.74182129,179.99450684); //object(electricgate) (6)
JDoor1 = CreateButton(1418.19995117,-1555.09997559,4340.79980469, 0.0);
JDoor2 = CreateButton(1426.00000000,-1555.09997559,4340.79980469, 0.0);
JDoor3 = CreateButton(1429.80004883,-1554.90002441,4340.79980469, 0.0);
JDoor4 = CreateButton(1425.80004883,-1566.50000000,4340.79980469, 180);
JDoor5 = CreateButton(1433.80004883,-1566.40002441,4340.79980469, 180);
JDoor6 = CreateButton(1418.09997559,-1566.40002441,4340.79980469, 180);
//BALLAS INTERIOR
CreateDynamicObject(14718,2063.80004883,-1584.40002441,-14.39999962,0.00000000,0.00000000,0.00000000); //object(int2lasmone04) (1)
CreateDynamicObject(2946,2066.00000000,-1589.30004883,-14.39999962,0.00000000,0.00000000,270.00000000); //object(cr_door_03) (1)
CreateDynamicObject(1767,2068.50000000,-1582.50000000,-14.39999962,0.00000000,0.00000000,0.00000000); //object(med_single_1) (1)
CreateDynamicObject(1767,2070.50000000,-1583.59997559,-14.39999962,0.00000000,0.00000000,270.75000000); //object(med_single_1) (2)
CreateDynamicObject(1767,2070.50000000,-1587.30004883,-14.39999962,0.00000000,0.00000000,272.74658203); //object(med_single_1) (3)
CreateDynamicObject(1767,2067.60009766,-1584.59997559,-14.39999962,0.00000000,0.00000000,89.74658203); //object(med_single_1) (4)
CreateDynamicObject(2576,2074.30004883,-1584.59997559,-14.39999962,0.00000000,0.00000000,359.25000000); //object(hotel_dresser_8) (1)
CreateDynamicObject(14720,2060.30004883,-1583.50000000,-14.39999962,0.00000000,0.00000000,0.00000000); //object(int2lasmone02) (1)
CreateDynamicObject(2083,2068.50000000,-1583.69995117,-14.39999962,0.00000000,0.00000000,270.00000000); //object(coffee_med_4) (1)
CreateDynamicObject(1701,2074.30004883,-1588.19995117,-14.39999962,0.00000000,0.00000000,273.25000000); //object(kb_bed_test2) (1)
CreateDynamicObject(1717,2072.00000000,-1588.30004883,-14.39999962,0.00000000,0.00000000,16.00000000); //object(telly_low_test) (1)
CreateDynamicObject(1719,2072.19995117,-1588.40002441,-14.30000019,0.00000000,0.00000000,88.00000000); //object(low_console) (1)
CreateDynamicObject(2100,2073.00000000,-1584.09997559,-14.39999962,0.00000000,0.00000000,0.00000000); //object(med_hi_fi_2) (1)
CreateDynamicObject(2332,2076.60009766,-1584.50000000,-12.80000019,0.00000000,0.00000000,0.00000000); //object(kev_safe) (1)
CreateDynamicObject(1421,2061.60009766,-1586.00000000,-13.60000038,0.00000000,0.00000000,0.00000000); //object(dyn_boxes) (1)
CreateDynamicObject(1421,2060.80004883,-1587.40002441,-13.60000038,0.00000000,0.00000000,270.00000000); //object(dyn_boxes) (2)
//SAPD Exterior(1)
CreateDynamicObject(1569,1555.88000488,-1677.09997559,15.19999981,0.00000000,0.00000000,90.00000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,1555.88000488,-1674.09997559,15.19999981,0.00000000,0.00000000,270.00000000); //object(adam_v_door) (2)
CreateDynamicObject(2774,1545.90002441,-1621.90002441,7.80000019,0.00000000,180.00000000,180.00000000); //object(cj_airp_pillars) (1)
CreateDynamicObject(2774,1545.80004883,-1633.80004883,7.80000019,0.00000000,179.99450684,179.99450684); //object(cj_airp_pillars) (2)
CreateDynamicObject(1215,1541.59997559,-1633.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
CreateDynamicObject(1215,1541.80004883,-1622.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
CreateDynamicObject(1215,1546.59997559,-1633.80004883,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
CreateDynamicObject(1215,1546.79980469,-1621.89941406,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(673,1545.80004883,-1622.00000000,12.89999962,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltree) (1)
CreateDynamicObject(673,1545.50000000,-1634.00000000,12.89999962,0.00000000,0.00000000,0.00000000); //object(sm_bevhiltree) (2)
CreateDynamicObject(982,1607.90002441,-1615.19995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit) (1)
CreateDynamicObject(982,1552.50000000,-1602.29980469,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit) (2)
CreateDynamicObject(983,1607.90002441,-1631.19995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (1)
CreateDynamicObject(983,1594.09960938,-1602.29980469,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (2)
CreateDynamicObject(983,1600.50000000,-1602.29980469,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (3)
CreateDynamicObject(982,1578.09960938,-1602.29980469,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit) (3)
CreateDynamicObject(983,1604.79980469,-1602.29980469,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (4)
CreateDynamicObject(983,1607.90002441,-1634.40002441,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (5)
CreateDynamicObject(983,1604.69995117,-1638.00000000,16.60000038,0.00000000,0.00000000,98.00000000); //object(fenceshit3) (6)
CreateDynamicObject(983,1539.69995117,-1605.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (7)
CreateDynamicObject(983,1539.69995117,-1611.90002441,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (8)
CreateDynamicObject(983,1545.50000000,-1618.50000000,14.19999981,90.00000000,210.00000000,330.00000000); //object(fenceshit3) (9)
CreateDynamicObject(983,1539.69921875,-1614.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (10)
CreateDynamicObject(983,1546.09997559,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (11)
CreateDynamicObject(983,1542.89941406,-1617.69921875,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (12)
CreateDynamicObject(983,1545.50000000,-1619.80004883,14.19999981,90.00000000,195.50109863,344.49334717); //object(fenceshit3) (13)
CreateDynamicObject(983,1545.50000000,-1621.00000000,14.19999981,90.00000000,162.45623779,17.53277588); //object(fenceshit3) (14)
CreateDynamicObject(983,1545.80004883,-1635.30004883,14.19999981,90.00000000,192.91802979,347.07098389); //object(fenceshit3) (15)
CreateDynamicObject(983,1545.80004883,-1636.59997559,14.19999981,90.00000000,191.30554199,348.67797852); //object(fenceshit3) (16)
CreateDynamicObject(983,1545.80004883,-1637.80004883,14.19999981,90.00000000,190.88891602,349.08911133); //object(fenceshit3) (17)
pdgate1 = CreateDynamicObject(971,1589.053344,-1638.123168,14.122960,0.000000,0.000000,180);
pdgate2 = CreateDynamicObject(2990,1545.90002441,-1627.80004883,16.29999924,0.00000000,0.00000000,90.00000000);
//Juzgado
CreateDynamicObject(14602,1445.12304688,-1466.22460938,1619.72888184,0.00000000,0.00000000,0.00000000); //object(paperchase01)(1)
CreateDynamicObject(13007,1424.11535645,-1469.67016602,1613.13500977,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(17)
CreateDynamicObject(14602,1436.94140625,-1446.60449219,1619.70385742,0.00000000,0.00000000,90.00000000); //object(paperchase01)(5)
CreateDynamicObject(13007,1442.67285156,-1467.30566406,1613.13500977,0.00000000,0.00000000,179.99450684); //object(sw_bankbits)(20)
CreateDynamicObject(13007,1425.78710938,-1454.39550781,1613.16003418,0.00000000,0.00000000,359.98901367); //object(sw_bankbits)(21)
CreateDynamicObject(13007,1415.73071289,-1469.82592773,1613.38476562,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(22)
CreateDynamicObject(13007,1415.70117188,-1471.94921875,1613.60998535,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(26)
CreateDynamicObject(13007,1415.67578125,-1471.95117188,1613.78515625,0.00000000,0.00000000,0.00000000); //object(sw_bankbits)(27)
CreateDynamicObject(13007,1426.91503906,-1451.69824219,1613.18505859,0.00000000,0.00000000,269.98901367); //object(sw_bankbits)(21)
CreateDynamicObject(7191,1426.17089844,-1460.91601562,1614.98120117,90.00000000,180.00549316,269.98901367); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1420.71826172,-1460.90307617,1617.33203125,90.00000000,180.00549316,269.98352051); //object(vegasnnewfence2b)(2)
CreateDynamicObject(1491,1422.68261719,-1460.94042969,1615.31896973,0.00000000,0.00000000,0.00000000); //object(gen_doorint01)(1)
CreateDynamicObject(7191,1426.19433594,-1460.89550781,1617.33203125,90.00000000,179.99450684,89.99450684); //object(vegasnnewfence2b)(3)
CreateDynamicObject(7191,1423.91796875,-1460.91308594,1639.95593262,270.00000000,180.00149536,269.99050903); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1422.24218750,-1460.89453125,1639.95593262,270.00000000,180.00041199,89.98941040); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1420.77148438,-1460.88769531,1617.33203125,90.00000000,179.99450684,89.98904419); //object(vegasnnewfence2b)(9)
CreateDynamicObject(7191,1425.17211914,-1459.41979980,1614.40539551,90.00000000,180.00549316,269.97802734); //object(vegasnnewfence2b)(15)
CreateDynamicObject(7191,1425.22167969,-1459.39355469,1614.40539551,90.00000000,180.00549316,89.97805786); //object(vegasnnewfence2b)(17)
CreateDynamicObject(7191,1426.21777344,-1457.37695312,1614.40539551,90.00000000,179.99450684,359.98901367); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1426.19274902,-1457.37670898,1614.40539551,90.00000000,180.00549316,179.97802734); //object(vegasnnewfence2b)(19)
CreateDynamicObject(7191,1428.00708008,-1460.93286133,1594.13134766,90.00000000,180.00549316,269.98904419); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1428.04125977,-1460.88476562,1594.13183594,90.00000000,179.99450684,89.99450684); //object(vegasnnewfence2b)(3)
CreateDynamicObject(7191,1431.62500000,-1460.93652344,1614.98120117,90.00000000,179.99450684,270.00000000); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1431.65051270,-1460.90173340,1614.98120117,90.00000000,179.99450684,90.00000000); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1427.76770020,-1460.93249512,1639.95593262,270.00000000,179.99957275,269.98852539); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1425.09179688,-1460.92285156,1639.95593262,270.00000000,180.00549316,269.98901367); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1427.70935059,-1460.90393066,1639.98095703,270.00000000,180.00146484,89.99047852); //object(vegasnnewfence2b)(5)
CreateDynamicObject(7191,1421.37231445,-1459.40966797,1640.08105469,270.00000000,180.00000000,89.98904419); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1421.24523926,-1459.42187500,1640.08105469,270.00000000,180.00000000,269.98901367); //object(vegasnnewfence2b)(7)
CreateDynamicObject(2395,1427.57727051,-1461.01623535,1615.43835449,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(1)
CreateDynamicObject(1649,1428.77197266,-1460.98217773,1616.99804688,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,1428.77294922,-1460.95678711,1616.99804688,0.00000000,0.00000000,180.00000000); //object(wglasssmash)(2)
CreateDynamicObject(1491,1433.55371094,-1460.87792969,1615.31896973,0.00000000,0.00000000,90.00000000); //object(gen_doorint01)(1)
CreateDynamicObject(7191,1433.54882812,-1457.42187500,1614.40539551,90.00000000,180.00549316,359.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1433.52600098,-1457.41162109,1614.40539551,90.00000000,179.99450684,179.97802734); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1433.55468750,-1459.03320312,1639.95593262,270.00000000,179.99853516,359.98748779); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1433.50488281,-1459.02868652,1639.95593262,270.00000000,179.99853516,179.98748779); //object(vegasnnewfence2b)(7)
CreateDynamicObject(13007,1430.89624023,-1451.16162109,1613.13500977,0.00000000,0.00000000,359.99450684); //object(sw_bankbits)(20)
CreateDynamicObject(13007,1442.71130371,-1451.15563965,1613.10998535,0.00000000,0.00000000,359.98901367); //object(sw_bankbits)(20)
CreateDynamicObject(1536,1434.91210938,-1457.15625000,1615.26208496,0.00000000,0.00000000,0.00000000); //object(gen_doorext15)(1)
CreateDynamicObject(1567,1439.94287109,-1460.51574707,1615.05700684,0.00000000,0.00000000,241.25000000); //object(gen_wardrobe)(1)
CreateDynamicObject(1567,1437.46667480,-1460.50451660,1615.05700684,0.00000000,0.00000000,359.99633789); //object(gen_wardrobe)(2)
CreateDynamicObject(7191,1437.59399414,-1458.56079102,1595.63037109,90.00000000,180.00549316,359.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1437.56896973,-1458.55725098,1595.63037109,90.00000000,180.00549316,179.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1428.00708008,-1460.93286133,1594.13134766,90.00000000,180.00549316,269.98904419); //object(vegasnnewfence2b)(1)
CreateDynamicObject(7191,1440.09667969,-1462.12890625,1614.40539551,90.00000000,179.99450684,359.97802734); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1440.05444336,-1462.11694336,1614.40539551,90.00000000,179.99450684,179.97802734); //object(vegasnnewfence2b)(18)
CreateDynamicObject(1502,1440.07226562,-1464.02307129,1615.30725098,0.00000000,0.00000000,270.00000000); //object(gen_doorint04)(1)
CreateDynamicObject(1502,1440.12402344,-1467.02539062,1615.30725098,0.00000000,0.00000000,90.00000000); //object(gen_doorint04)(2)
CreateDynamicObject(7191,1440.08056641,-1465.22888184,1639.95593262,270.00000000,179.99853516,359.98748779); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1440.05419922,-1465.25268555,1639.95593262,270.00000000,179.99963379,179.98852539); //object(vegasnnewfence2b)(7)
CreateDynamicObject(7191,1440.07971191,-1468.97167969,1614.40539551,90.00000000,180.00549316,359.96704102); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1440.04785156,-1468.96777344,1614.40539551,90.00000000,180.00549316,179.96154785); //object(vegasnnewfence2b)(18)
CreateDynamicObject(7191,1446.07324219,-1462.01367188,1617.20971680,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b)(21)
CreateDynamicObject(7191,1446.07324219,-1462.01367188,1621.16015625,0.00000000,0.00000000,0.00000000); //object(vegasnnewfence2b)(22)
CreateDynamicObject(1569,1446.01916504,-1467.06445312,1615.30725098,0.00000000,0.00000000,90.00000000); //object(adam_v_door)(1)
CreateDynamicObject(1569,1446.01245117,-1464.06347656,1615.30725098,0.00000000,0.00000000,270.00000000); //object(adam_v_door)(2)
CreateDynamicObject(2773,1442.25390625,-1465.49609375,1615.79943848,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(1)
CreateDynamicObject(2773,1441.32177734,-1467.81225586,1615.79943848,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar)(3)
CreateDynamicObject(2773,1441.33776855,-1463.36621094,1615.79943848,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar)(4)
CreateDynamicObject(7191,1462.24707031,-1460.47363281,1619.60864258,0.00000000,0.00000000,90.00000000); //object(vegasnnewfence2b)(23)
CreateDynamicObject(2368,1445.37597656,-1460.23242188,1615.25280762,0.00000000,0.00000000,179.99450684); //object(shop_counter_1)(1)
CreateDynamicObject(2368,1442.54870605,-1460.23706055,1615.25280762,0.00000000,0.00000000,179.99450684); //object(shop_counter_1)(2)
CreateDynamicObject(18070,1448.59960938,-1458.05468750,1615.83203125,0.00000000,0.00000000,180.74707031); //object(gap_counter)(1)
CreateDynamicObject(1722,1444.69824219,-1469.56713867,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(1)
CreateDynamicObject(1722,1443.91174316,-1469.55603027,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(2)
CreateDynamicObject(1722,1443.17663574,-1469.53918457,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(3)
CreateDynamicObject(1722,1442.41821289,-1469.55004883,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(4)
CreateDynamicObject(949,1440.54565430,-1469.22399902,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(1)
CreateDynamicObject(2596,1425.73315430,-1469.52270508,1617.94921875,0.00000000,0.00000000,140.00000000); //object(cj_sex_tv)(1)
CreateDynamicObject(2818,1445.74609375,-1466.06970215,1615.30725098,0.00000000,0.00000000,90.00000000); //object(gb_bedrug02)(1)
CreateDynamicObject(2257,1443.23132324,-1469.57824707,1618.01953125,0.00000000,0.00000000,180.00000000); //object(frame_clip_4)(1)
CreateDynamicObject(1722,1441.66760254,-1469.52758789,1615.30725098,0.00000000,0.00000000,0.00000000); //object(off_chairnu)(5)
CreateDynamicObject(949,1445.51464844,-1469.05834961,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(2)
CreateDynamicObject(1744,1446.15173340,-1461.89343262,1616.04699707,0.00000000,0.00000000,270.00000000); //object(med_shelf)(1)
CreateDynamicObject(2199,1443.10876465,-1457.24108887,1615.30725098,0.00000000,0.00000000,359.00000000); //object(med_office6_mc_1)(1)
CreateDynamicObject(2606,1437.97351074,-1458.84362793,1617.18493652,0.00000000,0.00000000,89.75000000); //object(cj_police_counter2)(1)
CreateDynamicObject(1808,1445.79260254,-1467.55639648,1615.28222656,0.00000000,0.00000000,270.00000000); //object(cj_watercooler2)(1)
CreateDynamicObject(949,1440.43603516,-1462.16455078,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(3)
CreateDynamicObject(2186,1440.80798340,-1457.64501953,1615.36926270,0.00000000,0.00000000,0.00000000); //object(photocopier_1)(1)
CreateDynamicObject(2165,1445.55895996,-1458.12756348,1615.53247070,0.00000000,0.00000000,268.75000000); //object(med_office_desk_1)(1)
CreateDynamicObject(1806,1443.88110352,-1458.51367188,1615.28222656,0.00000000,0.00000000,240.00000000); //object(med_office_chair)(1)
CreateDynamicObject(2185,1439.78686523,-1457.65905762,1615.30725098,0.00000000,0.00000000,181.75000000); //object(med_office6_desk_1)(1)
CreateDynamicObject(1806,1439.02209473,-1459.00073242,1615.28222656,0.00000000,0.00000000,359.99633789); //object(med_office_chair)(2)
CreateDynamicObject(2614,1440.22583008,-1465.52929688,1618.80810547,0.00000000,0.00000000,90.00000000); //object(cj_us_flag)(1)
CreateDynamicObject(2368,1448.16870117,-1460.22106934,1615.25280762,0.00000000,0.00000000,179.99450684); //object(shop_counter_1)(1)
CreateDynamicObject(2196,1445.63635254,-1458.89331055,1616.34472656,0.00000000,0.00000000,232.75000000); //object(work_lamp1)(1)
CreateDynamicObject(16780,1443.32202148,-1465.18615723,1619.91552734,0.00000000,0.00000000,0.00000000); //object(ufo_light03)(1)
CreateDynamicObject(1723,1426.70812988,-1458.94580078,1615.35729980,0.00000000,0.00000000,90.00000000); //object(mrk_seating1)(1)
CreateDynamicObject(1723,1429.31323242,-1457.65771484,1615.35729980,0.00000000,0.00000000,0.25000000); //object(mrk_seating1)(2)
CreateDynamicObject(949,1432.56274414,-1457.59741211,1615.91845703,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(4)
CreateDynamicObject(1808,1430.92700195,-1460.60571289,1615.28222656,0.00000000,0.00000000,180.00000000); //object(cj_watercooler2)(2)
CreateDynamicObject(2231,1428.65393066,-1461.05163574,1617.85754395,0.00000000,0.00000000,180.00000000); //object(swank_speaker_3)(1)
CreateDynamicObject(2738,1424.19128418,-1457.57397461,1615.96020508,0.00000000,0.00000000,0.00000000); //object(cj_toilet_bs)(1)
CreateDynamicObject(2828,1445.64245605,-1459.48425293,1616.37194824,0.00000000,0.00000000,92.00000000); //object(gb_ornament02)(1)
CreateDynamicObject(2855,1441.02124023,-1469.25646973,1615.30725098,0.00000000,0.00000000,160.00000000); //object(gb_bedmags05)(1)
CreateDynamicObject(2853,1439.36035156,-1457.65075684,1616.11437988,0.00000000,0.00000000,180.00000000); //object(gb_bedmags03)(1)
CreateDynamicObject(1800,1425.36523438,-1460.54333496,1615.35729980,0.00000000,0.00000000,359.00000000); //object(low_bed_1)(1)
CreateDynamicObject(2518,1422.46594238,-1457.68591309,1615.35729980,0.00000000,0.00000000,0.00000000); //object(cj_b_sink2)(1)
CreateDynamicObject(2911,1422.09924316,-1460.65502930,1615.33227539,0.00000000,0.00000000,90.00000000); //object(kmb_petroldoor)(1)
CreateDynamicObject(2204,1424.98950195,-1465.07861328,1615.11572266,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(1)
CreateDynamicObject(2204,1424.97595215,-1462.96093750,1614.51513672,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(2)
CreateDynamicObject(2204,1424.97741699,-1467.25244141,1614.54016113,0.00000000,0.00000000,270.00000000); //object(med_office8_cabinet)(3)
CreateDynamicObject(2204,1426.99804688,-1462.94104004,1614.36499023,0.00000000,0.00000000,180.00000000); //object(med_office8_cabinet)(4)
CreateDynamicObject(2204,1429.94787598,-1462.92980957,1614.36499023,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(5)
CreateDynamicObject(2204,1424.55944824,-1464.92712402,1614.49011230,0.00000000,0.00000000,90.00000000); //object(med_office8_cabinet)(8)
CreateDynamicObject(2204,1424.55578613,-1467.05664062,1615.09069824,0.00000000,0.00000000,90.00000000); //object(med_office8_cabinet)(9)
CreateDynamicObject(2204,1424.56604004,-1469.22216797,1614.51513672,0.00000000,0.00000000,90.00000000); //object(med_office8_cabinet)(10)
CreateDynamicObject(2204,1430.87292480,-1462.70874023,1614.36499023,0.00000000,0.00000000,269.99450684); //object(med_office8_cabinet)(12)
CreateDynamicObject(2204,1430.83227539,-1467.37219238,1614.36499023,0.00000000,0.00000000,269.98901367); //object(med_office8_cabinet)(13)
CreateDynamicObject(2204,1430.41040039,-1469.33618164,1614.33996582,0.00000000,0.00000000,89.98901367); //object(med_office8_cabinet)(14)
CreateDynamicObject(2204,1430.45690918,-1464.67260742,1614.33996582,0.00000000,0.00000000,89.98901367); //object(med_office8_cabinet)(15)
CreateDynamicObject(1491,1430.67724609,-1462.52905273,1613.64282227,0.00000000,0.00000000,90.00000000); //object(gen_doorint01)(1)
CreateDynamicObject(2205,1428.21911621,-1464.94714355,1615.30725098,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1)(15)
CreateDynamicObject(2205,1428.13415527,-1468.92211914,1615.30725098,0.00000000,0.00000000,90.00000000); //object(med_office8_desk_1)(16)
CreateDynamicObject(1714,1423.29028320,-1466.25146484,1615.95739746,0.00000000,0.00000000,91.75000000); //object(kb_swivelchair1)(1)
CreateDynamicObject(1663,1423.46850586,-1463.66125488,1616.01721191,0.00000000,0.00000000,90.00000000); //object(swivelchair_b)(1)
CreateDynamicObject(1715,1429.84375000,-1463.82238770,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(1)
CreateDynamicObject(1715,1429.89294434,-1465.00793457,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(2)
CreateDynamicObject(1715,1429.72021484,-1467.62609863,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(3)
CreateDynamicObject(1715,1429.74157715,-1468.67639160,1615.30725098,0.00000000,0.00000000,270.00000000); //object(kb_swivelchair2)(4)
CreateDynamicObject(1715,1427.78308105,-1461.31298828,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(5)
CreateDynamicObject(1715,1426.88012695,-1461.28308105,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(6)
CreateDynamicObject(1715,1425.97436523,-1461.28002930,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(7)
CreateDynamicObject(1715,1424.97277832,-1461.20837402,1615.30725098,0.00000000,0.00000000,0.00000000); //object(kb_swivelchair2)(8)
CreateDynamicObject(7191,1437.28918457,-1457.08789062,1617.05957031,0.00000000,0.00000000,90.00000000); //object(vegasnnewfence2b)(22)
CreateDynamicObject(7191,1437.28906250,-1457.08789062,1621.01196289,0.00000000,0.00000000,90.00000000); //object(vegasnnewfence2b)(22)
CreateDynamicObject(2748,1432.50219727,-1467.55810547,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(1)
CreateDynamicObject(2748,1432.51489258,-1469.10644531,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(2)
CreateDynamicObject(2748,1432.49230957,-1464.30419922,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(3)
CreateDynamicObject(2748,1432.48681641,-1463.75097656,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(4)
CreateDynamicObject(2748,1434.92333984,-1463.74829102,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(5)
CreateDynamicObject(2748,1434.91699219,-1464.39526367,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(6)
CreateDynamicObject(2748,1434.89916992,-1467.54174805,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(7)
CreateDynamicObject(2748,1434.90393066,-1469.09204102,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(8)
CreateDynamicObject(2748,1437.19592285,-1463.73388672,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(9)
CreateDynamicObject(2748,1437.19299316,-1464.35852051,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(10)
CreateDynamicObject(2748,1437.29418945,-1467.49597168,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(11)
CreateDynamicObject(2748,1437.30017090,-1469.02490234,1615.88000488,0.00000000,0.00000000,270.00000000); //object(cj_donut_chair2)(12)
CreateDynamicObject(949,1439.60009766,-1469.12036133,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(5)
CreateDynamicObject(949,1439.63208008,-1462.39184570,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(6)
CreateDynamicObject(1808,1439.78796387,-1467.36413574,1615.28222656,0.00000000,0.00000000,270.00000000); //object(cj_watercooler2)(3)
CreateDynamicObject(955,1437.03576660,-1457.86987305,1615.68261719,0.00000000,0.00000000,267.00000000); //object(cj_ext_sprunk)(1)
CreateDynamicObject(956,1437.04626465,-1459.65295410,1615.73266602,0.00000000,0.00000000,270.00000000); //object(cj_ext_candy)(1)
CreateDynamicObject(949,1434.11865234,-1457.76928711,1615.94348145,0.00000000,0.00000000,0.00000000); //object(plant_pot_4)(7)
CreateDynamicObject(2204,1433.39770508,-1462.92846680,1614.36499023,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(16)
CreateDynamicObject(2204,1436.32739258,-1462.92248535,1614.36499023,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(17)
CreateDynamicObject(2204,1437.38452148,-1462.91064453,1614.33996582,0.00000000,0.00000000,179.99450684); //object(med_office8_cabinet)(18)
CreateDynamicObject(2204,1435.41455078,-1462.48754883,1614.31494141,0.00000000,0.00000000,359.99450684); //object(med_office8_cabinet)(19)
CreateDynamicObject(2204,1432.50634766,-1462.50256348,1614.31494141,0.00000000,0.00000000,359.98901367); //object(med_office8_cabinet)(20)
CreateDynamicObject(2204,1431.35961914,-1462.52722168,1614.31494141,0.00000000,0.00000000,359.98901367); //object(med_office8_cabinet)(21)
CreateDynamicObject(2614,1425.14001465,-1466.21911621,1616.09545898,0.00000000,0.00000000,90.00000000); //object(cj_us_flag)(2)
CreateDynamicObject(3027,1446.88952637,-1462.62329102,1612.58471680,0.00000000,0.00000000,0.00000000); //object(ciggy)(1)
CreateDynamicObject(2352,1424.75463867,-1465.66577148,1616.91503906,358.00100708,89.93695068,269.99884033); //object(cj_dyn_plunge_2)(1)
CreateDynamicObject(2894,1424.79467773,-1466.47814941,1616.90563965,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook)(1)
CreateDynamicObject(2254,1429.80285645,-1457.20202637,1617.94128418,0.00000000,0.00000000,0.00000000); //object(frame_clip_1)(1)
CreateDynamicObject(976,1414.48632812,-1459.48754883,1612.17199707,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate)(1)
/* SAPD Pictures */
CreateDynamicObject(19275, 252.976562, 112.527893, 1005.680175, 0.000000, 0.000000, 90.000000);
CreateDynamicObject(19172, 239.828125, 109.456169, 1004.816467, 0.000000, 0.000000, 90.000000);
CreateDynamicObject(19171, 252.973922, 112.518646, 1004.626770, 0.000000, 270.000000, 0.000000);
/* Doors Dealership*/
CreateDynamicObject(1569,544.09997559,-1294.30004883,16.14999962,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,547.09997559,-1294.30004883,16.14999962,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (2)
// Exterior
CreateDynamicObject(3851,472.29998779,-1512.09997559,19.79999924,90.00000000,179.99450684,335.73217773); //object(carshowwin_sfsx)(19)
CreateDynamicObject(3851,470.60000610,-1515.59997559,31.10000038,90.00000000,179.99450684,332.48120117); //object(carshowwin_sfsx)(20)
CreateDynamicObject(3851,472.29980469,-1512.09960938,31.10000038,90.00000000,179.99450684,335.73120117); //object(carshowwin_sfsx)(28)
CreateDynamicObject(3851,809.20001221,-1385.09997559,17.00000000,90.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx)(30)
CreateDynamicObject(3851,827.00000000,-1385.09960938,17.00000000,90.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx)(31)
CreateDynamicObject(3851,823.00000000,-1385.09997559,17.00000000,90.00000000,0.00000000,90.00000000); //object(carshowwin_sfsx)(32)
CreateDynamicObject(2885,807.50000000,-1379.59960938,22.60000038,0.00000000,0.00000000,90.00000000); //object(xref_garagedoor)(2)
CreateDynamicObject(2885,807.50000000,-1379.59997559,16.00000000,0.00000000,0.00000000,90.00000000); //object(xref_garagedoor)(3)
CreateDynamicObject(2885,807.50000000,-1368.69921875,22.60000038,0.00000000,0.00000000,90.00000000); //object(xref_garagedoor)(4)
CreateDynamicObject(2885,807.50000000,-1368.69995117,15.89999962,0.00000000,0.00000000,90.00000000); //object(xref_garagedoor)(5)
CreateDynamicObject(2885,834.50000000,-1385.00000000,21.50000000,0.00000000,0.00000000,180.00000000); //object(xref_garagedoor)(6)
CreateDynamicObject(2885,842.00000000,-1385.00000000,21.50000000,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(7)
CreateDynamicObject(2885,834.50000000,-1385.00000000,14.80000019,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(8)
CreateDynamicObject(2885,842.00000000,-1385.00000000,14.80000019,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(9)
CreateDynamicObject(1566,815.40002441,-1385.69995117,13.80000019,0.00000000,0.00000000,0.00000000); //object(cj_ws_door)(1)
CreateDynamicObject(3851,807.20001221,-1383.09997559,17.00000000,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(40)
CreateDynamicObject(3851,807.20001221,-1379.09997559,17.00000000,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(41)
CreateDynamicObject(3851,807.20001221,-1375.09997559,17.00000000,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(42)
CreateDynamicObject(3851,807.20001221,-1371.09997559,17.00000000,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(43)
CreateDynamicObject(3851,807.20001221,-1367.09997559,17.00000000,90.00000000,0.00000000,0.00000000); //object(carshowwin_sfsx)(44)
CreateDynamicObject(970,821.69921875,-1390.09960938,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
CreateDynamicObject(970,810.79998779,-1390.09997559,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(2)
CreateDynamicObject(970,819.59960938,-1390.09960938,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,812.89941406,-1390.09960938,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(4)
CreateDynamicObject(2885,822.39941406,-1384.79980469,19.00000000,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(11)
CreateDynamicObject(2885,812.79998779,-1384.80004883,19.00000000,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(12)
CreateDynamicObject(1215,814.90002441,-1390.09997559,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
CreateDynamicObject(1215,817.39941406,-1390.09960938,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
CreateDynamicObject(1215,823.79980469,-1390.09960938,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
CreateDynamicObject(1215,808.69921875,-1390.09960938,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
CreateDynamicObject(948,817.29998779,-1386.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(plant_pot_10)(1)
CreateDynamicObject(948,815.00000000,-1386.00000000,12.60000038,0.00000000,0.00000000,0.00000000); //object(plant_pot_10)(2)
CreateDynamicObject(1215,817.29980469,-1386.00000000,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
CreateDynamicObject(1215,815.00000000,-1385.90002441,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(12)
CreateDynamicObject(2631,823.00000000,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(1)
CreateDynamicObject(2632,821.09997559,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(1)
CreateDynamicObject(2631,819.20001221,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(2)
CreateDynamicObject(2632,817.29980469,-1388.19921875,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(2)
CreateDynamicObject(2631,815.40002441,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(3)
CreateDynamicObject(2632,813.50000000,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(3)
CreateDynamicObject(2631,811.59997559,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(4)
CreateDynamicObject(2632,809.70001221,-1388.19995117,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(4)
CreateDynamicObject(2631,809.70001221,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(5)
CreateDynamicObject(2632,811.59997559,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(5)
CreateDynamicObject(2631,813.50000000,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(6)
CreateDynamicObject(2632,815.40002441,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(6)
CreateDynamicObject(2631,817.29998779,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(7)
CreateDynamicObject(2632,819.20001221,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(7)
CreateDynamicObject(2631,821.09997559,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat1)(8)
CreateDynamicObject(2632,823.00000000,-1384.30004883,12.60000038,0.00000000,0.00000000,90.00000000); //object(gym_mat02)(8)
CreateDynamicObject(970,823.90002441,-1386.59997559,13.00000000,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
CreateDynamicObject(1215,823.79998779,-1388.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
CreateDynamicObject(970,808.79998779,-1386.59997559,13.00000000,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
CreateDynamicObject(1215,808.70001221,-1388.69995117,13.10000038,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
CreateDynamicObject(2773,815.40002441,-1386.90002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(1)
CreateDynamicObject(2773,817.00000000,-1386.90002441,13.19999981,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar)(2)
CreateDynamicObject(2885,842.00000000,-1384.59997559,14.80000019,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(9)
CreateDynamicObject(2885,842.00000000,-1384.59997559,21.50000000,0.00000000,0.00000000,179.99450684); //object(xref_garagedoor)(7)
CreateDynamicObject(2885,869.00000000,-1371.50000000,15.50000000,0.00000000,90.00000000,270.00000000); //object(xref_garagedoor)(7)
CreateDynamicObject(8425,857.50000000,-1379.79980469,15.50000000,0.00000000,0.00000000,270.00000000); //object(villa_inn01_lvs)(1)
CreateDynamicObject(8425,857.00000000,-1371.90002441,15.50000000,0.00000000,0.00000000,90.00000000); //object(villa_inn01_lvs)(2)
CreateDynamicObject(11313,853.39941406,-1384.50000000,14.50000000,0.00000000,0.00000000,90.00000000); //object(modshopdoor_sfse)(1)
CreateDynamicObject(970,845.59997559,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,841.50000000,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,837.40002441,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,861.40002441,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,865.50000000,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,869.59997559,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,873.70001221,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,877.79998779,-1389.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(640,860.20001221,-1384.80004883,13.30000019,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2)(1)
CreateDynamicObject(640,864.90002441,-1384.80004883,13.30000019,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2)(2)
CreateDynamicObject(640,860.19921875,-1384.79980469,13.30000019,0.00000000,0.00000000,270.00000000); //object(kb_planter_bush2)(3)
CreateDynamicObject(970,863.70001221,-1385.19995117,12.80000019,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,859.59997559,-1385.19995117,12.80000019,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,865.79998779,-1385.19995117,12.80000019,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,857.50000000,-1383.09997559,12.80000019,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(3)
CreateDynamicObject(970,867.90002441,-1383.09997559,12.80000019,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(3)
CreateObject(10010,819.20001221,-1385.90002441,4201.50000000,0.00000000,0.00000000,180.00000000); //object(ugcarpark_sfe)(1)
CreateDynamicObject(11313,856.00000000,-1415.90002441,4203.29980469,0.00000000,0.00000000,90.00000000); //object(modshopdoor_sfse)(3)
CreateDynamicObject(8425,854.09997559,-1420.59997559,4204.50000000,0.00000000,0.00000000,90.00000000); //object(villa_inn01_lvs)(3)
CreateDynamicObject(8425,854.09997559,-1420.59997559,4211.00000000,0.00000000,0.00000000,90.00000000); //object(villa_inn01_lvs)(4)
CreateDynamicObject(3578,852.40002441,-1417.00000000,4201.29980469,0.00000000,0.00000000,90.00000000); //object(dockbarr1_la)(1)
CreateDynamicObject(3578,851.50000000,-1406.90002441,4201.29980469,0.00000000,0.00000000,100.25000000); //object(dockbarr1_la)(2)
CreateDynamicObject(1232,859.20001221,-1389.40002441,15.30000019,0.00000000,0.00000000,0.00000000); //object(streetlamp1)(1)
CreateDynamicObject(1232,847.79998779,-1389.50000000,15.30000019,0.00000000,0.00000000,182.00000000); //object(streetlamp1)(2)
// Gold+ VIP room
CreateDynamicObject(8378,2783.24511719,2408.79687500,1238.85534668,90.00000000,179.99450684,179.99450684); //object(vgsbighngrdoor)(1)
CreateDynamicObject(8378,2783.02050781,2398.24707031,1238.85534668,90.00000000,179.99450684,179.98352051); //object(vgsbighngrdoor)(2)
CreateDynamicObject(14639,2791.74658203,2411.67407227,1240.83117676,0.00000000,0.00000000,0.00000000); //object(tr_man_main)(1)
CreateDynamicObject(2367,2785.66162109,2401.78881836,1239.50109863,0.00000000,0.00000000,90.00000000); //object(shop_counter_2)(1)
CreateDynamicObject(2367,2785.66015625,2403.74072266,1239.50109863,0.00000000,0.00000000,90.00000000); //object(shop_counter_2)(2)
CreateDynamicObject(2367,2785.73339844,2406.03417969,1239.50109863,0.00000000,0.00000000,90.00000000); //object(shop_counter_2)(3)
CreateDynamicObject(2367,2785.35498047,2408.48022461,1239.50109863,0.00000000,0.00000000,146.25000000); //object(shop_counter_2)(4)
CreateDynamicObject(2367,2788.91699219,2412.19091797,1239.50109863,0.00000000,0.00000000,0.00000000); //object(shop_counter_2)(6)
CreateDynamicObject(2367,2789.62158203,2411.74365234,1239.50109863,0.00000000,0.00000000,0.00000000); //object(shop_counter_2)(8)
CreateDynamicObject(2367,2791.66015625,2411.77294922,1239.50109863,0.00000000,0.00000000,0.00000000); //object(shop_counter_2)(9)
CreateDynamicObject(2367,2793.50781250,2411.80859375,1239.50109863,0.00000000,0.00000000,0.00000000); //object(shop_counter_2)(10)
CreateDynamicObject(3037,2808.32519531,2394.46289062,1241.72961426,0.00000000,0.00000000,0.00000000); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2792.66015625,2412.26855469,1241.72961426,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(2)
CreateDynamicObject(3037,2785.11450195,2404.68090820,1241.72961426,0.00000000,0.00000000,0.00000000); //object(warehouse_door2b)(4)
CreateDynamicObject(3037,2785.14282227,2404.30737305,1241.72961426,0.00000000,0.00000000,0.00000000); //object(warehouse_door2b)(5)
CreateDynamicObject(3037,2783.94091797,2394.24291992,1241.72961426,0.00000000,0.00000000,0.00000000); //object(warehouse_door2b)(6)
CreateDynamicObject(3037,2784.58911133,2402.62988281,1241.72961426,0.00000000,0.00000000,0.00000000); //object(warehouse_door2b)(7)
CreateDynamicObject(3037,2780.07910156,2390.04443359,1241.72961426,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(10)
CreateDynamicObject(3037,2784.13867188,2389.07861328,1241.72961426,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(11)
CreateDynamicObject(3037,2785.13769531,2388.53100586,1241.72961426,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(12)
CreateDynamicObject(3037,2790.27709961,2388.36987305,1241.72961426,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(13)
CreateDynamicObject(3037,2802.30566406,2389.04101562,1238.80969238,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(14)
CreateDynamicObject(3037,2811.39453125,2389.04101562,1241.72961426,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(15)
CreateDynamicObject(3037,2802.09179688,2389.01464844,1245.81933594,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(16)
CreateDynamicObject(1557,2794.23217773,2388.58007812,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gen_doorext19)(1)
CreateDynamicObject(1557,2794.23144531,2388.58007812,1242.03112793,0.00000000,0.00000000,0.00000000); //object(gen_doorext19)(3)
CreateDynamicObject(3037,2800.37792969,2389.03662109,1238.80969238,0.00000000,0.00000000,90.00000000); //object(warehouse_door2b)(14)
CreateDynamicObject(3037,2808.22973633,2402.06494141,1241.72961426,0.00000000,0.00000000,5.50000000); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2808.18774414,2403.19165039,1241.72961426,0.00000000,0.00000000,15.49865723); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2807.62158203,2405.21508789,1241.72961426,0.00000000,0.00000000,28.49621582); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2806.19482422,2407.65747070,1241.72961426,0.00000000,0.00000000,39.49304199); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2805.01196289,2409.15185547,1241.72961426,0.00000000,0.00000000,51.49035645); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2802.00463867,2411.15405273,1241.72961426,0.00000000,0.00000000,67.98742676); //object(warehouse_door2b)(1)
CreateDynamicObject(3037,2802.19604492,2412.18774414,1241.72961426,0.00000000,0.00000000,89.00000000); //object(warehouse_door2b)(2)
CreateDynamicObject(8378,2797.67089844,2398.59960938,1245.84448242,90.00000000,179.99450684,179.99450684); //object(vgsbighngrdoor)(1)
CreateDynamicObject(8378,2799.55175781,2411.31054688,1245.84448242,90.00000000,179.99450684,179.99450684); //object(vgsbighngrdoor)(1)
CreateDynamicObject(2367,2797.02856445,2411.85937500,1239.40112305,0.00000000,0.00000000,356.50000000); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2798.89013672,2411.65283203,1239.40112305,0.00000000,0.00000000,346.74536133); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2799.80737305,2411.35571289,1239.40112305,0.00000000,0.00000000,342.99499512); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2801.32983398,2410.95849609,1239.40112305,0.00000000,0.00000000,331.49316406); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2803.54150391,2409.68872070,1239.40112305,0.00000000,0.00000000,319.24047852); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2805.15649414,2408.32348633,1239.40112305,0.00000000,0.00000000,302.48522949); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2806.10351562,2406.79370117,1239.40112305,0.00000000,0.00000000,298.23107910); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2807.07128906,2404.81079102,1239.40112305,0.00000000,0.00000000,286.97937012); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2807.68261719,2402.74438477,1239.40112305,0.00000000,0.00000000,275.97937012); //object(shop_counter_2)(10)
CreateDynamicObject(2367,2807.76220703,2401.86279297,1239.40112305,0.00000000,0.00000000,271.47656250); //object(shop_counter_2)(10)
CreateDynamicObject(3854,2807.60595703,2400.44873047,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gay_telgrphpole)(1)
CreateDynamicObject(3854,2807.54174805,2400.96850586,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gay_telgrphpole)(2)
CreateDynamicObject(3854,2807.66699219,2400.67333984,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gay_telgrphpole)(3)
CreateDynamicObject(3854,2808.34960938,2400.29492188,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gay_telgrphpole)(4)
CreateDynamicObject(3854,2807.98095703,2400.43408203,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gay_telgrphpole)(5)
CreateDynamicObject(3854,2808.13964844,2400.99804688,1239.53112793,0.00000000,0.00000000,0.00000000); //object(gay_telgrphpole)(6)
CreateDynamicObject(1557,2785.17285156,2388.63671875,1242.03112793,0.00000000,0.00000000,90.24853516); //object(gen_doorext19)(5)
CreateDynamicObject(1557,2785.15771484,2388.64892578,1239.53112793,0.00000000,0.00000000,89.99853516); //object(gen_doorext19)(6)
CreateDynamicObject(3037,2788.37548828,2413.18457031,1241.72961426,0.00000000,0.00000000,126.50000000); //object(warehouse_door2b)(2)
CreateDynamicObject(3037,2785.93969727,2411.70190430,1241.72961426,0.00000000,0.00000000,151.24658203); //object(warehouse_door2b)(2)
CreateDynamicObject(3854,2797.07617188,2411.26171875,1239.53112793,0.00000000,0.00000000,313.74755859); //object(gay_telgrphpole)(7)
CreateDynamicObject(3854,2796.77734375,2411.25292969,1239.53112793,0.00000000,0.00000000,313.74755859); //object(gay_telgrphpole)(8)
CreateDynamicObject(3854,2796.40234375,2411.26660156,1239.53112793,0.00000000,0.00000000,313.74206543); //object(gay_telgrphpole)(9)
CreateDynamicObject(3854,2796.39794922,2412.05029297,1239.53112793,0.00000000,0.00000000,313.74755859); //object(gay_telgrphpole)(10)
CreateDynamicObject(3854,2796.39697266,2411.70947266,1239.53112793,0.00000000,0.00000000,313.74755859); //object(gay_telgrphpole)(11)
CreateDynamicObject(3854,2797.14160156,2411.71044922,1239.53112793,0.00000000,0.00000000,313.74755859); //object(gay_telgrphpole)(12)
CreateDynamicObject(3854,2797.07104492,2412.25317383,1239.53112793,0.00000000,0.00000000,313.74755859); //object(gay_telgrphpole)(13)
CreateDynamicObject(4028,2772.93994141,2325.31835938,1240.77282715,0.00000000,0.00000000,126.00000000); //object(lanstap)(2)
CreateDynamicObject(4033,2714.31811523,2331.49536133,1226.63452148,0.00000000,0.00000000,0.00000000); //object(fightplaza1_lan)(1)
CreateDynamicObject(4141,2714.29467773,2316.75903320,1244.14880371,0.00000000,0.00000000,0.00000000); //object(hotelexterior1_lan)(1)
CreateDynamicObject(5408,2865.92114258,2292.19921875,1248.68542480,0.00000000,0.00000000,0.00000000); //object(laeexaminerbuild1)(1)
CreateDynamicObject(5476,2875.73803711,2399.84887695,1234.00378418,0.00000000,0.00000000,0.00000000); //object(laeidleproj01)(2)
CreateDynamicObject(4019,2772.02539062,2201.21777344,1226.07568359,0.00000000,0.00000000,0.00000000); //object(newbuildsm01)(1)
CreateDynamicObject(4079,2799.79101562,2407.20996094,1242.81372070,0.00000000,0.00000000,267.99499512); //object(twintjail1_lan)(1)
CreateDynamicObject(3984,2775.56787109,2327.20361328,1237.12023926,0.00000000,0.00000000,0.00000000); //object(churchprog1_lan)(1)
CreateDynamicObject(4000,2779.60498047,2408.78369141,1225.83374023,0.00000000,0.00000000,0.00000000); //object(twintjail2_lan)(1)
CreateDynamicObject(5474,2924.07031250,2396.92065430,1226.15185547,0.00000000,0.00000000,0.00000000); //object(laeidlewood02)(1)
CreateDynamicObject(4156,2732.26074219,2372.28515625,1226.30834961,0.00000000,0.00000000,0.00000000); //object(roads17_lan)(2)
// CreateDynamicObject(5441,1902.77539062,-1581.88366699,33.49028778,0.00000000,0.00000000,0.00000000); //object(laeroad12)(2)
CreateDynamicObject(4125,2758.75415039,2468.06909180,1231.06738281,0.00000000,0.00000000,0.00000000); //object(gsfreeway1_lan)(1)
CreateDynamicObject(6123,2741.86816406,2274.62622070,1226.15930176,0.00000000,0.00000000,0.00000000); //object(lawroads_law17)(2)
CreateDynamicObject(6121,2814.07568359,2352.91967773,1226.34643555,0.00000000,0.00000000,270.00000000); //object(lawroads_law15)(1)
CreateDynamicObject(6117,2862.17993164,2362.10473633,1226.35290527,0.00000000,0.00000000,0.00000000); //object(lawroads_law11)(1)
CreateDynamicObject(6121,2816.98437500,2430.84741211,1226.34643555,0.00000000,0.00000000,270.00000000); //object(lawroads_law15)(2)
CreateDynamicObject(4079,2755.83789062,2405.47851562,1242.71362305,0.00000000,0.00000000,87.98950195); //object(twintjail1_lan)(1)
CreateDynamicObject(6121,2814.03857422,2213.08740234,1226.34643555,0.00000000,0.00000000,270.00000000); //object(lawroads_law15)(4)
CreateDynamicObject(6117,2813.95507812,2274.86523438,1226.35290527,0.00000000,0.00000000,270.00000000); //object(lawroads_law11)(3)
CreateDynamicObject(6117,2861.88159180,2222.50488281,1226.35290527,0.00000000,0.00000000,180.00000000); //object(lawroads_law11)(4)
CreateDynamicObject(6117,2770.79345703,2242.87500000,1226.35290527,0.00000000,0.00000000,179.99450684); //object(lawroads_law11)(5)
CreateDynamicObject(4027,2775.59765625,2272.69677734,1228.29064941,0.00000000,0.00000000,0.00000000); //object(langrasspatch)(1)
CreateDynamicObject(4018,2784.31054688,2258.12451172,1226.47509766,0.00000000,0.00000000,0.00000000); //object(newbuildsm02)(1)
CreateDynamicObject(5725,2854.03125000,2207.83813477,1235.39550781,0.00000000,0.00000000,0.00000000); //object(holpacific2_law)(1)
CreateDynamicObject(5725,2833.26318359,2168.41357422,1235.39550781,0.00000000,0.00000000,0.00000000); //object(holpacific2_law)(2)
CreateDynamicObject(5725,2828.74462891,2174.39013672,1235.39550781,0.00000000,0.00000000,90.00000000); //object(holpacific2_law)(3)
CreateDynamicObject(1846,2807.22558594,2394.47656250,1242.29052734,90.00000000,179.99450684,269.99450684); //object(shop_shelf04)(5)
CreateDynamicObject(1846,2807.22558594,2394.47656250,1242.29052734,90.00000000,179.99450684,269.99450684); //object(shop_shelf04)(6)
CreateDynamicObject(1846,2807.22558594,2394.47656250,1242.29052734,90.00000000,179.99450684,269.99450684); //object(shop_shelf04)(7)
CreateDynamicObject(18090,2791.54980469,2410.13671875,1242.09448242,0.00000000,0.00000000,90.00000000); //object(bar_bar1)(1)
CreateDynamicObject(1649,2784.57153320,2405.92651367,1242.09692383,270.00000000,180.00000000,89.99923706); //object(wglasssmash)(1)
CreateDynamicObject(1649,2784.56396484,2403.42846680,1242.09692383,270.00000000,179.99450684,89.99450684); //object(wglasssmash)(2)
CreateDynamicObject(1518,2785.08325195,2407.61010742,1241.33691406,0.00000000,0.00000000,90.00000000); //object(dyn_tv_2)(1)
CreateDynamicObject(1518,2785.10742188,2404.98974609,1241.33691406,0.00000000,0.00000000,90.00000000); //object(dyn_tv_2)(2)
CreateDynamicObject(1518,2785.08471680,2401.91406250,1241.33691406,0.00000000,0.00000000,90.00000000); //object(dyn_tv_2)(3)
CreateDynamicObject(1716,2795.83032227,2408.04321289,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(1)
CreateDynamicObject(1716,2794.69970703,2408.02954102,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(2)
CreateDynamicObject(1716,2793.31811523,2407.98242188,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(3)
CreateDynamicObject(1716,2791.84155273,2407.92749023,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(4)
CreateDynamicObject(1716,2790.09545898,2407.87158203,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(5)
CreateDynamicObject(1716,2787.36865234,2408.00561523,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(6)
CreateDynamicObject(1716,2787.41064453,2406.68554688,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(7)
CreateDynamicObject(1716,2787.36914062,2405.31640625,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(8)
CreateDynamicObject(1716,2787.37963867,2403.93701172,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(9)
CreateDynamicObject(1716,2787.32519531,2402.48437500,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_slot_stool)(10)
CreateDynamicObject(1665,2785.61328125,2407.02905273,1240.56286621,0.00000000,0.00000000,0.00000000); //object(propashtray1)(1)
CreateDynamicObject(1665,2785.98754883,2404.33642578,1240.56286621,0.00000000,0.00000000,0.00000000); //object(propashtray1)(2)
CreateDynamicObject(1665,2786.06811523,2401.39111328,1240.56286621,0.00000000,0.00000000,138.00000000); //object(propashtray1)(3)
CreateDynamicObject(1548,2785.28466797,2406.21289062,1240.55468750,0.00000000,0.00000000,0.00000000); //object(cj_drip_tray)(1)
CreateDynamicObject(1548,2785.26513672,2402.81811523,1240.55468750,0.00000000,0.00000000,0.00000000); //object(cj_drip_tray)(2)
CreateDynamicObject(1551,2785.50585938,2407.99951172,1240.78259277,0.00000000,0.00000000,0.00000000); //object(dyn_wine_big)(1)
CreateDynamicObject(1543,2785.77758789,2402.04467773,1240.54235840,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(1)
CreateDynamicObject(1703,2799.90625000,2390.71191406,1239.49047852,0.00000000,0.00000000,179.99450684); //object(swank_couch_1)(1)
CreateDynamicObject(1703,2796.70312500,2391.98242188,1239.49047852,0.00000000,0.00000000,90.00000000); //object(swank_couch_1)(2)
CreateDynamicObject(1703,2796.70312500,2395.75585938,1239.49047852,0.00000000,0.00000000,90.00000000); //object(swank_couch_1)(3)
CreateDynamicObject(1703,2798.08496094,2398.72656250,1239.49047852,0.00000000,0.00000000,0.00000000); //object(swank_couch_1)(4)
CreateDynamicObject(1703,2805.83886719,2390.66210938,1239.49047852,0.00000000,0.00000000,179.99450684); //object(swank_couch_1)(5)
CreateDynamicObject(1703,2803.88378906,2398.74121094,1239.49047852,0.00000000,0.00000000,0.00000000); //object(swank_couch_1)(6)
CreateDynamicObject(3533,2795.77441406,2399.73144531,1243.77673340,0.00000000,0.00000000,0.00000000); //object(trdpillar01)(1)
CreateDynamicObject(2236,2801.35351562,2390.20043945,1239.53112793,0.00000000,0.00000000,0.00000000); //object(coffee_swank_1)(1)
CreateDynamicObject(2236,2798.57568359,2396.62695312,1239.53112793,0.00000000,0.00000000,0.00000000); //object(coffee_swank_1)(2)
CreateDynamicObject(2236,2797.61718750,2393.25244141,1239.53112793,0.00000000,0.00000000,270.25000000); //object(coffee_swank_1)(3)
CreateDynamicObject(1649,2799.71655273,2388.99877930,1242.13415527,0.00000000,0.00000000,180.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,2804.10473633,2388.99975586,1242.13415527,0.00000000,0.00000000,179.99450684); //object(wglasssmash)(2)
CreateDynamicObject(2898,2804.73120117,2389.10864258,1241.96386719,359.75000000,89.98983765,270.00000000); //object(funturf_law)(4)
CreateDynamicObject(2898,2799.32568359,2389.11669922,1241.96386719,359.74731445,89.98901367,269.99450684); //object(funturf_law)(5)
CreateDynamicObject(2755,2795.38403320,2391.57495117,1241.26257324,0.00000000,0.00000000,269.99996948); //object(dojo_wall)(1)
CreateDynamicObject(2755,2795.41625977,2397.44750977,1241.26257324,0.00000000,0.00000000,269.99450684); //object(dojo_wall)(2)
CreateDynamicObject(2755,2798.25195312,2400.01684570,1241.26257324,0.00000000,0.00000000,179.99450684); //object(dojo_wall)(3)
CreateDynamicObject(2755,2805.85229492,2400.03076172,1241.26257324,0.00000000,0.00000000,179.99450684); //object(dojo_wall)(4)
CreateDynamicObject(2395,2795.35937500,2398.84057617,1242.23107910,0.00000000,90.00000000,269.99890137); //object(cj_sports_wall)(1)
CreateDynamicObject(2395,2795.47705078,2396.08935547,1242.23107910,0.00000000,90.00000000,89.99203491); //object(cj_sports_wall)(2)
CreateDynamicObject(2395,2795.33642578,2392.94360352,1242.23107910,0.00000000,90.00000000,269.99450684); //object(cj_sports_wall)(3)
CreateDynamicObject(2395,2795.44580078,2390.18725586,1242.23107910,0.00000000,90.00000000,89.98901367); //object(cj_sports_wall)(4)
CreateDynamicObject(3533,2795.41381836,2389.39672852,1243.77673340,0.00000000,0.00000000,0.00000000); //object(trdpillar01)(1)
CreateDynamicObject(2395,2796.85400391,2399.93212891,1242.23107910,0.00000000,90.00000000,0.00000000); //object(cj_sports_wall)(5)
CreateDynamicObject(2395,2799.59814453,2400.07226562,1242.23107910,0.00000000,90.00000000,180.00000000); //object(cj_sports_wall)(6)
CreateDynamicObject(2395,2807.31396484,2400.06567383,1242.23107910,0.00000000,90.00000000,179.99450684); //object(cj_sports_wall)(7)
CreateDynamicObject(2395,2804.48632812,2399.96484375,1242.23107910,0.00000000,90.00000000,0.00000000); //object(cj_sports_wall)(10)
CreateDynamicObject(2231,2808.53466797,2392.17211914,1242.00842285,0.00000000,0.00000000,270.25000000); //object(swank_speaker_3)(1)
CreateDynamicObject(2231,2808.43090820,2396.36840820,1242.00842285,0.00000000,0.00000000,270.24719238); //object(swank_speaker_3)(2)
CreateDynamicObject(2230,2808.45214844,2394.35937500,1239.53112793,0.00000000,90.00000000,270.00000000); //object(swank_speaker_2)(1)
CreateDynamicObject(2230,2808.45776367,2394.35888672,1240.13110352,180.00000000,90.00000000,90.00549316); //object(swank_speaker_2)(2)
CreateDynamicObject(2230,2808.08081055,2388.95214844,1239.53112793,0.00000000,0.00000000,231.99998474); //object(swank_speaker_2)(3)
CreateDynamicObject(2230,2808.41748047,2400.06494141,1239.53112793,0.00000000,0.00000000,325.99832153); //object(swank_speaker_2)(4)
CreateDynamicObject(1670,2798.70971680,2397.14965820,1240.05664062,0.00000000,0.00000000,81.75000000); //object(propcollecttable)(1)
CreateDynamicObject(1670,2798.24169922,2392.70068359,1240.05664062,0.00000000,0.00000000,81.74926758); //object(propcollecttable)(2)
CreateDynamicObject(1235,2795.78417969,2411.50341797,1240.03417969,0.00000000,0.00000000,0.00000000); //object(wastebin)(1)
CreateDynamicObject(2109,2803.70239258,2403.28247070,1239.92224121,0.00000000,0.00000000,0.00000000); //object(low_dinning_3)(1)
CreateDynamicObject(1704,2803.28930664,2405.13476562,1239.53112793,0.00000000,0.00000000,0.00000000); //object(kb_chair03)(1)
CreateDynamicObject(1704,2805.60058594,2403.64990234,1239.53112793,0.00000000,0.00000000,270.50000000); //object(kb_chair03)(2)
CreateDynamicObject(1704,2804.23046875,2401.51000977,1239.53112793,0.00000000,0.00000000,179.24987793); //object(kb_chair03)(3)
CreateDynamicObject(1704,2801.83837891,2402.81372070,1239.53112793,0.00000000,0.00000000,89.74740601); //object(kb_chair03)(4)
CreateDynamicObject(1704,2797.39550781,2404.42773438,1239.53112793,0.00000000,0.00000000,358.25000000); //object(kb_chair03)(5)
CreateDynamicObject(1704,2798.16625977,2400.81250000,1239.53112793,0.00000000,0.00000000,179.24743652); //object(kb_chair03)(6)
CreateDynamicObject(2109,2797.77148438,2402.70410156,1239.92224121,0.00000000,0.00000000,0.00000000); //object(low_dinning_3)(2)
CreateDynamicObject(1704,2798.51025391,2409.59643555,1239.53112793,0.00000000,0.00000000,80.75000000); //object(kb_chair03)(7)
CreateDynamicObject(1704,2802.27539062,2409.52099609,1239.53112793,0.00000000,0.00000000,254.99987793); //object(kb_chair03)(8)
CreateDynamicObject(2109,2800.38696289,2409.66967773,1239.92224121,0.00000000,0.00000000,356.25000000); //object(low_dinning_3)(3)
CreateDynamicObject(2800,2800.28247070,2409.56176758,1240.14521484,0.00000000,0.00000000,0.00000000); //object(castable2top)(1)
CreateDynamicObject(2894,2803.68530273,2403.32006836,1240.34521484,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook)(1)
CreateDynamicObject(1543,2794.46435547,2411.56835938,1241.20043945,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(1)
CreateDynamicObject(1543,2794.36425781,2411.56445312,1241.20043945,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(2)
CreateDynamicObject(1543,2794.26464844,2411.56054688,1241.20043945,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(4)
CreateDynamicObject(1543,2794.16503906,2411.55664062,1241.20043945,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(5)
CreateDynamicObject(1543,2794.06542969,2411.55273438,1241.20043945,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(6)
CreateDynamicObject(1543,2793.96679688,2411.52392578,1241.20043945,0.00000000,0.00000000,44.00000000); //object(cj_beer_b_2)(7)
CreateDynamicObject(1517,2792.72436523,2411.60913086,1240.91137695,0.00000000,0.00000000,96.00000000); //object(dyn_wine_break)(1)
CreateDynamicObject(1517,2790.34960938,2411.65405273,1240.91137695,0.00000000,0.00000000,95.99853516); //object(dyn_wine_break)(2)
CreateDynamicObject(1517,2791.64892578,2411.62329102,1240.91137695,0.00000000,0.00000000,95.99853516); //object(dyn_wine_break)(3)
CreateDynamicObject(1520,2792.24121094,2411.63623047,1240.76379395,0.00000000,0.00000000,268.25003052); //object(dyn_wine_bounce)(1)
CreateDynamicObject(1520,2790.91162109,2411.68750000,1240.76379395,0.00000000,0.00000000,268.24768066); //object(dyn_wine_bounce)(2)
CreateDynamicObject(1664,2789.24487305,2411.44165039,1241.37060547,0.00000000,0.00000000,76.00000000); //object(propwinebotl2)(1)
CreateDynamicObject(1664,2789.08227539,2411.49707031,1241.37060547,0.00000000,0.00000000,75.99792480); //object(propwinebotl2)(4)
CreateDynamicObject(1664,2788.92797852,2411.48291016,1241.37060547,0.00000000,0.00000000,75.99792480); //object(propwinebotl2)(5)
CreateDynamicObject(1664,2788.76953125,2411.46923828,1241.37060547,0.00000000,0.00000000,75.99792480); //object(propwinebotl2)(6)
CreateDynamicObject(1667,2797.80859375,2403.21606445,1240.43383789,0.00000000,0.00000000,0.00000000); //object(propwineglass1)(1)
CreateDynamicObject(1667,2797.75976562,2402.12622070,1240.43383789,0.00000000,0.00000000,0.00000000); //object(propwineglass1)(2)
CreateDynamicObject(1543,2795.78393555,2408.86035156,1240.57849121,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(8)
CreateDynamicObject(1543,2793.28173828,2408.84179688,1240.57849121,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(9)
CreateDynamicObject(1543,2788.47802734,2408.77514648,1240.57849121,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(10)
CreateDynamicObject(1544,2789.54907227,2408.86914062,1240.57849121,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_1)(1)
CreateDynamicObject(1544,2790.39624023,2408.71533203,1240.57849121,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_1)(2)
CreateDynamicObject(1546,2794.76269531,2408.80566406,1240.66760254,0.00000000,0.00000000,0.00000000); //object(cj_pint_glass)(1)
CreateDynamicObject(1548,2791.97314453,2408.82666016,1240.59082031,0.00000000,0.00000000,0.00000000); //object(cj_drip_tray)(1)
CreateDynamicObject(1548,2794.80249023,2408.82958984,1240.59082031,0.00000000,0.00000000,0.00000000); //object(cj_drip_tray)(2)
CreateDynamicObject(18650,2795.71875000,2411.61718750,1244.20742187,0.00000000,0.00000000,0.00000000); //object(gneon)(1)
CreateDynamicObject(18650,2807.28515625,2399.69921875,1244.20739746,0.00000000,0.00000000,271.49963379); //object(gneon)(4)
CreateDynamicObject(18885,2787.13037109,2389.61181641,1240.66625977,0.00000000,0.00000000,179.98596191); //object(locker)(4)
//////
CreateDynamicObject(2949, 317.199737, -1513.150512, 23.942632, 0.000000, 0.000000, 325.997314); // FBI door outside
CreateDynamicObject(3089, 301.648437, 191.891983, 1007.500854, 0.000000, 0.000000, 270.000000); // FBI door inside
//---------------FBI HQ Interior--------------------//
CreateDynamicObject(1536,293.27246094,-1481.46582031,-34.53342056,0.00000000,0.00000000,179.99450684,600); //object(gen_doorext15) (2)
CreateDynamicObject(1536,290.27832031,-1481.50488281,-34.53342056,0.00000000,0.00000000,0.00000000,600); //object(gen_doorext15) (2)
CreateDynamicObject(1776,291.19232178,-1512.44006348,-45.03078842,0.00000000,0.00000000,90.00000000,600); //object(cj_candyvendor) (2)
FBILobbyLeftBTN[0] = CreateButton(297.66613770,-1498.67749023,-44.59006119,0.79565430); //Lobby Button Left
FBILobbyLeftBTN[1] = CreateButton(297.24850464,-1498.23107910,-44.59006119,180); //Lobby Button Left
FBILobbyRightBTN[0] = CreateButton(300.05300903,-1521.40747070,-44.59006119,180); //Lobby Button Right
FBILobbyRightBTN[1] = CreateButton(300.16033936,-1521.84387207,-44.59006119,0); //Lobby Button Right
FBIPrivateBTN[0] = CreateButton(298.87384033,-1495.87316895,-27.32773209,270); //Private Office Button
FBIPrivateBTN[1] = CreateButton(300.49453735,-1495.33837891,-27.28091812,180.49487305); //Private Office Button
FBIPrivate[0] = CreateDynamicObject(1536,299.29986572,-1492.82666016,-28.73300552,0.00000000,0.00000000,270.00000000,600); //Private Office Door Left
FBIPrivate[1] = CreateDynamicObject(1536,299.33737183,-1495.83911133,-28.73300552,0.00000000,0.00000000,90.00000000,600); //Private Office Door Right
FBILobbyLeft = CreateDynamicObject(1536,295.40136719,-1498.43457031,-46.13965225,0.00000000,0.00000000,0.00000000,600); //Lobby Door Left
FBILobbyRight = CreateDynamicObject(1536,302.39355469,-1521.62988281,-46.13965225,0.00000000,0.00000000,179.99450684,600); //Lobby Door Right
CreateDynamicObject(14858,309.24609375,-1498.32812500,-29.38235855,0.00000000,0.00000000,270.00000000); //object(veg_pol_main1) (1)
CreateDynamicObject(14596,294.02929688,-1490.56835938,-35.43539047,0.00000000,0.00000000,179.99450684); //object(paperchase_stairs) (1)
CreateDynamicObject(14602,291.64355469,-1505.73730469,-40.76299286,0.00000000,0.00000000,179.99450684); //object(paperchase01) (1)
CreateDynamicObject(14593,308.32128906,-1535.68750000,-43.80562592,0.00000000,0.00000000,179.99450684); //object(paperchase04) (1)
CreateDynamicObject(8231,308.96191406,-1496.32617188,-38.62692261,0.00000000,0.00000000,90.00000000); //object(vgsbikeschl05) (1)
CreateDynamicObject(2395,300.22045898,-1490.45019531,-40.34618378,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,300.22143555,-1495.39575195,-40.34618378,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (2)
CreateDynamicObject(2395,300.21777344,-1492.38110352,-38.05657196,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (3)
CreateDynamicObject(1523,300.42980957,-1495.13427734,-40.51028061,0.00000000,0.00000000,90.00000000); //object(gen_doorext10) (2)
CreateDynamicObject(1491,317.16406250,-1489.74243164,-40.33905029,0.00000000,0.00000000,179.99450684); //object(gen_doorint01) (3)
CreateDynamicObject(18001,300.45489502,-1489.20227051,-38.69902802,0.00000000,0.00000000,90.00000000); //object(int_barbera07) (2)
CreateDynamicObject(8169,300.41653442,-1489.28137207,-37.95204163,73.49853516,270.00000000,179.99450684); //object(vgs_guardhseflr) (2)
CreateDynamicObject(2197,300.78768921,-1490.73352051,-40.85678101,90.00000000,0.00000000,0.00000000); //object(filling_cabinet) (1)
CreateDynamicObject(2197,300.78659058,-1489.06945801,-40.85678101,90.00000000,0.00000000,0.00000000); //object(filling_cabinet) (2)
CreateDynamicObject(2197,300.78652954,-1487.39941406,-40.85678101,90.00000000,0.00000000,0.00000000); //object(filling_cabinet) (3)
CreateDynamicObject(2515,300.82122803,-1491.78662109,-39.25311279,0.00000000,0.00000000,90.00000000); //object(cj_bs_sink) (1)
CreateDynamicObject(2515,300.81488037,-1490.82836914,-39.25311279,0.00000000,0.00000000,90.00000000); //object(cj_bs_sink) (1)
CreateDynamicObject(2515,300.80892944,-1489.84216309,-39.25311279,0.00000000,0.00000000,90.00000000); //object(cj_bs_sink) (1)
CreateDynamicObject(2515,300.80908203,-1488.83654785,-39.25311279,0.00000000,0.00000000,90.00000000); //object(cj_bs_sink) (1)
CreateDynamicObject(2738,313.09997559,-1491.99609375,-39.72719574,0.00000000,0.00000000,90.00000000); //object(cj_toilet_bs) (2)
CreateDynamicObject(2957,314.01480103,-1489.76110840,-38.71026230,0.00000000,90.00000000,0.31311035); //object(chinatgaragedoor) (2)
CreateDynamicObject(2957,312.46731567,-1491.96643066,-38.71386337,0.00000000,0.00000000,90.00000000); //object(chinatgaragedoor) (3)
CreateDynamicObject(2957,312.46868896,-1491.96606445,-38.47619247,0.00000000,0.00000000,90.00000000); //object(chinatgaragedoor) (4)
CreateDynamicObject(2957,318.77011108,-1489.75573730,-38.71026230,0.00000000,90.00000000,0.00000000); //object(chinatgaragedoor) (5)
CreateDynamicObject(2957,317.91894531,-1489.73242188,-36.22134018,0.00000000,0.00000000,179.99450684); //object(chinatgaragedoor) (6)
CreateDynamicObject(2602,310.02233887,-1498.55773926,-39.60855103,0.00000000,0.00000000,225.12634277); //object(police_cell_toilet) (1)
CreateDynamicObject(2602,311.27764893,-1498.55688477,-39.60855103,0.00000000,0.00000000,225.12084961); //object(police_cell_toilet) (2)
CreateDynamicObject(2602,312.52236938,-1498.55688477,-39.60855103,0.00000000,0.00000000,225.12084961); //object(police_cell_toilet) (3)
CreateDynamicObject(2741,300.51300049,-1487.71777344,-38.53912735,0.00000000,0.00000000,90.19226074); //object(cj_soap_disp) (1)
CreateDynamicObject(2742,300.63558960,-1493.05334473,-38.75522995,0.00000000,0.00000000,90.00000000); //object(cj_handdrier) (1)
CreateDynamicObject(2685,300.49490356,-1495.37646484,-38.65332794,0.00000000,0.00000000,90.04394531); //object(cj_food_post1) (1)
CreateDynamicObject(1522,276.98992920,-1506.53881836,-46.13738251,0.00000000,0.00000000,90.00000000); //object(gen_doorshop3) (1)
CreateDynamicObject(3798,301.63208008,-1521.53662109,-48.13918304,0.00000000,0.00000000,0.00000000); //object(acbox3_sfs) (1)
CreateDynamicObject(14420,301.31414795,-1504.62548828,-25.47793198,0.00000000,0.00000000,270.00000000); //object(madddoggs09) (1)
CreateDynamicObject(2395,296.75616455,-1490.17004395,-28.86031342,0.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,299.82714844,-1492.76855469,-28.86031342,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2952,299.73284912,-1476.11962891,-28.81253433,0.00000000,0.00000000,0.00000000); //object(kmb_gimpdoor) (1)
CreateDynamicObject(2952,299.73013306,-1473.99279785,-28.81253433,0.00000000,0.00000000,0.00000000); //object(kmb_gimpdoor) (2)
CreateDynamicObject(10558,307.77490234,-1490.10229492,-26.71455383,0.00000000,0.00000000,270.00000000); //object(tbnsfs) (4)
CreateDynamicObject(10558,303.61007690,-1474.12097168,-26.71455383,0.00000000,0.00000000,270.00000000); //object(tbnsfs) (5)
CreateDynamicObject(12814,313.29492188,-1478.75097656,-28.73871231,0.00000000,0.00000000,179.99450684); //object(cuntyeland04) (1)
CreateDynamicObject(12814,313.79980469,-1473.21289062,-34.54065323,0.00000000,0.00000000,0.00000000); //object(cuntyeland04) (2)
CreateDynamicObject(5066,310.43295288,-1484.74877930,-33.05167389,0.00000000,0.00000000,180.00000000); //object(mondoshave_las) (1)
CreateDynamicObject(14598,303.44128418,-1505.88110352,-30.57250977,0.00000000,0.00000000,179.99450684); //object(paperchase_glass) (1)
CreateDynamicObject(2395,305.25082397,-1489.78857422,-28.86031342,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,301.95947266,-1490.32165527,-28.86031342,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,301.95996094,-1494.03027344,-28.86031342,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,303.02163696,-1495.31762695,-28.86031342,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(10558,299.79708862,-1485.71166992,-26.71455383,0.00000000,0.00000000,0.00000000); //object(tbnsfs) (5)
CreateDynamicObject(10558,299.79199219,-1477.44433594,-26.71455383,0.00000000,0.00000000,0.00000000); //object(tbnsfs) (5)
CreateDynamicObject(10558,308.07742310,-1477.47680664,-26.71455383,0.00000000,0.00000000,0.00000000); //object(tbnsfs) (5)
CreateDynamicObject(10558,308.07962036,-1485.49145508,-26.71455383,0.00000000,0.00000000,0.00000000); //object(tbnsfs) (5)
CreateDynamicObject(2395,303.70001221,-1495.32324219,-34.54189301,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,303.47012329,-1481.95263672,-34.54189301,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,303.47064209,-1485.67785645,-34.54189301,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,303.47103882,-1489.40173340,-34.54189301,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,303.47222900,-1493.12512207,-34.54189301,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,300.50918579,-1485.34570312,-34.54189301,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,300.50698853,-1489.05407715,-34.54189301,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,300.50997925,-1492.77001953,-34.54189301,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(2395,300.50823975,-1484.68981934,-34.54189301,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (1)
CreateDynamicObject(14782,309.60202026,-1543.15441895,-45.20714951,0.00000000,0.00000000,90.00000000); //object(int3int_boxing30) (1)
CreateDynamicObject(14782,309.58764648,-1536.19519043,-45.20714951,0.00000000,0.00000000,90.00000000); //object(int3int_boxing30) (2)
CreateDynamicObject(1827,305.07128906,-1533.61816406,-46.13375092,0.00000000,0.00000000,0.00000000); //object(man_sdr_tables) (1)
CreateDynamicObject(1811,304.16955566,-1531.93151855,-45.50744629,0.00000000,0.00000000,117.60995483); //object(med_din_chair_5) (1)
CreateDynamicObject(1811,305.66729736,-1531.85888672,-45.50744629,0.00000000,0.00000000,69.65365601); //object(med_din_chair_5) (2)
CreateDynamicObject(16000,309.58935547,-1500.71423340,-26.22244644,270.00000000,0.00000000,90.00000000); //object(drvin_screen) (1)
CreateDynamicObject(16000,310.02539062,-1492.14257812,-31.78104019,270.00000000,0.00000000,90.00000000); //object(drvin_screen) (2)
CreateDynamicObject(2395,309.09744263,-1546.07031250,-46.13375092,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (19)
CreateDynamicObject(2395,309.09747314,-1542.33789062,-46.13375092,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (20)
CreateDynamicObject(2395,309.09802246,-1538.61096191,-46.13375092,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (21)
CreateDynamicObject(2395,309.09780884,-1534.87768555,-46.13375092,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (22)
CreateDynamicObject(2395,309.09716797,-1534.07751465,-46.13375092,0.00000000,0.00000000,90.00000000); //object(cj_sports_wall) (23)
CreateDynamicObject(2395,308.94421387,-1531.32495117,-46.13555145,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (24)
CreateDynamicObject(2395,308.94485474,-1535.05346680,-46.13555145,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (25)
CreateDynamicObject(2395,308.94528198,-1538.78503418,-46.13555145,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (26)
CreateDynamicObject(2395,308.94180298,-1542.47778320,-46.13555145,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (27)
CreateDynamicObject(2395,308.94659424,-1543.31518555,-46.13555145,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall) (28)
CreateDynamicObject(1432,307.47851562,-1544.94921875,-46.13375092,0.00000000,0.00000000,350.07385254); //object(dyn_table_2) (1)
CreateDynamicObject(1703,297.30395508,-1520.81726074,-46.12367630,0.00000000,0.00000000,180.00000000); //object(kb_couch02) (1)
CreateDynamicObject(1703,298.31497192,-1517.79614258,-46.12367630,0.00000000,0.00000000,270.00000000); //object(kb_couch02) (2)
CreateDynamicObject(2725,298.29296875,-1520.72167969,-45.69048691,0.00000000,0.00000000,0.00000000); //object(lm_striptable) (1)
CreateDynamicObject(1806,309.10546875,-1505.52636719,-46.12367630,0.00000000,0.00000000,105.87994385); //object(med_office_chair) (1)
CreateDynamicObject(2190,307.29687500,-1506.07812500,-45.40361786,0.00000000,0.00000000,104.99633789); //object(pc_1) (1)
CreateDynamicObject(1892,278.57611084,-1506.30029297,-46.13018036,0.00000000,0.00000000,90.00000000); //object(security_gatsh) (1)
CreateDynamicObject(2773,304.49935913,-1504.94628906,-45.61295319,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (1)
CreateDynamicObject(2773,304.50588989,-1506.51086426,-45.61295319,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (2)
CreateDynamicObject(2773,302.58798218,-1506.51135254,-45.61295319,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (3)
CreateDynamicObject(2773,303.51632690,-1503.98291016,-45.61295319,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (4)
CreateDynamicObject(2773,302.57733154,-1503.02441406,-45.61295319,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (5)
CreateDynamicObject(2773,301.60446167,-1505.54931641,-45.61295319,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (6)
CreateDynamicObject(2773,300.64788818,-1503.04052734,-45.61295319,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (7)
CreateDynamicObject(2773,299.66088867,-1503.99853516,-45.61295319,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (8)
CreateDynamicObject(2773,298.72500610,-1504.95776367,-45.61115265,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (9)
CreateDynamicObject(2773,300.66802979,-1506.51232910,-45.61115265,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (10)
CreateDynamicObject(2773,298.75299072,-1506.51000977,-45.61295319,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (11)
CreateDynamicObject(12814,309.92465210,-1460.12158203,-34.53705215,0.00000000,0.00000000,0.00000000); //object(cuntyeland04) (2)
CreateDynamicObject(8169,304.51583862,-1444.51806641,-32.52923965,107.00000000,90.00000000,180.00000000); //object(vgs_guardhseflr) (1)
CreateDynamicObject(8169,304.51293945,-1449.76049805,-32.52923965,106.99584961,90.00000000,179.99450684); //object(vgs_guardhseflr) (3)
CreateDynamicObject(8169,313.10473633,-1444.55773926,-32.52923965,106.99588013,90.00000000,0.00000000); //object(vgs_guardhseflr) (4)
CreateDynamicObject(8169,313.10540771,-1449.97326660,-32.52923965,106.99584961,90.00000000,0.00000000); //object(vgs_guardhseflr) (5)
CreateDynamicObject(8169,301.08428955,-1441.09985352,-32.52923965,106.99588013,90.00000000,270.00000000); //object(vgs_guardhseflr) (7)
CreateDynamicObject(8169,300.08203125,-1441.09960938,-32.52923965,106.99584961,90.00000000,270.00000000); //object(vgs_guardhseflr) (8)
CreateDynamicObject(8169,316.52737427,-1441.10034180,-32.52923965,106.99588013,90.00000000,270.00000000); //object(vgs_guardhseflr) (9)
CreateDynamicObject(8169,319.76895142,-1441.10217285,-32.52923965,106.99584961,90.00000000,270.00000000); //object(vgs_guardhseflr) (10)
CreateDynamicObject(8169,321.71502686,-1444.51538086,-32.52923965,106.99584961,90.00000000,179.99450684); //object(vgs_guardhseflr) (11)
CreateDynamicObject(8169,321.71609497,-1451.29589844,-32.52923965,106.99584961,90.00000000,179.99450684); //object(vgs_guardhseflr) (12)
CreateDynamicObject(8169,296.79656982,-1444.37243652,-32.52923965,106.99584961,90.00000000,0.00000000); //object(vgs_guardhseflr) (13)
CreateDynamicObject(8169,296.80148315,-1451.28527832,-32.52923965,106.99584961,90.00000000,0.00000000); //object(vgs_guardhseflr) (14)
CreateDynamicObject(14856,309.25753784,-1451.73974609,-32.65511322,0.00000000,0.00000000,270.00000000); //object(cellsa) (1)
CreateDynamicObject(8169,314.25317383,-1444.62646484,-32.52923965,106.99588013,90.00000000,90.00000000); //object(vgs_guardhseflr) (15)
CreateDynamicObject(8169,304.31835938,-1444.62304688,-32.52923965,106.99584961,90.00000000,90.00000000); //object(vgs_guardhseflr) (16)
CreateDynamicObject(2957,308.80404663,-1453.56689453,-32.47067261,0.00000000,90.00000000,0.00000000); //object(chinatgaragedoor) (1)
CreateDynamicObject(2957,305.55273438,-1453.56542969,-30.41305542,0.00000000,0.00000000,0.00000000); //object(chinatgaragedoor) (7)
CreateDynamicObject(2957,311.57226562,-1453.56542969,-30.41333008,0.00000000,0.00000000,0.00000000); //object(chinatgaragedoor) (8)
CreateDynamicObject(1491,305.67440796,-1453.56250000,-34.52923965,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (1)
CreateDynamicObject(1491,310.42266846,-1453.56958008,-34.52923965,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (2)
CreateDynamicObject(2957,304.04525757,-1453.56958008,-32.47067261,0.00000000,90.00000000,0.00000000); //object(chinatgaragedoor) (1)
CreateDynamicObject(2957,313.55474854,-1453.56701660,-32.47067261,0.00000000,90.00000000,0.00000000); //object(chinatgaragedoor) (1)
CreateDynamicObject(1649,308.91375732,-1451.29418945,-32.86349869,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (1)
CreateDynamicObject(1649,308.91308594,-1451.29394531,-32.86349869,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (2)
CreateDynamicObject(8169,308.91879272,-1450.16955566,-32.52923965,106.99588013,90.00000000,180.00000000); //object(vgs_guardhseflr) (8)
CreateDynamicObject(1649,308.91668701,-1451.29418945,-29.60837173,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (3)
CreateDynamicObject(1649,308.91128540,-1451.29431152,-29.60297012,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (4)
CreateDynamicObject(14532,309.53399658,-1452.88830566,-33.54652023,0.00000000,0.00000000,315.00000000); //object(tv_stand_driv) (1)
CreateDynamicObject(1671,311.07064819,-1450.01330566,-34.06902695,0.00000000,0.00000000,311.60888672); //object(swivelchair_a) (1)
CreateDynamicObject(1671,311.91442871,-1451.20056152,-34.06902695,0.00000000,0.00000000,282.31018066); //object(swivelchair_a) (2)
CreateDynamicObject(1810,305.47702026,-1450.94470215,-34.52923965,0.00000000,0.00000000,87.65490723); //object(cj_foldchair) (1)
CreateDynamicObject(1810,307.89422607,-1451.39428711,-34.52923965,0.00000000,0.00000000,273.15954590); //object(cj_foldchair) (2)
CreateDynamicObject(1827,306.67138672,-1451.28918457,-34.52923965,0.00000000,0.00000000,0.00000000); //object(man_sdr_tables) (2)
CreateDynamicObject(2009,290.45791626,-1468.11608887,-34.52298355,0.00000000,0.00000000,90.00000000); //object(officedesk2l) (1)
CreateDynamicObject(2197,286.46551514,-1467.00256348,-34.52298355,0.00000000,0.00000000,90.00000000); //object(filling_cabinet) (4)
CreateDynamicObject(2200,292.76733398,-1469.83776855,-34.52298355,0.00000000,0.00000000,270.00000000); //object(med_office5_unit_1) (1)
CreateDynamicObject(2204,287.41705322,-1471.50622559,-34.52298355,0.00000000,0.00000000,180.00000000); //object(med_office8_cabinet) (1)
CreateDynamicObject(1714,290.53604126,-1467.20202637,-34.52298355,0.00000000,0.00000000,289.61608887); //object(kb_swivelchair1) (1)
CreateDynamicObject(1778,329.46221924,-1474.47827148,-34.52298355,0.00000000,0.00000000,90.00000000); //object(cj_mop_pail) (1)
CreateDynamicObject(1771,328.46612549,-1476.94348145,-33.88931656,0.00000000,0.00000000,268.69885254); //object(cj_bunk_bed1) (1)
CreateDynamicObject(1337,322.30862427,-1474.60803223,-33.87375641,0.00000000,0.00000000,90.00000000); //object(binnt07_la) (2)
CreateDynamicObject(1338,326.28952026,-1476.88671875,-33.81167221,0.00000000,0.00000000,0.00000000); //object(binnt08_la) (1)
CreateDynamicObject(1440,324.06448364,-1476.95019531,-34.00386810,0.00000000,0.00000000,180.00000000); //object(dyn_box_pile_3) (1)
CreateDynamicObject(1265,325.22683716,-1476.19226074,-34.05393982,0.00000000,0.00000000,296.25524902); //object(blackbag2) (1)
CreateDynamicObject(1264,323.25726318,-1474.70031738,-34.05083847,0.00000000,0.00000000,279.02832031); //object(blackbag1) (1)
CreateDynamicObject(11631,329.22161865,-1468.77941895,-33.27708054,0.00000000,0.00000000,270.00000000); //object(ranch_desk) (1)
CreateDynamicObject(2607,325.18939209,-1468.12915039,-34.12730026,0.00000000,0.00000000,180.00000000); //object(polce_desk2) (1)
CreateDynamicObject(2356,328.48495483,-1469.47021484,-34.52298355,0.00000000,0.00000000,303.83496094); //object(police_off_chair) (1)
CreateDynamicObject(2207,303.88574219,-1480.73437500,-28.73089981,0.00000000,0.00000000,270.00000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(1714,305.63839722,-1481.56811523,-28.75525284,0.00000000,0.00000000,286.04431152); //object(kb_swivelchair1) (2)
CreateDynamicObject(2190,303.95974731,-1482.46374512,-27.95352745,0.00000000,0.00000000,111.03887939); //object(pc_1) (2)
CreateDynamicObject(2311,304.88085938,-1489.10546875,-28.73089981,0.00000000,0.00000000,0.00000000); //object(cj_tv_table2) (2)
CreateDynamicObject(2700,300.06005859,-1481.78222656,-25.16612434,0.00000000,0.00000000,0.00000000); //object(cj_sex_tv2) (1)
CreateDynamicObject(1893,301.89276123,-1493.61791992,-31.40267563,0.00000000,0.00000000,270.00000000); //object(shoplight1) (1)
CreateDynamicObject(1893,301.88687134,-1486.12084961,-31.40267563,0.00000000,0.00000000,270.00000000); //object(shoplight1) (2)
CreateDynamicObject(1893,301.28695679,-1483.02026367,-31.40267563,0.00000000,0.00000000,0.00000000); //object(shoplight1) (3)
CreateDynamicObject(2007,285.47372437,-1461.86901855,-34.53079605,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (1)
CreateDynamicObject(2007,285.47827148,-1465.82226562,-34.53079605,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu01) (2)
CreateDynamicObject(2008,289.19281006,-1463.93908691,-34.53079605,0.00000000,0.00000000,90.00000000); //object(officedesk1) (1)
CreateDynamicObject(1714,290.24304199,-1463.02392578,-34.52298355,0.00000000,0.00000000,289.61608887); //object(kb_swivelchair1) (1)
CreateDynamicObject(2608,292.67315674,-1465.32287598,-33.81932449,0.00000000,0.00000000,270.00000000); //object(polce_shelf) (1)
CreateDynamicObject(2609,292.52435303,-1461.60766602,-33.79908752,0.00000000,0.00000000,270.00000000); //object(cj_p_fileing1) (1)
CreateDynamicObject(2191,292.37973022,-1462.93566895,-34.53079605,0.00000000,0.00000000,270.00000000); //object(med_office2_cab) (1)
CreateDynamicObject(16662,309.20010376,-1463.23413086,-24.77413940,63.39999390,90.00000000,270.00000000); //object(a51_radar_stuff) (1)
CreateDynamicObject(1668,304.25622559,-1480.90881348,-27.78682327,0.00000000,0.00000000,0.00000000); //object(propvodkabotl1) (1)
CreateDynamicObject(2855,303.82894897,-1481.18969727,-27.95352745,0.00000000,0.00000000,65.86511230); //object(gb_bedmags05) (1)
CreateDynamicObject(2852,303.61880493,-1482.01403809,-27.95352745,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (1)
CreateDynamicObject(1736,307.49340820,-1481.78393555,-25.27207184,0.00000000,0.00000000,269.48693848); //object(cj_stags_head) (1)
CreateDynamicObject(2491,308.43945312,-1467.54589844,-35.16662979,0.00000000,0.00000000,179.99450684); //object(model_stand) (1)
CreateDynamicObject(1730,300.42053223,-1474.60668945,-28.73089981,0.00000000,0.00000000,0.00000000); //object(swank_cabinet_3) (1)
CreateDynamicObject(2204,301.84945679,-1474.26086426,-28.73089981,0.00000000,0.00000000,0.00000000); //object(med_office8_cabinet) (2)
CreateDynamicObject(2200,302.21353149,-1474.26831055,-26.94274521,0.00000000,0.00000000,0.00000000); //object(med_office5_unit_1) (2)
CreateDynamicObject(1703,304.62121582,-1474.67419434,-28.73089981,0.00000000,0.00000000,0.00000000); //object(kb_couch02) (3)
CreateDynamicObject(12814,313.29492188,-1478.75097656,-24.23483658,0.00000000,0.00000000,179.99450684); //object(cuntyeland04) (1)
CreateDynamicObject(2002,302.75833130,-1489.31335449,-28.73089981,0.00000000,0.00000000,180.00000000); //object(water_coolnu) (1)
CreateDynamicObject(2288,300.29425049,-1479.18029785,-26.33251381,0.00000000,0.00000000,90.09881592); //object(frame_3) (1)
CreateDynamicObject(2007,314.12896729,-1505.99865723,-46.13018036,0.00000000,0.00000000,270.00000000); //object(filing_cab_nu01) (3)
CreateDynamicObject(1806,312.65527344,-1512.03027344,-46.12367630,0.00000000,0.00000000,90.00000000); //object(med_office_chair) (1)
CreateDynamicObject(1806,312.62911987,-1518.00183105,-46.12367630,0.00000000,0.00000000,90.00000000); //object(med_office_chair) (1)
CreateDynamicObject(1806,312.64999390,-1499.31555176,-46.12367630,0.00000000,0.00000000,90.00000000); //object(med_office_chair) (1)
CreateDynamicObject(1806,312.67895508,-1493.98632812,-46.12367630,0.00000000,0.00000000,90.00000000); //object(med_office_chair) (1)
CreateDynamicObject(2190,310.62237549,-1512.26940918,-45.21636200,0.00000000,0.00000000,104.99630737); //object(pc_1) (1)
CreateDynamicObject(2190,310.59692383,-1518.19750977,-45.21636200,0.00000000,0.00000000,104.99630737); //object(pc_1) (1)
CreateDynamicObject(2190,310.74307251,-1499.55859375,-45.21636200,0.00000000,0.00000000,104.99630737); //object(pc_1) (1)
CreateDynamicObject(2190,310.70114136,-1494.10925293,-45.21636200,0.00000000,0.00000000,104.99633789); //object(pc_1) (1)
CreateDynamicObject(1886,308.70672607,-1467.93701172,-30.56187057,16.16790771,0.19573975,179.06506348); //object(shop_sec_cam) (1)
CreateDynamicObject(2747,308.48376465,-1472.51135254,-34.11668777,0.00000000,0.00000000,0.00000000); //object(cj_donut_table) (1)
CreateDynamicObject(2747,310.08023071,-1472.51135254,-34.11668777,0.00000000,0.00000000,0.00000000); //object(cj_donut_table) (2)
CreateDynamicObject(2747,306.88693237,-1472.51135254,-34.11668777,0.00000000,0.00000000,0.00000000); //object(cj_donut_table) (3)
CreateDynamicObject(2747,306.88693237,-1473.50244141,-34.11668777,0.00000000,0.00000000,0.00000000); //object(cj_donut_table) (4)
CreateDynamicObject(2747,308.48376465,-1473.50244141,-34.11668777,0.00000000,0.00000000,0.00000000); //object(cj_donut_table) (5)
CreateDynamicObject(2747,310.08023071,-1473.50244141,-34.11668777,0.00000000,0.00000000,0.00000000); //object(cj_donut_table) (6)
CreateDynamicObject(1806,306.94726562,-1474.57141113,-34.52923965,0.00000000,0.00000000,0.00000000); //object(med_office_chair) (6)
CreateDynamicObject(1806,308.53701782,-1474.58837891,-34.52923965,0.00000000,0.00000000,0.00000000); //object(med_office_chair) (7)
CreateDynamicObject(1806,310.08981323,-1474.62011719,-34.52923965,0.00000000,0.00000000,0.00000000); //object(med_office_chair) (8)
CreateDynamicObject(1806,310.13595581,-1471.40625000,-34.52923965,0.00000000,0.00000000,180.00000000); //object(med_office_chair) (9)
CreateDynamicObject(1806,308.49731445,-1471.39831543,-34.52923965,0.00000000,0.00000000,179.99450684); //object(med_office_chair) (10)
CreateDynamicObject(1806,306.94650269,-1471.37988281,-34.52923965,0.00000000,0.00000000,179.99450684); //object(med_office_chair) (11)
CreateDynamicObject(1806,305.62155151,-1473.00012207,-34.52923965,0.00000000,0.00000000,270.00000000); //object(med_office_chair) (12)
CreateDynamicObject(1806,311.44116211,-1472.99316406,-34.52923965,0.00000000,0.00000000,90.00000000); //object(med_office_chair) (13)
CreateDynamicObject(16782,322.13433838,-1469.29296875,-32.56002808,0.00000000,0.00000000,0.00000000); //object(a51_radar_scan) (1)
CreateDynamicObject(2611,325.91857910,-1473.77783203,-32.58835220,0.00000000,0.00000000,179.93066406); //object(police_nb1) (1)
CreateDynamicObject(14527,304.30047607,-1480.94714355,-26.86861801,0.00000000,0.00000000,0.00000000); //object(fannyfan) (1)
CreateDynamicObject(2198,289.17578125,-1474.82629395,-34.53079605,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_3) (1)
CreateDynamicObject(1714,290.23767090,-1474.06457520,-34.53079605,0.00000000,0.00000000,300.22509766); //object(kb_swivelchair1) (4)
CreateDynamicObject(2182,292.43322754,-1475.33679199,-34.53079605,0.00000000,0.00000000,180.00000000); //object(med_office5_desk_1) (1)
CreateDynamicObject(2000,285.47576904,-1472.12133789,-34.53079605,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu) (1)
CreateDynamicObject(2000,285.47576904,-1472.64123535,-34.53079605,0.00000000,0.00000000,90.00000000); //object(filing_cab_nu) (2)
CreateDynamicObject(14632,321.33325195,-1475.83569336,-33.03472900,0.00000000,0.00000000,270.00000000); //object(paperchase_bits2b) (1)
CreateDynamicObject(2186,329.36141968,-1464.33728027,-34.52298355,0.00000000,0.00000000,270.00000000); //object(photocopier_1) (1)
CreateDynamicObject(2206,329.35076904,-1471.45605469,-34.52298355,0.00000000,0.00000000,270.00000000); //object(med_office8_desk_02) (1)
CreateDynamicObject(2606,329.50375366,-1472.36730957,-33.36120224,0.00000000,0.00000000,270.00000000); //object(cj_police_counter2) (1)
CreateDynamicObject(2612,304.02514648,-1463.07299805,-32.50022888,0.00000000,0.00000000,0.00000000); //object(police_nb2) (1)
CreateDynamicObject(2611,314.25363159,-1463.07299805,-32.39287949,0.00000000,0.00000000,0.00000000); //object(police_nb1) (2)
CreateDynamicObject(1722,323.52783203,-1485.03967285,-34.52298355,0.00000000,0.00000000,0.00000000); //object(off_chairnu) (1)
CreateDynamicObject(1722,322.35116577,-1485.02929688,-34.52298355,0.00000000,0.00000000,0.00000000); //object(off_chairnu) (2)
CreateDynamicObject(1722,321.10070801,-1485.05798340,-34.52298355,0.00000000,0.00000000,0.00000000); //object(off_chairnu) (3)
CreateDynamicObject(1722,325.25961304,-1481.93444824,-34.52298355,0.00000000,0.00000000,90.00000000); //object(off_chairnu) (4)
CreateDynamicObject(1722,325.27322388,-1480.63781738,-34.52298355,0.00000000,0.00000000,90.00000000); //object(off_chairnu) (5)
CreateDynamicObject(1722,325.24453735,-1479.48413086,-34.52298355,0.00000000,0.00000000,90.00000000); //object(off_chairnu) (6)
CreateDynamicObject(1808,317.90686035,-1482.45349121,-34.52298355,0.00000000,0.00000000,90.00000000); //object(cj_watercooler2) (1)
CreateDynamicObject(15038,325.23391724,-1478.51025391,-33.90579605,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
CreateDynamicObject(1616,317.07241821,-1498.25427246,-37.11650085,0.00000000,0.00000000,0.00000000); //object(nt_securecam1_01) (1)
CreateDynamicObject(1616,281.14285278,-1481.05761719,-31.00306702,0.00000000,0.00000000,267.23352051); //object(nt_securecam1_01) (2)
CreateDynamicObject(1616,318.01690674,-1485.05334473,-31.00306702,0.00000000,0.00000000,267.23144531); //object(nt_securecam1_01) (3)
CreateDynamicObject(1616,277.92636108,-1509.63354492,-43.22993469,0.00000000,0.00000000,267.23144531); //object(nt_securecam1_01) (4)
//Unity Exterior By Map Team ZC 2013
CreateDynamicObject(1561,1833.9000200,-1844.0999800,12.6000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1560,1833.9000200,-1841.0999800,12.6000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3034,1833.5000000,-1838.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3034,1833.5000000,-1846.9000200,14.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3034,1846.5000000,-1860.0999800,14.4000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3034,1852.9000200,-1860.0999800,14.4000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3034,1857.0999800,-1854.3000500,14.4000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3034,1857.0999800,-1844.1999500,14.2990000,0.0000000,0.0000000,90.1000000); //
CreateDynamicObject(3034,1845.3000500,-1834.4000200,14.4000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(3034,1841.6999500,-1834.4000200,14.4000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(3034,1838.1999500,-1834.4000200,14.4000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(970,1831.6999500,-1849.6999500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1831.6999500,-1853.8000500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1831.6999500,-1836.8000500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1831.6999500,-1832.6999500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1831.6999500,-1828.5999800,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3034,1848.0000000,-1874.8000500,14.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3034,1848.0000000,-1868.3000500,14.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1569,1848.0000000,-1872.3000500,12.6000000,0.0000000,0.0000000,90.7500000); //
CreateDynamicObject(1226,1825.9000200,-1874.6999500,16.2000000,0.0000000,0.0000000,0.7500000); //
CreateDynamicObject(1226,1825.6999500,-1859.9000200,16.2000000,0.0000000,0.0000000,0.7470000); //
CreateDynamicObject(1226,1815.0999800,-1841.0999800,16.2000000,0.0000000,0.0000000,179.4950000); //
CreateDynamicObject(1226,1817.4000200,-1866.9000200,16.2000000,0.0000000,0.0000000,179.4950000); //
CreateDynamicObject(1226,1817.5000000,-1878.0000000,16.2000000,0.0000000,0.0000000,179.4950000); //
CreateDynamicObject(970,1845.9000200,-1876.6999500,13.1000000,0.0000000,0.0000000,179.9969900); //
CreateDynamicObject(970,1841.8000500,-1876.6999500,13.1000000,0.0000000,0.0000000,179.9950000); //
CreateDynamicObject(970,1837.6999500,-1876.6999500,13.1000000,0.0000000,0.0000000,179.9950000); //
CreateDynamicObject(970,1833.5999800,-1876.6999500,13.1000000,0.0000000,0.0000000,179.9950000); //
CreateDynamicObject(1368,1832.9000200,-1876.4000200,13.3000000,0.0000000,0.0000000,180.2500000); //
CreateDynamicObject(1368,1837.5000000,-1876.4000200,13.3000000,0.0000000,0.0000000,180.2469900); //
CreateDynamicObject(1368,1843.0000000,-1876.4000200,13.3000000,0.0000000,0.0000000,180.2469900); //
CreateDynamicObject(1256,1831.1999500,-1849.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1256,1831.3000500,-1854.1999500,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1256,1831.3000500,-1837.5000000,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1256,1831.3000500,-1831.6999500,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1561,1833.9000200,-1844.0999800,12.6000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1560,1833.9000200,-1841.0999800,12.6000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3034,1833.5000000,-1838.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3034,1838.2999300,-1850.7032500,14.4000000,0.0000000,0.0000000,358.7500000); //
CreateDynamicObject(3034,1843.0999800,-1857.9000200,14.4000000,0.0000000,0.0000000,271.2479900); //
CreateDynamicObject(3034,1843.0999800,-1852.7795400,14.4000000,0.0000000,0.0000000,268.7439900); //
CreateDynamicObject(3034,1857.0999800,-1838.5000000,14.4000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1831.6999500,-1857.9000200,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1831.6999500,-1828.5999800,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1569,1848.0000000,-1872.3000500,12.6000000,0.0000000,0.0000000,90.7500000); //
CreateDynamicObject(1226,1825.9000200,-1874.6999500,16.2000000,0.0000000,0.0000000,0.7500000); //
CreateDynamicObject(1226,1825.6999500,-1859.9000200,16.2000000,0.0000000,0.0000000,0.7470000); //
CreateDynamicObject(1226,1815.0999800,-1841.0999800,16.2000000,0.0000000,0.0000000,179.4950000); //
CreateDynamicObject(1226,1817.4000200,-1866.9000200,16.2000000,0.0000000,0.0000000,179.4950000); //
CreateDynamicObject(1226,1817.5000000,-1878.0000000,16.2000000,0.0000000,0.0000000,179.4950000); //
CreateDynamicObject(1256,1831.3000500,-1854.1999500,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1256,1831.3000500,-1858.6999500,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2412,1833.5999800,-1843.8990500,12.6000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2412,1833.5999800,-1840.5999800,12.6000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1838.3499800,-1850.5699500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1843.2540300,-1855.1800500,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1848.0434600,-1859.9200400,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1856.9709500,-1855.1200000,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1852.2399900,-1859.9179700,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1856.9709500,-1845.4890100,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1838.3990500,-1834.5515100,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1856.9699700,-1839.2677000,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1852.2399900,-1834.5500500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1842.6110800,-1834.5500500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1833.6200000,-1849.0500500,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1835.1369600,-1840.5999800,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1833.6200000,-1839.0649400,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1833.6219500,-1836.0699500,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1834.1854200,-1843.4384800,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1833.6219500,-1846.0679900,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1835.1390400,-1844.5400400,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1848.1398900,-1871.1500200,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1848.1390400,-1875.2249800,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1849.6567400,-1866.3957500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1855.2270500,-1866.3950200,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1852.8499800,-1866.3957500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1856.7553700,-1875.2199700,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1856.7600100,-1871.1240200,14.3220000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19369,1849.6550300,-1876.7646500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1852.8649900,-1876.7646500,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19369,1855.2399900,-1876.7640400,14.3220000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1838.3823200,-1850.5639600,12.0000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19461,1843.2699000,-1855.1800500,12.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19461,1848.0434600,-1859.8990500,11.3888000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3806,2014.0056200,-1774.6149900,33.6885400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3806,2037.9813200,-1763.7618400,34.3109600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3806,1833.4976800,-1846.9311500,13.4440000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(3806,1833.4993900,-1838.0555400,13.4440000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(638,1848.4000200,-1865.0067100,13.2770000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(638,1848.4000200,-1863.2175300,13.2770000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(638,1848.4000200,-1861.3818400,13.2770000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(626,1840.3040800,-1876.3249500,14.6152900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(626,1835.2165500,-1876.3249500,14.6153000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(626,1845.7431600,-1876.3249500,14.6153000,0.0000000,0.0000000,0.0000000); //
//Banco Ext By Map Team ZC 2013
CreateDynamicObject(2614,1396.8800000,-1570.2146000,17.9299000,0.0000000,0.0000000,0.0000000); //object(cj_us_flag) (1)
CreateDynamicObject(1616,1400.9688700,-1570.5022000,18.4423000,0.0000000,0.0000000,74.6310000); //object(nt_securecam1_01) (1)
CreateDynamicObject(638,1394.2002000,-1570.5830100,13.9595300,0.0000000,0.0000000,90.2690000); //object(kb_planter_bush) (2)
CreateDynamicObject(638,1399.8221400,-1570.5832500,13.9595300,0.0000000,0.0000000,89.8690000); //object(kb_planter_bush) (3)
CreateDynamicObject(994,1382.6900600,-1548.7793000,12.5721500,0.0000000,0.0000000,344.5380000); //object(lhouse_barrier2) (1)
CreateDynamicObject(996,1364.8414300,-1572.5601800,13.2956300,0.0000000,0.0000000,343.6430000); //object(lhouse_barrier1) (2)
CreateDynamicObject(994,1385.3537600,-1577.7363300,12.5721500,0.0000000,0.0000000,346.9370000); //object(lhouse_barrier2) (3)
//Piso 24/7 Vinewood o.O
//CreateDynamicObject(5851, 1323.66406, -884.63281, 36.25000,   0.00000, 0.00000, 0.00000);
//24/7 Unity By Map Team ZC 2013
CreateDynamicObject(3458,1305.6999500,-859.7999900,40.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(970,1310.9971900,-904.7271100,39.7785000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1251,1306.8292200,-872.2130100,38.5478000,0.0000000,30.0000000,90.0000000); //
CreateDynamicObject(1251,1306.8292200,-862.4185800,38.5478000,0.0000000,30.0000000,90.0000000); //
CreateDynamicObject(1251,1306.8292200,-857.4323700,38.5478000,0.0000000,30.0000000,90.0000000); //
CreateDynamicObject(1251,1306.8292200,-852.6189000,38.5478000,0.0000000,30.0000000,90.0000000); //
CreateDynamicObject(1251,1306.8292200,-867.2245500,38.5478100,0.0000000,30.0000000,90.0000000); //
CreateDynamicObject(1251,1306.8336200,-876.8483900,38.5478000,0.0000000,30.0000000,90.0000000); //
CreateDynamicObject(1560,1314.7399900,-897.3400300,38.5000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19465,1315.4899900,-897.4271900,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1309.6613800,-897.4541000,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1321.4000200,-897.4271900,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1307.3669400,-897.4500100,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1323.4100300,-897.4541000,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1326.3355700,-894.6099200,41.0132000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1326.3299600,-888.6828000,42.7971000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1326.3355700,-882.7888200,41.0132000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1323.4940200,-877.0100100,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1326.3349600,-879.8670000,41.0132000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1317.5999800,-877.0109900,42.7971000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1311.6800500,-877.0109900,42.7971000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1307.3399700,-877.0189800,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1307.3399700,-877.0200200,42.7971000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1311.6800500,-877.0100100,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1317.5999800,-877.0100100,41.0132000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1323.4940200,-877.0109900,42.7971000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19464,1326.3339800,-879.8670000,42.7971000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1326.3320300,-882.7888200,42.7971000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1326.3355700,-888.6828000,41.0132000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19464,1326.3299600,-894.6099200,42.7971000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3354,1321.9307900,-876.9030800,39.3943000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3354,1315.1182900,-876.9030800,39.3943000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3034,1321.0000000,-897.5789200,40.3122000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3034,1309.9898700,-897.5789200,40.3122000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3806,1321.0577400,-897.5612200,39.3925600,0.0000000,0.0000000,270.5040600); //
CreateDynamicObject(3806,1309.9737500,-897.5612200,39.3926000,0.0000000,0.0000000,270.5040900); //
CreateDynamicObject(3660,1326.1934800,-887.1740700,41.0574000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1324.1999500,-877.0659800,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1320.7800300,-897.6884200,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1317.3399700,-897.6884200,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1313.9000200,-897.6884200,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1310.4599600,-897.6884200,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1307.0200200,-897.6884200,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1325.9260300,-895.9669800,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1325.9260300,-892.5186800,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1325.9260300,-889.0947900,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1325.9260300,-885.6599700,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1325.9260300,-882.2299800,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1325.9260300,-878.7990100,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1324.1999500,-897.6884200,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1320.7900400,-877.0659800,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1317.3565700,-877.0659800,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1313.9104000,-877.0659800,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1310.4642300,-877.0659800,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1307.0481000,-877.0659800,45.8528000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,1305.3199500,-878.7990100,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1305.3199500,-882.2299800,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1305.3199500,-885.6599700,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1305.3199500,-889.0855700,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1305.3199500,-892.5000000,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,1305.3199500,-895.9600200,45.8528000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1308.9399400,-910.7600100,39.7785000,0.0000000,0.0000000,-5.0000000); //
CreateDynamicObject(970,1320.4808300,-905.4000200,39.7785000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1320.4808300,-909.5189200,39.7785000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1310.9971900,-908.8817100,39.7785000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1304.8139600,-910.3989900,39.7785000,0.0000000,0.0000000,-5.0000000); //
CreateDynamicObject(970,1322.4699700,-912.1400100,39.7785000,0.0000000,0.0000000,-15.0000000); //
CreateDynamicObject(970,1326.4499500,-913.1699800,39.7785000,0.0000000,0.0000000,-14.0000000); //
CreateDynamicObject(970,1330.4534900,-914.1577100,39.7785000,0.0000000,0.0000000,-14.0000000); //
//24/7 Ayunta By Map Team ZC 2013
CreateDynamicObject(6946,1365.0000000,-1771.4000200,12.2200000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5738,1363.5000000,-1808.1999500,27.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1372,1342.0999800,-1789.8000500,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1265,1340.9000200,-1789.6999500,12.8000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1265,1339.9000200,-1789.5000000,12.8000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1265,1340.4000200,-1789.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3920,1367.0999800,-1765.5999800,20.3000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3920,1355.1999500,-1765.5000000,20.3000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3920,1344.9000200,-1765.6999500,20.3000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(18014,1369.0999800,-1766.6999500,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(18014,1362.5999800,-1766.5999800,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(18014,1356.0000000,-1766.6999500,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(18014,1343.1999500,-1766.5000000,13.0000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(18014,1372.5000000,-1769.1999500,13.0000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(18014,1372.5000000,-1774.5999800,13.0000000,0.0000000,0.0000000,179.9950000); //
CreateDynamicObject(18014,1372.4000200,-1780.3000500,13.0000000,0.0000000,0.0000000,179.9950000); //
CreateDynamicObject(18014,1372.4000200,-1785.9000200,13.0000000,0.0000000,0.0000000,179.9950000); //
CreateDynamicObject(712,1377.3000500,-1787.3000500,22.5000000,0.0000000,0.0000000,43.4120000); //
CreateDynamicObject(712,1377.5000000,-1773.0999800,22.5000000,0.0000000,0.0000000,43.4120000); //
CreateDynamicObject(712,1377.5999800,-1762.0000000,22.5000000,0.0000000,0.0000000,43.4120000); //
CreateDynamicObject(712,1341.4000200,-1761.5999800,22.3000000,0.0000000,0.0000000,43.4120000); //
CreateDynamicObject(870,1377.3000500,-1767.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1377.3000500,-1764.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1377.5000000,-1770.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1377.5000000,-1775.8000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1377.5000000,-1779.0000000,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1377.5000000,-1782.3000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1377.5000000,-1784.5000000,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1375.3000500,-1761.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1372.8000500,-1761.5000000,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1370.0000000,-1761.5999800,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(712,1367.5999800,-1761.3000500,22.5000000,0.0000000,0.0000000,43.4120000); //
CreateDynamicObject(712,1356.8000500,-1761.0999800,22.5000000,0.0000000,0.0000000,43.4120000); //
CreateDynamicObject(870,1364.9000200,-1761.3000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1362.0999800,-1761.4000200,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1359.3000500,-1761.3000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1354.1999500,-1761.1999500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1345.5999800,-1761.3000500,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(870,1343.0999800,-1761.4000200,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1362.5000000,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1366.6999500,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1371.0000000,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1375.1999500,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1377.3000500,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1379.4000200,-1761.6999500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.4000200,-1765.9000200,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.4000200,-1770.0999800,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.4000200,-1774.1999500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.4000200,-1778.4000200,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.4000200,-1782.5999800,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.4000200,-1786.8000500,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1358.3000500,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1354.0999800,-1759.5999800,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1347.5033000,-1761.6478300,12.9990000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1341.4024700,-1759.5867900,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3920,1373.3000500,-1771.8000500,20.3000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3920,1373.5000000,-1783.0999800,20.3000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1251,1379.0999800,-1756.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1251,1374.9000200,-1756.0999800,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1251,1370.5999800,-1756.0999800,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1251,1366.0000000,-1756.3000500,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1560,1350.3076200,-1767.1991000,12.2979900,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(9823,1341.5999800,-1766.0000000,12.2000000,0.0000000,270.0000000,0.0000000); //
CreateDynamicObject(9823,1344.5999800,-1765.9000200,12.2000000,0.0000000,269.9950000,0.0000000); //
CreateDynamicObject(9823,1348.4000200,-1765.8000500,12.2000000,0.0000000,269.9950000,0.0000000); //
CreateDynamicObject(9823,1351.5999800,-1766.0000000,12.2000000,0.0000000,269.9950000,0.0000000); //
CreateDynamicObject(9823,1355.5999800,-1766.0000000,12.2000000,0.0000000,269.9950000,0.0000000); //
CreateDynamicObject(9823,1359.9000200,-1765.8000500,12.2000000,0.0000000,269.9950000,0.0000000); //
CreateDynamicObject(9823,1364.1999500,-1765.8000500,12.2000000,0.0000000,269.9950000,0.0000000); //
CreateDynamicObject(1226,1360.1999500,-1755.0999800,16.4000000,0.0000000,0.0000000,272.0000000); //
CreateDynamicObject(1226,1351.9000200,-1755.3000500,16.4000000,0.0000000,0.0000000,272.0000000); //
CreateDynamicObject(1226,1342.4000200,-1755.1999500,16.4000000,0.0000000,0.0000000,272.0000000); //
CreateDynamicObject(1226,1372.5999800,-1759.0000000,16.4000000,0.0000000,0.0000000,272.0000000); //
CreateDynamicObject(1226,1367.8000500,-1758.9000200,16.4000000,0.0000000,0.0000000,272.0000000); //
CreateDynamicObject(1226,1377.3000500,-1759.0000000,16.4000000,0.0000000,0.0000000,272.0000000); //
CreateDynamicObject(19362,1349.1695600,-1761.3700000,12.5600000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19362,1350.3990500,-1761.3700000,12.5620000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(970,1345.5000000,-1759.5867900,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1352.0200200,-1761.6478300,12.9990000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1364.1013200,-1744.4119900,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1366.2500000,-1742.3399700,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1370.3874500,-1742.3399700,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1374.4990200,-1742.3548600,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1377.0980200,-1742.3548600,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(970,1379.1626000,-1744.4119900,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1364.1013200,-1757.5350300,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.3675500,-1757.4921900,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1364.1013200,-1755.4000200,13.1000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(970,1379.3675500,-1755.4000200,13.1000000,0.0000000,0.0000000,90.0000000); //
//Playa bar by Map Team ZC 2013
CreateDynamicObject(5463,1264.0999800,-1251.5999800,37.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5644,1881.8203100,-1315.9218800,30.8359400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(5644,1263.9899900,-1251.3000500,29.9000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(11496,496.7999900,-1818.5200200,5.0000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(11496,496.7999900,-1823.5000000,5.0000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(11496,480.3994100,-1823.5000000,5.6000000,0.0000000,0.0000000,269.9890100); //
CreateDynamicObject(11496,480.3999900,-1818.5200200,5.6000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2395,490.7880900,-1827.5498000,4.4600000,299.9981700,0.0000000,90.0000000); //
CreateDynamicObject(2395,490.7880900,-1823.8291000,4.4600000,299.9926800,0.0000000,90.0000000); //
CreateDynamicObject(2395,490.7880900,-1820.1992200,4.4600000,299.9926800,0.0000000,90.0000000); //
CreateDynamicObject(2395,490.7880900,-1817.2197300,4.4600000,299.9926800,0.0000000,90.0000000); //
CreateDynamicObject(2395,489.8999900,-1828.0999800,2.4582000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,487.3989900,-1828.0889900,3.1800000,0.0000000,30.0000000,0.0000000); //
CreateDynamicObject(2395,485.1200000,-1828.1400100,3.0500000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2395,489.7999900,-1813.9339600,1.7500000,0.0000000,330.0018300,180.0000000); //
CreateDynamicObject(2395,492.7000100,-1813.9329800,2.4580000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2395,487.8999900,-1813.9339600,3.0560000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(2395,507.2000100,-1827.5500500,3.8670000,299.9981700,0.0000000,90.0000000); //
CreateDynamicObject(2395,507.2000100,-1823.8000500,3.8670000,299.9981700,0.0000000,90.0000000); //
CreateDynamicObject(2395,507.2000100,-1820.1999500,3.8670000,299.9981700,0.0000000,90.0000000); //
CreateDynamicObject(2395,507.2000100,-1817.2199700,3.8670000,299.9981700,0.0000000,90.0000000); //
CreateDynamicObject(3850,490.5000000,-1828.0429700,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(16151,473.5300000,-1821.0000000,6.1300000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(16152,484.0000000,-1827.0999800,5.7470000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,493.8999900,-1828.0429700,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,497.2999900,-1828.0429700,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,500.7000100,-1828.0400400,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,502.3999900,-1828.0429700,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,490.4700000,-1813.9799800,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,493.8999900,-1813.9799800,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,497.3190000,-1813.9799800,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,500.7500000,-1813.9680200,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,502.5000000,-1813.9799800,5.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(16152,481.6000100,-1815.0000000,5.7470000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1825,492.8999900,-1826.0999800,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,497.7000100,-1826.0000000,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,502.2999900,-1826.1999500,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,492.3999900,-1815.8000500,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,497.2000100,-1815.8000500,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,502.2000100,-1815.5999800,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,495.3999900,-1821.0000000,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1825,499.6000100,-1821.0000000,5.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2229,473.5000000,-1814.5999800,5.8000000,0.0000000,0.0000000,50.0000000); //
CreateDynamicObject(2232,473.2999900,-1816.0000000,6.4000000,0.0000000,0.0000000,70.0000000); //
CreateDynamicObject(2229,473.2000100,-1827.0000000,5.8000000,0.0000000,0.0000000,130.0000000); //
CreateDynamicObject(2232,473.3999900,-1826.1999500,6.4000000,0.0000000,0.0000000,110.0000000); //
CreateDynamicObject(1616,489.0481900,-1814.0036600,10.3670000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(3851,482.3127100,-1828.0410200,7.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3851,478.0600000,-1828.0400400,7.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3851,472.3778100,-1822.3857400,7.7900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3851,472.3775000,-1819.6364700,7.7900000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3851,478.0499000,-1814.0000000,7.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3851,482.3127100,-1814.0025600,7.7900000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19458,474.0878000,-1823.2500000,9.8294000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,474.0878000,-1818.8000500,9.8300000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,477.5799900,-1823.2500000,9.8250000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,477.5799900,-1818.8000500,9.8300000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,484.5199900,-1823.2500000,9.8250000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,481.0224900,-1818.8000500,9.8300000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,486.9498900,-1818.8000500,9.8320000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,481.0224900,-1823.2500000,9.8250000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,486.9494000,-1823.2500000,9.8248000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19458,484.5199900,-1818.8000500,9.8300000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19439,486.9500100,-1827.9799800,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,483.4798900,-1827.9799800,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,480.0000000,-1827.9799800,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,476.5000000,-1827.9799800,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,472.4046900,-1826.3199500,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,474.0600000,-1814.0600600,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,472.4046900,-1822.8700000,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,472.4046900,-1819.3780500,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,472.4046900,-1815.9006300,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,474.0678100,-1827.9820600,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,477.5580100,-1814.0600600,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,481.0400100,-1814.0600600,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,484.5300000,-1814.0600600,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,486.9500100,-1814.0579800,9.1100000,90.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19439,488.6300000,-1826.3199500,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,488.6300000,-1822.8700000,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,488.6300000,-1819.3780500,9.1100000,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19439,488.6300000,-1815.9006300,9.1100000,90.0000000,0.0000000,0.0000000); //
//New 24/7 by Map Team ZC 2013
CreateDynamicObject(8947,1280.0898400,-1874.6699200,13.0000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(8947,1296.3000500,-1884.6999500,13.0000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(8947,1312.3291000,-1874.6699200,13.0000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1349,1288.4000200,-1873.4799800,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1885,1288.6999500,-1870.1999500,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1984,1288.7600100,-1869.3299600,12.7000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1983,1300.1999500,-1864.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1987,1299.1999500,-1864.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1988,1303.0999800,-1864.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1981,1302.6500200,-1866.8800000,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1991,1303.6500200,-1866.8800000,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1996,1298.7700200,-1866.8800000,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2412,1292.3193400,-1863.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2412,1290.3000500,-1863.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1888,1302.5999800,-1877.0000000,12.6700000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1887,1299.6999500,-1877.0000000,12.6700000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1889,1302.5999800,-1873.5999800,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1890,1299.5999800,-1873.5999800,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1842,1301.4000200,-1870.5699500,13.1000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1844,1302.5999800,-1867.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1843,1299.8000500,-1867.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1981,1301.6500200,-1866.8800000,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1981,1300.6500200,-1866.8800000,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1981,1299.6999500,-1866.8800000,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1983,1301.1639400,-1864.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1983,1302.0999800,-1864.9000200,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1987,1303.0999800,-1863.9000200,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1983,1302.0999800,-1863.9000200,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1983,1301.0999800,-1863.9000200,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1983,1300.1700400,-1863.9000200,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1988,1299.2199700,-1863.9000200,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1349,1288.4000200,-1872.6600300,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1349,1288.4000200,-1874.3000500,13.2000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1990,1295.4000200,-1876.8000500,12.6000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1990,1294.4200400,-1876.8000500,12.6000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(1990,1293.4399400,-1876.8000500,12.6000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(2443,1292.4599600,-1876.8000500,12.6000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2601,1292.6999500,-1876.8000500,13.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2538,1295.6999500,-1874.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2539,1294.7099600,-1874.0069600,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2539,1293.7120400,-1874.0069600,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2541,1293.6999500,-1873.0000000,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2540,1292.7199700,-1874.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2542,1294.6999500,-1873.0000000,12.7000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2541,1292.6999500,-1873.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(2542,1295.6999500,-1873.0000000,12.7000000,0.0000000,0.0000000,179.9945100); //
CreateDynamicObject(2601,1292.4000200,-1876.6999500,13.7000000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1775,1291.4200400,-1876.8000500,13.8000000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1776,1288.0000000,-1865.5000000,13.8000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2948,1291.9000200,-1862.4000200,12.6400000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2948,1290.0000000,-1862.4090600,12.6400000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19454,1292.0330800,-1864.0791000,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1292.0330800,-1867.5780000,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1292.0330800,-1871.0752000,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1292.0330800,-1874.5670200,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1301.6639400,-1878.0629900,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1292.0330800,-1878.0629900,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1301.6639400,-1874.5670200,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1301.6639400,-1871.0752000,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1301.6639400,-1867.5780000,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19454,1301.6639400,-1864.0791000,12.5500000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1292.2729500,-1874.5670200,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1292.2729500,-1871.0752000,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1292.2729500,-1864.0791000,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1292.2729500,-1867.5780000,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1292.2729500,-1878.0629900,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1301.9100300,-1864.0791000,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1301.9100300,-1867.5752000,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1301.9100300,-1871.0752000,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1301.9100300,-1874.5670200,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1301.9100300,-1878.0629900,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19449,1282.7005600,-1878.0629900,16.0345000,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(3851,1293.1275600,-1862.3917200,13.9471000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3851,1304.4154100,-1862.3917200,13.9471000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(13562,1295.5826400,-1869.5324700,17.5349900,0.0000000,0.0000000,0.0000000); //
// The Black Hand Restaurant
CreateDynamicObject(14623,222.30000000,314.16000000,960.51000000,0.00000000,0.00000000,36.00000000); //
CreateDynamicObject(10722,221.61000000,324.33000000,976.61000000,270.00000000,180.01000000,359.25000000); //
CreateDynamicObject(5737,228.51000000,284.75000000,960.95000000,0.00000000,0.00000000,90.50000000); //
CreateDynamicObject(5737,199.56000000,294.19000000,960.95000000,0.00000000,0.00000000,54.24000000); //
CreateDynamicObject(5737,192.14000000,311.96000000,960.95000000,0.00000000,0.00000000,16.49000000); //
CreateDynamicObject(5737,196.56000000,331.01000000,960.95000000,0.00000000,0.00000000,340.24000000); //
CreateDynamicObject(5737,245.93000000,295.11000000,960.95000000,0.00000000,0.00000000,128.50000000); //
CreateDynamicObject(5737,253.43000000,312.20000000,960.95000000,0.00000000,0.00000000,161.25000000); //
CreateDynamicObject(5737,248.32000000,331.52000000,960.95000000,0.00000000,0.00000000,201.73000000); //
CreateDynamicObject(5737,232.94000000,343.58000000,960.95000000,0.00000000,0.00000000,237.73000000); //
CreateDynamicObject(5737,214.07000000,344.72000000,960.95000000,0.00000000,0.00000000,271.73000000); //
CreateDynamicObject(5737,198.07000000,334.42000000,960.95000000,0.00000000,0.00000000,311.73000000); //
CreateDynamicObject(10153,257.69000000,299.55000000,953.19000000,0.00000000,0.00000000,22.00000000); //
CreateDynamicObject(10153,258.54000000,297.44000000,953.19000000,0.00000000,0.00000000,22.00000000); //
CreateDynamicObject(1649,234.71000000,312.37000000,956.63000000,0.00000000,0.00000000,253.99000000); //
CreateDynamicObject(1649,227.82000000,325.41000000,956.63000000,0.00000000,0.00000000,326.20000000); //
CreateDynamicObject(1649,234.59000000,316.57000000,956.63000000,0.00000000,0.00000000,289.49000000); //
CreateDynamicObject(1649,233.37000000,308.64000000,956.63000000,0.00000000,0.00000000,245.99000000); //
CreateDynamicObject(1649,230.80000000,305.27000000,956.63000000,0.00000000,0.00000000,217.99000000); //
CreateDynamicObject(1649,227.93000000,303.26000000,956.63000000,0.00000000,0.00000000,213.99000000); //
CreateDynamicObject(1649,224.00000000,301.98000000,956.63000000,0.00000000,0.00000000,181.99000000); //
CreateDynamicObject(1649,216.56000000,303.11000000,956.63000000,0.00000000,0.00000000,143.99000000); //
CreateDynamicObject(1649,220.53000000,301.87000000,956.63000000,0.00000000,0.00000000,181.99000000); //
CreateDynamicObject(1649,216.55000000,303.11000000,956.63000000,0.00000000,0.00000000,323.98000000); //
CreateDynamicObject(1649,220.53000000,301.87000000,956.63000000,0.00000000,0.00000000,1.99000000); //
CreateDynamicObject(1649,224.00000000,301.98000000,956.63000000,0.00000000,0.00000000,1.99000000); //
CreateDynamicObject(1649,227.93000000,303.26000000,956.63000000,0.00000000,0.00000000,33.99000000); //
CreateDynamicObject(1649,230.80000000,305.27000000,956.63000000,0.00000000,0.00000000,37.99000000); //
CreateDynamicObject(1649,233.37000000,308.64000000,956.63000000,0.00000000,0.00000000,65.99000000); //
CreateDynamicObject(1649,234.71000000,312.37000000,956.63000000,0.00000000,0.00000000,73.99000000); //
CreateDynamicObject(1649,234.58000000,316.57000000,956.63000000,0.00000000,0.00000000,109.49000000); //
CreateDynamicObject(1649,223.79000000,326.74000000,956.63000000,0.00000000,0.00000000,358.20000000); //
CreateDynamicObject(1649,220.53000000,326.85000000,956.63000000,0.00000000,0.00000000,358.20000000); //
CreateDynamicObject(1649,216.59000000,325.53000000,956.63000000,0.00000000,0.00000000,38.20000000); //
CreateDynamicObject(1649,213.17000000,322.90000000,956.63000000,0.00000000,0.00000000,38.19000000); //
CreateDynamicObject(1649,210.83000000,319.41000000,956.63000000,0.00000000,0.00000000,74.19000000); //
CreateDynamicObject(1649,209.91000000,316.17000000,956.63000000,0.00000000,0.00000000,74.19000000); //
CreateDynamicObject(1649,209.99000000,312.00000000,956.63000000,0.00000000,0.00000000,108.19000000); //
CreateDynamicObject(1649,209.99000000,312.00000000,956.63000000,0.00000000,0.00000000,288.19000000); //
CreateDynamicObject(1649,209.91000000,316.17000000,956.63000000,0.00000000,0.00000000,254.19000000); //
CreateDynamicObject(1649,210.83000000,319.41000000,956.63000000,0.00000000,0.00000000,254.19000000); //
CreateDynamicObject(1649,213.17000000,322.90000000,956.63000000,0.00000000,0.00000000,218.19000000); //
CreateDynamicObject(1649,216.59000000,325.53000000,956.63000000,0.00000000,0.00000000,218.19000000); //
CreateDynamicObject(1649,220.53000000,326.85000000,956.63000000,0.00000000,0.00000000,180.20000000); //
CreateDynamicObject(1649,223.81000000,326.75000000,956.63000000,0.00000000,0.00000000,178.20000000); //
CreateDynamicObject(1649,227.84000000,325.44000000,956.63000000,0.00000000,0.00000000,146.20000000); //
CreateDynamicObject(643,206.13000000,312.11000000,955.43000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(643,207.03000000,307.96000000,955.43000000,0.00000000,0.00000000,102.00000000); //
CreateDynamicObject(643,205.49000000,315.05000000,955.43000000,0.00000000,0.00000000,130.00000000); //
CreateDynamicObject(643,212.80000000,329.74000000,955.43000000,0.00000000,0.00000000,54.00000000); //
CreateDynamicObject(643,210.15000000,327.17000000,955.43000000,0.00000000,0.00000000,319.99000000); //
CreateDynamicObject(2637,212.11000000,315.90000000,955.37000000,0.00000000,0.00000000,74.50000000); //
CreateDynamicObject(2639,210.88000000,316.34000000,955.59000000,0.00000000,0.00000000,254.49000000); //
CreateDynamicObject(10722,222.82000000,302.18000000,976.64000000,270.00000000,180.00000000,179.25000000); //
CreateDynamicObject(2784,222.55000000,305.92000000,959.41000000,270.00000000,179.84000000,358.09000000); //
CreateDynamicObject(2784,228.10000000,310.33000000,959.41000000,270.00000000,180.04000000,88.30000000); //
CreateDynamicObject(2784,228.19000000,318.48000000,959.41000000,270.00000000,180.04000000,88.30000000); //
CreateDynamicObject(2784,223.76000000,324.03000000,959.41000000,270.00000000,180.04000000,178.30000000); //
CreateDynamicObject(2784,218.32000000,319.59000000,959.41000000,270.00000000,180.04000000,268.30000000); //
CreateDynamicObject(2784,218.12000000,311.42000000,959.41000000,270.00000000,180.03000000,268.29000000); //
CreateDynamicObject(2638,216.32000000,313.36000000,955.62000000,0.00000000,0.00000000,13.50000000); //
CreateDynamicObject(638,220.04000000,326.24000000,955.66000000,0.00000000,0.00000000,267.25000000); //
CreateDynamicObject(2639,210.33000000,314.34000000,955.59000000,0.00000000,0.00000000,254.49000000); //
CreateDynamicObject(2637,211.56000000,313.95000000,955.37000000,0.00000000,0.00000000,74.50000000); //
CreateDynamicObject(2639,213.50000000,322.53000000,955.60000000,0.00000000,0.00000000,218.00000000); //
CreateDynamicObject(2637,214.33000000,321.59000000,955.37000000,0.00000000,0.00000000,38.50000000); //
CreateDynamicObject(2639,216.90000000,325.12000000,955.59000000,0.00000000,0.00000000,218.00000000); //
CreateDynamicObject(2637,223.67000000,324.71000000,955.37000000,0.00000000,0.00000000,350.49000000); //
CreateDynamicObject(638,211.48000000,319.82000000,955.66000000,0.00000000,0.00000000,343.25000000); //
CreateDynamicObject(16151,222.62000000,297.49000000,955.26000000,0.00000000,0.00000000,270.00000000); //
CreateDynamicObject(1487,224.67000000,298.49000000,956.06000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1487,224.48000000,298.36000000,956.06000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1509,225.41000000,298.45000000,956.06000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1510,223.53000000,298.37000000,955.87000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1512,222.86000000,298.46000000,956.06000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1520,225.99000000,297.88000000,955.89000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1544,222.39000000,298.42000000,955.87000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2941,220.99000000,298.41000000,955.96000000,0.00000000,0.00000000,177.99000000); //
CreateDynamicObject(14651,207.65000000,320.22000000,957.00000000,0.00000000,0.00000000,342.00000000); //
CreateDynamicObject(2639,223.90000000,325.86000000,955.59000000,0.00000000,0.00000000,170.00000000); //
CreateDynamicObject(2639,225.85000000,325.51000000,955.59000000,0.00000000,0.00000000,169.99000000); //
CreateDynamicObject(2637,217.69000000,324.04000000,955.37000000,0.00000000,0.00000000,38.49000000); //
CreateDynamicObject(2637,219.64000000,320.60000000,955.37000000,0.00000000,0.00000000,308.73000000); //
CreateDynamicObject(2637,225.65000000,324.39000000,955.37000000,0.00000000,0.00000000,350.49000000); //
CreateDynamicObject(2639,216.21000000,317.72000000,955.59000000,0.00000000,0.00000000,308.99000000); //
CreateDynamicObject(2638,218.39000000,319.51000000,955.62000000,0.00000000,0.00000000,309.25000000); //
CreateDynamicObject(2639,220.67000000,321.37000000,955.59000000,0.00000000,0.00000000,128.49000000); //
CreateDynamicObject(2637,217.15000000,318.45000000,955.37000000,0.00000000,0.00000000,308.73000000); //
CreateDynamicObject(2639,215.71000000,316.10000000,955.59000000,0.00000000,0.00000000,194.23000000); //
CreateDynamicObject(2637,215.84000000,314.88000000,955.37000000,0.00000000,0.00000000,13.73000000); //
CreateDynamicObject(2637,216.59000000,311.83000000,955.37000000,0.00000000,0.00000000,13.72000000); //
CreateDynamicObject(2639,216.94000000,310.72000000,955.59000000,0.00000000,0.00000000,13.98000000); //
CreateDynamicObject(2639,220.63000000,302.56000000,955.59000000,0.00000000,0.00000000,353.98000000); //
CreateDynamicObject(2639,218.57000000,302.77000000,955.59000000,0.00000000,0.00000000,353.97000000); //
CreateDynamicObject(2637,220.82000000,303.68000000,955.37000000,0.00000000,0.00000000,353.72000000); //
CreateDynamicObject(2637,218.79000000,303.90000000,955.37000000,0.00000000,0.00000000,353.72000000); //
CreateDynamicObject(2639,218.76000000,307.36000000,955.59000000,0.00000000,0.00000000,287.98000000); //
CreateDynamicObject(2637,219.90000000,307.73000000,955.37000000,0.00000000,0.00000000,107.72000000); //
CreateDynamicObject(2638,221.47000000,308.24000000,955.62000000,0.00000000,0.00000000,287.75000000); //
CreateDynamicObject(2637,223.06000000,308.69000000,955.37000000,0.00000000,0.00000000,107.72000000); //
CreateDynamicObject(2638,224.53000000,309.23000000,955.62000000,0.00000000,0.00000000,287.74000000); //
CreateDynamicObject(2637,224.17000000,312.89000000,955.37000000,0.00000000,0.00000000,109.72000000); //
CreateDynamicObject(2639,227.18000000,310.03000000,955.59000000,0.00000000,0.00000000,107.98000000); //
CreateDynamicObject(2639,228.30000000,311.34000000,955.59000000,0.00000000,0.00000000,353.98000000); //
CreateDynamicObject(2637,228.43000000,312.48000000,955.37000000,0.00000000,0.00000000,173.72000000); //
CreateDynamicObject(2638,228.56000000,314.04000000,955.62000000,0.00000000,0.00000000,353.74000000); //
CreateDynamicObject(2637,228.82000000,315.73000000,955.37000000,0.00000000,0.00000000,173.72000000); //
CreateDynamicObject(2639,228.91000000,316.91000000,955.59000000,0.00000000,0.00000000,173.98000000); //
CreateDynamicObject(2639,222.20000000,321.81000000,955.59000000,0.00000000,0.00000000,258.49000000); //
CreateDynamicObject(2637,223.33000000,321.52000000,955.37000000,0.00000000,0.00000000,258.73000000); //
CreateDynamicObject(2638,224.92000000,321.25000000,955.62000000,0.00000000,0.00000000,259.00000000); //
CreateDynamicObject(2637,226.54000000,320.90000000,955.37000000,0.00000000,0.00000000,258.72000000); //
CreateDynamicObject(2639,227.71000000,320.78000000,955.59000000,0.00000000,0.00000000,78.48000000); //
CreateDynamicObject(638,224.12000000,302.51000000,955.66000000,0.00000000,0.00000000,271.25000000); //
CreateDynamicObject(2639,227.30000000,303.43000000,955.59000000,0.00000000,0.00000000,35.98000000); //
CreateDynamicObject(2637,226.70000000,304.36000000,955.37000000,0.00000000,0.00000000,35.72000000); //
CreateDynamicObject(638,232.75000000,308.46000000,955.66000000,0.00000000,0.00000000,337.24000000); //
CreateDynamicObject(2639,230.92000000,305.95000000,955.59000000,0.00000000,0.00000000,37.97000000); //
CreateDynamicObject(2637,230.26000000,306.84000000,955.37000000,0.00000000,0.00000000,37.72000000); //
CreateDynamicObject(2639,233.77000000,312.26000000,955.59000000,0.00000000,0.00000000,73.97000000); //
CreateDynamicObject(2639,234.32000000,314.19000000,955.59000000,0.00000000,0.00000000,73.97000000); //
CreateDynamicObject(2637,233.26000000,314.50000000,955.37000000,0.00000000,0.00000000,73.72000000); //
CreateDynamicObject(2637,232.69000000,312.56000000,955.37000000,0.00000000,0.00000000,73.71000000); //
CreateDynamicObject(2639,225.23000000,313.29000000,955.59000000,0.00000000,0.00000000,109.97000000); //
CreateDynamicObject(2637,226.12000000,309.61000000,955.37000000,0.00000000,0.00000000,107.72000000); //
CreateDynamicObject(2638,222.86000000,312.49000000,955.62000000,0.00000000,0.00000000,289.74000000); //
CreateDynamicObject(2637,221.02000000,311.87000000,955.37000000,0.00000000,0.00000000,109.72000000); //
CreateDynamicObject(2639,219.91000000,311.43000000,955.59000000,0.00000000,0.00000000,289.98000000); //
CreateDynamicObject(2639,224.97000000,317.30000000,955.59000000,0.00000000,0.00000000,111.97000000); //
CreateDynamicObject(2637,223.89000000,316.94000000,955.37000000,0.00000000,0.00000000,111.72000000); //
CreateDynamicObject(2638,222.34000000,316.28000000,955.62000000,0.00000000,0.00000000,291.74000000); //
CreateDynamicObject(2637,220.83000000,315.75000000,955.37000000,0.00000000,0.00000000,111.72000000); //
CreateDynamicObject(2639,219.69000000,315.27000000,955.59000000,0.00000000,0.00000000,291.97000000); //
CreateDynamicObject(2784,225.69000000,319.03000000,959.69000000,358.00000000,180.00000000,62.26000000); //
CreateDynamicObject(2784,221.34000000,310.98000000,959.69000000,357.99000000,179.99000000,61.51000000); //
CreateDynamicObject(2784,221.40000000,319.28000000,959.69000000,357.99000000,179.99000000,114.25000000); //
CreateDynamicObject(2784,225.26000000,310.51000000,959.69000000,357.99000000,179.99000000,114.25000000); //
CreateDynamicObject(2796,210.79000000,300.42000000,957.77000000,0.00000000,0.00000000,324.00000000); //
CreateDynamicObject(1536,210.02000000,300.95000000,954.96000000,0.00000000,0.00000000,324.00000000); //
CreateDynamicObject(3467,228.59000000,320.41000000,955.67000000,0.00000000,0.00000000,312.00000000); //
CreateDynamicObject(1778,208.38000000,302.49000000,954.96000000,0.00000000,0.00000000,240.00000000); //
CreateDynamicObject(2718,224.71000000,333.25000000,958.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2815,234.45000000,317.03000000,957.07000000,270.25000000,0.00000000,289.25000000); //
CreateDynamicObject(2815,234.52000000,315.93000000,957.04000000,270.25000000,0.00000000,109.75000000); //
CreateDynamicObject(2257,233.17000000,308.31000000,956.99000000,0.00000000,0.00000000,246.00000000); //
CreateDynamicObject(2257,233.25000000,308.26000000,956.99000000,0.00000000,0.00000000,65.99000000); //
CreateDynamicObject(2255,227.58000000,303.63000000,957.00000000,0.00000000,0.00000000,213.25000000); //
CreateDynamicObject(2255,228.29000000,302.92000000,957.00000000,0.00000000,0.00000000,33.49000000); //
CreateDynamicObject(2256,216.82000000,302.99000000,957.08000000,0.00000000,0.00000000,143.75000000); //
CreateDynamicObject(2256,216.76000000,302.91000000,957.08000000,0.00000000,0.00000000,323.75000000); //
CreateDynamicObject(2258,209.83000000,312.42000000,956.84000000,0.00000000,0.00000000,288.25000000); //
CreateDynamicObject(2258,209.88000000,312.43000000,956.84000000,0.00000000,0.00000000,108.25000000); //
CreateDynamicObject(2266,211.35000000,319.41000000,956.47000000,0.00000000,0.00000000,73.50000000); //
CreateDynamicObject(2266,210.36000000,319.75000000,956.47000000,0.00000000,0.00000000,253.50000000); //
CreateDynamicObject(2276,220.26000000,326.34000000,956.96000000,0.00000000,0.00000000,359.00000000); //
CreateDynamicObject(2276,220.32000000,327.34000000,956.96000000,0.00000000,0.00000000,180.24000000); //
CreateDynamicObject(2281,227.87000000,324.77000000,956.67000000,0.00000000,0.25000000,326.25000000); //
CreateDynamicObject(2281,228.46000000,325.61000000,956.67000000,0.00000000,0.25000000,146.25000000); //
CreateDynamicObject(1367,208.04000000,304.21000000,955.61000000,0.00000000,0.00000000,110.00000000); //
CreateDynamicObject(1367,228.40000000,324.35000000,955.61000000,0.00000000,0.00000000,326.00000000); //
CreateDynamicObject(1367,233.83000000,317.14000000,955.61000000,0.00000000,0.00000000,290.00000000); //
CreateDynamicObject(1367,215.96000000,304.12000000,955.61000000,0.00000000,0.00000000,146.00000000); //
CreateDynamicObject(1367,210.68000000,311.47000000,955.61000000,0.00000000,0.00000000,110.00000000); //
CreateDynamicObject(3920,220.57000000,296.86000000,958.40000000,0.00000000,0.00000000,1.00000000); //
CreateDynamicObject(626,240.38000000,318.19000000,957.02000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(626,238.36000000,323.86000000,957.01000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(628,230.25000000,323.17000000,956.96000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(628,233.32000000,319.03000000,956.96000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(628,214.38000000,305.38000000,956.96000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(628,211.47000000,309.68000000,956.96000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(633,217.12000000,298.06000000,955.96000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(640,239.85000000,310.25000000,955.66000000,0.00000000,0.00000000,340.00000000); //
CreateDynamicObject(640,231.65000000,329.96000000,955.66000000,0.00000000,0.00000000,58.00000000); //
CreateDynamicObject(949,238.76000000,317.72000000,955.60000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(949,236.83000000,323.22000000,955.60000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,240.29000000,316.21000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,236.66000000,325.46000000,955.28000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,240.33000000,317.37000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,239.86000000,316.80000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,239.40000000,317.53000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,237.71000000,324.70000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,237.19000000,324.06000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2245,236.93000000,324.71000000,955.27000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2345,224.16000000,326.73000000,958.03000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(2345,209.75000000,315.62000000,958.03000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(3920,232.09000000,329.30000000,958.40000000,0.00000000,0.00000000,337.00000000); //
CreateDynamicObject(9812,239.93000000,296.45000000,961.48000000,0.00000000,0.00000000,302.00000000); //
CreateDynamicObject(9812,213.58000000,305.26000000,956.15000000,0.00000000,0.00000000,328.00000000); //
CreateDynamicObject(1594,235.14000000,303.57000000,955.44000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1594,232.92000000,301.64000000,955.44000000,0.00000000,0.00000000,336.00000000); //
CreateDynamicObject(1594,230.33000000,299.74000000,955.44000000,0.00000000,0.00000000,27.99000000); //
CreateDynamicObject(949,221.25000000,322.07000000,955.60000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(949,228.09000000,310.25000000,955.60000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(949,215.12000000,317.33000000,955.60000000,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(1523,217.55000000,333.12000000,954.91000000,0.00000000,0.00000000,1.70000000); //
CreateDynamicObject(1523,220.60000000,333.27000000,954.91000000,0.00000000,0.00000000,181.70000000); //
CreateDynamicObject(1557,239.22000000,322.99000000,955.70000000,0.00000000,0.00000000,292.00000000); //
CreateDynamicObject(1557,240.45000000,319.92000000,955.70000000,0.00000000,0.00000000,112.00000000); //
//CNN By Map Team ZC 2013
CreateDynamicObject(3851,647.5000000,-1373.5999800,17.4000000,0.0000000,0.0000000,359.7500000); //object(carshowwin_sfsx)(2)
CreateDynamicObject(3851,647.5000000,-1379.0000000,17.4000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(3)
CreateDynamicObject(3851,647.6423300,-1354.9018600,18.6000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(4)
CreateDynamicObject(3851,647.6205400,-1360.5952100,18.6000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(5)
CreateDynamicObject(3851,647.6992200,-1342.1992200,17.4000000,0.0000000,0.0000000,1.5320000); //object(carshowwin_sfsx)(6)
CreateDynamicObject(3851,647.7000100,-1336.5000000,17.4000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(7)
CreateDynamicObject(3578,776.9000200,-1329.8000500,11.9200000,35.2440000,0.0000000,359.6870000); //object(dockbarr1_la)(2)
CreateDynamicObject(8661,767.3994100,-1359.6992200,12.7000000,0.0000000,0.0000000,359.7470000); //object(gnhtelgrnd_lvs)(2)
CreateDynamicObject(8661,767.4000200,-1340.0000000,12.7000000,0.0000000,0.0000000,359.7360000); //object(gnhtelgrnd_lvs)(3)
CreateDynamicObject(8661,767.0000000,-1374.8000500,12.7000000,359.2500000,0.0000000,0.0000000); //object(gnhtelgrnd_lvs)(4)
CreateDynamicObject(8661,737.5000000,-1349.8000500,12.7000000,0.0000000,0.0000000,89.7480000); //object(gnhtelgrnd_lvs)(5)
CreateDynamicObject(14387,648.4000200,-1363.5999800,12.3000000,0.0000000,0.0000000,179.9950000); //object(dr_gsnew02)(4)
CreateDynamicObject(14387,648.3917800,-1358.8813500,12.3000000,0.0000000,0.0000000,179.9950000); //object(dr_gsnew02)(5)
CreateDynamicObject(14387,648.4000200,-1354.6999500,12.3000000,0.0000000,0.0000000,179.9950000); //object(dr_gsnew02)(6)
CreateDynamicObject(14387,648.3994100,-1350.2998000,12.3000000,0.0000000,0.0000000,179.9950000); //object(dr_gsnew02)(7)
CreateDynamicObject(16501,768.3994100,-1329.8199500,14.4000000,0.0000000,0.0000000,88.4950000); //object(cn2_savgardr2_)(1)
CreateDynamicObject(16501,761.5996100,-1329.7042200,14.4000000,0.0000000,0.0000000,89.5160000); //object(cn2_savgardr2_)(2)
CreateDynamicObject(16501,754.6992200,-1329.5996100,14.4000000,0.0000000,0.0000000,88.8490000); //object(cn2_savgardr2_)(3)
CreateDynamicObject(16501,747.7998000,-1329.5195300,14.4000000,0.0000000,0.0000000,89.8410000); //object(cn2_savgardr2_)(4)
CreateDynamicObject(16501,741.0000000,-1329.5100100,14.4000000,0.0000000,0.0000000,89.9800000); //object(cn2_savgardr2_)(5)
CreateDynamicObject(16501,734.2998000,-1329.5080600,14.4000000,0.0000000,0.0000000,90.0000000); //object(cn2_savgardr2_)(6)
CreateDynamicObject(16501,784.2000100,-1330.0996100,13.1000000,90.0000000,180.6870000,270.0000000); //object(cn2_savgardr2_)(8)
CreateDynamicObject(16501,785.2998000,-1330.0996100,13.1000000,90.0000000,180.6870000,270.5000000); //object(cn2_savgardr2_)(9)
CreateDynamicObject(16501,787.4000200,-1333.5000000,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(10)
CreateDynamicObject(16501,787.4000200,-1340.5000000,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(11)
CreateDynamicObject(16501,787.4000200,-1346.6999500,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(12)
CreateDynamicObject(16501,787.4000200,-1353.0000000,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(13)
CreateDynamicObject(16501,787.4000200,-1359.6999500,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(14)
CreateDynamicObject(16501,787.4000200,-1366.4000200,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(15)
CreateDynamicObject(16501,787.4000200,-1373.0999800,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(16)
CreateDynamicObject(16501,787.4000200,-1379.0999800,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(17)
CreateDynamicObject(16501,787.3994100,-1381.5000000,14.4000000,0.0000000,0.0000000,0.0000000); //object(cn2_savgardr2_)(18)
CreateDynamicObject(16501,770.4000200,-1385.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //object(cn2_savgardr2_)(21)
CreateDynamicObject(16501,763.5999800,-1385.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //object(cn2_savgardr2_)(22)
CreateDynamicObject(16501,757.7999900,-1385.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //object(cn2_savgardr2_)(23)
CreateDynamicObject(16501,741.0000000,-1359.6999500,22.1000000,0.0000000,0.0000000,180.0000000); //object(cn2_savgardr2_)(24)
CreateDynamicObject(16501,757.7999900,-1384.1999500,22.1000000,0.0000000,0.0000000,269.9950000); //object(cn2_savgardr2_)(27)
CreateDynamicObject(16501,757.7999900,-1384.1999500,18.4000000,0.0000000,0.0000000,269.9890000); //object(cn2_savgardr2_)(28)
CreateDynamicObject(16501,757.7999900,-1384.1999500,14.4000000,0.0000000,0.0000000,269.9890000); //object(cn2_savgardr2_)(29)
CreateDynamicObject(16501,761.2000100,-1380.6999500,14.4000000,0.0000000,0.0000000,359.9890000); //object(cn2_savgardr2_)(30)
CreateDynamicObject(16501,761.2000100,-1380.6999500,18.6000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(31)
CreateDynamicObject(16501,761.1992200,-1380.6992200,22.1000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(32)
CreateDynamicObject(16501,761.2000100,-1374.0999800,14.4000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(33)
CreateDynamicObject(16501,761.1992200,-1367.5000000,14.4000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(34)
CreateDynamicObject(16501,761.1992200,-1365.5996100,14.4000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,753.8994100,-1356.2998000,14.4000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(38)
CreateDynamicObject(16501,747.2998000,-1356.2998000,14.4000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(39)
CreateDynamicObject(16501,744.4000200,-1356.3000500,14.4000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(40)
CreateDynamicObject(16501,744.4000200,-1356.3000500,18.5000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(42)
CreateDynamicObject(16501,744.4000200,-1356.3000500,22.1000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(43)
CreateDynamicObject(16501,747.2998000,-1356.2998000,18.5000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(44)
CreateDynamicObject(16501,747.2998000,-1356.2998000,22.1000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(45)
CreateDynamicObject(16501,753.8994100,-1356.2998000,18.4000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(46)
CreateDynamicObject(16501,753.8994100,-1356.2998000,22.1000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(47)
CreateDynamicObject(16501,761.2000100,-1365.5999800,18.5000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(50)
CreateDynamicObject(16501,761.2000100,-1365.5999800,22.1000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(51)
CreateDynamicObject(16501,761.2000100,-1367.5000000,18.6000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(52)
CreateDynamicObject(16501,761.2000100,-1367.5000000,22.1000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(53)
CreateDynamicObject(16501,761.2000100,-1374.0999800,18.1000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(54)
CreateDynamicObject(16501,761.2000100,-1374.0999800,22.1000000,0.0000000,0.0000000,359.9840000); //object(cn2_savgardr2_)(55)
CreateDynamicObject(16501,757.6992200,-1382.0000000,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(57)
CreateDynamicObject(16501,757.7000100,-1377.9000200,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(58)
CreateDynamicObject(16501,757.7000100,-1373.6999500,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(59)
CreateDynamicObject(16501,757.6992200,-1369.5000000,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(60)
CreateDynamicObject(16501,757.6992200,-1365.5000000,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(61)
CreateDynamicObject(16501,757.6992200,-1364.3994100,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(62)
CreateDynamicObject(16501,753.9000200,-1358.5999800,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(63)
CreateDynamicObject(16501,748.5999800,-1358.5999800,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(64)
CreateDynamicObject(16501,744.5996100,-1358.5996100,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(65)
CreateDynamicObject(3851,761.4000200,-1378.5999800,16.8000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(29)
CreateDynamicObject(3851,761.3994100,-1367.5996100,16.8000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(32)
CreateDynamicObject(3851,748.5000000,-1356.0996100,21.1000000,0.0000000,0.0000000,89.9950000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,748.4000200,-1356.0999800,16.7000000,0.0000000,0.0000000,89.9950000); //object(carshowwin_sfsx)(35)
CreateDynamicObject(7488,762.3994100,-1375.3994100,-24.4000000,0.0000000,270.0000000,270.0000000); //object(vgncarpark1)(6)
CreateDynamicObject(3660,761.9000200,-1374.8000500,14.4000000,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(736,763.0000000,-1368.4000200,24.0000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(16501,740.7000100,-1353.8000500,14.4000000,0.0000000,0.0000000,39.9840000); //object(cn2_savgardr2_)(68)
CreateDynamicObject(16501,735.5000000,-1349.3000500,14.4000000,0.0000000,0.0000000,57.9790000); //object(cn2_savgardr2_)(69)
CreateDynamicObject(16501,734.0999800,-1348.4000200,14.2000000,0.0000000,0.0000000,57.9750000); //object(cn2_savgardr2_)(70)
CreateDynamicObject(16501,740.7000100,-1353.8000500,18.5000000,0.0000000,0.0000000,39.9790000); //object(cn2_savgardr2_)(71)
CreateDynamicObject(16501,740.6992200,-1353.7998000,22.1000000,0.0000000,0.0000000,39.9790000); //object(cn2_savgardr2_)(72)
CreateDynamicObject(16501,735.5000000,-1349.3000500,18.4000000,0.0000000,0.0000000,57.9750000); //object(cn2_savgardr2_)(73)
CreateDynamicObject(16501,735.5000000,-1349.2998000,22.1000000,0.0000000,0.0000000,57.9750000); //object(cn2_savgardr2_)(74)
CreateDynamicObject(16501,734.0999800,-1348.4000200,18.2000000,0.0000000,0.0000000,57.9750000); //object(cn2_savgardr2_)(75)
CreateDynamicObject(16501,734.0996100,-1348.3994100,22.1000000,0.0000000,0.0000000,57.9750000); //object(cn2_savgardr2_)(76)
CreateDynamicObject(16501,737.7000100,-1357.8000500,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(77)
CreateDynamicObject(16501,735.0000000,-1357.5000000,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(78)
CreateDynamicObject(16501,734.2999900,-1354.4000200,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(79)
CreateDynamicObject(16501,733.8994100,-1351.0000000,24.4000000,0.0000000,270.0000000,237.9690000); //object(cn2_savgardr2_)(80)
CreateDynamicObject(16501,738.7999900,-1355.0000000,24.4000000,0.0000000,270.0000000,219.7240000); //object(cn2_savgardr2_)(81)
CreateDynamicObject(3660,738.3994100,-1351.0000000,14.1000000,0.0000000,0.0000000,139.9990000); //object(lasairfbed_las)(3)
CreateDynamicObject(11548,751.2999900,-1356.3000500,12.6000000,0.0000000,0.0000000,330.0000000); //object(cnts_lines)(1)
CreateDynamicObject(7488,762.3994100,-1385.0000000,-24.4200000,0.0000000,270.0000000,270.2470000); //object(vgncarpark1)(6)
CreateDynamicObject(3660,762.4000200,-1371.6999500,14.4000000,0.0000000,0.0000000,270.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,764.2999900,-1374.8000500,14.4000000,0.0000000,0.0000000,270.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,763.7999900,-1371.6999500,14.4000000,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(970,765.0999800,-1380.4000200,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,765.0999800,-1378.3000500,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (2)
CreateDynamicObject(970,765.0999800,-1374.1999500,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (3)
CreateDynamicObject(970,765.0999800,-1370.0999800,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (4)
CreateDynamicObject(970,765.0999800,-1366.0000000,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (5)
CreateDynamicObject(970,765.0999800,-1363.9000200,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (6)
CreateDynamicObject(970,763.0000000,-1361.8000500,13.5000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (7)
CreateDynamicObject(983,781.7000100,-1356.1999500,13.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit3) (1)
CreateDynamicObject(14387,776.2000100,-1355.0000000,12.0000000,0.0000000,0.0000000,89.9890000); //object(dr_gsnew02)(8)
CreateDynamicObject(14387,773.5999800,-1355.0000000,12.0000000,0.0000000,0.0000000,89.9890000); //object(dr_gsnew02)(8)
CreateDynamicObject(983,767.8994100,-1356.1992200,13.6000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (3)
CreateDynamicObject(983,761.5000000,-1356.1992200,13.6000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (4)
CreateDynamicObject(3934,741.9000200,-1370.3000500,24.6500000,0.0000000,0.0000000,90.0000000); //object(helipad01) (1)
CreateDynamicObject(16501,734.7999900,-1358.0996100,25.0000000,0.0000000,0.0000000,270.0000000); //object(cn2_savgardr2_)(65)
CreateDynamicObject(16501,738.4000200,-1354.5999800,25.0000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(72)
CreateDynamicObject(16501,731.2999900,-1354.5999800,25.0000000,0.0000000,0.0000000,180.9900000); //object(cn2_savgardr2_)(65)
CreateDynamicObject(16501,734.7999900,-1355.9000200,27.1000000,0.0000000,270.0000000,269.9620000); //object(cn2_savgardr2_)(65)
CreateDynamicObject(16501,734.7999900,-1353.1999500,27.1000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(65)
CreateDynamicObject(16501,734.7999900,-1351.0999800,25.0000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(45)
CreateDynamicObject(3851,742.0999800,-1355.3000500,21.1000000,0.0000000,0.0000000,39.9950000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,742.0996100,-1355.2998000,16.7000000,0.0000000,0.0000000,39.9900000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,733.6992200,-1348.0000000,16.7000000,0.0000000,0.0000000,57.9910000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,733.6992200,-1348.0000000,21.1000000,0.0000000,0.0000000,57.9910000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(16501,757.7000100,-1356.3000500,19.4000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(38)
CreateDynamicObject(16501,757.7000100,-1356.3000500,22.1000000,0.0000000,0.0000000,89.9840000); //object(cn2_savgardr2_)(38)
CreateDynamicObject(16501,761.1992200,-1359.7998000,19.4000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,761.2000100,-1359.8000500,22.1000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,757.7000100,-1358.4000200,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(62)
CreateDynamicObject(16501,757.7000100,-1360.6999500,24.4000000,0.0000000,270.0000000,269.9780000); //object(cn2_savgardr2_)(62)
CreateDynamicObject(3851,755.7998000,-1356.0996100,21.1000000,0.0000000,0.0000000,89.9950000); //object(carshowwin_sfsx)(35)
CreateDynamicObject(3851,761.3994100,-1361.6992200,21.1000000,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx)(31)
CreateDynamicObject(16501,759.2998000,-1359.1992200,15.1000000,0.0000000,0.0000000,31.9760000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(3851,751.6992200,-1356.0996100,16.7000000,0.0000000,0.0000000,89.9950000); //object(carshowwin_sfsx)(35)
CreateDynamicObject(16501,757.5000000,-1358.5999800,17.3000000,0.0000000,270.0000000,271.2250000); //object(cn2_savgardr2_)(62)
CreateDynamicObject(16501,757.7000100,-1362.9000200,17.3000000,0.0000000,270.0000000,269.9730000); //object(cn2_savgardr2_)(62)
CreateDynamicObject(3851,761.4000200,-1372.9000200,21.1000000,0.0000000,0.0000000,359.7470000); //object(carshowwin_sfsx)(32)
CreateDynamicObject(3851,761.4000200,-1378.5999800,21.1000000,0.0000000,0.0000000,359.9970000); //object(carshowwin_sfsx)(32)
CreateDynamicObject(3851,755.7999900,-1384.4000200,21.1000000,0.0000000,0.0000000,270.9970000); //object(carshowwin_sfsx)(32)
CreateDynamicObject(3851,755.7999900,-1384.4000200,16.8000000,0.0000000,0.0000000,270.9940000); //object(carshowwin_sfsx)(32)
CreateDynamicObject(1569,758.5000000,-1357.7998000,12.9000000,0.0000000,0.0000000,301.9980000); //object(adam_v_door) (1)
CreateDynamicObject(1569,760.0999800,-1360.3000500,12.9000000,0.0000000,0.0000000,122.9980000); //object(adam_v_door) (2)
CreateDynamicObject(1215,765.0999800,-1361.8000500,12.9000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (3)
CreateDynamicObject(16501,777.2998000,-1385.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //object(cn2_savgardr2_)(21)
CreateDynamicObject(16501,783.9000200,-1385.0000000,14.5000000,0.0000000,0.0000000,270.0000000); //object(cn2_savgardr2_)(21)
CreateDynamicObject(1411,778.7999900,-1385.1999500,15.9000000,0.0000000,0.0000000,179.9950000); //object(dyn_mesh_1) (1)
CreateDynamicObject(1411,775.0000000,-1385.0999800,15.9000000,0.0000000,0.0000000,179.9950000); //object(dyn_mesh_1) (2)
CreateDynamicObject(736,763.0000000,-1378.5999800,24.1000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,741.7999900,-1353.5999800,23.9000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,734.5000000,-1347.3994100,23.9000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(3660,747.7998000,-1354.8994100,14.1000000,0.0000000,0.0000000,0.0000000); //object(lasairfbed_las)(3)
CreateDynamicObject(970,757.7000100,-1356.1999500,13.3000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (5)
CreateDynamicObject(970,755.5996100,-1354.0996100,13.3000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,751.5000000,-1354.0996100,13.3000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,747.4000200,-1354.0999800,13.3000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,746.4000200,-1354.0999800,13.3000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,742.7000100,-1352.8000500,13.3000000,0.0000000,0.0000000,139.7410000); //object(fencesmallb) (5)
CreateDynamicObject(970,739.5000000,-1350.0999800,13.3000000,0.0000000,0.0000000,139.7410000); //object(fencesmallb) (5)
CreateDynamicObject(970,736.2999900,-1347.4000200,13.3000000,0.0000000,0.0000000,140.2410000); //object(fencesmallb) (5)
CreateDynamicObject(1215,744.2998000,-1354.0996100,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (9)
CreateDynamicObject(1215,757.7000100,-1354.0999800,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (10)
CreateDynamicObject(736,751.0996100,-1355.1992200,23.9000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(16501,732.0999800,-1340.0999800,18.0000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1333.0999800,18.0000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1333.0999800,22.3000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1340.0999800,22.3000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1344.1999500,22.3000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1344.1999500,18.0000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1333.0999800,13.7000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1340.1999500,13.7000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(16501,732.0999800,-1346.1999500,13.7000000,0.0000000,0.0000000,359.9780000); //object(cn2_savgardr2_)(37)
CreateDynamicObject(3851,732.2999900,-1346.5000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx)(31)
CreateDynamicObject(3851,732.2999900,-1335.1999500,16.7000000,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx)(31)
CreateDynamicObject(3851,732.2999900,-1335.1999500,21.1000000,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx)(31)
CreateDynamicObject(3851,732.2999900,-1346.5000000,21.1000000,0.0000000,0.0000000,0.0000000); //object(carshowwin_sfsx)(31)
CreateDynamicObject(3660,732.9000200,-1339.3000500,14.1000000,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las)(3)
CreateDynamicObject(970,734.2998000,-1343.6992200,13.3000000,0.0000000,0.0000000,89.7360000); //object(fencesmallb) (5)
CreateDynamicObject(970,734.2998000,-1339.5996100,13.3000000,0.0000000,0.0000000,89.7360000); //object(fencesmallb) (5)
CreateDynamicObject(970,734.2998000,-1335.5000000,13.3000000,0.0000000,0.0000000,89.7360000); //object(fencesmallb) (5)
CreateDynamicObject(970,734.2999900,-1331.5000000,13.3000000,0.0000000,0.0000000,90.2360000); //object(fencesmallb) (5)
CreateDynamicObject(970,735.7999900,-1347.0000000,13.3000000,0.0000000,0.0000000,140.2400000); //object(fencesmallb) (5)
CreateDynamicObject(736,732.9000200,-1341.5000000,23.9000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,732.7999900,-1334.4000200,23.9000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(1215,734.3994100,-1345.7998000,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (9)
CreateDynamicObject(1215,734.2999900,-1330.1999500,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (9)
CreateDynamicObject(16501,770.4000200,-1329.9000200,14.4000000,0.0000000,0.0000000,90.0000000); //object(cn2_savgardr2_)(1)
CreateDynamicObject(1569,733.5000000,-1358.1999500,24.5000000,0.0000000,0.0000000,0.0000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,736.4000200,-1358.1999500,24.5000000,0.0000000,0.0000000,180.0000000); //object(adam_v_door) (1)
CreateDynamicObject(3660,786.2000100,-1374.9000200,14.4000000,0.0000000,0.0000000,270.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,785.7000100,-1366.0000000,14.4000000,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,774.7000100,-1383.9000200,14.4000000,0.0000000,0.0000000,180.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,775.9000200,-1383.4000200,14.4000000,0.0000000,0.0000000,0.2450000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,786.4000200,-1349.5000000,14.1000000,0.0000000,0.0000000,270.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(3660,785.5999800,-1349.4000200,14.1000000,0.0000000,0.0000000,90.0000000); //object(lasairfbed_las)(1)
CreateDynamicObject(970,767.0999800,-1382.5999800,13.5000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,771.2000100,-1382.5999800,13.5000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,775.2999900,-1382.5999800,13.5000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,779.4000200,-1382.5999800,13.5000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,782.7999900,-1382.5999800,13.5000000,0.0000000,0.0000000,179.9950000); //object(fencesmallb) (5)
CreateDynamicObject(970,784.9000200,-1380.5000000,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1376.4000200,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1372.3000500,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1368.1999500,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1364.0999800,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1360.0000000,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1358.1999500,13.5000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1354.0000000,13.3000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1349.9000200,13.3000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.9000200,-1345.8000500,13.3000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,784.8994100,-1341.6992200,13.3000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
CreateDynamicObject(1215,765.2000100,-1382.5000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(1215,784.7998000,-1382.5000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(736,768.9000200,-1384.1999500,24.2000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,777.2000100,-1383.9000200,24.2000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,785.9000200,-1383.0000000,24.2000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,785.7999900,-1371.1999500,24.2000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,786.2000100,-1359.9000200,23.8000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(736,785.7999900,-1348.0000000,23.9000000,0.0000000,0.0000000,0.0000000); //object(ceasertree01_lvs)(3)
CreateDynamicObject(16501,779.0000000,-1384.6992200,14.5000000,0.0000000,0.0000000,90.0000000); //object(cn2_savgardr2_)(21)
CreateDynamicObject(16501,777.0000000,-1384.6999500,14.5000000,0.0000000,0.0000000,90.0000000); //object(cn2_savgardr2_)(21)
CreateDynamicObject(11547,747.0996100,-1333.8994100,15.5100000,0.0000000,0.0000000,270.0000000); //object(desn_tscanopy) (1)
CreateDynamicObject(11547,763.7000100,-1334.0000000,15.5000000,0.0000000,0.0000000,269.2500000); //object(desn_tscanopy) (2)
CreateDynamicObject(983,771.8994100,-1333.5000000,13.4000000,0.0000000,0.0000000,179.9950000); //object(fenceshit3) (1)
CreateDynamicObject(983,738.7998000,-1333.2998000,13.4000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (1)
CreateDynamicObject(3851,766.2000100,-1330.3000500,15.6000000,0.0000000,0.0000000,88.7410000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,766.2000100,-1330.3000500,11.7000000,0.0000000,0.0000000,88.7370000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,754.9000200,-1330.0999800,15.6000000,0.0000000,0.0000000,88.7370000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,754.8994100,-1330.0996100,11.7000000,0.0000000,0.0000000,88.7370000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,746.5000000,-1330.0999800,15.6000000,0.0000000,0.0000000,90.4870000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,746.5000000,-1330.0999800,11.6000000,0.0000000,0.0000000,90.4830000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,744.5000000,-1330.0999800,15.6000000,0.0000000,0.0000000,90.4830000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,744.5000000,-1330.0999800,11.7000000,0.0000000,0.0000000,90.4830000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(983,755.0999800,-1356.3000500,13.6000000,0.0000000,0.0000000,91.7500000); //object(fenceshit3) (3)
CreateDynamicObject(3522,777.1992200,-1370.7998000,13.0900000,0.0000000,0.0000000,0.0000000); //object(vgsn_flwbdcrb) (1)
CreateDynamicObject(3522,774.7998000,-1373.0000000,13.1000000,0.0000000,0.0000000,270.0000000); //object(vgsn_flwbdcrb) (2)
CreateDynamicObject(3522,772.6992200,-1370.6992200,13.0900000,0.0000000,0.0000000,179.9950000); //object(vgsn_flwbdcrb) (3)
CreateDynamicObject(3522,774.9000200,-1368.5000000,13.1000000,0.0000000,0.0000000,89.9950000); //object(vgsn_flwbdcrb) (4)
CreateDynamicObject(905,773.7999900,-1372.0000000,13.3000000,0.0000000,0.0000000,69.0000000); //object(rockbrkq) (1)
CreateDynamicObject(905,774.5999800,-1372.3000500,13.4000000,0.0000000,0.0000000,70.0000000); //object(rockbrkq) (3)
CreateDynamicObject(905,775.0999800,-1372.4000200,13.3000000,0.0000000,0.0000000,287.4990000); //object(rockbrkq) (4)
CreateDynamicObject(905,776.0999800,-1372.3000500,13.3000000,0.0000000,0.0000000,327.4960000); //object(rockbrkq) (5)
CreateDynamicObject(905,776.5000000,-1371.4000200,13.2000000,0.0000000,0.0000000,7.4910000); //object(rockbrkq) (6)
CreateDynamicObject(905,776.4000200,-1370.0000000,13.2000000,0.0000000,0.0000000,177.4870000); //object(rockbrkq) (7)
CreateDynamicObject(905,776.4000200,-1369.5999800,13.3000000,0.0000000,0.0000000,47.4840000); //object(rockbrkq) (8)
CreateDynamicObject(905,775.0999800,-1369.4000200,13.3000000,0.0000000,0.0000000,265.4830000); //object(rockbrkq) (9)
CreateDynamicObject(905,774.2000100,-1369.3000500,13.3000000,332.7500000,0.0000000,265.4790000); //object(rockbrkq) (10)
CreateDynamicObject(905,773.5000000,-1369.6999500,13.3000000,332.7480000,0.0000000,305.4790000); //object(rockbrkq) (11)
CreateDynamicObject(905,773.2999900,-1370.5000000,13.4000000,332.7480000,0.0000000,345.4750000); //object(rockbrkq) (12)
CreateDynamicObject(905,773.2999900,-1371.3000500,13.4000000,348.7480000,0.0000000,358.2210000); //object(rockbrkq) (13)
CreateDynamicObject(905,774.0999800,-1370.6999500,13.3000000,0.0000000,0.0000000,0.2500000); //object(rockbrkq) (14)
CreateDynamicObject(905,774.4000200,-1371.5000000,13.4000000,0.0000000,0.0000000,60.0000000); //object(rockbrkq) (15)
CreateDynamicObject(905,775.2999900,-1371.5999800,13.4000000,0.0000000,0.0000000,89.9960000); //object(rockbrkq) (16)
CreateDynamicObject(905,775.7000100,-1371.0000000,13.4000000,0.0000000,0.0000000,179.9950000); //object(rockbrkq) (17)
CreateDynamicObject(905,775.7000100,-1370.3000500,13.3000000,0.0000000,0.0000000,199.9950000); //object(rockbrkq) (18)
CreateDynamicObject(905,774.5000000,-1369.9000200,13.3000000,0.0000000,0.0000000,287.4910000); //object(rockbrkq) (19)
CreateDynamicObject(9833,774.4000200,-1370.5000000,10.2000000,0.0000000,0.0000000,0.0000000); //object(fountain_sfw) (5)
CreateDynamicObject(1215,777.2999900,-1373.1999500,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(1215,777.2000100,-1368.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(1215,772.5999800,-1368.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(1215,772.5000000,-1373.0999800,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(905,775.4000200,-1369.9000200,13.3000000,0.0000000,0.0000000,229.9900000); //object(rockbrkq) (20)
CreateDynamicObject(3657,784.5000000,-1360.5000000,13.3000000,0.0000000,0.0000000,270.0000000); //object(airseata_las) (1)
CreateDynamicObject(3657,784.5000000,-1370.0999800,13.3000000,0.0000000,0.0000000,270.0000000); //object(airseata_las) (2)
CreateDynamicObject(3657,784.5000000,-1378.5000000,13.3000000,0.0000000,0.0000000,270.0000000); //object(airseata_las) (3)
CreateDynamicObject(3657,778.7000100,-1382.1999500,13.3000000,0.0000000,0.0000000,180.0000000); //object(airseata_las) (4)
CreateDynamicObject(3657,770.2999900,-1382.1999500,13.3000000,0.0000000,0.0000000,179.9950000); //object(airseata_las) (5)
CreateDynamicObject(3657,765.5000000,-1376.0000000,13.3000000,0.0000000,0.0000000,89.9950000); //object(airseata_las) (6)
CreateDynamicObject(3657,765.5000000,-1367.3000500,13.3000000,0.0000000,0.0000000,89.9950000); //object(airseata_las) (7)
CreateDynamicObject(982,758.9000200,-1330.3000500,13.4000000,0.0000000,0.0000000,89.2500000); //object(fenceshit) (1)
CreateDynamicObject(984,745.4000200,-1330.0999800,13.3000000,0.0000000,0.0000000,270.5000000); //object(fenceshit2) (1)
CreateDynamicObject(1232,647.5000000,-1349.6999500,13.3000000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (1)
CreateDynamicObject(1232,647.5000000,-1365.5999800,13.4000000,0.0000000,0.0000000,0.0000000); //object(streetlamp1) (2)
CreateDynamicObject(1231,771.0999800,-1356.1999500,14.7000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (2)
CreateDynamicObject(1231,778.5999800,-1356.0999800,14.7000000,0.0000000,0.0000000,0.0000000); //object(streetlamp2) (3)
CreateDynamicObject(1439,736.5996100,-1330.5000000,12.7000000,0.0000000,0.0000000,1.1420000); //object(dyn_dumpster_1) (1)
CreateDynamicObject(3851,735.0000000,-1350.9899900,21.4000000,90.0000000,180.6820000,269.0620000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(3851,738.5000000,-1354.5999800,21.5000000,90.0000000,179.3240000,180.6650000); //object(carshowwin_sfsx)(34)
CreateDynamicObject(8168,784.5000000,-1334.0000000,14.5000000,0.0000000,0.0000000,287.7430000); //object(vgs_guardhouse01) (1)
CreateDynamicObject(970,785.4000200,-1339.5999800,11.7800000,0.0000000,90.0000000,180.0000000); //object(fencesmallb) (1)
CreateDynamicObject(970,786.2999900,-1339.5999800,11.7800000,0.0000000,90.0000000,179.9950000); //object(fencesmallb) (1)
CreateDynamicObject(1215,784.7998000,-1339.5996100,12.6000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (5)
CreateDynamicObject(1411,787.4000200,-1332.8000500,15.7000000,0.0000000,0.0000000,269.9950000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1338.0999800,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1343.4000200,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1348.8000500,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1354.1999500,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1359.5000000,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1364.8000500,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1370.0999800,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.4000200,-1375.5000000,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,787.2999900,-1381.1999500,15.7000000,0.0000000,0.0000000,269.9890000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,784.2000100,-1385.0999800,15.7000000,0.0000000,0.0000000,179.9950000); //object(dyn_mesh_1) (1)
CreateDynamicObject(1411,769.7000100,-1385.0999800,15.7000000,0.0000000,0.0000000,179.9950000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,764.2999900,-1385.0000000,15.7000000,0.0000000,0.0000000,179.9950000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,758.2999900,-1384.9000200,15.7000000,0.0000000,0.0000000,179.9950000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,784.7000100,-1330.0999800,15.7000000,0.0000000,0.0000000,0.0000000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,735.0000000,-1329.5999800,15.7000000,0.0000000,0.0000000,0.0000000); //object(dyn_mesh_1) (2)
CreateDynamicObject(1411,771.2999900,-1330.0000000,15.7000000,0.0000000,0.0000000,0.0000000); //object(dyn_mesh_1) (2)
//CreateDynamicObject(971,777.6992200,-1330.0996100,12.9572000,0.0000000,0.0000000,179.9950000); //object(subwaygate) (1)
CreateDynamicObject(3526,737.0999800,-1365.5000000,24.7000000,0.0000000,0.0000000,270.9890000); //object(vegasairportlight) (4)
CreateDynamicObject(3526,746.7999900,-1365.5000000,24.8000000,0.0000000,0.0000000,270.9830000); //object(vegasairportlight) (5)
CreateDynamicObject(3526,737.0999800,-1375.4000200,24.8000000,0.0000000,0.0000000,90.9830000); //object(vegasairportlight) (6)
CreateDynamicObject(3526,746.7999900,-1375.4000200,24.8000000,0.0000000,0.0000000,90.9830000); //object(vegasairportlight) (7)
CreateDynamicObject(1215,784.9000200,-1356.4000200,12.8000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
CreateDynamicObject(1595,657.7208300,-1346.0838600,25.8804800,0.0000000,0.0000000,220.5140000); //object(satdishbig) (2)
CreateDynamicObject(1595,657.0103800,-1367.5249000,25.8804800,0.0000000,0.0000000,320.1450000); //object(satdishbig) (3)
CreateDynamicObject(16501,759.0344800,-1359.9403100,17.2500800,0.0000000,89.2350000,359.9540000); //object(cn2_savgardr2_)(37)
//CreateDynamicObject(971,768.8424100,-1330.1119400,12.9572000,0.0000000,0.0000000,179.9950000); //object(subwaygate) (1)
CreateDynamicObject(4574,734.9710700,-1354.5306400,55.6389500,0.0000000,0.0000000,179.9950000); //object(stolenbuilds13) (1)
tvp1 = CreateDynamicObject(969,774.11444092,-1384.98632812,12.92022705,0.00000000,0.00000000,0.00000000);
tvp = CreateDynamicObject(976, 781.77209500,-1330.31884800,12.68660500,0.00000000,0.00000000,-180.85939924);
// -================================  ESTUDIO CNN =============================================- //
CreateDynamicObject(14391,249.88735962,304.25994873,999.09527588,0.00000000,0.00000000,179.94287109); //
CreateDynamicObject(14393,250.75074768,303.27984619,1000.36871338,0.00000000,0.00000000,181.63391113); //
CreateDynamicObject(14392,250.80520630,303.21340942,999.33160400,0.00000000,0.00000000,180.97521973); //
CreateDynamicObject(14820,249.26252747,305.72671509,999.05853271,10.54898071,0.00000000,269.77844238); //
CreateDynamicObject(14820,249.25497437,302.45178223,999.07855225,10.54687500,0.00000000,269.77478027); //
CreateDynamicObject(10154,251.23742676,298.33959961,998.53216553,0.00000000,0.00000000,0.00000000); //
CreateDynamicObject(10154,241.88075256,302.64770508,998.53216553,0.00000000,0.00000000,181.31555176); //
CreateDynamicObject(1498,242.02909851,301.88348389,998.11431885,0.00000000,0.00000000,90.33483887); //
//CNN Interior
CreateDynamicObject(18009,-2783.80761719,265.19433594,25.95000076,0.00000000,0.00000000,0.00000000); //object(int_rest_main)(2)
CreateDynamicObject(1536,-2777.49462891,255.60975647,21.69230461,0.00000000,0.00000000,180.00000000); //object(gen_doorext15)(1)
CreateDynamicObject(1649,-2779.34960938,255.59960938,22.42905235,179.99450684,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(2395,-2775.31860352,263.55761719,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(1)
CreateDynamicObject(2395,-2775.29980469,258.07910156,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(3)
CreateDynamicObject(2395,-2775.31835938,260.81933594,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(9)
CreateDynamicObject(2395,-2779.00000000,258.07910156,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(10)
CreateDynamicObject(2395,-2779.00000000,260.81933594,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(11)
CreateDynamicObject(2395,-2776.60009766,263.55761719,27.14944458,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(13)
CreateDynamicObject(1649,-2781.53027344,255.44921875,24.77199364,179.99450684,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,-2784.42309570,255.44743347,24.77199364,179.99450684,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,-2788.80468750,255.44921875,24.77199364,179.99450684,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(2395,-2787.00000000,255.50000000,24.20000076,219.99572754,0.00000000,0.00000000); //object(cj_sports_wall)(14)
CreateDynamicObject(2395,-2790.73925781,255.45890808,24.12500191,219.99023438,0.00000000,0.00000000); //object(cj_sports_wall)(15)
CreateDynamicObject(1753,-2786.32128906,257.02636719,23.10625076,0.00000000,0.00000000,179.99450684); //object(swank_couch_1)(1)
CreateDynamicObject(2257,-2791.27075195,255.29615784,23.14107513,0.00000000,0.00000000,85.35278320); //object(frame_clip_4)(1)
CreateDynamicObject(2257,-2783.81054688,255.56700134,24.14107513,0.00000000,0.00000000,270.00000000); //object(frame_clip_4)(2)
CreateDynamicObject(638,-2776.61132812,257.75811768,23.80328369,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(1)
CreateDynamicObject(630,-2776.46801758,256.07403564,24.13140869,0.00000000,0.00000000,0.00000000); //object(veg_palmkb8)(1)
CreateDynamicObject(8614,-2789.51513672,274.09127808,24.93209457,0.00000000,0.00000000,180.00000000); //object(vgssstairs01_lvs)(1)
CreateDynamicObject(1649,-2795.45019531,271.02148438,27.99995232,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(6)
CreateDynamicObject(1649,-2795.47753906,272.91567993,27.98051071,0.00000000,0.00000000,89.32434082); //object(wglasssmash)(7)
CreateDynamicObject(1649,-2793.22265625,275.10253906,28.00350761,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(8)
CreateDynamicObject(1649,-2788.91113281,275.10253906,28.00553703,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(10)
CreateDynamicObject(1649,-2784.57641602,275.10272217,27.99837875,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(11)
CreateDynamicObject(1649,-2780.23876953,275.05285645,27.98665619,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(12)
CreateDynamicObject(1649,-2778.85058594,275.10253906,28.00350761,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(13)
CreateDynamicObject(1649,-2776.75488281,272.91394043,28.01044083,0.00000000,0.00000000,270.00000000); //object(wglasssmash)(14)
CreateDynamicObject(1649,-2776.72851562,271.15539551,28.01044083,0.00000000,0.00000000,270.00000000); //object(wglasssmash)(15)
CreateDynamicObject(1649,-2793.45019531,270.61425781,29.65831947,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(16)
CreateDynamicObject(1649,-2789.02368164,270.58007812,29.67854500,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(17)
CreateDynamicObject(1649,-2784.69995117,270.60998535,29.65831947,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(18)
CreateDynamicObject(1649,-2780.44580078,270.59027100,29.68331909,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(19)
CreateDynamicObject(1649,-2778.87988281,270.60937500,29.67169380,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(20)
CreateDynamicObject(1649,-2778.88964844,273.47949219,29.67321968,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(21)
CreateDynamicObject(1649,-2783.29980469,273.47949219,29.67321968,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(22)
CreateDynamicObject(1649,-2787.69921875,273.47949219,29.67321968,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(23)
CreateDynamicObject(1649,-2792.09960938,273.47949219,29.67321968,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(24)
CreateDynamicObject(1649,-2793.45019531,273.47949219,29.64822006,90.00000000,0.00000000,0.00000000); //object(wglasssmash)(25)
CreateDynamicObject(3260,-2786.39990234,271.20001221,26.11000061,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(2)
CreateDynamicObject(3260,-2788.45996094,271.19433594,26.11000061,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(3)
CreateDynamicObject(3260,-2790.45019531,271.20214844,26.11000061,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(4)
CreateDynamicObject(3260,-2792.45019531,271.19635010,26.09063339,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(5)
CreateDynamicObject(3260,-2794.47558594,271.21093750,26.09063339,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(7)
CreateDynamicObject(3850,-2785.48632812,271.92196655,26.70025253,0.00000000,0.00000000,0.00000000); //object(carshowbann_sfsx)(1)
CreateDynamicObject(3850,-2787.20800781,270.21200562,26.70025253,0.00000000,0.00000000,270.00000000); //object(carshowbann_sfsx)(2)
CreateDynamicObject(3850,-2790.64355469,270.23437500,26.70025253,0.00000000,0.00000000,270.00000000); //object(carshowbann_sfsx)(3)
CreateDynamicObject(3850,-2794.05957031,270.24707031,26.68088531,0.00000000,0.00000000,270.00000000); //object(carshowbann_sfsx)(4)
CreateDynamicObject(3260,-2794.24902344,274.24707031,26.09063339,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(8)
CreateDynamicObject(3850,-2793.22875977,274.93048096,26.68088531,0.00000000,0.00000000,0.00000000); //object(carshowbann_sfsx)(5)
CreateDynamicObject(3850,-2791.51660156,273.20117188,26.68088531,0.00000000,0.00000000,270.00000000); //object(carshowbann_sfsx)(6)
CreateDynamicObject(14413,-2786.58593750,271.06640625,19.99980545,0.00000000,0.00000000,268.68713379); //object(carter-column01)(1)
CreateDynamicObject(2591,-2783.57739258,273.36444092,25.40970039,0.00000000,0.00000000,0.00000000); //object(ab_partition1)(1)
CreateDynamicObject(2591,-2783.57714844,271.29296875,27.95000076,90.00000000,0.00000000,179.99450684); //object(ab_partition1)(2)
CreateDynamicObject(1649,-2783.59960938,272.92968750,28.00000000,0.00000000,0.00000000,270.00000000); //object(wglasssmash)(26)
CreateDynamicObject(1523,-2783.57397461,268.99850464,22.70781326,0.00000000,0.00000000,90.00000000); //object(gen_doorext10)(1)
CreateDynamicObject(1523,-2783.64013672,271.62432861,22.70781326,0.00000000,0.00000000,270.00000000); //object(gen_doorext10)(2)
CreateDynamicObject(1649,-2783.57226562,271.14746094,26.83990097,0.00000000,0.00000000,270.00000000); //object(wglasssmash)(28)
CreateDynamicObject(1649,-2783.57226562,269.88085938,26.86490059,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(29)
CreateDynamicObject(1649,-2783.57006836,273.00000000,27.90250587,0.00000000,0.00000000,90.00000000); //object(wglasssmash)(30)
CreateDynamicObject(14391,-2787.09960938,263.25000000,23.50000000,0.00000000,0.00000000,90.00000000); //object(dr_gsnew07)(1)
CreateDynamicObject(1754,-2785.23217773,258.03381348,23.10625076,0.00000000,0.00000000,270.00000000); //object(swank_single_1)(1)
CreateDynamicObject(1754,-2789.31445312,258.17687988,23.10625076,0.00000000,0.00000000,90.00000000); //object(swank_single_1)(2)
CreateDynamicObject(2126,-2787.83789062,258.27456665,23.10625076,0.00000000,0.00000000,0.00000000); //object(coffee_swank_5)(1)
CreateDynamicObject(1886,-2786.01928711,260.56951904,23.93541336,0.00000000,180.00000000,340.15014648); //object(shop_sec_cam)(1)
CreateDynamicObject(1886,-2788.79980469,260.57812500,23.93541336,0.00000000,179.99450684,23.81286621); //object(shop_sec_cam)(2)
CreateDynamicObject(3388,-2777.85253906,267.09570312,22.70781326,0.00000000,0.00000000,0.00000000); //object(a51_srack4_)(1)
CreateDynamicObject(3388,-2777.86230469,266.13281250,22.70781326,0.00000000,0.00000000,0.00000000); //object(a51_srack4_)(2)
CreateDynamicObject(3386,-2777.87207031,265.15756226,22.70781326,0.00000000,0.00000000,0.00000000); //object(a51_srack2_)(1)
CreateDynamicObject(3387,-2777.85937500,264.15820312,22.70781326,0.00000000,0.00000000,0.00000000); //object(a51_srack3_)(1)
CreateDynamicObject(3389,-2777.86035156,263.15759277,22.70999146,0.00000000,0.00000000,0.00000000); //object(a51_srack1_)(1)
CreateDynamicObject(2700,-2779.46972656,267.42440796,25.08098412,0.00000000,0.00000000,248.12072754); //object(cj_sex_tv2)(1)
CreateDynamicObject(2606,-2787.32006836,262.55761719,26.43313408,30.00000000,0.00000000,180.00000000); //object(cj_police_counter2)(1)
CreateDynamicObject(2723,-2787.03173828,270.44427490,33.23593903,0.00000000,0.00000000,0.00000000); //object(lm_stripstool)(1)
CreateDynamicObject(2723,-2788.25952148,265.09368896,23.07591629,0.00000000,0.00000000,0.00000000); //object(lm_stripstool)(2)
CreateDynamicObject(2723,-2786.27954102,264.96746826,23.07591629,0.00000000,0.00000000,0.00000000); //object(lm_stripstool)(3)
CreateDynamicObject(2207,-2775.46679688,261.09472656,23.10625076,0.00000000,0.00000000,0.00000000); //object(med_office7_desk_1)(1)
CreateDynamicObject(1671,-2774.53613281,262.42810059,23.56646538,0.00000000,0.00000000,0.00000000); //object(swivelchair_a)(1)
CreateDynamicObject(3031,-2772.59472656,256.96618652,24.58500862,0.00000000,0.00000000,119.52893066); //object(wong_dish)(1)
CreateDynamicObject(2258,-2774.17333984,263.30996704,24.79892921,0.00000000,0.00000000,0.00000000); //object(frame_clip_5)(1)
CreateDynamicObject(2259,-2794.33544922,257.19308472,24.78293991,0.00000000,0.00000000,89.35278320); //object(frame_clip_6)(1)
CreateDynamicObject(2257,-2794.77148438,260.29077148,24.66716385,0.00000000,0.00000000,91.30737305); //object(frame_clip_4)(3)
CreateDynamicObject(2176,-2794.25244141,265.10430908,24.45001984,0.00000000,0.00000000,0.00000000); //object(casino_light4)(1)
CreateDynamicObject(2208,-2793.81445312,274.47753906,26.18432617,0.00000000,0.00000000,270.68713379); //object(med_office7_unit_1)(1)
CreateDynamicObject(1541,-2794.32910156,272.95019531,27.20000076,0.00000000,0.00000000,89.58581543); //object(cj_beer_taps_1)(1)
CreateDynamicObject(1520,-2793.96606445,274.47634888,27.04961967,0.00000000,0.00000000,0.00000000); //object(dyn_wine_bounce)(1)
CreateDynamicObject(1509,-2793.77124023,274.45761108,27.24707413,0.00000000,0.00000000,0.00000000); //object(dyn_wine_3)(1)
CreateDynamicObject(1543,-2794.06909180,274.29104614,27.04961967,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_2)(1)
CreateDynamicObject(1544,-2793.80737305,274.24078369,27.04961967,0.00000000,0.00000000,0.00000000); //object(cj_beer_b_1)(1)
CreateDynamicObject(1664,-2793.60058594,274.05010986,27.21632385,0.00000000,0.00000000,0.00000000); //object(propwinebotl2)(1)
CreateDynamicObject(11631,-2777.53906250,271.91894531,23.95371819,0.00000000,0.00000000,268.68713379); //object(ranch_desk)(1)
CreateDynamicObject(2207,-2779.81835938,272.80273438,22.70781326,0.00000000,0.00000000,270.67565918); //object(med_office7_desk_1)(2)
CreateDynamicObject(1671,-2778.21801758,271.90011597,23.16802788,0.00000000,0.00000000,276.63061523); //object(swivelchair_a)(2)
CreateDynamicObject(1742,-2776.83203125,273.99768066,22.70781326,0.00000000,0.00000000,270.00000000); //object(med_bookshelf)(1)
CreateDynamicObject(16155,-2775.60009766,264.00000000,25.84077072,0.00000000,0.00000000,105.20452881); //object(ufo_backrmstuff)(1)
CreateDynamicObject(1444,-2776.57910156,263.10162354,23.91093826,0.00000000,0.00000000,0.00000000); //object(dyn_street_sign_2)(1)
CreateDynamicObject(2067,-2783.15332031,274.41580200,22.70781326,0.00000000,0.00000000,0.00000000); //object(cj_m_fileing3)(1)
CreateDynamicObject(2067,-2782.58154297,274.40362549,22.70781326,0.00000000,0.00000000,0.00000000); //object(cj_m_fileing3)(2)
CreateDynamicObject(2067,-2782.03881836,274.39712524,22.70781326,0.00000000,0.00000000,0.00000000); //object(cj_m_fileing3)(3)
CreateDynamicObject(2128,-2781.24487305,274.36517334,22.70781326,0.00000000,0.00000000,0.00000000); //object(cj_k1_tall_unit)(1)
CreateDynamicObject(2648,-2780.06420898,274.95605469,25.74816895,0.00000000,0.00000000,0.00000000); //object(cj_steal_tv)(1)
CreateDynamicObject(2229,-2783.59594727,265.77005005,26.20781326,0.00000000,90.00000000,267.41442871); //object(swank_speaker)(1)
CreateDynamicObject(2232,-2786.57470703,270.30276489,25.29372406,0.00000000,0.00000000,0.00000000); //object(med_speaker_4)(1)
CreateDynamicObject(2232,-2790.69677734,268.95605469,28.39708710,0.00000000,90.00000000,180.00000000); //object(med_speaker_4)(2)
CreateDynamicObject(2232,-2786.62231445,268.95605469,28.39931488,0.00000000,90.00000000,179.99450684); //object(med_speaker_4)(3)
CreateDynamicObject(2232,-2778.21777344,261.55761719,25.58375549,0.00000000,0.00000000,0.00000000); //object(med_speaker_4)(4)
CreateDynamicObject(1651,-2777.10546875,257.66012573,22.97225761,0.00000000,0.00000000,0.00000000); //object(od_copwindows)(21)
CreateDynamicObject(1649,-2783.19042969,275.05538940,28.00350761,0.00000000,0.00000000,0.00000000); //object(wglasssmash)(13)
CreateDynamicObject(638,-2760.12500000,254.51562500,22.21034241,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush)(1)
CreateDynamicObject(2395,-2780.34057617,263.55911255,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(11)
CreateDynamicObject(2395,-2777.36083984,266.28530884,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(11)
CreateDynamicObject(2395,-2773.78759766,266.29705811,27.14415550,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall)(11)
CreateDynamicObject(2395,-2772.07446289,258.87179565,23.10625076,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(4)
CreateDynamicObject(2395,-2772.09667969,266.29037476,23.11328506,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(5)
CreateDynamicObject(2395,-2771.85839844,259.89843750,25.85621643,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(6)
CreateDynamicObject(2395,-2772.09545898,262.57821655,25.83121681,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(7)
CreateDynamicObject(2395,-2772.07421875,258.87109375,25.83121681,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(8)
CreateDynamicObject(2395,-2772.09375000,262.55938721,23.10625076,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(9)
CreateDynamicObject(2395,-2771.40039062,260.96142578,25.85620880,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(10)
CreateDynamicObject(2395,-2772.11157227,266.29354858,25.83120918,0.00000000,0.00000000,270.00000000); //object(cj_sports_wall)(11)
CreateDynamicObject(1649,-2793.47216797,255.42857361,24.77199364,179.99450684,0.00000000,0.00000000); //object(wglasssmash)(1)
CreateDynamicObject(1649,-2779.67260742,256.80279541,24.77199364,179.99450684,0.00000000,90.00000000); //object(wglasssmash)(1)
CreateDynamicObject(2395,-2772.49877930,255.68475342,23.10625076,0.00000000,0.00000000,180.00000000); //object(cj_sports_wall)(13)
CreateDynamicObject(2395,-2772.49707031,255.53454590,23.10625076,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall)(14)
CreateDynamicObject(2395,-2772.50170898,255.70928955,25.83122444,0.00000000,0.00000000,180.24450684); //object(cj_sports_wall)(15)
CreateDynamicObject(2395,-2776.23901367,255.68072510,23.10625076,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall)(16)
CreateDynamicObject(2395,-2776.23828125,255.68066406,25.83122444,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall)(17)
CreateDynamicObject(2395,-2776.23828125,255.68066406,20.38127327,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall)(18)
CreateDynamicObject(2395,-2776.38671875,255.66113281,23.55625916,0.00000000,0.00000000,179.99450684); //object(cj_sports_wall)(19)
CreateDynamicObject(2395,-2790.71582031,255.50215149,24.20000076,219.99572754,0.00000000,0.00000000); //object(cj_sports_wall)(14)
CreateDynamicObject(2395,-2790.78735352,256.11990356,24.12500191,359.25430298,180.00000000,90.00000000); //object(cj_sports_wall)(14)
CreateDynamicObject(2802,-2793.18579102,270.31811523,23.03807259,0.00000000,0.00000000,48.00000000); //object(castable1)(1)
CreateDynamicObject(2802,-2787.01562500,273.54882812,26.48891640,0.00000000,0.00000000,47.99377441); //object(castable1)(2)
CreateDynamicObject(2802,-2790.48730469,271.34960938,26.48460197,0.00000000,0.00000000,281.99707031); //object(castable1)(3)
CreateDynamicObject(2802,-2787.24829102,271.41555786,26.48460197,0.00000000,0.00000000,61.99926758); //object(castable1)(4)
CreateDynamicObject(3260,-2796.22558594,274.22659302,26.09063339,270.00000000,0.00000000,0.00000000); //object(oldwoodpanel)(8)

// New Muelle Santa Maria Beach By Map Team ZC 2013
CreateObject(8661,379.4580100,-2036.9812000,6.8476000,0.0000000,0.0000000,0.0000000); //
CreateObject(8661,379.4579800,-2022.4296900,6.8470000,0.0000000,0.0000000,0.0000000); //
CreateObject(19369,372.8976100,-2010.7336400,6.4677000,0.0000000,-80.0000000,90.0000000); //
CreateObject(19369,369.7262900,-2010.7336400,6.4674000,0.0000000,-80.0000000,90.0000000); //
CreateObject(19369,366.6730000,-2010.7336400,6.4670000,0.0000000,-80.0000000,90.0000000); //
CreateObject(970,362.4366100,-2046.9067400,7.3524700,0.0000000,0.0000000,0.0000000); //
CreateObject(970,366.5618000,-2046.9067400,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(970,370.7267200,-2046.9067400,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(970,374.8703000,-2046.9067400,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(970,379.0213300,-2046.9067400,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(970,396.9858100,-2046.9067400,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(970,392.8418300,-2046.9082000,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(8407,375.4767500,-2013.5236800,8.1703100,0.0000000,0.0000000,0.0000000); //
CreateObject(970,377.8790600,-2012.7036100,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(973,375.9491300,-2046.7667200,7.5482300,0.0000000,0.0000000,0.0000000); //
CreateObject(973,365.8667000,-2046.7667200,7.5482000,0.0000000,0.0000000,0.0000000); //
CreateObject(973,398.5289600,-2041.1931200,7.5482000,0.0000000,0.0000000,90.0000000); //
CreateObject(973,398.5289900,-2030.1960400,7.5482000,0.0000000,0.0000000,90.0000000); //
CreateObject(973,398.5289900,-2018.9764400,7.5482000,0.0000000,0.0000000,90.0000000); //
CreateObject(1251,395.6411100,-2017.8796400,6.8400000,0.0000000,-90.0000000,270.0000000); //
CreateObject(1251,395.6404700,-2023.1806600,6.8400000,0.0000000,-90.0000000,270.0000000); //
CreateObject(1251,395.6396200,-2028.3554700,6.8400000,0.0000000,-90.0000000,270.0000000); //
CreateObject(1251,395.6404700,-2033.5615200,6.8400000,0.0000000,-90.0000000,270.0000000); //
CreateObject(1251,395.6400500,-2038.5592000,6.8400000,0.0000000,-90.0000000,270.0000000); //
CreateObject(1251,395.6411100,-2043.4321300,6.8400000,0.0000000,-90.0000000,270.0000000); //
CreateObject(1251,379.4251400,-2043.4470200,6.8400000,0.0000000,-90.0000000,180.0000000); //
CreateObject(1251,374.3192100,-2043.4470200,6.8400000,0.0000000,-90.0000000,180.0000000); //
CreateObject(1251,368.9426000,-2043.4470200,6.8400000,0.0000000,-90.0000000,180.0000000); //
CreateObject(1251,363.6224100,-2043.4470200,6.8400000,0.0000000,-90.0000000,180.0000000); //
CreateObject(19454,357.7277500,-2033.4390900,6.7636000,0.0000000,90.0000000,0.0000000); //
CreateObject(19454,354.2348000,-2033.4390900,6.7631000,0.0000000,90.0000000,0.0000000); //
CreateObject(19454,353.9688100,-2033.4390900,6.7636000,0.0000000,90.0000000,0.0000000); //
CreateObject(19454,357.7334900,-2029.3299600,6.7634000,0.0000000,90.0000000,0.0000000); //
CreateObject(19454,354.2348000,-2029.3299600,6.7631000,0.0000000,90.0000000,0.0000000); //
CreateObject(19454,353.9688100,-2029.3299600,6.7630000,0.0000000,90.0000000,0.0000000); //
CreateObject(1251,355.8771100,-2036.4923100,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(1251,355.8771100,-2034.4128400,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(1251,355.8771100,-2032.4772900,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(1251,355.8771100,-2030.5509000,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(1251,355.8771100,-2028.7086200,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(1251,355.8771100,-2026.8579100,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(1251,355.8771100,-2025.1103500,6.8400000,0.0000000,-90.0000000,90.0000000); //
CreateObject(973,353.2697100,-2032.9792500,7.5482000,0.0000000,0.0000000,-90.0000000); //
CreateObject(973,353.2690100,-2029.5836200,7.5482000,0.0000000,0.0000000,-90.0000000); //
CreateObject(970,362.7123100,-2012.7036100,7.3525000,0.0000000,0.0000000,0.0000000); //
CreateObject(18977,357.2843000,-2037.8075000,7.9924000,6.0000000,40.0000000,90.0000000); //
CreateObject(638,397.4480900,-2013.3797600,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,394.8539100,-2013.3797600,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,392.2533000,-2013.3797600,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,389.6560100,-2013.3796400,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,387.0463900,-2013.3797600,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,384.4438800,-2013.3783000,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,381.8378300,-2013.3814700,7.3933000,0.0000000,0.0000000,90.0000000); //
CreateObject(638,360.9087500,-2014.2861300,7.3933000,0.0000000,0.0000000,0.0000000); //
CreateObject(638,360.9137600,-2016.8975800,7.3933000,0.0000000,0.0000000,0.0000000); //
CreateObject(638,360.9088100,-2019.5013400,7.3933000,0.0000000,0.0000000,0.0000000); //
CreateObject(638,360.9088100,-2022.1267100,7.3933000,0.0000000,0.0000000,0.0000000); //
CreateObject(1232,360.3634300,-2024.7945600,9.5000000,356.8584000,0.0000000,3.1415900); //
CreateObject(1232,360.1821000,-2037.8336200,9.5000000,356.8584000,0.0000000,3.1415900); //
CreateObject(1232,380.0447400,-2012.7838100,9.5000000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,390.7182600,-2046.9477500,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,381.1175800,-2046.9381100,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,374.3462200,-2012.4939000,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,364.9113800,-2012.6346400,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,370.8338000,-2046.8892800,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,360.7272900,-2046.8048100,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,398.7849400,-2046.4499500,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,398.7685900,-2035.7088600,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,398.6052600,-2024.6279300,7.3750000,356.8584000,0.0000000,3.1415900); //
CreateObject(1215,398.4883100,-2014.0202600,7.3750000,356.8584000,0.0000000,3.1415900); //

// Separación Aeropuerto By Map Team ZC 2013
CreateDynamicObject(737, 1714.10498, -2178.83105, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 1779.17639, -2179.74536, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 1675.92102, -2179.79761, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 1693.21753, -2179.45972, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 1798.59387, -2177.96045, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 1759.36096, -2178.60034, 12.55469,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, 1736.25867, -2179.44556, 12.55673,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7953, 1735.95313, -2179.57227, 13.05684,   0.00000, 0.00000, 89.75000);
CreateDynamicObject(869, 1711.58691, -2179.17285, 13.00451,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1716.89551, -2179.14160, 13.00451,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 1763.29883, -2180.17285, 14.60328,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(626, 1754.74695, -2179.72925, 14.59987,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1738.22278, -2179.84814, 13.00663,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(869, 1734.76428, -2180.19043, 13.00546,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1756.64453, -2179.56152, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1755.68652, -2179.58105, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1757.78906, -2179.46289, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1761.75293, -2179.88086, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1759.88184, -2179.80176, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1761.26465, -2179.73535, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1692.48694, -2179.50952, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1694.11426, -2179.98730, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1692.45496, -2177.97803, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(871, 1694.53027, -2178.11035, 12.83775,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1597, 1746.94336, -2319.49219, 15.04019,   0.00000, 0.00000, 88.74756);
CreateDynamicObject(1597, 1714.38000, -2319.47485, 15.04019,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1597, 1693.16162, -2319.06226, 15.04019,   0.00000, 0.25000, 269.99997);
CreateDynamicObject(1597, 1672.52014, -2319.70068, 15.04019,   0.00000, 359.75000, 91.75000);
CreateDynamicObject(1597, 1654.82422, -2319.57202, 15.04019,   0.00000, 0.00000, 91.75000);
CreateDynamicObject(1597, 1623.71326, -2319.56152, 15.04019,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1597, 1603.10474, -2319.13281, 15.04019,   0.00000, 0.00000, 269.99997);
CreateDynamicObject(634, 1567.17407, -2278.41406, 12.54688,   0.00000, 0.00000, 169.99695);
CreateDynamicObject(1597, 1602.92676, -2253.33691, 15.00791,   0.00000, 0.00000, 271.99951);
CreateDynamicObject(1597, 1623.55566, -2253.66113, 14.98810,   0.00000, 0.25000, 270.25000);
CreateDynamicObject(1597, 1672.29297, -2253.65820, 14.97797,   0.00000, 0.00000, 270.50000);
CreateDynamicObject(1597, 1649.52734, -2253.42969, 14.99102,   0.00000, 0.00000, 269.00000);
CreateDynamicObject(1597, 1693.32617, -2253.67773, 15.03465,   0.00000, 0.00000, 270.24719);
CreateDynamicObject(7504, 1736.20605, -2177.34180, 14.10747,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(982, 1605.58350, -2373.48193, 19.31379,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1239, 1642.40771, -2240.21777, 12.68976,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(669, 1536.85962, -2231.20166, 12.54688,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3931, 1536.88562, -2232.50513, 13.28329,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3931, 1535.58313, -2231.96899, 13.28329,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(646, 1590.17578, -2290.94434, 19.68915,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1337, 1590.17578, -2290.94434, 18.90668,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(632, 1568.35718, -2273.58911, 12.94762,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(632, 1567.95898, -2258.19043, 12.89575,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(673, 1536.20129, -2341.53101, 12.54688,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1562.53735, -2279.62939, 13.11120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1257, 1582.48828, -2286.59570, 13.81881,   0.00000, 0.00000, 1.74683);
CreateDynamicObject(800, 1522.48193, -2330.50513, 16.19075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(745, 1534.31592, -2305.77271, 12.54688,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2472, 1586.11255, -2284.09375, 21.75154,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1375, 1581.06140, -2290.54321, 14.06471,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1635, 1586.11230, -2286.10254, 20.21276,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1536.21777, -2231.90088, 13.11120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1484.11841, -2230.55664, 13.41688,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1214, 1437.48804, -2120.26611, 17.32475,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1797.04749, -2177.84106, 13.11901,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1759.09497, -2178.82764, 12.89533,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1736.36475, -2179.71118, 13.01365,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1714.52039, -2179.00684, 13.08000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1693.21289, -2179.82275, 13.02477,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1565.79504, -2367.85742, 13.11120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 1519.02832, -2222.24390, 26.73635,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1278, 1505.34497, -2348.42236, 26.73635,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1619.63269, -2319.37720, 13.15139,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1628.23865, -2319.33179, 13.15861,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1650.19312, -2319.54980, 13.15139,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1659.02625, -2319.89258, 13.82979,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1668.19177, -2319.60425, 13.15237,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1677.01123, -2319.33423, 13.15959,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1688.83289, -2319.23486, 13.15062,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1697.40991, -2319.16602, 13.15092,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1710.20776, -2319.22314, 13.15139,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1718.71533, -2319.24292, 13.15139,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1742.69128, -2319.36572, 13.15139,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1751.21326, -2319.16089, 13.15139,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1598.45300, -2253.75000, 13.12632,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1607.12952, -2253.56470, 13.11911,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1619.29480, -2253.83936, 13.16153,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1627.67688, -2253.88354, 13.09824,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1645.05164, -2253.61963, 13.10944,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1653.72522, -2253.60010, 13.10222,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1667.85645, -2253.93555, 13.09639,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1676.60596, -2253.83887, 13.08917,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1689.06567, -2253.95679, 13.14585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1697.61816, -2253.72705, 13.14585,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3934, 1595.61230, -2218.05566, 22.47212,   0.00000, 0.00000, 0.00000);

// Interior Mecanicos By Map Team ZC 2013
CreateDynamicObject(15059, 1896.00000, -1774.09998, 4704.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1904.69995, -1773.59998, 4702.29980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1904.69995, -1773.59998, 4706.27148,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7191, 1903.69995, -1774.00000, 4705.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(7191, 1903.09998, -1763.69995, 4705.29980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(7191, 1903.09998, -1763.69995, 4701.34863,   0.00000, 0.00000, 89.88000);
CreateDynamicObject(1535, 1894.59998, -1768.69995, 4704.10010,   0.00000, 0.00000, 260.00000);
CreateDynamicObject(7191, 1901.90002, -1778.69995, 4702.29980,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(7191, 1895.80005, -1780.30005, 4701.99902,   0.00000, 0.00000, 220.00000);
CreateDynamicObject(7191, 1897.69995, -1758.40002, 4701.99756,   0.00000, 0.00000, 159.99600);
CreateDynamicObject(7191, 1878.19995, -1765.69995, 4702.00000,   180.00000, 0.00000, 67.99400);
CreateDynamicObject(3049, 1893.09998, -1700.19995, 4641.20020,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 1904.59998, -1772.40002, 4700.29980,   0.00000, 0.00000, 90.23999);
CreateDynamicObject(1569, 1904.59998, -1769.40002, 4700.29980,   0.00000, 0.00000, 268.89996);
CreateDynamicObject(1569, 1900.09998, -1778.50000, 4700.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1569, 1895.50000, -1773.90002, 4704.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 1888.90002, -1771.59998, 4704.10010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 1889.01843, -1768.53223, 4704.11865,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 1889.00000, -1764.69995, 4704.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2205, 1892.90002, -1766.19995, 4704.10010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2198, 1891.40002, -1771.50000, 4704.10010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 1889.69995, -1765.90002, 4704.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2356, 1890.04138, -1767.68323, 4704.10010,   0.00000, 0.00000, 112.00000);
CreateDynamicObject(2356, 1890.09998, -1771.19995, 4704.10010,   0.00000, 0.00000, 59.99500);
CreateDynamicObject(2356, 1892.69995, -1770.80005, 4704.10010,   0.00000, 0.00000, 85.99100);
CreateDynamicObject(1663, 1891.69995, -1765.00000, 4704.60010,   0.00000, 0.00000, 56.00000);
CreateDynamicObject(1663, 1891.59998, -1766.30005, 4704.60010,   0.00000, 0.00000, 115.99700);
CreateDynamicObject(1714, 1894.17798, -1765.31799, 4704.10010,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(1723, 1895.40002, -1764.09998, 4704.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1723, 1895.30005, -1771.90002, 4704.10010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1723, 1899.30005, -1771.19995, 4700.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1724, 1900.19995, -1766.50000, 4700.29980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1809, 1889.69995, -1764.00000, 4706.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1809, 1893.00000, -1765.59998, 4704.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2002, 1898.31665, -1764.32300, 4704.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2002, 1889.00000, -1769.40002, 4704.10010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2186, 1894.09998, -1772.09998, 4704.10010,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2190, 1893.00000, -1764.40002, 4705.00000,   0.00000, 0.00000, 32.00000);
CreateDynamicObject(2318, 1892.00000, -1764.00000, 4706.60010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2318, 1898.90002, -1769.40002, 4703.39990,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2318, 1892.09998, -1773.69995, 4702.89990,   0.00000, 0.00000, 72.00000);
CreateDynamicObject(2332, 1893.90002, -1763.80005, 4706.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2827, 1892.90002, -1766.30005, 4705.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2195, 1899.09998, -1773.40002, 4701.10010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 1899.00000, -1766.09998, 4700.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 1893.90002, -1777.80005, 4700.79980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 1899.59998, -1778.50000, 4700.79980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2253, 1901.90002, -1778.30005, 4700.79980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 1895.19995, -1769.00000, 4704.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 1895.00000, -1773.59998, 4704.00000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2254, 1894.50000, -1765.50000, 4705.89990,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1892, 1900.40002, -1777.80005, 4700.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1891.00000, -1768.19995, 4707.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1891.00000, -1766.40002, 4707.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1891.00000, -1770.40002, 4707.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3034, 1901.90002, -1763.80005, 4705.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3034, 1904.59998, -1766.59998, 4702.79980,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3034, 1897.00000, -1778.69995, 4702.00000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(1723, 1892.54834, -1774.60742, 4700.39990,   0.00000, 0.00000, 70.12288);

/*MECANICOS EXTERIOR NEW*/
CreateDynamicObject(18766, 2301.37, -1929.49, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2301.49, -1920.95, 12.11,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2301.51, -1910.97, 12.11,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2301.55, -1909.28, 12.13,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2296.40, -1929.46, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2296.54, -1919.46, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2296.59, -1909.46, 12.10,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2291.45, -1929.44, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.46, -1929.42, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.50, -1929.39, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.52, -1929.42, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.56, -1929.39, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2266.64, -1929.41, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2261.66, -1929.33, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2256.68, -1929.45, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2251.72, -1929.40, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2246.78, -1929.38, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2241.92, -1929.38, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2236.92, -1929.42, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.08, -1929.40, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2228.51, -1929.65, 12.09,   89.94, -45.84, -230.04);
CreateDynamicObject(18766, 2291.55, -1919.43, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2291.64, -1909.47, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.58, -1919.44, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.63, -1909.46, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.63, -1919.39, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.66, -1909.37, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.65, -1919.42, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.71, -1909.44, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.65, -1919.39, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.75, -1909.45, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2266.67, -1919.40, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2266.76, -1909.40, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2261.68, -1919.33, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2261.76, -1909.42, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2256.75, -1919.51, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2256.79, -1909.53, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2251.79, -1919.53, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2251.85, -1909.58, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2246.83, -1919.43, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2246.84, -1909.43, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2241.87, -1919.46, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2241.95, -1909.52, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2236.95, -1919.50, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2237.05, -1909.56, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.15, -1919.48, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.17, -1909.50, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2229.59, -1920.01, 12.09,   89.94, -45.84, -228.72);
CreateDynamicObject(18766, 2230.45, -1910.18, 12.09,   89.94, -45.84, -228.72);
CreateDynamicObject(18766, 2301.32, -1939.32, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2301.30, -1949.32, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2301.28, -1957.20, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2296.34, -1939.40, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2296.38, -1949.26, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2296.36, -1957.18, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2291.38, -1939.39, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2291.44, -1949.31, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2291.41, -1957.28, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.43, -1939.34, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.52, -1949.24, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.51, -1957.31, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.43, -1939.27, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.59, -1949.19, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.53, -1957.27, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.66, -1939.36, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.69, -1949.35, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.61, -1957.26, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.88, -1939.37, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.70, -1949.35, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.67, -1957.31, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2267.02, -1939.41, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2266.97, -1949.34, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2266.80, -1957.27, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2262.09, -1939.22, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2262.01, -1949.13, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2261.83, -1957.35, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2257.11, -1939.32, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2257.03, -1949.28, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2256.83, -1957.33, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2252.15, -1939.34, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2252.07, -1949.16, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2251.90, -1957.34, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2247.23, -1939.26, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2247.07, -1949.16, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2246.96, -1957.32, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2242.25, -1939.32, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2242.15, -1949.24, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2242.10, -1957.36, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2237.35, -1939.27, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2237.22, -1949.27, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2237.13, -1957.31, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.39, -1939.31, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.26, -1949.27, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.21, -1957.29, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2227.62, -1939.42, 12.09,   89.94, -45.84, -228.48);
CreateDynamicObject(18766, 2226.78, -1948.71, 12.09,   89.94, -45.84, -226.74);
CreateDynamicObject(18766, 2227.31, -1957.32, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2226.52, -1957.32, 12.09,   89.94, -45.84, -226.14);
CreateDynamicObject(18766, 2226.98, -1947.57, 12.09,   89.94, -45.84, -226.14);
CreateDynamicObject(18766, 2296.60, -1909.24, 12.10,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2291.61, -1909.23, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2286.61, -1909.16, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2281.62, -1909.10, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2276.69, -1909.06, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2271.73, -1909.03, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2266.76, -1908.98, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2261.77, -1908.94, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2256.75, -1908.94, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2251.76, -1908.90, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2246.81, -1908.87, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2241.73, -1908.84, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2236.75, -1908.80, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2232.09, -1908.74, 12.09,   89.94, -45.84, -224.58);
CreateDynamicObject(18766, 2230.56, -1908.78, 12.09,   89.94, -45.84, -228.72);
CreateDynamicObject(18766, 2229.85, -1916.10, 12.09,   89.94, -45.84, -229.56);
CreateDynamicObject(18766, 2228.90, -1925.91, 12.09,   89.94, -45.84, -230.04);
CreateDynamicObject(18766, 2227.53, -1939.00, 12.09,   89.94, -45.84, -230.46);
CreateDynamicObject(18766, 2227.28, -1947.76, 12.09,   89.94, -45.84, -225.12);
CreateDynamicObject(8947, 2238.94, -1917.48, 15.53,   0.00, 0.00, 0.00);
CreateDynamicObject(8947, 2276.51, -1918.21, 15.41,   0.00, 0.00, 0.00);
CreateDynamicObject(8947, 2257.62, -1917.79, 15.66,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2231.83, -1926.22, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2231.83, -1922.23, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2231.82, -1918.40, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2231.73, -1912.82, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2231.84, -1907.24, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(3761, 2245.01, -1925.79, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3761, 2245.04, -1919.59, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3761, 2245.00, -1913.42, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3761, 2245.03, -1908.86, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(925, 2233.38, -1927.76, 13.66,   0.00, 0.00, -2.10);
CreateDynamicObject(925, 2233.42, -1926.06, 13.66,   0.00, 0.00, -2.10);
CreateDynamicObject(925, 2233.49, -1924.34, 13.66,   0.00, 0.00, -2.10);
CreateDynamicObject(1223, 2250.52, -1927.03, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2250.53, -1921.48, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1223, 2250.49, -1912.37, 12.00,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2251.59, -1928.70, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2251.57, -1927.68, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2251.55, -1926.56, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2251.52, -1925.44, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2251.51, -1924.38, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2251.56, -1922.88, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2251.51, -1921.24, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2251.62, -1919.68, 13.09,   0.00, 0.00, 0.00);
CreateDynamicObject(1421, 2263.89, -1928.17, 13.31,   0.00, 0.00, -91.26);
CreateDynamicObject(1421, 2262.87, -1928.17, 13.31,   0.00, 0.00, -91.26);
CreateDynamicObject(1421, 2261.79, -1928.07, 13.31,   0.00, 0.00, -91.26);
CreateDynamicObject(1421, 2263.85, -1926.13, 13.31,   0.00, 0.00, -91.26);
CreateDynamicObject(1421, 2262.86, -1926.04, 13.31,   0.00, 0.00, -91.26);
CreateDynamicObject(1421, 2261.80, -1925.95, 13.31,   0.00, 0.00, -91.26);
CreateDynamicObject(3761, 2263.70, -1922.18, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3761, 2263.73, -1915.65, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(16092, 2238.72, -1930.71, 10.23,   0.00, 0.00, -89.52);
CreateDynamicObject(16092, 2257.21, -1930.98, 10.23,   0.00, 0.00, -90.06);
CreateDynamicObject(16092, 2276.39, -1931.34, 10.23,   0.00, 0.00, -89.70);
CreateDynamicObject(3761, 2282.20, -1913.05, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(3761, 2282.28, -1919.45, 14.53,   0.00, 0.00, 0.00);
CreateDynamicObject(1299, 2281.33, -1924.36, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1299, 2281.34, -1926.64, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1299, 2281.27, -1928.94, 13.03,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2270.49, -1928.64, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2272.08, -1928.59, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2270.55, -1927.10, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(1338, 2272.10, -1927.09, 13.28,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2270.42, -1925.81, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2272.11, -1925.83, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2270.41, -1924.69, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(1348, 2272.10, -1924.74, 13.27,   0.00, 0.00, 0.00);
CreateDynamicObject(10281, 2276.87, -1932.98, 18.43,   0.00, 0.00, 2.64);
CreateDynamicObject(10281, 2257.24, -1932.74, 18.57,   0.00, 0.00, 2.64);
CreateDynamicObject(10281, 2238.50, -1932.42, 18.57,   0.00, 0.00, 2.64);
CreateDynamicObject(929, 2232.80, -1921.47, 13.39,   0.00, 0.00, -1.38);
CreateDynamicObject(929, 2233.96, -1921.52, 13.39,   0.00, 0.00, -1.38);
CreateDynamicObject(929, 2251.34, -1915.94, 13.39,   0.00, 0.00, -1.38);
CreateDynamicObject(929, 2270.29, -1919.06, 13.39,   0.00, 0.00, -1.38);
CreateDynamicObject(929, 2271.68, -1919.13, 13.39,   0.00, 0.00, -1.38);
CreateDynamicObject(958, 2232.77, -1916.66, 13.41,   0.00, 0.00, -92.04);
CreateDynamicObject(958, 2232.95, -1913.35, 13.41,   0.00, 0.00, -92.04);
CreateDynamicObject(958, 2251.45, -1911.38, 13.41,   0.00, 0.00, -92.04);
CreateDynamicObject(958, 2251.72, -1908.10, 13.41,   0.00, 0.00, -92.04);
CreateDynamicObject(958, 2270.39, -1914.34, 13.41,   0.00, 0.00, -92.04);
CreateDynamicObject(958, 2270.60, -1910.99, 13.41,   0.00, 0.00, -92.04);
CreateDynamicObject(959, 2270.38, -1914.32, 13.43,   0.00, 0.00, -92.76);
CreateDynamicObject(959, 2270.59, -1911.04, 13.43,   0.00, 0.00, -92.76);
CreateDynamicObject(959, 2251.44, -1911.38, 13.43,   0.00, 0.00, -92.76);
CreateDynamicObject(959, 2251.70, -1908.07, 13.43,   0.00, 0.00, -92.40);
CreateDynamicObject(959, 2232.77, -1916.66, 13.43,   0.00, 0.00, -91.92);
CreateDynamicObject(959, 2232.94, -1913.34, 13.43,   0.00, 0.00, -91.92);
CreateDynamicObject(11417, 2306.62, -1958.28, 17.34,   0.00, 0.00, 0.00);
CreateDynamicObject(11417, 2225.84, -1955.49, 17.43,   0.00, 0.00, 0.00);
CreateDynamicObject(3475, 2304.75, -1936.37, 14.90,   0.00, 0.00, -180.72);
CreateDynamicObject(3475, 2304.83, -1930.43, 14.90,   0.00, 0.00, -180.72);
CreateDynamicObject(3475, 2304.93, -1924.61, 14.90,   0.00, 0.00, -180.72);
CreateDynamicObject(3475, 2304.95, -1918.63, 14.90,   0.00, 0.00, -178.02);
CreateDynamicObject(3475, 2304.87, -1912.63, 14.90,   0.00, 0.00, -178.02);
CreateDynamicObject(3475, 2304.83, -1906.69, 14.90,   0.00, 0.00, -177.54);
CreateDynamicObject(3475, 2301.96, -1904.10, 14.90,   0.00, 0.00, -87.78);
CreateDynamicObject(3475, 2296.05, -1904.26, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2290.14, -1904.25, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2284.29, -1904.21, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2278.47, -1904.17, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2272.51, -1904.10, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2266.55, -1904.07, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2260.58, -1904.03, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2254.60, -1904.01, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2248.68, -1903.96, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2242.82, -1903.87, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2236.92, -1903.92, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2230.91, -1903.95, 14.90,   0.00, 0.00, -89.88);
CreateDynamicObject(3475, 2228.04, -1906.76, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2227.61, -1912.65, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2227.11, -1918.60, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2226.56, -1924.51, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2226.13, -1930.53, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2225.61, -1936.39, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2225.10, -1942.31, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2224.62, -1948.33, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2224.19, -1954.25, 14.90,   0.00, 0.00, -3.78);
CreateDynamicObject(3475, 2225.95, -1959.30, 14.90,   0.00, 0.00, 41.10);
CreateDynamicObject(3475, 2230.76, -1961.85, 14.90,   0.00, 0.00, 84.60);
CreateDynamicObject(3475, 2244.40, -1962.05, 14.90,   0.00, 0.00, 88.38);
CreateDynamicObject(3475, 2250.38, -1962.21, 14.90,   0.00, 0.00, 88.38);
CreateDynamicObject(3475, 2256.62, -1962.17, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2262.56, -1962.22, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2268.68, -1962.22, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2274.58, -1962.27, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2280.47, -1962.28, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2286.41, -1962.22, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2292.27, -1962.16, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2298.23, -1962.24, 14.90,   0.00, 0.00, 90.48);
CreateDynamicObject(3475, 2302.50, -1959.80, 14.90,   0.00, 0.00, 147.84);
CreateDynamicObject(3475, 2304.54, -1942.29, 14.90,   0.00, 0.00, -180.72);
CreateDynamicObject(8040, 2272.80, -2001.01, 13.37,   0.00, 0.00, -179.82);
CreateDynamicObject(8041, 2232.89, -2000.89, 18.32,   0.00, 0.00, -179.94);
CreateDynamicObject(1290, 2288.28, -2001.16, 19.00,   0.00, 0.00, -96.84);
CreateDynamicObject(1290, 2276.42, -2001.37, 19.00,   0.00, 0.00, -96.84);
CreateDynamicObject(1290, 2263.74, -2001.30, 19.00,   0.00, 0.00, -96.84);
CreateDynamicObject(1290, 2253.65, -2001.31, 19.00,   0.00, 0.00, -96.84);
CreateDynamicObject(3475, 2309.06, -1982.56, 16.54,   0.00, 0.00, -90.00);
CreateDynamicObject(3475, 2302.99, -1982.57, 16.54,   0.00, 0.00, -90.00);
CreateDynamicObject(3475, 2297.09, -1982.53, 16.54,   0.00, 0.00, -90.00);
CreateDynamicObject(3475, 2291.18, -1982.54, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2285.41, -1982.51, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2279.54, -1982.54, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2273.67, -1982.48, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2267.91, -1982.45, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2261.93, -1982.44, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2255.99, -1982.45, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2250.09, -1982.58, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2244.25, -1982.68, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2238.43, -1982.80, 16.54,   0.00, 0.00, -89.16);
CreateDynamicObject(3475, 2233.21, -1989.02, 16.54,   0.00, 0.00, -0.30);
CreateDynamicObject(18284, 2294.18, -1910.49, 15.41,   0.00, 0.00, -91.86);
CreateDynamicObject(1676, 2285.85, -1910.18, 14.19,   0.00, 0.00, 87.48);
CreateDynamicObject(1676, 2291.45, -1910.63, 14.19,   0.00, 0.00, 87.48);
CreateDynamicObject(1676, 2302.49, -1910.65, 14.19,   0.00, 0.00, 87.48);
CreateDynamicObject(1676, 2296.98, -1910.69, 14.19,   0.00, 0.00, 87.48);
CreateDynamicObject(10183, 2278.70, -1958.35, 12.60,   0.00, 0.00, -134.10);
CreateDynamicObject(10183, 2263.74, -1958.22, 12.60,   0.00, 0.00, -135.24);
CreateDynamicObject(11417, 2234.81, -1718.19, 26.66,   0.00, 0.00, 0.00);
CreateDynamicObject(6986, 2231.07, -1710.93, 26.97,   -88.44, -29.58, -31.02);
CreateDynamicObject(3096, 2230.44, -1713.82, 25.34,   0.00, 0.00, -93.18);
CreateDynamicObject(3096, 2230.62, -1706.40, 25.34,   0.00, 0.00, -93.18);
CreateDynamicObject(3096, 2230.60, -1706.46, 27.66,   0.00, 0.00, -93.18);
CreateDynamicObject(3096, 2230.57, -1706.55, 30.20,   0.00, 0.00, -93.18);
CreateDynamicObject(12839, 2246.92, -1924.58, 15.99,   0.00, 0.00, -179.82);
CreateDynamicObject(18234, 2235.56, -1915.25, 18.52,   0.00, 0.00, -180.12);

// ++
CreateDynamicObject(971,1025.2795,-1029.2299,32.1016,-0.00000,0.000000,0); // Pay & Spray
CreateDynamicObject(971,488.2341,-1735.4591,11.1416,-0.00000,0.000000,174); // Pay & Spray
CreateDynamicObject(971,2071.5410,-1831.4143,13.5469,-0.00000,0.000000,90); // Pay & Spray
CreateDynamicObject(971,719.8199,-462.4768,16.3359,-0.00000,0.000000,0); // Pay & Spray
CreateDynamicObject(971,-1904.4561,277.8578,41.0469,-0.00000,0.000000,0); // Pay & Spray
CreateDynamicObject(1676,1007.3336,-936.4127,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
CreateDynamicObject(1676,1000.6406,-937.1027,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood

/*Fences glen park*/
CreateDynamicObject(994,1930.06762695,-1195.10400391,19.03111267,0.00000000,0.00000000,54.00000000); //object(lhouse_barrier2) (1)
CreateDynamicObject(994,1933.77380371,-1190.03076172,19.03111267,0.00000000,0.00000000,36.24780273); //object(lhouse_barrier2) (2)
CreateDynamicObject(994,1938.80236816,-1186.33972168,19.03111267,0.00000000,0.00000000,26.99389648); //object(lhouse_barrier2) (3)
CreateDynamicObject(994,1944.53820801,-1183.43493652,19.03111267,0.00000000,0.00000000,18.99340820); //object(lhouse_barrier2) (4)
CreateDynamicObject(994,1950.47802734,-1181.38256836,19.03111267,0.00000000,0.00000000,5.73986816); //object(lhouse_barrier2) (5)
CreateDynamicObject(994,1955.08984375,-1180.83020020,19.03111267,0.00000000,0.00000000,16.73498535); //object(lhouse_barrier2) (6)
CreateDynamicObject(994,1961.09252930,-1179.05603027,19.03111267,0.00000000,0.00000000,2.73217773); //object(lhouse_barrier2) (7)
CreateDynamicObject(994,1967.35742188,-1178.74487305,19.03111267,0.00000000,0.00000000,352.73010254); //object(lhouse_barrier2) (8)
CreateDynamicObject(994,1971.26062012,-1179.23913574,19.03111267,0.00000000,0.00000000,0.72705078); //object(lhouse_barrier2) (9)
CreateDynamicObject(994,1977.50341797,-1179.15734863,19.03111267,0.00000000,0.00000000,354.47509766); //object(lhouse_barrier2) (10)
CreateDynamicObject(994,1983.75317383,-1179.76293945,19.03111267,0.00000000,0.00000000,346.97387695); //object(lhouse_barrier2) (11)
CreateDynamicObject(994,1929.41613770,-1201.37170410,19.03111267,0.00000000,0.00000000,83.99780273); //object(lhouse_barrier2) (12)
CreateDynamicObject(994,1931.97705078,-1207.10449219,19.03111267,0.00000000,0.00000000,113.99597168); //object(lhouse_barrier2) (13)
CreateDynamicObject(994,1936.43469238,-1211.50549316,19.03111267,0.00000000,0.00000000,135.24414062); //object(lhouse_barrier2) (14)
CreateDynamicObject(994,1941.81494141,-1214.75793457,19.03111267,0.00000000,0.00000000,148.99169922); //object(lhouse_barrier2) (15)
CreateDynamicObject(994,1947.64465332,-1217.07971191,19.03111267,0.00000000,0.00000000,158.24108887); //object(lhouse_barrier2) (16)
CreateDynamicObject(994,1953.66333008,-1219.03588867,19.03111267,0.00000000,0.00000000,162.23608398); //object(lhouse_barrier2) (17)
CreateDynamicObject(994,1959.74768066,-1220.54516602,19.03111267,0.00000000,0.00000000,165.98510742); //object(lhouse_barrier2) (18)
CreateDynamicObject(994,1965.99462891,-1221.04443359,19.03111267,0.00000000,0.00000000,175.48144531); //object(lhouse_barrier2) (19)
CreateDynamicObject(994,1972.27966309,-1220.91674805,19.03111267,0.00000000,0.00000000,181.22912598); //object(lhouse_barrier2) (20)
CreateDynamicObject(994,1978.55810547,-1220.51733398,19.03111267,0.00000000,0.00000000,183.72497559); //object(lhouse_barrier2) (21)
CreateDynamicObject(994,1984.73999023,-1219.58398438,19.03111267,0.00000000,0.00000000,188.47436523); //object(lhouse_barrier2) (22)
CreateDynamicObject(994,1989.90246582,-1181.15686035,19.03111267,0.00000000,0.00000000,342.72021484); //object(lhouse_barrier2) (23)
CreateDynamicObject(994,1995.89355469,-1182.99206543,19.03111267,0.00000000,0.00000000,334.21850586); //object(lhouse_barrier2) (24)
CreateDynamicObject(994,2001.55249023,-1185.71228027,19.03111267,0.00000000,0.00000000,324.71508789); //object(lhouse_barrier2) (25)
CreateDynamicObject(994,2006.68322754,-1189.31005859,19.03111267,0.00000000,0.00000000,309.71191406); //object(lhouse_barrier2) (26)
CreateDynamicObject(994,2010.72058105,-1194.13781738,19.03111267,0.00000000,0.00000000,283.71008301); //object(lhouse_barrier2) (27)
CreateDynamicObject(994,2012.20556641,-1200.26452637,19.03111267,0.00000000,0.00000000,250.20544434); //object(lhouse_barrier2) (28)
CreateDynamicObject(994,1990.81201172,-1218.02111816,19.03111267,0.00000000,0.00000000,194.47045898); //object(lhouse_barrier2) (29)
CreateDynamicObject(994,1996.81604004,-1216.02038574,19.03111267,0.00000000,0.00000000,198.46899414); //object(lhouse_barrier2) (30)
CreateDynamicObject(994,2010.11608887,-1206.13574219,19.03111267,0.00000000,0.00000000,227.45263672); //object(lhouse_barrier2) (31)
CreateDynamicObject(994,2005.76611328,-1210.80932617,19.03111267,0.00000000,0.00000000,212.94995117); //object(lhouse_barrier2) (32)
CreateDynamicObject(997,1997.25329590,-1215.84448242,19.02343750,0.00000000,0.00000000,26.25000000); //object(lhouse_barrier3) (2)

/*AFUERA PUERTO*/
CreateDynamicObject(1569,359.10000610,-2070.69995117,9.69999981,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (1)
CreateDynamicObject(1569,359.09960938,-2070.69921875,9.69999981,0.00000000,0.00000000,180.00000000); //object(adam_v_door) (2)
CreateDynamicObject(1223,358.20001221,-2070.50000000,7.50000000,0.00000000,0.00000000,250.00000000); //object(lampost_coast) (1)
CreateDynamicObject(1223,360.50000000,-2070.30004883,7.50000000,0.00000000,0.00000000,249.99938965); //object(lampost_coast) (2)
CreateDynamicObject(970,355.00000000,-2066.89990234,10.19999981,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
CreateDynamicObject(970,352.89999390,-2069.00000000,10.19999981,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (2)
CreateDynamicObject(970,354.60000610,-2072.10009766,10.19999981,0.00000000,0.00000000,330.00000000); //object(fencesmallb) (4)
CreateDynamicObject(970,359.00000000,-2075.00000000,9.50000000,0.00000000,20.75000000,270.00000000); //object(fencesmallb) (5)
CreateDynamicObject(970,364.50000000,-2071.60009766,10.19999981,0.00000000,0.00000000,270.00000000); //object(fencesmallb) (6)
CreateDynamicObject(970,359.00000000,-2078.89990234,8.00000000,0.00000000,20.74768066,270.00000000); //object(fencesmallb) (7)
CreateDynamicObject(970,364.50000000,-2075.80004883,9.50000000,0.00000000,20.74768066,270.00000000); //object(fencesmallb) (8)
CreateDynamicObject(970,364.50000000,-2079.60009766,8.00000000,0.00000000,20.74768066,270.00000000); //object(fencesmallb) (10)

 /* Int Puerto */
CreateDynamicObject(16150,984.70001221,-1941.40002441,2834.00000000,0.00000000,0.00000000,0.00000000); //object(ufo_barinterior) (1)
CreateDynamicObject(10444,977.90002441,-1924.40002441,2835.10009766,0.00000000,0.00000000,0.75000000); //object(poolwater_sfs) (1)
CreateDynamicObject(1649,982.59997559,-1937.90002441,2835.39990234,270.00000000,180.00000000,180.00000000); //object(wglasssmash) (11)
CreateDynamicObject(1649,985.29998779,-1937.40002441,2833.80004883,0.00000000,0.00000000,91.24694824); //object(wglasssmash) (13)
CreateDynamicObject(1649,983.09960938,-1939.59960938,2833.80004883,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (16)
CreateDynamicObject(1649,985.29980469,-1937.39941406,2833.80004883,0.00000000,0.00000000,91.24694824); //object(wglasssmash) (17)
CreateDynamicObject(1649,983.09960938,-1939.59960938,2833.80004883,0.00000000,0.00000000,180.00000000); //object(wglasssmash) (18)
CreateDynamicObject(1649,983.09960938,-1939.59960938,2833.80004883,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (19)
CreateDynamicObject(1649,985.29980469,-1937.39941406,2833.80004883,0.00000000,0.00000000,271.24694824); //object(wglasssmash) (20)
CreateDynamicObject(1649,985.29980469,-1937.39941406,2833.80004883,0.00000000,0.00000000,271.24145508); //object(wglasssmash) (21)
CreateDynamicObject(10444,977.89941406,-1924.39941406,2835.10009766,0.00000000,0.00000000,0.74707031); //object(poolwater_sfs) (7)
CreateDynamicObject(10444,977.90002441,-1924.40002441,2835.30004883,359.25006104,180.00000000,180.74707031); //object(poolwater_sfs) (8)
CreateDynamicObject(10444,977.89941406,-1924.39941406,2835.30004883,359.24743652,179.99450684,180.74157715); //object(poolwater_sfs) (9)
CreateDynamicObject(1649,983.09960938,-1939.59960938,2833.80004883,0.00000000,0.00000000,0.00000000); //object(wglasssmash) (22)
CreateDynamicObject(1649,983.09997559,-1934.69995117,2835.39990234,270.00000000,179.99450684,179.99450684); //object(wglasssmash) (23)
CreateDynamicObject(1649,982.59960938,-1937.89941406,2835.39990234,270.00000000,179.99450684,179.99450684); //object(wglasssmash) (24)
CreateDynamicObject(1649,982.59960938,-1937.89941406,2835.39990234,90.00000000,184.72850037,175.27148438); //object(wglasssmash) (25)
CreateDynamicObject(1649,982.59960938,-1937.89941406,2835.39990234,90.00000000,184.72412109,175.27038574); //object(wglasssmash) (26)
CreateDynamicObject(1649,983.09960938,-1934.69921875,2835.39990234,270.00000000,179.99450684,179.99450684); //object(wglasssmash) (27)
CreateDynamicObject(1649,983.09960938,-1934.69921875,2835.39990234,90.00000000,173.64453125,186.35545349); //object(wglasssmash) (28)
CreateDynamicObject(1649,983.09960938,-1934.69921875,2835.39990234,90.00000000,173.64440918,186.35009766); //object(wglasssmash) (29)
CreateDynamicObject(902,982.29998779,-1937.00000000,2834.00000000,0.00000000,0.00000000,0.00000000); //object(starfish) (1)
CreateDynamicObject(953,983.59997559,-1936.09997559,2834.30004883,0.00000000,0.00000000,0.00000000); //object(cj_oyster) (1)
CreateDynamicObject(953,984.70001221,-1936.09997559,2834.30004883,0.00000000,0.00000000,0.00000000); //object(cj_oyster) (2)
CreateDynamicObject(1461,986.00000000,-1935.69995117,2834.80004883,0.00000000,0.00000000,0.00000000); //object(dyn_life_p) (1)
CreateDynamicObject(1461,986.59997559,-1935.69995117,2834.80004883,0.00000000,0.00000000,0.00000000); //object(dyn_life_p) (2)
CreateDynamicObject(1461,987.20001221,-1935.69995117,2834.80004883,0.00000000,0.00000000,0.00000000); //object(dyn_life_p) (3)
CreateDynamicObject(1461,987.79998779,-1935.69995117,2834.80004883,0.00000000,0.00000000,0.00000000); //object(dyn_life_p) (4)
CreateDynamicObject(1599,981.79998779,-1938.90002441,2834.60009766,0.00000000,0.00000000,334.00000000); //object(fish1single) (1)
CreateDynamicObject(1599,983.59997559,-1938.00000000,2834.39990234,0.00000000,0.00000000,250.00000000); //object(fish1single) (2)
CreateDynamicObject(1600,984.40002441,-1937.30004883,2834.39990234,0.00000000,0.00000000,110.00000000); //object(fish2single) (1)
CreateDynamicObject(2782,984.79998779,-1938.90002441,2834.30004883,0.00000000,0.00000000,0.00000000); //object(cj_oyster_2) (1)
CreateDynamicObject(2406,981.00000000,-1944.00000000,2835.30004883,0.00000000,0.00000000,89.50000000); //object(cj_surf_board3) (1)
CreateDynamicObject(2406,981.00000000,-1940.09997559,2835.30004883,0.00000000,0.00000000,89.49462891); //object(cj_surf_board3) (2)
CreateDynamicObject(2405,981.00000000,-1943.40002441,2835.30004883,0.00000000,0.00000000,90.00000000); //object(cj_surf_board2) (1)
CreateDynamicObject(2405,981.00000000,-1940.69995117,2835.30004883,0.00000000,0.00000000,90.00000000); //object(cj_surf_board2) (2)
CreateDynamicObject(2404,981.09997559,-1942.80004883,2835.30004883,0.00000000,0.00000000,80.00000000); //object(cj_surf_board) (1)
CreateDynamicObject(2404,981.09997559,-1941.30004883,2835.30004883,0.00000000,0.00000000,79.99694824); //object(cj_surf_board) (2)
CreateDynamicObject(2410,981.00000000,-1942.09997559,2835.30004883,0.00872803,88.00000000,359.75012207); //object(cj_surf_board4) (1)
CreateDynamicObject(1649,983.20001221,-1950.50000000,2834.30004883,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (31)
CreateDynamicObject(1649,985.29998779,-1952.69995117,2834.30004883,0.00000000,0.00000000,87.99450684); //object(wglasssmash) (32)
CreateDynamicObject(1649,985.29980469,-1952.69921875,2834.30004883,0.00000000,0.00000000,87.98950195); //object(wglasssmash) (33)
CreateDynamicObject(1649,983.19921875,-1950.50000000,2834.30004883,0.00000000,0.00000000,179.99450684); //object(wglasssmash) (34)
CreateDynamicObject(1649,983.19921875,-1950.50000000,2834.30004883,0.00000000,0.00000000,359.99450684); //object(wglasssmash) (35)
CreateDynamicObject(1649,983.19921875,-1950.50000000,2834.30004883,0.00000000,0.00000000,359.98901367); //object(wglasssmash) (36)
CreateDynamicObject(1649,985.29980469,-1952.69921875,2834.30004883,0.00000000,0.00000000,267.98950195); //object(wglasssmash) (37)
CreateDynamicObject(1649,985.29980469,-1952.69921875,2834.30004883,0.00000000,0.00000000,267.98400879); //object(wglasssmash) (38)
CreateDynamicObject(10444,977.90002441,-1965.59997559,2835.80004883,0.00000000,0.00000000,359.24707031); //object(poolwater_sfs) (10)
CreateDynamicObject(10444,977.89941406,-1965.59960938,2835.80004883,0.00000000,180.00000000,179.24194336); //object(poolwater_sfs) (11)
CreateDynamicObject(10444,977.89941406,-1965.59960938,2835.80004883,0.00000000,179.99450684,179.23645020); //object(poolwater_sfs) (12)
CreateDynamicObject(1604,983.20001221,-1938.80004883,2834.60009766,0.00000000,0.00000000,70.00000000); //object(fish3single) (1)
CreateDynamicObject(1603,985.00000000,-1936.40002441,2835.19995117,0.00000000,0.00000000,14.00000000); //object(jellyfish01) (1)
CreateDynamicObject(1604,983.90002441,-1937.09997559,2834.69995117,0.00000000,0.00000000,166.00000000); //object(fish3single) (2)
CreateDynamicObject(1649,982.59997559,-1952.69995117,2835.89990234,270.25024414,359.99987793,90.23937988); //object(wglasssmash) (39)
CreateDynamicObject(1610,981.59997559,-1954.00000000,2834.60009766,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (1)
CreateDynamicObject(1610,984.90002441,-1954.00000000,2834.60009766,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (2)
CreateDynamicObject(1610,981.90002441,-1951.00000000,2834.60009766,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (3)
CreateDynamicObject(1610,984.50000000,-1952.09997559,2834.60009766,0.00000000,0.00000000,0.00000000); //object(sandcastle1) (4)
CreateDynamicObject(1601,984.40002441,-1953.19995117,2835.00000000,0.00000000,0.00000000,0.00000000); //object(fish3s) (1)
CreateDynamicObject(1602,984.90002441,-1953.69995117,2835.80004883,0.00000000,0.00000000,0.00000000); //object(jellyfish) (1)
CreateDynamicObject(1605,983.29998779,-1953.50000000,2835.00000000,0.00000000,0.00000000,0.00000000); //object(fish1s) (1)
CreateDynamicObject(1606,982.29998779,-1953.90002441,2835.19995117,0.00000000,0.00000000,0.00000000); //object(fish2s) (1)
CreateDynamicObject(902,982.59997559,-1953.59997559,2834.60009766,0.00000000,0.00000000,0.00000000); //object(starfish) (2)
CreateDynamicObject(14699,987.09997559,-1942.00000000,2835.30004883,0.00000000,0.00000000,0.00000000); //object(int_tat_lights) (1)
CreateDynamicObject(14699,987.20001221,-1946.00000000,2835.30004883,0.00000000,0.00000000,0.00000000); //object(int_tat_lights) (2)
CreateDynamicObject(14699,987.09997559,-1950.59997559,2835.30004883,0.00000000,0.00000000,0.00000000); //object(int_tat_lights) (3)
CreateDynamicObject(1885,981.29998779,-1945.50000000,2834.00000000,0.00000000,0.00000000,0.00000000); //object(shop_baskets) (1)
CreateDynamicObject(1885,981.50000000,-1948.19995117,2834.00000000,0.00000000,0.00000000,0.00000000); //object(shop_baskets) (2)
CreateDynamicObject(2433,991.79998779,-1942.09997559,2834.00000000,0.00000000,0.00000000,0.00000000); //object(cj_ff_disp1) (1)
CreateDynamicObject(2433,989.90002441,-1942.09997559,2834.00000000,0.00000000,0.00000000,0.00000000); //object(cj_ff_disp1) (2)
CreateDynamicObject(2484,992.50000000,-1942.30004883,2835.89990234,0.00000000,0.00000000,0.00000000); //object(model_yaught) (1)
CreateDynamicObject(2459,988.00000000,-1954.09997559,2834.60009766,0.00000000,0.00000000,90.25000000); //object(cj_hobby_c_4) (1)
CreateDynamicObject(3004,987.09997559,-1954.59997559,2835.89990234,284.00000000,0.00000000,0.00000000); //object(k_poolq2) (1)
CreateDynamicObject(2712,993.00000000,-1940.40002441,2834.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop) (1)
CreateDynamicObject(2712,993.00000000,-1940.69995117,2834.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop) (2)
CreateDynamicObject(2712,993.00000000,-1941.00000000,2834.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop) (3)
CreateDynamicObject(2712,993.00000000,-1941.30004883,2834.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop) (4)
CreateDynamicObject(2712,993.00000000,-1941.59997559,2834.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop) (5)
CreateDynamicObject(1514,989.90002441,-1942.30004883,2835.30004883,0.00000000,0.00000000,0.00000000); //object(dyn_ff_till) (1)
CreateDynamicObject(3004,986.79998779,-1954.59997559,2835.89990234,283.99658203,0.00000000,0.00000000); //object(k_poolq2) (2)
CreateDynamicObject(3004,986.50000000,-1954.59997559,2835.89990234,283.99658203,0.00000000,0.00000000); //object(k_poolq2) (3)
CreateDynamicObject(3004,986.20001221,-1954.59997559,2835.89990234,283.99658203,0.00000000,0.00000000); //object(k_poolq2) (4)
CreateDynamicObject(3004,985.90002441,-1954.59997559,2835.89990234,283.99658203,0.00000000,0.00000000); //object(k_poolq2) (5)
CreateDynamicObject(3004,985.59997559,-1954.59997559,2835.89990234,283.99658203,0.00000000,0.00000000); //object(k_poolq2) (6)
CreateDynamicObject(3004,988.40002441,-1951.80004883,2836.10009766,273.99658203,0.00000000,100.00000000); //object(k_poolq2) (7)
CreateDynamicObject(3004,988.40002441,-1951.30004883,2836.10009766,273.99353027,0.00000000,99.99755859); //object(k_poolq2) (8)
CreateDynamicObject(3004,988.40002441,-1950.90002441,2836.10009766,273.99353027,0.00000000,99.99755859); //object(k_poolq2) (9)
CreateDynamicObject(3004,988.40002441,-1950.59997559,2836.10009766,273.99353027,0.00000000,99.99755859); //object(k_poolq2) (10)
CreateDynamicObject(3004,988.40002441,-1950.40002441,2836.10009766,273.99353027,0.00000000,99.99755859); //object(k_poolq2) (11)
CreateDynamicObject(3004,988.40002441,-1951.50000000,2836.10009766,273.99353027,0.00000000,99.99755859); //object(k_poolq2) (12)
CreateDynamicObject(1643,987.79998779,-1953.40002441,2836.30004883,0.00000000,0.00000000,0.00000000); //object(beachtowel01) (1)
CreateDynamicObject(1642,987.90002441,-1953.40002441,2835.19995117,0.00000000,0.00000000,2.25000000); //object(beachtowel02) (1)
CreateDynamicObject(1643,987.90002441,-1953.50000000,2835.30004883,0.00000000,0.00000000,0.00000000); //object(beachtowel01) (2)
CreateDynamicObject(1641,987.90002441,-1953.30004883,2835.39990234,0.00000000,0.00000000,0.00000000); //object(beachtowel03) (1)
CreateDynamicObject(1640,987.79998779,-1953.19995117,2835.60009766,0.00000000,0.00000000,0.00000000); //object(beachtowel04) (1)
CreateDynamicObject(2894,990.79998779,-1942.40002441,2835.19995117,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
CreateDynamicObject(2118,983.90002441,-1943.80004883,2834.00000000,0.00000000,0.00000000,90.00000000); //object(swank_dinning_6) (1)
CreateDynamicObject(1892,981.09997559,-1946.40002441,2834.00000000,0.00000000,0.00000000,270.00000000); //object(security_gatsh) (1)
CreateDynamicObject(1703,990.90002441,-1947.50000000,2834.00000000,0.00000000,0.00000000,180.00000000); //object(kb_couch02) (1)
CreateDynamicObject(1704,992.79998779,-1947.50000000,2834.00000000,0.00000000,0.00000000,180.00000000); //object(kb_chair03) (1)
CreateDynamicObject(1504,980.79998779,-1947.69995117,2834.00000000,0.00000000,0.00000000,90.00000000); //object(gen_doorext06) (1)
CreateDynamicObject(2954,988.40002441,-1937.19995117,2834.00000000,0.00000000,0.00000000,180.00000000); //object(kmb_ot) (1)
CreateDynamicObject(2954,988.40002441,-1938.30004883,2834.00000000,0.00000000,0.00000000,179.99450684); //object(kmb_ot) (2)
CreateDynamicObject(2954,993.40002441,-1945.80004883,2834.00000000,0.00000000,0.00000000,180.49450684); //object(kmb_ot) (3)
CreateDynamicObject(14705,983.90002441,-1943.80004883,2835.00000000,0.00000000,0.00000000,0.00000000); //object(int2vase) (1)
CreateDynamicObject(2852,983.90002441,-1943.09997559,2834.80004883,0.00000000,0.00000000,0.00000000); //object(gb_bedmags02) (1)
CreateDynamicObject(2700,988.90002441,-1945.50000000,2836.30004883,0.00000000,0.00000000,0.00000000); //object(cj_sex_tv2) (1)
CreateDynamicObject(2700,985.59997559,-1935.90002441,2836.30004883,0.00000000,0.00000000,270.00000000); //object(cj_sex_tv2) (2)
/*PRISION IOOC*/
CreateDynamicObject(4724,174.19999695,1930.00000000,3868.30004883,0.00000000,0.00000000,0.00000000); //object(librarywall_lan2) (1)
CreateDynamicObject(976,168.69999695,1944.80004883,3866.30004883,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (1)
CreateDynamicObject(976,177.59960938,1944.79980469,3866.30004883,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (3)
CreateDynamicObject(2395,169.30000305,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (555)
CreateDynamicObject(2395,173.00000000,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (556)
CreateDynamicObject(2395,173.00000000,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (557)
CreateDynamicObject(2395,169.30000305,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (558)
CreateDynamicObject(2395,169.30000305,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (559)
CreateDynamicObject(2395,173.00000000,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (560)
CreateDynamicObject(2395,173.00000000,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (561)
CreateDynamicObject(2395,169.30000305,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (562)
CreateDynamicObject(2395,169.30000305,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (563)
CreateDynamicObject(2395,173.00000000,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (564)
CreateDynamicObject(2395,176.69999695,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (565)
CreateDynamicObject(2395,180.39999390,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (566)
CreateDynamicObject(2395,184.10000610,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (567)
CreateDynamicObject(2395,184.10000610,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (568)
CreateDynamicObject(2395,184.10000610,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (569)
CreateDynamicObject(2395,184.10000610,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (570)
CreateDynamicObject(2395,180.39999390,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (571)
CreateDynamicObject(2395,180.39999390,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (572)
CreateDynamicObject(2395,180.39999390,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (573)
CreateDynamicObject(2395,176.69999695,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (574)
CreateDynamicObject(2395,176.69999695,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (575)
CreateDynamicObject(2395,176.69999695,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (576)
CreateDynamicObject(2395,176.69999695,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (577)
CreateDynamicObject(2395,180.39999390,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (578)
CreateDynamicObject(2395,184.10000610,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (579)
CreateDynamicObject(3361,193.50000000,1939.30004883,3867.39990234,0.00000000,0.00000000,269.99450684); //object(cxref_woodstair) (1)
CreateDynamicObject(976,168.69999695,1944.80004883,3869.60009766,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (6)
CreateDynamicObject(976,177.60000610,1944.80004883,3869.60009766,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (7)
CreateDynamicObject(2395,184.10000610,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (580)
CreateDynamicObject(2395,180.39999390,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (581)
CreateDynamicObject(2395,176.69999695,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (582)
CreateDynamicObject(2395,173.00000000,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (583)
CreateDynamicObject(2395,169.30000305,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (584)
CreateDynamicObject(976,186.50000000,1944.80004883,3866.30004883,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (8)
CreateDynamicObject(976,195.39999390,1944.80004883,3866.30004883,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (9)
CreateDynamicObject(984,177.50000000,1951.30004883,3866.89990234,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (1)
CreateDynamicObject(984,177.50000000,1951.30004883,3868.19995117,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (2)
CreateDynamicObject(984,177.50000000,1951.30004883,3869.50000000,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (3)
CreateDynamicObject(984,177.50000000,1951.30004883,3870.80004883,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (4)
CreateDynamicObject(984,177.50000000,1951.30004883,3872.10009766,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (5)
CreateDynamicObject(2395,187.80000305,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (586)
CreateDynamicObject(2395,187.80000305,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (587)
CreateDynamicObject(2395,187.80000305,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (588)
CreateDynamicObject(2395,187.80000305,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (589)
CreateDynamicObject(2395,187.80000305,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (590)
CreateDynamicObject(2395,191.50000000,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (591)
CreateDynamicObject(2395,195.19999695,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (592)
CreateDynamicObject(2395,198.89999390,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (593)
CreateDynamicObject(2395,202.60000610,1941.90002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (594)
CreateDynamicObject(2395,202.60000610,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (595)
CreateDynamicObject(2395,202.60000610,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (596)
CreateDynamicObject(2395,202.60000610,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (597)
CreateDynamicObject(2395,202.60000610,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (598)
CreateDynamicObject(2395,198.89999390,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (599)
CreateDynamicObject(2395,195.19999695,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (600)
CreateDynamicObject(2395,191.50000000,1952.69995117,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (601)
CreateDynamicObject(2395,191.50000000,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (602)
CreateDynamicObject(2395,191.50000000,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (603)
CreateDynamicObject(2395,191.50000000,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (604)
CreateDynamicObject(2395,195.19999695,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (605)
CreateDynamicObject(2395,195.19999695,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (606)
CreateDynamicObject(2395,195.19999695,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (607)
CreateDynamicObject(2395,198.89999390,1950.00000000,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (608)
CreateDynamicObject(2395,198.89999390,1947.30004883,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (609)
CreateDynamicObject(2395,198.89999390,1944.59997559,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (610)
CreateDynamicObject(976,186.50000000,1944.80004883,3869.60009766,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (10)
CreateDynamicObject(976,195.39999390,1944.80004883,3869.60009766,0.00000000,0.00000000,0.00000000); //object(phils_compnd_gate) (11)
CreateDynamicObject(984,168.60000610,1951.19995117,3866.89990234,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (7)
CreateDynamicObject(984,168.60000610,1951.19995117,3868.19995117,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (10)
CreateDynamicObject(984,168.60000610,1951.19995117,3869.50000000,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (12)
CreateDynamicObject(984,168.60000610,1951.19995117,3870.80004883,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (13)
CreateDynamicObject(984,168.60000610,1951.19995117,3872.10009766,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (14)
CreateDynamicObject(984,195.30000305,1951.30004883,3866.89990234,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (15)
CreateDynamicObject(984,186.39999390,1951.30004883,3866.89990234,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (17)
CreateDynamicObject(984,186.39999390,1951.30004883,3868.19995117,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (18)
CreateDynamicObject(984,186.39999390,1951.30004883,3869.50000000,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (19)
CreateDynamicObject(984,186.39999390,1951.30004883,3870.80004883,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (20)
CreateDynamicObject(984,186.39999390,1951.30004883,3872.10009766,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (21)
CreateDynamicObject(984,195.30000305,1951.30004883,3868.19995117,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (22)
CreateDynamicObject(984,195.30000305,1951.30004883,3869.50000000,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (23)
CreateDynamicObject(984,195.30000305,1951.30004883,3870.80004883,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (24)
CreateDynamicObject(984,195.30000305,1951.30004883,3872.10009766,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (25)
CreateDynamicObject(984,204.19999695,1951.30004883,3866.89990234,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (26)
CreateDynamicObject(984,204.19999695,1951.30004883,3868.19995117,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (27)
CreateDynamicObject(984,204.19999695,1951.30004883,3869.50000000,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (28)
CreateDynamicObject(984,204.19999695,1951.30004883,3870.80004883,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (29)
CreateDynamicObject(984,204.19999695,1951.30004883,3872.10009766,0.00000000,0.00000000,0.00000000); //object(fenceshit2) (30)
CreateDynamicObject(2395,169.30000305,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (611)
CreateDynamicObject(2395,173.00000000,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (612)
CreateDynamicObject(2395,176.69999695,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (613)
CreateDynamicObject(2395,180.39999390,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (614)
CreateDynamicObject(2395,184.10000610,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (615)
CreateDynamicObject(2395,187.80000305,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (616)
CreateDynamicObject(2395,191.50000000,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (617)
CreateDynamicObject(2395,195.19999695,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (618)
CreateDynamicObject(2395,198.89999390,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (619)
CreateDynamicObject(2395,202.60000610,1944.69995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (620)
CreateDynamicObject(2395,169.30000305,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (621)
CreateDynamicObject(2395,169.30000305,1950.09997559,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (622)
CreateDynamicObject(2395,169.30000305,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (623)
CreateDynamicObject(2395,169.30000305,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (624)
CreateDynamicObject(2395,169.30000305,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (625)
CreateDynamicObject(2395,173.00000000,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (626)
CreateDynamicObject(2395,176.69999695,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (627)
CreateDynamicObject(2395,180.39999390,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (628)
CreateDynamicObject(2395,184.10000610,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (629)
CreateDynamicObject(2395,187.80000305,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (630)
CreateDynamicObject(2395,191.50000000,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (631)
CreateDynamicObject(2395,195.19999695,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (632)
CreateDynamicObject(2395,198.89999390,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (633)
CreateDynamicObject(2395,202.60000610,1958.19995117,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (634)
CreateDynamicObject(2395,187.80000305,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (636)
CreateDynamicObject(2395,191.50000000,1955.39941406,3869.60009766,269.98901367,0.00000000,0.00000000); //object(cj_sports_wall) (637)
CreateDynamicObject(2395,195.19999695,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (638)
CreateDynamicObject(2395,198.89999390,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (639)
CreateDynamicObject(2395,202.60000610,1955.40002441,3869.60009766,269.99450684,0.00000000,0.00000000); //object(cj_sports_wall) (640)
CreateDynamicObject(2395,173.00000000,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (642)
CreateDynamicObject(2395,176.69999695,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (643)
CreateDynamicObject(2395,180.39999390,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (644)
CreateDynamicObject(2395,184.10000610,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (645)
CreateDynamicObject(2395,187.80000305,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (646)
CreateDynamicObject(2395,191.50000000,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (647)
CreateDynamicObject(2395,195.19999695,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (648)
CreateDynamicObject(2395,198.89999390,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (649)
CreateDynamicObject(2395,202.60000610,1955.50000000,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (650)
CreateDynamicObject(2395,202.59960938,1952.79980469,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (652)
CreateDynamicObject(2395,198.89999390,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (653)
CreateDynamicObject(2395,195.19921875,1952.79980469,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (654)
CreateDynamicObject(2395,191.50000000,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (655)
CreateDynamicObject(2395,187.80000305,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (656)
CreateDynamicObject(2395,184.10000610,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (657)
CreateDynamicObject(2395,180.39999390,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (658)
CreateDynamicObject(2395,176.69921875,1952.79980469,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (659)
CreateDynamicObject(2395,173.00000000,1952.80004883,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (660)
CreateDynamicObject(2395,173.00000000,1950.09997559,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (661)
CreateDynamicObject(2395,176.69921875,1950.09960938,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (662)
CreateDynamicObject(2395,180.39941406,1950.09960938,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (663)
CreateDynamicObject(2395,184.10000610,1950.09997559,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (664)
CreateDynamicObject(2395,187.79980469,1950.09960938,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (665)
CreateDynamicObject(2395,191.50000000,1950.09997559,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (666)
CreateDynamicObject(2395,195.19999695,1950.09997559,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (667)
CreateDynamicObject(2395,198.89941406,1950.09960938,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (668)
CreateDynamicObject(2395,202.60000610,1950.09997559,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (669)
CreateDynamicObject(2395,173.00000000,1947.39941406,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (670)
CreateDynamicObject(2395,176.69999695,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (671)
CreateDynamicObject(2395,180.39999390,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (672)
CreateDynamicObject(2395,184.10000610,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (673)
CreateDynamicObject(2395,187.80000305,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (674)
CreateDynamicObject(2395,191.50000000,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (675)
CreateDynamicObject(2395,195.19999695,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (676)
CreateDynamicObject(2395,198.89999390,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (677)
CreateDynamicObject(2395,202.60000610,1947.40002441,3869.39990234,90.00000000,0.00000000,0.00000000); //object(cj_sports_wall) (678)
CreateDynamicObject(984,203.50000000,1951.19995117,3872.80004883,0.00000000,89.49993896,0.00000000); //object(fenceshit2) (32)
CreateDynamicObject(984,202.19999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (33)
CreateDynamicObject(984,200.89999390,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (34)
CreateDynamicObject(984,199.60000610,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (35)
CreateDynamicObject(984,198.30000305,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (36)
CreateDynamicObject(984,197.00000000,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (37)
CreateDynamicObject(984,195.69999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (38)
CreateDynamicObject(984,194.39999390,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (39)
CreateDynamicObject(984,193.10000610,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (40)
CreateDynamicObject(984,191.80000305,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (41)
CreateDynamicObject(984,190.50000000,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (42)
CreateDynamicObject(984,189.19999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (43)
CreateDynamicObject(984,187.89999390,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (44)
CreateDynamicObject(984,186.60000610,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (45)
CreateDynamicObject(984,185.30000305,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (46)
CreateDynamicObject(984,184.00000000,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (47)
CreateDynamicObject(984,182.69999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (48)
CreateDynamicObject(984,181.39999390,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (49)
CreateDynamicObject(984,180.10000610,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (50)
CreateDynamicObject(984,178.80000305,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (51)
CreateDynamicObject(984,177.50000000,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (52)
CreateDynamicObject(984,176.19999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (53)
CreateDynamicObject(984,174.89999390,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (54)
CreateDynamicObject(984,173.60000610,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (55)
CreateDynamicObject(984,172.30000305,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (56)
CreateDynamicObject(984,171.00000000,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (57)
CreateDynamicObject(984,169.69999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (58)
CreateDynamicObject(984,169.19999695,1951.19995117,3872.80004883,0.00000000,89.49462891,0.00000000); //object(fenceshit2) (59)
CreateDynamicObject(4724,200.00000000,1929.50000000,3868.30004883,0.00000000,0.00000000,90.00000000); //object(librarywall_lan2) (2)
CreateDynamicObject(2639,202.19999695,1929.40002441,3866.89990234,0.00000000,0.00000000,0.00000000); //object(cj_pizza_chair3) (2)
CreateDynamicObject(2639,201.80000305,1932.69995117,3866.89990234,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair3) (6)
CreateDynamicObject(2923,196.19921875,1924.59960938,3866.30004883,0.00000000,0.00000000,90.00000000); //object(bottle_bank) (2)
CreateDynamicObject(2632,177.89999390,1925.09997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(gym_mat02) (4)
CreateDynamicObject(2632,174.00000000,1927.09997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(gym_mat02) (5)
CreateDynamicObject(2631,174.00000000,1925.09997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(gym_mat1) (2)
CreateDynamicObject(2630,170.50000000,1934.69995117,3866.19995117,0.00000000,0.00000000,0.00000000); //object(gym_bike) (1)
CreateDynamicObject(2629,170.00000000,1926.50000000,3866.19995117,0.00000000,0.00000000,90.00000000); //object(gym_bench1) (2)
CreateDynamicObject(2627,173.50000000,1934.40002441,3866.19995117,0.00000000,0.00000000,0.00000000); //object(gym_treadmill) (2)
CreateDynamicObject(2628,169.89999390,1931.40002441,3866.19995117,0.00000000,0.00000000,90.00000000); //object(gym_bench2) (1)
CreateDynamicObject(2528,170.19999695,1955.69995117,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (1)
CreateDynamicObject(2528,179.50000000,1955.69995117,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (2)
CreateDynamicObject(2528,188.19999695,1955.69995117,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (3)
CreateDynamicObject(2528,197.30000305,1955.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (4)
CreateDynamicObject(2528,197.00000000,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (5)
CreateDynamicObject(2528,187.80000305,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (6)
CreateDynamicObject(2528,178.69999695,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (7)
CreateDynamicObject(2528,169.69999695,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_toilet3) (8)
CreateDynamicObject(2524,171.19999695,1955.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (1)
CreateDynamicObject(2524,180.50000000,1955.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (2)
CreateDynamicObject(2524,189.19999695,1955.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (3)
CreateDynamicObject(2524,198.19999695,1955.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (4)
CreateDynamicObject(2524,198.00000000,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (5)
CreateDynamicObject(2524,188.50000000,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (6)
CreateDynamicObject(2524,179.19999695,1955.59997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (7)
CreateDynamicObject(2524,170.30000305,1955.69995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_b_sink4) (8)
CreateDynamicObject(1800,175.19999695,1952.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (1)
CreateDynamicObject(1800,184.00000000,1952.40002441,3869.60009766,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (2)
CreateDynamicObject(1800,193.00000000,1952.40002441,3869.60009766,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (3)
CreateDynamicObject(1800,201.89999390,1952.40002441,3869.60009766,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (4)
CreateDynamicObject(1800,201.60000610,1952.50000000,3866.30004883,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (5)
CreateDynamicObject(1800,192.80000305,1952.50000000,3866.30004883,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (6)
CreateDynamicObject(1800,183.10000610,1952.50000000,3866.30004883,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (7)
CreateDynamicObject(1800,174.19999695,1952.19995117,3866.30004883,0.00000000,0.00000000,0.00000000); //object(low_bed_1) (8)
CreateDynamicObject(1778,169.30000305,1955.59997559,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (1)
CreateDynamicObject(1778,178.50000000,1955.50000000,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (2)
CreateDynamicObject(1778,187.39999390,1955.69995117,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (3)
CreateDynamicObject(1778,196.30000305,1955.50000000,3869.60009766,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (4)
CreateDynamicObject(1778,196.00000000,1955.59997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (5)
CreateDynamicObject(1778,187.00000000,1955.59997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (6)
CreateDynamicObject(1778,178.10000610,1955.50000000,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (7)
CreateDynamicObject(1778,169.19999695,1955.40002441,3866.30004883,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (8)
CreateDynamicObject(2915,175.50000000,1927.50000000,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell2) (1)
CreateDynamicObject(2916,179.30000305,1925.00000000,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell) (1)
CreateDynamicObject(2913,169.50000000,1926.09997559,3867.30004883,271.27441406,348.68408203,348.68408203); //object(kmb_bpress) (1)
CreateDynamicObject(2921,207.00000000,1914.69995117,3874.39990234,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
CreateDynamicObject(2921,207.00000000,1946.59997559,3874.89990234,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (2)
CreateDynamicObject(2921,207.00000000,1931.59997559,3874.80004883,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (3)
CreateDynamicObject(2921,184.00000000,1913.00000000,3874.60009766,0.00000000,0.00000000,261.75000000); //object(kmb_cam) (4)
CreateDynamicObject(2921,162.19999695,1913.00000000,3874.60009766,0.00000000,0.00000000,261.74926758); //object(kmb_cam) (7)
CreateDynamicObject(2921,155.00000000,1931.59997559,3874.60009766,0.00000000,0.00000000,191.74926758); //object(kmb_cam) (8)
CreateDynamicObject(2644,204.30000305,1930.59997559,3866.69995117,0.00000000,0.00000000,0.49987793); //object(cj_burg_table) (19)
CreateDynamicObject(1892,189.30000305,1924.59997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(security_gatsh) (1)
CreateDynamicObject(2639,203.89999390,1932.69995117,3866.89990234,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair3) (8)
CreateDynamicObject(2644,203.39999390,1930.59997559,3866.69995117,0.00000000,0.00000000,0.49987793); //object(cj_burg_table) (25)
CreateDynamicObject(2644,202.50000000,1930.59997559,3866.69995117,0.00000000,0.00000000,0.49987793); //object(cj_burg_table) (26)
CreateDynamicObject(2644,201.60000610,1930.59997559,3866.69995117,0.00000000,0.00000000,0.49987793); //object(cj_burg_table) (27)
CreateDynamicObject(2639,204.30000305,1929.40002441,3866.89990234,0.00000000,0.00000000,0.00000000); //object(cj_pizza_chair3) (9)
CreateDynamicObject(2631,177.89999390,1927.09997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(gym_mat1) (4)
CreateDynamicObject(2915,176.39999390,1925.30004883,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell2) (3)
CreateDynamicObject(2915,176.30000305,1927.40002441,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell2) (4)
CreateDynamicObject(2915,175.50000000,1925.40002441,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell2) (5)
CreateDynamicObject(2916,179.39999390,1927.09997559,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell) (3)
CreateDynamicObject(2916,172.50000000,1927.19995117,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell) (4)
CreateDynamicObject(2916,172.39999390,1925.09997559,3866.50000000,0.00000000,0.00000000,90.00000000); //object(kmb_dumbbell) (5)
CreateDynamicObject(1892,186.89999390,1924.59997559,3866.30004883,0.00000000,0.00000000,0.00000000); //object(security_gatsh) (2)
CreateDynamicObject(1569,189.00000000,1924.09997559,3866.19995117,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (2)
CreateDynamicObject(1569,186.60000610,1924.09997559,3866.19995117,0.00000000,0.00000000,0.00000000); //object(adam_v_door) (3)
CreateDynamicObject(1231,177.10000610,1935.40002441,3869.00000000,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (2)
CreateDynamicObject(1231,183.09960938,1935.50000000,3869.00000000,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (3)
CreateDynamicObject(1231,190.69999695,1935.30004883,3869.00000000,0.00000000,0.00000000,0.00000000); //object(streetlamp2) (4)
CreateDynamicObject(984,172.89999390,1942.00000000,3870.19995117,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (60)
CreateDynamicObject(984,185.69999695,1942.00000000,3870.19995117,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (61)
CreateDynamicObject(984,201.19999695,1942.00000000,3870.19995117,0.00000000,0.00000000,270.00000000); //object(fenceshit2) (62)
CreateDynamicObject(8228,237.80000305,1924.09997559,3868.89990234,0.00000000,0.00000000,270.00000000); //object(vgsbikeschl03) (1)
CreateDynamicObject(8228,136.60000610,1956.30004883,3868.80004883,0.00000000,0.00000000,90.00000000); //object(vgsbikeschl03) (2)
CreateDynamicObject(3095,173.00000000,1951.80004883,3877.00000000,180.00000000,0.00000000,0.00000000); //object(a51_jetdoor) (41)
CreateDynamicObject(8228,237.80000305,1877.19995117,3874.19995117,0.00000000,0.00000000,270.00000000); //object(vgsbikeschl03) (7)
CreateDynamicObject(8228,136.50000000,2003.19995117,3874.30004883,0.00000000,0.00000000,90.00000000); //object(vgsbikeschl03) (8)
CreateDynamicObject(3095,182.00000000,1951.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (45)
CreateDynamicObject(3095,191.00000000,1951.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (46)
CreateDynamicObject(3095,200.00000000,1951.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (47)
CreateDynamicObject(3095,200.00000000,1942.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (48)
CreateDynamicObject(3095,191.00000000,1942.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (49)
CreateDynamicObject(3095,182.00000000,1942.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (50)
CreateDynamicObject(3095,173.00000000,1942.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (51)
CreateDynamicObject(3095,173.00000000,1933.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (52)
CreateDynamicObject(3095,182.00000000,1933.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (53)
CreateDynamicObject(3095,191.00000000,1933.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (54)
CreateDynamicObject(3095,200.00000000,1933.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (55)
CreateDynamicObject(3095,200.00000000,1924.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (56)
CreateDynamicObject(3095,191.00000000,1924.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (57)
CreateDynamicObject(3095,182.00000000,1924.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (58)
CreateDynamicObject(3095,173.00000000,1924.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (59)
CreateDynamicObject(3095,209.00000000,1951.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (60)
CreateDynamicObject(3095,209.00000000,1942.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (61)
CreateDynamicObject(3095,209.00000000,1933.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (62)
CreateDynamicObject(3095,209.00000000,1924.80004883,3877.00000000,179.99450684,0.00000000,0.00000000); //object(a51_jetdoor) (63)
/*CORTE Interior */
CreateDynamicObject(14858, 2182.9599609375, 1303.8388671875, 7703.203125, 0, 0, 0);
CreateDynamicObject(14856, 2136.38281250, 1303.83300781, 7699.94238281, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(2184, 2137.48364258, 1302.44226074, 7698.05468750, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(2606, 2137.33105469, 1303.53515625, 7698.95605469, 339.99938965, 0.00000000, 270.00000000);
CreateDynamicObject(2356, 2135.92944336, 1303.53198242, 7698.05468750, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(2605, 2134.93164062, 1299.84765625, 7698.45312500, 0.00000000, 0.00000000, 179.99450684);
CreateDynamicObject(2356, 2134.73828125, 1300.80957031, 7698.05468750, 0.00000000, 0.00000000, 203.99963379);
CreateDynamicObject(2611, 2134.85522461, 1299.44750977, 7699.56250000, 0.00000000, 0.00000000, 180.00000000);
CreateDynamicObject(2616, 2136.06250000, 1307.31982422, 7699.41748047, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(2616, 2133.79736328, 1303.69055176, 7699.39599609, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(1536, 2166.15429688, 1294.91516113, 7698.05468750, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(1536, 2166.11474609, 1297.93518066, 7698.05468750, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(2765, 2165.64843750, 1295.57873535, 7696.93408203, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(2886, 2166.10888672, 1288.69531250, 7699.41552734, 0.00000000, 0.00000000, 89.50000000);
CreateDynamicObject(2963, 2170.23632812, 1305.09375000, 7699.20263672, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(2184, 2150.10302734, 1301.71557617, 7698.05468750, 0.00000000, 0.00000000, 72.00000000);
CreateDynamicObject(2184, 2152.84960938, 1307.32714844, 7698.05468750, 0.00000000, 0.00000000, 287.74291992);
CreateDynamicObject(2184, 2153.46679688, 1302.81835938, 7698.05468750, 0.00000000, 0.00000000, 252.49658203);
CreateDynamicObject(3657, 2161.14746094, 1307.75622559, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2161.13818359, 1300.44653320, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2161.14233398, 1304.10864258, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2159.19262695, 1304.14074707, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2159.19384766, 1300.47839355, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2159.19287109, 1307.78540039, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2157.28417969, 1304.11010742, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2157.30273438, 1300.48547363, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(3657, 2157.27441406, 1307.75195312, 7698.57275391, 0.00000000, 0.00000000, 270.00000000);
CreateDynamicObject(2614, 2147.71997070, 1304.12817383, 7700.35986328, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(2184, 2150.75781250, 1304.45898438, 7698.05468750, 0.00000000, 0.00000000, 109.24801636);
CreateDynamicObject(1714, 2148.8005371094, 1304.0843505859, 7698.0546875, 0, 0, 90);
CreateDynamicObject(2886, 2137.78662109, 1299.37780762, 7699.28369141, 0.00000000, 0.00000000, 180.00000000);
CreateDynamicObject(2886, 2137.80908203, 1307.41931152, 7699.28955078, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(2886, 2136.08740234, 1316.28686523, 7699.32763672, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(2886, 2136.01269531, 1291.35742188, 7699.35449219, 0.00000000, 0.00000000, 179.99450684);
CreateDynamicObject(1536, 2146.97949219, 1279.44921875, 7698.05468750, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(1536, 2149.98535156, 1279.49414062, 7698.05468750, 0.00000000, 0.00000000, 180.00000000);
CreateDynamicObject(1671, 2154.7143554688, 1300.8967285156, 7698.5151367188, 0, 0, 268.99475097656);
CreateDynamicObject(1671, 2154.9309082031, 1301.7502441406, 7698.5151367188, 0, 0, 243.91735839844);
CreateDynamicObject(1671, 2154.7299804688, 1307.2419433594, 7698.5151367188, 0, 0, 268.9892578125);
CreateDynamicObject(1671, 2154.9128417969, 1306.3682861328, 7698.5151367188, 0, 0, 296.09619140625);
CreateDynamicObject(2605, 2134.18896484, 1305.84082031, 7698.45312500, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(2356, 2135.15966797, 1306.14807129, 7698.05468750, 0.00000000, 0.00000000, 127.99963379);
CreateDynamicObject(1536, 2152.21875000, 1279.45776367, 7698.05468750, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(1536, 2155.23730469, 1279.48999023, 7698.05468750, 0.00000000, 0.00000000, 180.00000000);
CreateDynamicObject(1536, 2157.43969727, 1279.45031738, 7698.05468750, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(1536, 2160.46459961, 1279.48999023, 7698.05468750, 0.00000000, 0.00000000, 180.00000000);
CreateDynamicObject(970, 2155.61596680, 1297.64294434, 7698.60595703, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(970, 2155.62109375, 1301.79992676, 7698.60595703, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(970, 2155.62182617, 1305.95935059, 7698.60595703, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(970, 2155.62524414, 1310.10156250, 7698.60595703, 0.00000000, 0.00000000, 90.00000000);
CreateDynamicObject(638, 2148.77148438, 1311.07031250, 7698.75195312, 0.00000000, 0.00000000, 135.00000000);
CreateDynamicObject(638, 2148.82470703, 1296.67236328, 7698.75195312, 0.00000000, 0.00000000, 226.50000000);
CreateDynamicObject(1360, 2160.54418945, 1311.05700684, 7698.83203125, 0.00000000, 0.00000000, 232.00000000);
CreateDynamicObject(1360, 2160.28271484, 1296.88574219, 7698.83300781, 0.00000000, 0.00000000, 314.00000000);
CreateDynamicObject(1536, 2150.24682617, 1316.41271973, 7698.06250000, 0.00000000, 0.00000000, 180.00000000);
CreateDynamicObject(1536, 2147.24389648, 1316.37048340, 7698.06250000, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(1536, 2158.14160156, 1316.42773438, 7698.06250000, 0.00000000, 0.00000000, 179.99450684);
CreateDynamicObject(1536, 2155.18334961, 1316.38415527, 7698.06250000, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(1536, 2162.18750000, 1316.42309570, 7698.06250000, 0.00000000, 0.00000000, 179.99450684);
CreateDynamicObject(1536, 2159.18627930, 1316.39318848, 7698.06250000, 0.00000000, 0.00000000, 0.00000000);
CreateDynamicObject(1569, 2167.04077148, 1315.22595215, 7698.06250000, 0.00000000, 0.00000000, 134.00000000);
CreateDynamicObject(1569, 2164.95678711, 1317.38098145, 7698.05664062, 0.00000000, 0.00000000, 314.00000000);
CreateDynamicObject(4724, 2173.39648438, 1316.80029297, 7700.08935547, 0.00000000, 0.00000000, 224.00000000);
CreateDynamicObject(4724, 2171.07910156, 1319.17773438, 7700.06298828, 0.00000000, 0.00000000, 223.99475098);
CreateDynamicObject(4724, 2168.77783203, 1321.54064941, 7700.04199219, 0.00000000, 0.00000000, 223.99475098);
CreateDynamicObject(4724, 2167.89819336, 1322.43969727, 7700.04785156, 0.00000000, 0.00000000, 223.99475098);
CreateDynamicObject(1535, 2166.1032714844, 1287.908203125, 7698.0546875, 0, 0, 270);
CreateDynamicObject(1535, 2166.1372070313, 1284.8812255859, 7698.0546875, 0, 0, 90);

courtgates[1] = CreateDynamicObject(971,2138.00292969,1290.96386719,7698.24169922,0.00000000,0.00000000,90.00000000); //object(subwaygate) (1)
courtgates[0] = CreateDynamicObject(971,2138.00000000,1316.72106934,7698.23632812,0.00000000,0.00000000,90.00000000); //object(subwaygate) (2)
courtbuttons[0] = CreateButton(2137.78662109,1299.37780762,7699.28369141,180.00000000); //object(sec_keypad) (3)
courtbuttons[1] = CreateButton(2137.80908203,1307.41931152,7699.28955078,0.00000000); //object(sec_keypad) (4)
courtbuttons[2] = CreateButton(2136.08740234,1316.28686523,7699.32763672,0.00000000); //object(sec_keypad) (5)
courtbuttons[3] = CreateButton(2136.01269531,1291.35742188,7699.35449219,179.99450684); //object(sec_keypad) (6)

CreateDynamicObject(8674,1386.46386719,-1703.98828125,15.15055943,0.00000000,0.00000000,90.00000000); //object(csrsfence02_lvs) (1)
CreateDynamicObject(8674,1386.46191406,-1703.98828125,12.24967861,0.00000000,0.00000000,90.00000000); //object(csrsfence02_lvs) (2)
CreateDynamicObject(5066,1388.90405273,-1679.49853516,14.12778282,0.00000000,0.00000000,90.00000000); //object(mondoshave_las) (1)
CreateDynamicObject(5066,1388.90332031,-1679.49804688,15.88138199,0.00000000,0.00000000,90.00000000); //object(mondoshave_las) (2)
CreateDynamicObject(971,1389.12402344,-1679.52185059,12.97999668,0.00000000,0.00000000,179.99450684); //object(subwaygate) (open)
//Rejas transfender LV
CreateDynamicObject(980,2385.96093750,1043.56250000,12.59370422,0.00000000,0.00000000,0.00000000); //object(airportgate) (1)
CreateDynamicObject(980,1968.78955078,2162.33325195,12.59370422,0.00000000,0.00000000,270.00000000); //object(airportgate) (2)
CreateDynamicObject(980,-1421.79968262,2590.89697266,56.80568314,0.00000000,0.00000000,0.00000000); //object(airportgate) (3)
CreateDynamicObject(980,-1935.38757324,239.34281921,36.12965393,0.00000000,0.00000000,0.00000000); //object(airportgate) (4)
CreateDynamicObject(980,-2425.79125977,1028.10961914,52.17105103,0.00000000,0.00000000,0.00000000); //object(airportgate) (5)
CreateDynamicObject(971,-99.74066925,1111.51843262,20.36210823,0.00000000,0.00000000,0.00000000); //object(subwaygate) (1)

/* PUERTO EXT*/
CreateDynamicObject(11469,2947.10009766,-1471.19995117,9.69999981,0.00000000,0.00000000,171.24389648); //object(des_bullgrill_) (1)
CreateDynamicObject(1536,2941.80004883,-1479.30004883,9.80000019,0.00000000,0.00000000,313.25000000); //object(gen_doorext15) (1)
CreateDynamicObject(970,2936.69921875,-1465.29980469,10.39999962,0.00000000,0.00000000,83.24890137); //object(fencesmallb) (4)
CreateDynamicObject(970,2936.19921875,-1469.39941406,10.39999962,0.00000000,0.00000000,82.74353027); //object(fencesmallb) (5)
CreateDynamicObject(970,2935.69995117,-1473.50000000,10.39999962,0.00000000,0.00000000,83.24353027); //object(fencesmallb) (6)
CreateDynamicObject(970,2935.19995117,-1477.59997559,10.39999962,0.00000000,0.00000000,82.99340820); //object(fencesmallb) (7)
CreateDynamicObject(970,2934.69995117,-1481.69995117,10.39999962,0.00000000,0.00000000,82.99072266); //object(fencesmallb) (8)
CreateDynamicObject(970,2934.19921875,-1485.79980469,10.39999962,0.00000000,0.00000000,82.99072266); //object(fencesmallb) (9)
CreateDynamicObject(970,2937.39990234,-1459.40002441,10.39999962,0.00000000,0.00000000,83.24890137); //object(fencesmallb) (11)
CreateDynamicObject(970,2938.10009766,-1453.50000000,10.39999962,0.00000000,0.00000000,83.24890137); //object(fencesmallb) (12)
CreateDynamicObject(970,2938.60009766,-1449.40002441,10.39999962,0.00000000,0.00000000,82.74890137); //object(fencesmallb) (13)
CreateDynamicObject(970,2938.89990234,-1445.30004883,10.39999962,0.00000000,0.00000000,88.99353027); //object(fencesmallb) (14)
CreateDynamicObject(970,2938.80004883,-1441.19995117,10.39999962,0.00000000,0.00000000,93.73999023); //object(fencesmallb) (15)
CreateDynamicObject(970,2938.50000000,-1437.09997559,10.39999962,0.00000000,0.00000000,94.73535156); //object(fencesmallb) (16)
CreateDynamicObject(970,2931.19995117,-1464.40002441,10.39999962,0.00000000,0.00000000,84.99890137); //object(fencesmallb) (17)
CreateDynamicObject(970,2932.00000000,-1452.69995117,10.39999962,0.00000000,0.00000000,85.49572754); //object(fencesmallb) (19)
CreateDynamicObject(970,2932.30004883,-1448.59997559,10.39999962,0.00000000,0.00000000,86.24560547); //object(fencesmallb) (20)
CreateDynamicObject(970,2930.89990234,-1468.50000000,10.39999962,0.00000000,0.00000000,86.74572754); //object(fencesmallb) (21)
CreateDynamicObject(970,2952.60009766,-1457.40002441,10.39999962,0.00000000,0.00000000,173.24890137); //object(fencesmallb) (25)
CreateDynamicObject(970,2948.50000000,-1456.90002441,10.39999962,0.00000000,0.00000000,172.99890137); //object(fencesmallb) (26)
CreateDynamicObject(970,2952.29980469,-1460.59960938,10.39999962,0.00000000,0.00000000,173.24890137); //object(fencesmallb) (30)
CreateDynamicObject(970,2948.19921875,-1460.09960938,10.39999962,0.00000000,0.00000000,172.99072266); //object(fencesmallb) (31)
CreateDynamicObject(1215,2937.89990234,-1455.69995117,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,2937.89941406,-1455.69921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(1215,2937.69995117,-1457.22998047,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,2937.69921875,-1457.22949219,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
CreateDynamicObject(1215,2937.19995117,-1461.59997559,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
CreateDynamicObject(1215,2937.19921875,-1461.59960938,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
CreateDynamicObject(1215,2937.00000000,-1463.19995117,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
CreateDynamicObject(1215,2937.00000000,-1463.19921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
CreateDynamicObject(1215,2931.89990234,-1454.90002441,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
CreateDynamicObject(1215,2931.89941406,-1454.89941406,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
CreateDynamicObject(1215,2932.50000000,-1446.50000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
CreateDynamicObject(1215,2932.50000000,-1446.50000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
CreateDynamicObject(1215,2931.39990234,-1462.19995117,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
CreateDynamicObject(1215,2931.39941406,-1462.19921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
CreateDynamicObject(1215,2930.79980469,-1470.69921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(1215,2930.79980469,-1470.69921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2946.30004883,-1456.69995117,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (17)
CreateDynamicObject(1215,2946.29980469,-1456.69921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (18)
CreateDynamicObject(1215,2946.00000000,-1459.80004883,10.39999962,0.00000000,0.00000000,284.00000000); //object(bollardlight) (19)
CreateDynamicObject(1215,2946.00000000,-1459.79980469,10.39999962,0.00000000,0.00000000,283.99658203); //object(bollardlight) (20)
CreateDynamicObject(1215,2959.69995117,-1458.40002441,10.39999962,0.00000000,0.00000000,283.99658203); //object(bollardlight) (21)
CreateDynamicObject(1215,2959.69921875,-1458.39941406,10.39999962,0.00000000,0.00000000,283.99658203); //object(bollardlight) (22)
CreateDynamicObject(3498,2939.30004883,-1481.80004883,13.00000000,0.00000000,0.00000000,0.00000000); //object(wdpillar01_lvs) (5)
CreateDynamicObject(1608,2941.30004883,-1480.90002441,18.39999962,346.07824707,353.81774902,115.25708008); //object(shark) (2)
CreateDynamicObject(1215,2938.30004883,-1435.00000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(1215,2938.29980469,-1435.00000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
CreateDynamicObject(11469,2947.09960938,-1471.19921875,9.69999981,0.00000000,0.00000000,171.24389648); //object(des_bullgrill_) (1)
CreateDynamicObject(1536,2941.80004883,-1479.30004883,9.80000019,0.00000000,0.00000000,313.25000000); //object(gen_doorext15) (1)
CreateDynamicObject(1215,2959.69995117,-1458.40002441,10.39999962,0.00000000,0.00000000,283.99658203); //object(bollardlight) (21)
CreateDynamicObject(1215,2959.69921875,-1458.39941406,10.39999962,0.00000000,0.00000000,283.99658203); //object(bollardlight) (22)
CreateDynamicObject(3498,2939.29980469,-1481.79980469,13.00000000,0.00000000,0.00000000,0.00000000); //object(wdpillar01_lvs) (5)
CreateDynamicObject(1608,2941.30004883,-1480.90002441,18.39999962,346.07824707,353.81774902,115.25708008); //object(shark) (2)
CreateDynamicObject(11496,2953.80004883,-1497.40002441,1.32499850,0.00000000,0.00000000,168.50000000); //object(des_wjetty) (5)
CreateDynamicObject(11496,2950.59960938,-1513.00000000,1.32499850,0.00000000,0.00000000,168.49182129); //object(des_wjetty) (6)
CreateDynamicObject(11496,2947.39941406,-1528.69921875,1.32499850,0.00000000,0.00000000,168.49182129); //object(des_wjetty) (9)
CreateDynamicObject(11496,2964.77050781,-1496.06738281,1.32499850,0.00000000,0.00000000,78.49182129); //object(des_wjetty) (15)
CreateDynamicObject(11496,2980.43676758,-1499.24768066,1.32499850,0.00000000,0.00000000,78.49182129); //object(des_wjetty) (17)
CreateDynamicObject(11496,2960.48999023,-1516.37915039,1.32499850,0.00000000,0.00000000,78.49182129); //object(des_wjetty) (19)
CreateDynamicObject(11496,2954.47045898,-1546.34277344,1.32499850,0.00000000,0.00000000,258.48632812); //object(des_wjetty) (20)
CreateDynamicObject(11496,2970.16992188,-1549.56774902,1.32499850,0.00000000,0.00000000,258.48632812); //object(des_wjetty) (21)
CreateDynamicObject(11496,2976.14184570,-1519.58203125,1.32499850,0.00000000,0.00000000,78.49182129); //object(des_wjetty) (22)
CreateDynamicObject(11496,2944.19921875,-1544.29980469,1.32499850,0.00000000,0.00000000,168.49182129); //object(des_wjetty) (23)
CreateDynamicObject(11496,2941.00000000,-1559.89941406,1.32499850,0.00000000,0.00000000,168.49182129); //object(des_wjetty) (24)
CreateDynamicObject(11496,2950.44189453,-1565.37231445,1.32499850,0.00000000,0.00000000,258.48632812); //object(des_wjetty) (25)
CreateDynamicObject(11496,2966.12841797,-1568.59399414,1.32499850,0.00000000,0.00000000,258.48632812); //object(des_wjetty) (26)
CreateDynamicObject(11472,2957.82348633,-1491.05810547,-1.52338648,0.00000000,0.00000000,258.25000000); //object(des_swtstairs1) (1)
CreateDynamicObject(11472,2959.31787109,-1491.36083984,-1.52338648,0.00000000,0.00000000,258.24462891); //object(des_swtstairs1) (2)
CreateDynamicObject(11472,2960.84570312,-1491.65820312,-1.52338648,0.00000000,0.00000000,258.23913574); //object(des_swtstairs1) (3)
CreateDynamicObject(11472,2962.35644531,-1491.98046875,-1.52338648,0.00000000,0.00000000,258.23913574); //object(des_swtstairs1) (4)
CreateDynamicObject(646,2942.56494141,-1481.36132812,11.07836914,0.00000000,0.00000000,270.00000000); //object(veg_palmkb14) (1)
CreateDynamicObject(646,2940.80004883,-1479.30004883,11.10000038,0.00000000,0.00000000,269.98901367); //object(veg_palmkb14) (2)
CreateDynamicObject(640,2942.96093750,-1463.12011719,10.59451962,0.00000000,0.00000000,170.49682617); //object(kb_planter_bush2) (1)
CreateDynamicObject(640,2942.08764648,-1468.32568359,10.59451962,0.00000000,0.00000000,170.49682617); //object(kb_planter_bush2) (2)
CreateDynamicObject(640,2941.19335938,-1473.54858398,10.59451962,0.00000000,0.00000000,170.49682617); //object(kb_planter_bush2) (3)
CreateDynamicObject(640,2940.86621094,-1475.62207031,10.59451962,0.00000000,0.00000000,170.49682617); //object(kb_planter_bush2) (4)
CreateDynamicObject(3499,2934.10009766,-1492.24902344,9.60000038,0.00000000,270.00000000,348.74853516); //object(wdpillar02_lvs) (2)
CreateDynamicObject(3499,2941.19995117,-1499.69995117,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (3)
CreateDynamicObject(3499,2940.00000000,-1505.69995117,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (4)
CreateDynamicObject(3499,2938.89990234,-1511.30004883,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (5)
CreateDynamicObject(3499,2937.80004883,-1517.00000000,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (6)
CreateDynamicObject(3499,2936.69995117,-1522.90002441,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (7)
CreateDynamicObject(3499,2935.60009766,-1528.59997559,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (8)
CreateDynamicObject(8661,2934.89990234,-1512.50000000,10.10000038,0.00000000,0.00000000,78.75000000); //object(gnhtelgrnd_lvs) (1)
CreateDynamicObject(3499,2934.60009766,-1532.59997559,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (12)
CreateDynamicObject(3499,2926.39990234,-1530.96594238,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (13)
CreateDynamicObject(3499,2942.39941406,-1493.89941406,9.60000038,0.00000000,270.00000000,348.74450684); //object(wdpillar02_lvs) (14)
CreateDynamicObject(970,2945.69995117,-1494.40002441,10.39999962,0.00000000,0.00000000,168.72998047); //object(fencesmallb) (9)
CreateDynamicObject(970,2941.69995117,-1493.59997559,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2933.69995117,-1492.00000000,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2930.84399414,-1491.43005371,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2937.89990234,-1533.30004883,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2933.89990234,-1532.50000000,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2929.89990234,-1531.69995117,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2925.89990234,-1530.90002441,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2923.19995117,-1530.36999512,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2933.69995117,-1489.90002441,10.39999962,0.00000000,0.00000000,82.99072266); //object(fencesmallb) (9)
CreateDynamicObject(1215,2935.80004883,-1492.40002441,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2935.79980469,-1492.39941406,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2939.50000000,-1493.19995117,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2939.50000000,-1493.19921875,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2928.69995117,-1491.00000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2928.69921875,-1491.00000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2921.00000000,-1530.00000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2921.00000000,-1530.00000000,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(640,2945.10009766,-1493.80004883,10.60000038,0.00000000,0.00000000,258.49682617); //object(kb_planter_bush2) (4)
CreateDynamicObject(640,2942.19995117,-1493.19995117,10.60000038,0.00000000,0.00000000,258.49182129); //object(kb_planter_bush2) (4)
CreateDynamicObject(970,2945.89990234,-1493.50000000,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(970,2941.89990234,-1492.69995117,10.39999962,0.00000000,0.00000000,168.72802734); //object(fencesmallb) (9)
CreateDynamicObject(1215,2939.69995117,-1492.30004883,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
CreateDynamicObject(1215,2939.69921875,-1492.29980469,10.39999962,0.00000000,0.00000000,0.00000000); //object(bollardlight) (16)
// Iglesia
CreateDynamicObject(9931,1486.55859375,837.69335938,-53.95624542,0.00000000,0.00000000,180.99975586); //object(church_sfe) (2)
CreateDynamicObject(9931,1485.95117188,870.78906250,-53.95635223,0.00000000,0.00000000,180.99975586); //object(church_sfe) (3)
CreateDynamicObject(3976,1489.52539062,835.36523438,-53.31316376,0.00000000,0.00000000,90.98876953); //object(policest02_lan) (1)
CreateDynamicObject(3976,1448.45214844,854.00976562,-49.58849335,0.00000000,0.00000000,180.24719238); //object(policest02_lan) (2)
CreateDynamicObject(11472,1492.43750000,854.27636719,-70.11368561,0.00000000,268.49768066,0.99975586); //object(des_swtstairs1) (2)
CreateDynamicObject(11472,1489.43359375,854.22167969,-70.18869019,0.00000000,268.24768066,0.99975586); //object(des_swtstairs1) (3)
CreateDynamicObject(6959,1480.74401855,851.49420166,-54.48571777,0.00000000,0.00000000,0.00000000); //object(vegasnbball1) (1)
CreateDynamicObject(2960,1491.72595215,854.18212891,-64.32915497,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (2)
CreateDynamicObject(2960,1491.72863770,854.18023682,-65.28768158,0.02041626,270.74963379,1.99993896); //object(kmb_beam) (3)
CreateDynamicObject(2960,1491.70715332,854.12542725,-63.57369995,88.52954102,210.79498291,60.94931030); //object(kmb_beam) (4)
CreateDynamicObject(1698,1486.35900879,853.74407959,-70.09292603,0.00000000,0.00000000,0.25000000); //object(esc_step8) (1)
CreateDynamicObject(1698,1486.70971680,853.75299072,-69.92232513,0.00000000,0.00000000,0.25000000); //object(esc_step8) (2)
CreateDynamicObject(2946,1464.31726074,852.26568604,-70.05713654,0.00000000,0.00000000,359.75000000); //object(cr_door_03) (1)
CreateDynamicObject(2946,1464.34863281,855.48071289,-70.06368256,0.00000000,0.00000000,179.75000000); //object(cr_door_03) (2)
CreateDynamicObject(3872,1494.89172363,854.16369629,-60.79240799,0.00000000,145.24475098,0.00000000); //object(ws_floodbeams) (1)
CreateDynamicObject(3657,1478.32458496,857.01525879,-69.59547424,0.00000000,0.00000000,88.75000000); //object(airseata_las) (1)
CreateDynamicObject(3657,1476.19604492,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (2)
CreateDynamicObject(3657,1473.94482422,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (3)
CreateDynamicObject(3657,1471.98486328,857.01525879,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (4)
CreateDynamicObject(3657,1471.85913086,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (5)
CreateDynamicObject(3657,1473.80468750,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (6)
CreateDynamicObject(3657,1475.80883789,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (7)
CreateDynamicObject(3657,1478.21154785,850.52825928,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (8)
CreateDynamicObject(3439,1491.20922852,861.81793213,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (1)
CreateDynamicObject(3439,1491.57543945,846.41058350,-66.00033569,0.00000000,0.00000000,0.00000000); //object(aprtree01_lvs) (2)
CreateDynamicObject(3462,1489.42199707,850.11035156,-67.92717743,0.00000000,0.00000000,0.25000000); //object(csrangel_lvs) (1)
CreateDynamicObject(3462,1489.32116699,857.82922363,-67.92613983,0.00000000,0.00000000,1.00000000); //object(csrangel_lvs) (2)
CreateDynamicObject(2868,1488.90454102,854.85382080,-68.58234406,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
CreateDynamicObject(2868,1488.88110352,852.93615723,-68.55734253,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (2)
CreateDynamicObject(2207,1488.21228027,854.76940918,-69.36368561,0.00000000,0.00000000,269.75000000); //object(med_office7_desk_1) (1)
CreateDynamicObject(2894,1488.26757812,853.82714844,-68.58631134,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook) (2)
CreateDynamicObject(2842,1484.55505371,853.26849365,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (1)
CreateDynamicObject(2842,1482.72216797,853.27215576,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (2)
CreateDynamicObject(2842,1480.89453125,853.28710938,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (3)
CreateDynamicObject(2842,1479.06896973,853.28985596,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (4)
CreateDynamicObject(2842,1477.25146484,853.28991699,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (5)
CreateDynamicObject(2842,1475.41406250,853.28125000,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (6)
CreateDynamicObject(2842,1473.60546875,853.27435303,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (7)
CreateDynamicObject(2842,1471.76989746,853.27740479,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (8)
CreateDynamicObject(2842,1469.94689941,853.26287842,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (9)
CreateDynamicObject(2842,1468.12060547,853.26165771,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (10)
CreateDynamicObject(2842,1466.29992676,853.25488281,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (11)
CreateDynamicObject(2842,1464.47155762,853.24865723,-70.13219452,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (12)
CreateDynamicObject(1720,1491.69433594,852.16210938,-69.39298248,0.00000000,0.00000000,269.24743652); //object(rest_chair) (1)
CreateDynamicObject(1720,1491.70898438,851.42382812,-69.39285278,0.00000000,0.00000000,268.74462891); //object(rest_chair) (2)
CreateDynamicObject(948,1556.50170898,907.01184082,-83.20445251,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
CreateDynamicObject(948,1486.81567383,858.92468262,-69.51581573,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (2)
CreateDynamicObject(948,1486.97290039,848.90582275,-69.51637268,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (3)
CreateDynamicObject(949,1472.10925293,861.92718506,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
CreateDynamicObject(949,1478.15686035,861.93243408,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
CreateDynamicObject(949,1477.97363281,846.08349609,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (3)
CreateDynamicObject(949,1471.76525879,845.77685547,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (4)
CreateDynamicObject(949,1467.48242188,856.13964844,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (5)
CreateDynamicObject(949,1467.33996582,851.61102295,-69.47740173,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (6)
CreateDynamicObject(2842,1486.79052734,853.30078125,-69.51958466,0.00000000,0.00000000,0.00000000); //object(gb_bedrug04) (13)
CreateDynamicObject(2842,1487.91479492,853.29595947,-69.48745728,0.00000000,356.00000000,0.00000000); //object(gb_bedrug04) (14)
CreateDynamicObject(3440,1468.04956055,846.46435547,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (1)
CreateDynamicObject(3440,1468.30798340,861.13378906,-67.73719025,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (2)
CreateDynamicObject(1215,1468.03002930,846.44238281,-65.06007385,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
CreateDynamicObject(1215,1468.33190918,861.07635498,-65.01007080,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
CreateDynamicObject(3657,1481.19042969,857.01464844,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (10)
CreateDynamicObject(3657,1481.05957031,850.52734375,-69.59547424,0.00000000,0.00000000,88.74755859); //object(airseata_las) (11)
CreateDynamicObject(970,1488.38928223,860.21148682,-68.91707611,0.00000000,0.00000000,0.25000000); //object(fencesmallb) (1)
CreateDynamicObject(970,1488.60888672,847.72064209,-68.99224854,0.00000000,0.00000000,1.74682617); //object(fencesmallb) (2)
CreateDynamicObject(970,1486.54992676,849.75415039,-68.98716736,0.00000000,0.00000000,270.99682617); //object(fencesmallb) (3)
CreateDynamicObject(970,1486.34521484,858.05175781,-68.97917175,0.00000000,0.00000000,270.99426270); //object(fencesmallb) (4)
CreateDynamicObject(1215,1491.28063965,859.75567627,-68.83144379,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
CreateDynamicObject(1215,1491.49182129,848.65087891,-68.83090973,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)

//mapatemp Picasso fam
CreateDynamicObject(1472,2469.1999500,-1672.0200200,15308.0000000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2256,2455.0100100,-1673.0600600,15310.2099600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2568,2473.5800800,-1673.0100100,15307.5000000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2071,2469.8000500,-1677.4200400,15309.0898400,0.0000000,0.0000000,120.0000000); //
CreateDynamicObject(14535,2473.9599600,-1658.8900100,15309.9296900,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(1775,2484.7600100,-1659.0000000,15309.0195300,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2265,2499.0400400,-1668.1300000,15308.8203100,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2264,2499.0100100,-1666.4699700,15308.9101600,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2265,2499.0400400,-1667.4300500,15309.1201200,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2266,2474.1899400,-1655.1099900,15309.0595700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2829,2475.4199200,-1655.1600300,15308.8300800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2867,2476.3300800,-1657.0500500,15308.8300800,0.0000000,0.0000000,27.1600000); //
CreateDynamicObject(2427,2471.1298800,-1656.6700400,15308.8300800,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1543,2471.2900400,-1657.3000500,15308.8300800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1544,2471.3999000,-1657.6099900,15308.8300800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1544,2471.5800800,-1657.4499500,15308.8300800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2236,2489.2600100,-1663.5300300,15306.9003900,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2852,2488.6499000,-1664.1200000,15307.4404300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1544,2488.2299800,-1663.9200400,15307.4404300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1543,2488.9699700,-1664.1899400,15307.4404300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1543,2489.1101100,-1663.9100300,15307.4404300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2674,2488.3898900,-1666.3399700,15306.9599600,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2670,2472.5200200,-1675.0300300,15307.6699200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2270,2481.2500000,-1658.7800300,15309.7304700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2271,2479.3501000,-1658.7800300,15309.4902300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2271,2483.1201200,-1658.7800300,15309.4902300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2568,2479.6499000,-1658.8000500,15307.9003900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2681,2484.2299800,-1670.6999500,15306.9502000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2779,2484.2399900,-1671.6999500,15306.9599600,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(346,2473.3999000,-1673.8700000,15308.1796900,277.0000000,0.0000000,270.0000000); //
CreateDynamicObject(14409,2482.8798800,-1677.4899900,15303.7597700,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(3850,2480.3000500,-1661.4699700,15308.4599600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,2469.1699200,-1677.9599600,15309.0097700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(3850,2469.1699200,-1674.4599600,15309.0097700,0.0000000,0.0000000,360.0000000); //
CreateDynamicObject(3850,2483.8100600,-1661.4699700,15308.4599600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,2487.2900400,-1661.4699700,15308.4599600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,2490.7900400,-1661.4699700,15308.4599600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2357,2464.6101100,-1674.6700400,15308.7197300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(14651,2492.3100600,-1665.5000000,15309.0703100,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1846,2488.7099600,-1668.7800300,15309.1103500,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2230,2486.8000500,-1670.1999500,15308.7304700,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2230,2490.0100100,-1670.1999500,15308.7304700,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2046,2471.7399900,-1677.8499800,15308.9697300,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(16151,2498.3898900,-1665.1200000,15307.2197300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19379,2468.8501000,-1675.3000500,15307.5000000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19379,2463.9399400,-1675.4599600,15308.4502000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19379,2469.1101100,-1673.8199500,15303.2802700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19390,2472.5600600,-1670.6600300,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19379,2469.2900400,-1670.6800500,15302.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1502,2471.7800300,-1670.6999500,15307.9199200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19379,2484.2399900,-1685.0899700,15301.4697300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19377,2481.1599100,-1685.0999800,15306.7402300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,2484.8400900,-1685.0999800,15306.7402300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,2482.4699700,-1689.9899900,15302.2998000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19377,2482.1499000,-1691.1800500,15305.4697300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19377,2484.9499500,-1682.7099600,15309.1503900,0.0000000,45.0000000,90.0000000); //
CreateDynamicObject(1557,2482.1101100,-1689.9699700,15301.4697300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2471.0500500,-1666.4399400,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2471.0500500,-1656.8100600,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2472.3300800,-1654.5300300,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2476.8898900,-1653.4699700,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2474.1799300,-1674.3599900,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2466.3200700,-1671.1700400,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2469.3100600,-1678.0799600,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2481.6201200,-1658.1999500,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2485.2600100,-1654.9799800,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,2481.1599100,-1675.0300300,15306.7402300,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19377,2484.8400900,-1675.0400400,15306.7402300,90.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19361,2479.6101100,-1669.8700000,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19361,2479.6101100,-1669.8700000,15306.1904300,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2477.9399400,-1674.5999800,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2489.5700700,-1669.8599900,15308.7002000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2490.0200200,-1659.7099600,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,2480.6999500,-1665.7199700,15301.9902300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19378,2478.5400400,-1665.7199700,15302.6699200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19378,2474.4499500,-1664.9799800,15307.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2479.6298800,-1665.7199700,15302.3496100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19378,2475.5400400,-1664.9799800,15307.1904300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2483.3898900,-1661.3800000,15302.6601600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,2493.0200200,-1661.3800000,15302.6601600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,2502.6499000,-1661.3800000,15302.6601600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2499.1899400,-1669.8599900,15308.7002000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2499.6499000,-1659.7099600,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2499.6201200,-1666.2800300,15308.7002000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2459.6799300,-1678.0799600,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2456.6899400,-1671.1700400,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19379,2453.4399400,-1675.4599600,15308.4502000,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19407,2454.9099100,-1676.3900100,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2454.9099100,-1669.9699700,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19379,2474.1799300,-1674.9399400,15302.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19379,2469.3200700,-1678.0799600,15302.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19379,2471.0500500,-1666.4399400,15302.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19379,2466.3200700,-1671.1700400,15302.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,2473.3798800,-1656.0899700,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2485.4799800,-1670.8499800,15306.8603500,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2483.8798800,-1656.6500200,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2494.3701200,-1656.6500200,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2482.9299300,-1661.2199700,15306.8603500,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2493.4299300,-1661.2199700,15306.8603500,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2495.9699700,-1670.8499800,15306.8603500,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2503.9199200,-1661.2199700,15306.8603500,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19434,2499.6201200,-1660.6600300,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19434,2499.6201200,-1659.0699500,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19366,2475.8999000,-1672.1400100,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19366,2479.3999000,-1672.1400100,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19366,2475.8999000,-1675.3599900,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19366,2479.3999000,-1675.3599900,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19366,2475.8999000,-1678.5699500,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19366,2479.3999000,-1678.5699500,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19366,2475.8999000,-1681.7700200,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(3850,2494.2900400,-1661.4699700,15308.4599600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(3850,2497.7800300,-1661.4699700,15308.4599600,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19366,2479.3999000,-1681.7700200,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19453,2477.9399400,-1684.2199700,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19434,2474.1799300,-1679.9699700,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2469.4499500,-1680.8599900,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2469.3999000,-1683.4200400,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(14409,2470.6899400,-1681.3599900,15304.7500000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19447,2469.0200200,-1682.2099600,15309.8798800,155.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19447,2468.0100100,-1682.0699500,15304.4599600,0.0000000,90.0000000,90.0000000); //
CreateDynamicObject(19447,2468.0100100,-1680.8599900,15306.1796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19447,2468.0100100,-1683.4200400,15306.1796900,0.0000000,0.0000000,89.0000000); //
CreateDynamicObject(19380,2494.0100100,-1666.2900400,15310.4199200,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2485.0600600,-1675.9200400,15310.4199200,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2483.5100100,-1666.2900400,15310.4199200,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2469.0000000,-1675.3700000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2458.5100100,-1675.3700000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2479.5000000,-1675.3700000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2474.0200200,-1685.0000000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2473.1999500,-1665.7299800,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2473.1999500,-1656.0999800,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2483.6999500,-1656.7500000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2494.1999500,-1656.7500000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2504.6999500,-1656.7500000,15311.5195300,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2504.5100100,-1666.2900400,15310.4199200,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19380,2478.3501000,-1666.2900400,15315.7597700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19380,2483.2500000,-1661.5600600,15315.7597700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19380,2492.8798800,-1661.5600600,15315.7597700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19380,2502.5100100,-1661.5600600,15315.7597700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1761,2487.6799300,-1662.3299600,15306.9502000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2241,2473.6899400,-1669.9399400,15308.4404300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2011,2498.9099100,-1660.6899400,15307.9296900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2833,2482.4399400,-1689.5600600,15301.5595700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2240,2484.2900400,-1689.5400400,15302.1201200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1714,2462.9099100,-1673.0300300,15308.5400400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1714,2464.4899900,-1673.0300300,15308.5400400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1714,2466.2800300,-1673.0300300,15308.5400400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2207,2458.8400900,-1675.2600100,15308.5400400,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1714,2456.6999500,-1674.2600100,15308.5400400,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1667,2458.6201200,-1674.2800300,15309.4003900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1210,2458.1499000,-1675.1600300,15309.4101600,90.0000000,0.0000000,270.0000000); //
CreateDynamicObject(3017,2463.4599600,-1674.2700200,15309.1396500,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(19171,2464.9199200,-1677.9799800,15310.5302700,90.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2190,2458.4099100,-1673.6099900,15309.3095700,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(1670,2458.4699700,-1674.8299600,15309.3300800,0.0000000,0.0000000,91.6000000); //
CreateDynamicObject(18001,2454.8999000,-1675.3399700,15309.8203100,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,2457.9399400,-1681.5100100,15304.4599600,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19378,2473.3798800,-1665.7199700,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19453,2463.1298800,-1688.4300500,15306.2802700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2460.0400400,-1684.2399900,15306.2802700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2450.4399400,-1684.2399900,15306.2802700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2452.7800300,-1679.8499800,15306.2802700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2463.1298800,-1675.5799600,15306.2802700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19380,2459.4399400,-1679.6300000,15307.8603500,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19453,2458.4199200,-1676.7900400,15306.2802700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19453,2448.8100600,-1676.7900400,15306.2802700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19380,2448.9399400,-1679.6300000,15307.8496100,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(19390,2463.1298800,-1682.0000000,15306.2802700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1502,2463.1398900,-1682.7500000,15304.5302700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2566,2455.3000500,-1679.3800000,15305.1201200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2091,2457.4499500,-1683.9599600,15304.5498000,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2845,2453.7600100,-1678.9000200,15304.5498000,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19173,2456.8300800,-1676.8900100,15306.7597700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2264,2462.5500500,-1678.0400400,15306.4697300,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2010,2462.5500500,-1683.5999800,15304.5400400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(11665,2461.4299300,-1679.0100100,15305.2402300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2628,2453.6101100,-1681.8800000,15304.5498000,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1828,2456.7299800,-1681.1099900,15304.5302700,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1736,2456.7700200,-1683.8599900,15307.2304700,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2251,2477.4899900,-1683.0899700,15308.7695300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1808,2474.4799800,-1671.0400400,15307.9296900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19378,2475.1499000,-1688.1899400,15307.8398400,0.0000000,90.0000000,0.0000000); //
CreateDynamicObject(1520,2471.5000000,-1677.9499500,15308.7402300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2474.1298800,-1688.3199500,15309.6796900,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19453,2474.6398900,-1689.0000000,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19390,2475.8200700,-1683.4200400,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19434,2478.2199700,-1683.4200400,15309.6796900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1491,2475.0400400,-1683.4200400,15307.9199200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2528,2474.7199700,-1685.8900100,15307.9296900,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1734,2482.8501000,-1668.5699500,15310.3203100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2527,2474.8300800,-1687.4699700,15307.9199200,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(2069,2453.4199200,-1683.6700400,15304.6298800,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2136,2477.3601100,-1683.9799800,15307.9296900,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2137,2477.3601100,-1685.9699700,15307.9296900,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2238,2486.7299800,-1662.3299600,15307.3496100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2238,2490.6398900,-1662.3299600,15307.3496100,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2238,2471.3501000,-1670.4000200,15308.3398400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2272,2473.5900900,-1674.6099900,15309.7500000,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(2281,2487.3999000,-1660.2900400,15309.9199200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19317,2477.8400900,-1675.0799600,15310.6103500,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(14455,2474.3999000,-1675.9300500,15309.5898400,0.0000000,0.0000000,270.0000000); //
CreateDynamicObject(14487,2487.1999500,-1665.9599600,15310.2197300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1455,2473.4399400,-1674.6800500,15308.4199200,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(2286,2471.1699200,-1665.3599900,15310.5097700,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(2866,2474.0900900,-1661.9399400,15308.7197300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(7940,2441.8300800,-1686.5999800,15311.4101600,0.0000000,0.0000000,89.0000000); //
CreateDynamicObject(3765,2445.2399900,-1668.0999800,15306.4697300,0.0000000,0.0000000,331.0100100); //
CreateDynamicObject(2690,2479.2800300,-1658.5999800,15308.2900400,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(19174,2488.7099600,-1669.7600100,15309.1298800,0.0000000,0.0000000,180.0000000); //
CreateDynamicObject(3590,2459.6799300,-1684.7099600,15310.9404300,0.0000000,0.0000000,0.0000000); //
CreateDynamicObject(1962,2477.8501000,-1672.5500500,15310.6103500,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(1961,2477.8501000,-1673.6600300,15310.6103500,0.0000000,0.0000000,90.0000000); //
CreateDynamicObject(19468,2498.0900900,-1667.8199500,15307.0302700,0.0000000,0.0000000,0.0000000); //
//terminatemp
for(new h = 0; h < sizeof(Points); h++)
{
	if(Points[h][Type] == 3)
	{
		format(string, sizeof(string), " HIERBA DISPONIBLE: %d", Points[h][Stock]);
		Points[h][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], 4.0);
		Points[h][CratePoint] = 1;
	}
	else if(Points[h][Type] == 4)
	{
		format(string, sizeof(string), " CRACK DISPONIBLE: %d", Points[h][Stock]);
		Points[h][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], 4.0);
		Points[h][CratePoint] = 2;
	}
	CreatePickup(1239, 23, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]);
}
/*    Police LA     - Pickups */
CreatePickup(1239, 23, 217.8302,185.7956,1003.0313); // DUTY FBI
CreatePickup(371, 23, 1544.2,-1353.4,329.4, -1); //LS towertop PARACAIDAS
CreatePickup(1239, 23, 1475.4143,-1752.8630,3285.2859, 500); // Multas
CreatePickup(1239, 23, 1470.1620,-1755.8926,3285.2859, 500); // Licencias
CreatePickup(1240, 23,1120.7758,-1292.4806,13.5688, -1); // Dejar PT - SAMD
CreatePickup(1240, 23,829.7163,-1225.0900,1195.0468, -1); //sacarsangre SAMD
CreatePickup(1240, 23,225.0963,1980.7179,17.6406, -1);// Dejar PT - SAEM
CreatePickup(1240, 23,1188.8640,-1351.4312,2423.2649, 600);// Dejar PT - SAEM
CreatePickup(1318, 23,1443.5162,-1461.0831,1616.3073); // change name
CreatePickup(1247, 23, 317.4623,-1506.9045,24.9219, -1); // FBI Arrest
CreatePickup(1247, 23, 1559.3228,-1693.7491,5.8970, -1); // LSPD Arrest
CreatePickup(1247, 23, 206.4930,1861.8280,13.1406, -1); // PRISON Arres
CreatePickup(1247, 23, 206.4930,1861.8280,13.1406, -1); // PRISON Arres
CreatePickup(1247, 23, 613.3228,-589.1623,17.2266, -1); // JUD ARRES
CreatePickup(1274, 23, 365.0559,-1621.5493,39.2349, -1); // BANK TARJETA
/*      Umbrella  + Hitman  */
CreatePickup(1313, 23, 784.2336,1954.3387,5.7074); // Hitman
CreatePickup(1239, 23, 681.8381,1933.1395,5.7415); // Hitman
 /*      SAMD      */
CreatePickup(1239, 23, -2639.9487,535.6438,51.6134); // Equipo
/*                      */
/*CreatePickup(1318, 23, 545.2712,-1293.3248,17.2422); // Conse 1
CreatePickup(1318, 23, 2131.9119,-1150.1757,24.1872); // Conse 2*/
/*      Info & Ayuda & Points       */
CreatePickup(1239, 23, 2104.8408,-1810.0991,13.5547); // PizzaBoy
CreatePickup(1239, 23, 2218.0525,-2662.2483,13.5536); // Trucker
CreatePickup(1239, 23, 503.2812,-11.6111,1000.6797); // bartender
CreatePickup(1239, 23,1289.1171,-1271.7650,13.5422); // Sell cellphone
CreatePickup(1239, 23, 1689.9009,-1494.9858,13.5469); //   DROGAS VENDEDOR
CreatePickup(1239, 23, 2487.4983,-1410.0270,28.8375); // sell ARMAS
CreatePickup(1239, 23, 1752.7062,-1894.1708,13.5574); // Taxista
CreatePickup(1239, 23, -104.2969,9.3283,3.1172); // Cosechador
CreatePickup(1239, 23, 1752.5104,-1903.1664,13.5631); // licencia taxi
CreatePickup(1239, 23,2355.1594,-1169.2037,28.0057); // Traficante
CreatePickup(1239, 23, 2226.1716,-1718.1792,13.5165, -1); //BodyGuard (LS)
//CreatePickup(1239, 23, 2285.4197,-1928.1376,13.5902, -1); // Mecánico
CreatePickup(1239, 23, 659.3577,-634.6320,16.3359, -1); // Artesano
CreatePickup(1239, 23, 358.8330,178.5853,1008.3828, -1); // /cobrar
InfoEvento[EventRequest] = 999;
InfoEvento[EventCreator] = 999;
InfoEvento[EventStaff][0] = 999;
InfoEvento[EventStaff][1] = 999;
InfoEvento[EventStaff][2] = 999;
InfoEvento[EventStaff][3] = 999;
InfoEvento[EventStaff][4] = 999;

if (realtime)
{
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	SetWorldTime(tmphour);
	gTime = tmphour;
}
gWeather = 10;
ManualVehicleEngineAndLights();
return 1;
}
function SyncTime()
{
new tmphour;
new tmpminute;
new tmpsecond;
gettime(tmphour, tmpminute, tmpsecond);
FixHour(tmphour);
tmphour = shifthour;
if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
{
	WeatherCalling++;
	if(WeatherCalling > 3)
	{
	    WeatherCalling = 0;
	    new rand;
	    rand = random(20);
	    switch(rand)
	    {
      		case 0:{ SetWeather(11); gWeather = 11; }
	        case 8:{ SetWeather(12); gWeather = 12; }
	        case 9:{ SetWeather(5); gWeather = 5; }
	        case 16:{ SetWeather(4); gWeather = 4; }
	        case 19:{ SetWeather(20); gWeather = 20; }
	        default:{ SetWeather(rand); gWeather = rand; }
	    }
	}
	ghour = tmphour;
	if(realtime)
	{
		SetWorldTime(tmphour);
		gTime = tmphour;
	}
}
}

function SyncMinTime()
{
new hour, minute, second;
gettime(hour, minute, second);
foreach(Player, i)
{
    if(GetPlayerVirtualWorld(i) == 133769)
	{
	    SetPlayerWeather(i, 45);
		SetPlayerTime(i, 0, 0);
	}
	else { SetPlayerTime(i, hour, minute); }
}
return 1;
}

stock GetClosestPlayer(p1){
new Float:dis,Float:dis2,player;
player = -1;
dis = 99999.99;
foreach(Player, x){
	if(x != p1){
		dis2 = GetDistanceBetweenPlayers(x,p1);
		if(dis2 < dis && dis2 != -1.00){
			dis = dis2;
			player = x;
		}
	}
}
return player;
}

function OneHour()
{
TotalUptime += 1;
servertime = 0;
SaveStuff();
SaveServerStats();
FMemberCounter(); // Family member counter (requested by game affairs to track gang activity)
for (new x=0; x<MAX_POINTS; x++)
{
	if(Points[x][Vulnerable] == 0 && Points[x][Announced] == 1)
	{
		Points[x][Vulnerable] = NEW_VULNERABLE;
		Points[x][ClaimerTeam] = INVALID_PLAYER_ID;
		Points[x][TakeOverTimer] = 0;
		Points[x][TakeOverTimerStarted] = 0;
        Points[x][Announced] = 0;
		Points[x][CaptureProccessEx] = 0;
	    Delete3DTextLabel(Points[x][CaptureProccess]);
	    DestroyDynamic3DTextLabel(Points[x][CaptureProgress]);
		KillTimer(Points[x][CaptureTimerEx2]);
		Points[x][CaptureTimerEx2] = -1;
		format(szMessage, sizeof(szMessage), "%s no fue capturado y seguirá perteneciendo a la misma familia.", Points[x][Name]);
		SendClientMessageToAllEx(COLOR_POINTGEN, szMessage);
	}
	Points[x][Announced] = 0;
	if (Points[x][Vulnerable] > 0)
	{
		Points[x][Vulnerable]--;
		UpdatePoints();
	}
	if (Points[x][Vulnerable] == 0 && Points[x][Type] >= 0 && Points[x][Announced] == 0 && Points[x][ClaimerId] == INVALID_PLAYER_ID)
	{
		format(szMessage, sizeof(szMessage), "%s ahora está disponible para la captura.", Points[x][Name]);
		SendClientMessageToAllEx(COLOR_POINTGEN, szMessage);
		//SetPlayerCheckpoint(i, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz], 3);
		ReadyToCapture(x);
		Points[x][Announced] = 1;
	}
}
return 1;
}

strtok(const string[], &index){
new length = strlen(string);
while ((index < length) && (string[index] <= ' ')){
	index++;
}
new offset = index;
new result[20];
while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
{
	result[index - offset] = string[index];
	index++;
}
result[index - offset] = EOS;
return result;
}

function OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
	    new INI:File = INI_Open(UserPath(playerid));
	    INI_SetTag(File,"data");
	 	INI_WriteInt(File,"Password",udb_hash(password));
		INI_Close(File);
		TotalRegister++;
		CancelSelectTextDraw(playerid);
		SendClientMessageEx(playerid, COLOR_YELLOW, "Cuenta registrada, se ha iniciado sesión automáticamente.");
		OnPlayerLoginEx(playerid);
	}
	return 1;
}
/*CMD:admintest(playerid, params[])
{
    Info[playerid][pAdmin] = 6;
    SaveVarPlayer(1,playerid, "AdminNivel",Info[playerid][pAdmin]);
    print("Variable guardada");
    return 1;
}*/
stock SaveVarBusiness(type,id, name[],variable)
{
	switch(type)
	{
	    case 1:
	    {
		    new bfile[64];
			format(bfile, 64, BUSINESS_FILE, id);
			new INI:File = INI_Open(bfile);
			INI_SetTag(File,"HouseData");
			INI_WriteInt(File,name,variable);
			INI_Close(File);
	    }
	    case 2:
	    {
		    new bfile[64];
			format(bfile, 64, BUSINESS_FILE, id);
			new INI:File = INI_Open(bfile);
			INI_SetTag(File,"HouseData");
			INI_WriteFloat(File,name,variable);
			INI_Close(File);
	    }
	}
}
stock SaveVarHouses(type,id, name[],variable)
{
	switch(type)
	{
	    case 1:
	    {
		    new bfile[64];
			format(bfile, 64, HOUSE_FILE, id);
			new INI:File = INI_Open(bfile);
			INI_SetTag(File,"HouseData");
			INI_WriteInt(File,name,variable);
			INI_Close(File);
	    }
	    case 2:
	    {
		    new bfile[64];
			format(bfile, 64, HOUSE_FILE, id);
			new INI:File = INI_Open(bfile);
			INI_SetTag(File,"HouseData");
			INI_WriteFloat(File,name,variable);
			INI_Close(File);
	    }
	}
}
stock SaveVarPlayer(casex,playerid, name[],variable)
{
    if(!IsPlayerConnectedEx(playerid)) return 1;
    if(Info[playerid][pTempName] == 1) return 1;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	switch(casex)
	{
		case 1: // INTEGRAL
		{
			if(INI_Exist(playername))
			{
				new PlayerFile[13 +MAX_PLAYER_NAME+ 1];
	    		format(PlayerFile,sizeof PlayerFile, USERFILE, playername);
	    		new INI:File = INI_Open(PlayerFile);
	    		INI_SetTag(File,"data");
	    		INI_WriteInt(File,name,variable);
	    		INI_Close(File);
			}
			return 1;
		}
		/*case 2: // string
		{
			if(INI_Exist(playername))
			{
				new PlayerFile[13 +MAX_PLAYER_NAME+ 1];
	    		format(PlayerFile,sizeof PlayerFile, USERFILE, playername);
	    		new INI:File = INI_Open(PlayerFile);
	    		INI_SetTag(File,"data");
	    		INI_WriteString(File,name,variable);
	    		INI_Close(File);
			}
			return 1;
		}*/
		case 3: // FLOAT
		{
			if(INI_Exist(playername))
			{
				new PlayerFile[13 +MAX_PLAYER_NAME+ 1];
	    		format(PlayerFile,sizeof PlayerFile, USERFILE, playername);
	    		new INI:File = INI_Open(PlayerFile);
	    		INI_SetTag(File,"data");
	    		INI_WriteFloat(File,name,variable);
	    		INI_Close(File);
			}
			return 1;
		}
	}
	return 1;
}

stock OnPlayerSavedStats(const playerid)
{
	if(!IsPlayerConnectedEx(playerid)) return 1;
	if(Info[playerid][pTempName] == 1) return 1;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(INI_Exist(playername))
	{
		new PlayerFile[13 +MAX_PLAYER_NAME+ 1];
	    format(PlayerFile,sizeof PlayerFile, USERFILE, playername);
	    new INI:File = INI_Open(PlayerFile);
	    INI_SetTag(File,"data");
	    //INI_WriteInt(File,"Password",udb_hash(Info[playerid][pKey]));
	    INI_WriteInt(File,"Level",Info[playerid][pLevel]);
	    INI_WriteInt(File,"AdminNivel",Info[playerid][pAdmin]);
	    INI_WriteInt(File,"BanAppealer",Info[playerid][pBanAppealer]);
		INI_WriteInt(File,"FactionModerator",Info[playerid][pFactionModerator]);
		INI_WriteInt(File,"GangModerator",Info[playerid][pGangModerator]);
		INI_WriteInt(File,"Helper",Info[playerid][pHelper]);
		INI_WriteInt(File,"ConnectedTime",Info[playerid][pConnectTime]);
		INI_WriteInt(File,"Registered",Info[playerid][pReg]);
		INI_WriteInt(File,"Sex",Info[playerid][pSex]);
		INI_WriteInt(File,"Age",Info[playerid][pAge]);
		INI_WriteInt(File,"Respect",Info[playerid][pExp]);
	    INI_WriteInt(File,"Money", GetPVarInt(playerid, "Cash"));
	    INI_WriteInt(File,"Bank",Info[playerid][pMoneyBank]);
		INI_WriteInt(File,"PINBank",Info[playerid][pPinBank]);
		INI_WriteInt(File,"NrCuenta",Info[playerid][pNrCuenta]);
	    INI_WriteString(File,"IP", Info[playerid][pIP]);
	    INI_WriteInt(File,"Arrested",Info[playerid][pArrested]);
	    INI_WriteInt(File,"JailAdmin",Info[playerid][pJailAdmin]);
	    INI_WriteInt(File,"LottoNr",Info[playerid][pLottoNr]);
	    INI_WriteInt(File,"Job",Info[playerid][pJob]);
	    INI_WriteInt(File,"DudaMute",Info[playerid][pDudaMute]);
	    INI_WriteInt(File,"Warn",Info[playerid][pWarn]);
	    INI_WriteInt(File,"WRestricted",Info[playerid][pWRestricted]);
	    INI_WriteInt(File,"Jailed",Info[playerid][pJailed]);
	    INI_WriteInt(File,"JailTime",Info[playerid][pJailTime]);
	    INI_WriteInt(File,"Materials",Info[playerid][pMats]);
	    INI_WriteInt(File,"Packages",GetPVarInt(playerid, "Packages"));
	    INI_WriteInt(File,"Drugs",Info[playerid][pDrugs]);
	    INI_WriteInt(File,"Cosecha",Info[playerid][pCosecha]);
	    INI_WriteInt(File,"Crack",Info[playerid][pCrack]);
	    INI_WriteInt(File,"Pot",Info[playerid][pPot]);
	    INI_WriteInt(File,"Crates",Info[playerid][pCrates]);
	    INI_WriteInt(File,"Adic",Info[playerid][pAdiccion]);
	    INI_WriteInt(File,"Leader",Info[playerid][pLeader]);
	    INI_WriteInt(File,"Member",Info[playerid][pMember]);
	    INI_WriteInt(File,"FMember",Info[playerid][pFMember]);
	    INI_WriteInt(File,"Division",Info[playerid][pDivision]);
	    INI_WriteInt(File,"Rank",Info[playerid][pRank]);
	    INI_WriteInt(File,"Char",Info[playerid][pChar]);
		if(GetPVarInt(playerid, "EventToken") == 0 && GetPVarInt(playerid, "IsInArena") == 0){
		    GetPlayerHealth(playerid,Info[playerid][pHealth]);
		}
		INI_WriteFloat(File,"pHealth",Info[playerid][pHealth]);
		if(GetPVarInt(playerid, "EventToken") == 0 && GetPVarInt(playerid, "IsInArena") == 0){
		    GetPlayerArmour(playerid,Info[playerid][pArmour]);
		}
	    INI_WriteFloat(File,"pArmour",Info[playerid][pArmour]);
	    INI_WriteInt(File,"PhoneNr",Info[playerid][pPnumber]);
	    INI_WriteInt(File,"Sprunk",Info[playerid][pSprunk]);
	    INI_WriteInt(File,"Phonebook",Info[playerid][pPhoneBook]);
	    INI_WriteInt(File,"House",Info[playerid][pPhousekey]);
	    INI_WriteInt(File,"Int", Info[playerid][pInt]);
	    INI_WriteFloat(File,"Pos_x",Info[playerid][pPos_x]);
	    INI_WriteFloat(File,"Pos_y",Info[playerid][pPos_y]);
	    INI_WriteFloat(File,"Pos_z",Info[playerid][pPos_z]);
	    INI_WriteFloat(File,"SPos_r",Info[playerid][pPos_r]);
	    INI_WriteInt(File,"CarLic",Info[playerid][pCarLic]);
	    INI_WriteInt(File,"FlyLic",Info[playerid][pFlyLic]);
	    INI_WriteInt(File,"BoatLic",Info[playerid][pBoatLic]);
	    INI_WriteInt(File,"GunLic",Info[playerid][pGunLic]);
	    INI_WriteInt(File,"Gafas",Info[playerid][pGafas]);
	    INI_WriteInt(File,"Tutorial",Info[playerid][pTut]);
	    INI_WriteInt(File,"VWorld",Info[playerid][pVW]);
	    INI_WriteInt(File,"Lighter",Info[playerid][pLighter]);
	    INI_WriteInt(File,"Cigarettes",Info[playerid][pCigarettes]);
	    INI_WriteInt(File,"Ban",Info[playerid][pBanned]);
	    INI_WriteInt(File,"Disabled",Info[playerid][pDisabled]);
	    INI_WriteInt(File,"BlockBug",Info[playerid][pBlockBug]);
	    INI_WriteInt(File,"DNI",Info[playerid][pDNI]);
	    INI_WriteInt(File,"VSkill",Info[playerid][pArmsSkill]);
	    INI_WriteInt(File,"TSkill",Info[playerid][pTruckSkill]);
	    INI_WriteInt(File,"SmugglerSkill",Info[playerid][pSmugSkill]);
	    INI_WriteInt(File,"DrugsSkill",Info[playerid][pDrugsSkill]);
	    INI_WriteInt(File,"SIDA",Info[playerid][pSIDA]);
	    INI_WriteInt(File,"Cancer" ,Info[playerid][pCancer]);
	    INI_WriteInt(File,"Epilepsia",Info[playerid][pEpilepsia]);
	    INI_WriteInt(File,"Dengue",Info[playerid][pDengue]);
	    INI_WriteInt(File,"FStyle",Info[playerid][pFStyle]);
	    INI_WriteInt(File,"Busqueda",Info[playerid][pWantedLevel]);
	    INI_WriteInt(File,"Rent",Info[playerid][pRenting]);
	    INI_WriteInt(File,"prMoney",Info[playerid][p_Pr_Money]);
	    INI_WriteInt(File,"prTime",Info[playerid][p_Pr_Time]);
	    INI_WriteInt(File,"Rob",Info[playerid][pRob]);
	    INI_WriteInt(File,"Premium",Info[playerid][pVIP]);
	    INI_WriteInt(File,"BanDuda",Info[playerid][pBanDuda]);
	    INI_WriteInt(File,"ReportMuted",Info[playerid][pRMuted]);
	    INI_WriteInt(File,"ReportMutedTotal",Info[playerid][pRMutedTotal]);
	    INI_WriteInt(File,"ReportMutedTime",Info[playerid][pRMutedTime]);
	    INI_WriteInt(File,"Pasaporte",Info[playerid][pPasaporte]);
	    INI_WriteInt(File,"RadioP", Info[playerid][pRadio]);
	    INI_WriteInt(File,"KHZ",Info[playerid][pRadioFreq]);
	    INI_WriteInt(File,"Ipad",Info[playerid][pIpadMusic]);
		for( new m = 0; m < 12; m++ )
		{
		    new mStr[24];
		    format(mStr,sizeof(mStr), "Gun%d", m);
		    INI_WriteInt(File,mStr, Info[playerid][pWeapons][m]);
		}
		INI_WriteString(File,"Acento",Info[playerid][pAcento]);
		INI_WriteInt(File,"PTokens",Info[playerid][pPaintTokens]);
		INI_WriteInt(File,"Head",Info[playerid][pHead]);
		INI_WriteInt(File,"TaxiLicense", Info[playerid][pTaxiLicense]);
		INI_WriteInt(File,"Hospital",Info[playerid][pHospital]);
		INI_WriteInt(File,"CHits",Info[playerid][pCHits]);
		INI_WriteInt(File,"FHits",Info[playerid][pFHits]);
		INI_WriteInt(File,"Spraycan",Info[playerid][pSpraycan]);
		INI_WriteInt(File,"Married",Info[playerid][pMarried]);
		INI_WriteString(File,"MarriedTo",Info[playerid][pMarriedTo]);
		INI_WriteString(File,"ContractBy",Info[playerid][pContractBy]);
		INI_WriteString(File,"ContractDetail",Info[playerid][pContractDetail]);
		INI_WriteInt(File,"pWExists",Info[playerid][pWExists]);
		INI_WriteFloat(File,"pWX",Info[playerid][pWX]);
		INI_WriteFloat(File,"pWY",Info[playerid][pWY]);
		INI_WriteFloat(File,"pWZ",Info[playerid][pWZ]);
		INI_WriteInt(File,"pWVW",Info[playerid][pWVW]);
		INI_WriteInt(File,"pWInt",Info[playerid][pWInt]);
		INI_WriteInt(File,"pWValue",Info[playerid][pWValue]);
		INI_WriteInt(File,"pWSeeds",Info[playerid][pWSeeds]);
		INI_WriteInt(File,"AdMuted",Info[playerid][pADMute]);
		INI_WriteInt(File,"AdMutedTotal",Info[playerid][pADMuteTotal]);
		INI_WriteString(File,"Warrants",Info[playerid][pWarrant]);
		INI_WriteInt(File,"JudgeJailTime",Info[playerid][pJudgeJailTime]);
		INI_WriteInt(File,"JudgeJailType",Info[playerid][pJudgeJailType]);
		INI_WriteInt(File,"BeingSentenced",Info[playerid][pBeingSentenced]);
		INI_WriteInt(File,"ProbationTime",Info[playerid][pProbationTime]);
		INI_WriteInt(File,"Fishes" ,Info[playerid][pFishes]);
		INI_WriteInt(File,"FishSkill",Info[playerid][pFishSkill]);
		INI_WriteInt(File,"BiggestFish",Info[playerid][pBiggestFish]);
		INI_WriteInt(File,"ADTime",Info[playerid][pADTime]);
		INI_WriteInt(File,"GGTokens",Info[playerid][pGTokens]);
		INI_WriteInt(File,"HDExp",Info[playerid][pDobleExp]);
		INI_WriteInt(File,"Order",Info[playerid][pOrder]);
		INI_WriteInt(File,"Job2",Info[playerid][pJob2]);
		INI_WriteInt(File,"TypeSpawn",Info[playerid][pTypeSpawn]);
		INI_WriteInt(File,"ShopTech",Info[playerid][pShopTech]);
		INI_WriteInt(File,"Status",Info[playerid][pEstado]);
		INI_WriteInt(File,"DayVIP",Info[playerid][pVIPDateD]);
		INI_WriteInt(File,"MonthVIP",Info[playerid][pVIPDateM]);
		INI_WriteInt(File,"IDRegalo",Info[playerid][pRegalo]);
		INI_WriteInt(File,"Deuda",Info[playerid][pTaxDeuda]);
		INI_WriteInt(File,"TimePayDay", Info[playerid][pTimePayDay]);
		INI_WriteInt(File,"Screwdrivers", Info[playerid][pScrewdriver]);
		INI_WriteInt(File,"Firstaid", Info[playerid][pFirstaid]);
		INI_WriteInt(File,"CamOculta", Info[playerid][pSurveillance]);
		INI_WriteInt(File,"MoneyOfBank", Info[playerid][pMoneyBankT]);
		INI_WriteInt(File,"DeudaBank",Info[playerid][pBorrowedMoney]);
		INI_WriteInt(File,"CuotasBank",Info[playerid][pFeesBank]);
		INI_WriteString(File,"AdminName",Info[playerid][pAdminName]);
	    INI_WriteInt(File,"Coins",Info[playerid][pCoinsVip]);
	    INI_WriteInt(File,"CoinsPin",Info[playerid][pCoinsPIN]);
	    INI_WriteInt(File,"CashGo",Info[playerid][pCashGo]);
	    INI_WriteFloat(File,"Hambre",Info[playerid][pHungry]);
	    INI_WriteInt(File,"Boombox",Info[playerid][pBoombox]);
	    for(new v = 0; v < MAX_PLAYERTOYS; v++)
		{
	    	new string[64];
			format( string,64, "pt%dModelID", v);
			INI_WriteInt(File,string, PlayerToyInfo[playerid][v][ptModelID]);
			format(string, 64, "pt%dBone",v);
			INI_WriteInt(File,string, PlayerToyInfo[playerid][v][ptBone]);
			format(string, 64, "pt%dPosX",v);
			INI_WriteFloat(File,string, PlayerToyInfo[playerid][v][ptPosX]);
			format(string, 64, "pt%dPosY",v);
			INI_WriteFloat(File,string, PlayerToyInfo[playerid][v][ptPosY]);
			format(string, 64, "pt%dPosZ",v);
			INI_WriteFloat(File,string, PlayerToyInfo[playerid][v][ptPosZ]);
			format(string, 64, "pt%dRotX",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ptRotX]);
			format(string, 64, "pt%dRotY",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ptRotY]);
			format(string, 64, "pt%dRotZ",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ptRotZ]);
			format(string, 64, "pt%dSizX",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ftscaleX]);
			format(string, 64, "pt%dSizY",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ftscaleY]);
			format(string, 64, "pt%dSizZ",v);
			INI_WriteFloat(File,string,PlayerToyInfo[playerid][v][ftscaleZ]);
		}
		for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
		{
		    new string[64];
	    	format(string, 64, "pv%dPosX",v);
	    	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosX]);
	    	format(string, 64, "pv%dPosY",v);
	    	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosY]);
	    	format(string, 64, "pv%dPosZ",v);
	    	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosZ]);
	    	format(string, 64, "pv%dPosAngle",v);
	    	INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvPosAngle]);
			format(string, 64, "pv%dVirtualW",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvVW]);
			format(string, 64, "pv%dModelId",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvModelId]);
			format(string, 64, "pv%dLock",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvLock]);
			format(string, 64, "pv%dLocked",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvLocked]);
			format(string, 64, "pv%dPaintJob",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvPaintJob]);
			format(string, 64, "pv%dColor1",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvColor1]);
			format(string, 64, "pv%dColor2",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvColor2]);
			format(string, 64, "pv%dPrice",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvPrice]);
			format(string, 64, "pv%dTicket",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvTicket]);
			format(string, 64, "pv%dWeapon0",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][0]);
			format(string, 64, "pv%dWeapon1",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][1]);
			format(string, 64, "pv%dWeapon2",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvWeapons][2]);
			format(string, 64, "pv%dFuel",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvFuel]);
			format(string, 64, "pv%dImpound",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvImpounded]);
			format(string, 64, "pv%dHealth",v);
			INI_WriteFloat(File,string,PlayerVehicleInfo[playerid][v][pvHealth]);
			format(string, 64, "pv%dStereo",v);
			INI_WriteInt(File,string,PlayerVehicleInfo[playerid][v][pvStereo]);
			for(new m = 0; m < MAX_MODS; m++)
			{
			    new strings[64];
			    format(strings, 64, "pv%dMod%d", v, m);
			    INI_WriteInt(File,strings,PlayerVehicleInfo[playerid][v][pvMods][m]);
			}
		}
		INI_Close(File);
		//printf("DEBUG: SAVED ACCOUNT (%s)", GetPlayerNameEx(playerid));
	}
	return 1;
}
function OnPlayerLoginEx(playerid)
{
TotalLogin++;
CancelSelectTextDraw(playerid);
ResetPlayerMoney(playerid);
CurrentMoney[playerid] = GetPVarInt(playerid, "Cash");
HideMenuLogin(playerid);
if(Info[playerid][pDisabled] == 1){
    SetPlayerName(playerid, "BannedPlayer");
	SendClientMessageEx(playerid, COLOR_GENERAL,"Error [#12]");
   	SendClientMessageEx(playerid, COLOR_WHITE,  "Esta cuenta está deshabilitada.");
	Expulsar(playerid);
	return 1;
}
if(Info[playerid][pBanned] >= 2){
    SetPlayerName(playerid, "BannedPlayer");
    SendClientMessageEx(playerid, COLOR_GENERAL,"Error [#10]");
    SendClientMessageEx(playerid, COLOR_WHITE, "SERVER: Tú estás baneado del servidor.");
	Expulsar(playerid);
	return 1;
}
HungryBar[playerid] = CreateProgressBar(548.00, 36.00, 57.50, 3.50, 1845194239, 100.0);
if(Info[playerid][pAdmin] > 0){
	new tempip[32];
	GetPlayerIp(playerid, tempip, 32);
	if(strcmp(tempip, Info[playerid][pIP], true)){
		format(szMessage, sizeof(szMessage), "%s ha logueado con diferente [IP: %s] - IP original es: %s", GetPlayerNameEx(playerid), tempip, Info[playerid][pIP]);
		ABroadCast(COLOR_GENERAL, szMessage, 4);
	}
}
if(Info[playerid][pWRestricted] >= 1) ResetPlayerWeaponsEx(playerid);
GetPlayerIp(playerid, Info[playerid][pIP], 32);
SetPlayerScore(playerid, Info[playerid][pLevel]);
if(Info[playerid][pReg] == 0){
	Info[playerid][pLevel] = 0;
	Info[playerid][pHealth] = 100.0;
	Info[playerid][pPos_x] = 1612.3240;
	Info[playerid][pPos_y] = -2330.1670;
	Info[playerid][pPos_z] = 13.5469;
	Info[playerid][pInt] = 0;
	Info[playerid][pChar] = 299;
	Info[playerid][pPnumber] = 0;
	Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
	Info[playerid][pMoneyBank] = 0;
}
if(Info[playerid][pPos_x] == 0.0 && Info[playerid][pPos_y]== 0.0&& Info[playerid][pPos_z]== 0.0){
    Info[playerid][pPos_x] = 1715.12;
	Info[playerid][pPos_y] = -1903.17;
	Info[playerid][pPos_z] = 13.56;
}
if(Info[playerid][pShopTech] >= 2) Info[playerid][pShopTech] = 0;
if(Info[playerid][pAdmin] == 0) { Info[playerid][pGangModerator] = 0; Info[playerid][pShopTech] = 0; Info[playerid][pBanAppealer] = 0; Info[playerid][pFactionModerator] = 0; }
if(Info[playerid][pHospital] == 1){ Info[playerid][pHospital] = 0; SetPVarInt(playerid, "Hospital", 1); }
if(Info[playerid][pLevel] < 5 || Info[playerid][pAdmin] > 0 || Info[playerid][pHelper] > 0) gNewbie[playerid] = 0;
if(Info[playerid][pTut] == 1) Info[playerid][pReg] = 1;
if(Info[playerid][pVIP] == 0 && Info[playerid][pJob2] >= 1) Info[playerid][pJob2] = 0; // Reset Job if he´s lost the VIP
new text[128];
switch(Info[playerid][pAdmin]) // Mensaje de bienvenida
{
	case 1:	SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como Administrador Junior.");
	case 2: SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como Administrador.");
	case 3: SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como Administrador Lider.");
	case 4: SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como administrador General.");
	case 5: SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como administrador Director.");
	case 6: SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como Executive Admin.");
	case 7: SendClientMessageEx(playerid, -1, "Bienvenido, te has conectado como Server Admin.");
	default: SendClientMessageEx(playerid, -1, def("Bienvenido a nuestro servidor, %s.", GetPlayerNameEx(playerid)));
}
switch(Info[playerid][pHelper])
{
	case 1: SendClientMessageEx(playerid, COLOR_WHITE, "Te has conectado como Moderador.");
	case 2: SendClientMessageEx(playerid, COLOR_WHITE, "* Te has conectado como Lider de Moderadores.");
}
SendClientMessageEx(playerid, COLOR_GENERAL, GlobalMOTD);
//CheckVIPExpire(playerid); // Check VIP Expire
if(Info[playerid][pVIP] >= 1) SendClientMessageEx(playerid, COLOR_VIP, VIPMOTD);
SetSpawnInfo(playerid, 0, Info[playerid][pChar], Info[playerid][pPos_x], Info[playerid][pPos_y], Info[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
gPlayerLogged{playerid} = 1;
SpawnPlayer(playerid);
new ip[32], tmp2[128];
GetPlayerIp(playerid, ip, 32);
if(Info[playerid][pAdmin] >= 1) SendClientMessageEx(playerid, TEAM_AZTECAS_COLOR, AdminMOTD);
if(Info[playerid][pHelper] >= 1) SendClientMessageEx(playerid, TEAM_AZTECAS_COLOR, CAMOTD);
if(Info[playerid][pFMember] < 255){
	format(tmp2, sizeof(tmp2), "Mensaje Familia: %s.", fINFO[Info[playerid][pFMember]][FamilyMOTD]);
	SendClientMessageEx(playerid, COLOR_YELLOW, tmp2);
}
if(Info[playerid][pMember] > 0){
	format(tmp2, sizeof(tmp2), "Mensaje Faccion: %s.", FACMOTD);
	SendClientMessageEx(playerid, COLOR_YELLOW, tmp2);
}
if(Info[playerid][pFMember] < 255){
	format(tmp2, sizeof(tmp2), "FamAdmin Msj: %s.", FAMMOTD);
	SendClientMessageEx(playerid, COLOR_YELLOW, tmp2);
}
if(Info[playerid][pOrder] > 0){
	format(szMessage, sizeof(szMessage), "SERVER: %s está esperando por su compra en la tienda.",GetPlayerNameEx(playerid));
	ShopTechBroadCast(COLOR_SHOP,szMessage);
}
if(Info[playerid][pVIP] >= 2 && Info[playerid][pArmsSkill] < 400){
	Info[playerid][pArmsSkill] = 401;
	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP Gold: Ahora eres nivel 5 en skill de Vendedor de Armas.");
}
if(Info[playerid][pJob2] != 0 && Info[playerid][pVIP] == 0){
    Info[playerid][pJob2] = 0;
    SendClientMessageEx(playerid, COLOR_YELLOW, "Perdiste el trabajo número 2, porque ya no eres VIP.");
}
SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
WeedLogin(playerid);
SetPlayerToTeamColor(playerid);
//LoadPlayerVehicles(playerid);
return 1;
}
function CloseLSPDDoor1() return MoveDynamicObject(LSPDDoor1,1468.57507, -1758.27209, 3284.30005,5);
function CloseLSPDDoor2() return MoveDynamicObject(LSPDDoor2,1481.38684, -1758.28503, 3284.30005,5);

public OnPlayerPressButton(playerid, buttonid)
{
	if(buttonid == LSPDDoor1ButtonEx || buttonid == LSPDDoor1ButtonInt)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(LSPDDoor1,1470.08459, -1758.26404, 3284.30005,5);
	    SetTimer("CloseLSPDDoor1", 5000, 0);
	}
	if(buttonid == LSPDDoor2ButtonEx || buttonid == LSPDDoor2ButtonInt)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(LSPDDoor2,1482.88843, -1758.28772, 3284.30005,5);
	    SetTimer("CloseLSPDDoor2", 5000, 0);
	}
	if(buttonid == JDoor1)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(fen1,1417.90002441,-1554.90002441,4330.50000000,6);
	    SetTimer("CloseCell1", 5000, 0);
	    //print("JDOOR 1 - Moved");
	}
	if(buttonid == JDoor2)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(fen2,1425.90002441,-1555.00000000,4330.50000000,6);
	    SetTimer("CloseCell2", 5000, 0);
	    //print("JDOOR 2 - Moved");
	}
	if(buttonid == JDoor3)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(fen3,1429.50000000,-1554.80004883,4330.50000000,6);
	    SetTimer("CloseCell3", 5000, 0);
	    //print("JDOOR 3 - Moved");
	}
	if(buttonid == JDoor4)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(fen4,1422.19995117,-1567.00000000,4330.50000000,6);
	    SetTimer("CloseCell4", 5000, 0);
	    //print("JDOOR 4 - Moved");
	}
	if(buttonid == JDoor5) // FIX a 6
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(fen6,1430.19995117,-1566.69995117,4330.50000000,6);
	    SetTimer("CloseCell5", 5000, 0);
	    //print("JDOOR 5 - Moved");
	}
	if(buttonid == JDoor6)
	{
	    if(!IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	    MoveDynamicObject(fen5,1414.80004883,-1566.69995117,4330.50000000,6);
	    SetTimer("CloseCell6", 5000, 0);
	    //print("JDOOR 6 - Moved");
	}
	if(buttonid == courtbuttons[0])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[1],2138.00292969,1290.96386719-10,7698.24169922,4);
		SetTimer("CloseCourtGate2", 5000, 0);
	}
	if(buttonid == courtbuttons[3])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[1],2138.00292969,1290.96386719-10,7698.24169922,4);
		SetTimer("CloseCourtGate2", 5000, 0);
	}
	if(buttonid == courtbuttons[1])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[0],2138.00000000,1316.72106934+10,7698.23632812,4);
		SetTimer("CloseCourtGate1", 5000, 0);
	}
	if(buttonid == courtbuttons[2])
	{
		if(!IsACop(playerid) && Info[playerid][pLeader] != 9 && Info[playerid][pMember] != 9)
		{
			SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
			return 1;
		}
		MoveDynamicObject(courtgates[0],2138.00000000,1316.72106934+10,7698.23632812,4);
		SetTimer("CloseCourtGate1", 5000, 0);
	}
	if(buttonid == FBILobbyLeftBTN[0] || buttonid == FBILobbyLeftBTN[1])
	{
	    if(Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2)
	    {
	        MoveDynamicObject(FBILobbyLeft,293.93002319,-1498.43457031,-46.13965225,4);
			SetTimer("CloseFBILobbyLeft", 2500, 0);
	    }
	    else return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	}
	if(buttonid == FBILobbyRightBTN[0] || buttonid == FBILobbyRightBTN[1])
	{
	    if(Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2)
	    {
	        MoveDynamicObject(FBILobbyRight,303.84756470,-1521.62988281,-46.13965225,4);
			SetTimer("CloseFBILobbyRight", 2500, 0);
	    }
	    else return SendClientMessageEx(playerid,COLOR_GREY,"* Acceso Denegado.");
	}
	if(buttonid == FBIPrivateBTN[0] || buttonid == FBIPrivateBTN[1])
	{
	    if((Info[playerid][pMember] == 2 || Info[playerid][pLeader] == 2) && Info[playerid][pRank] >= 5)
	    {
	        MoveDynamicObject(FBIPrivate[0],299.29986572,-1491.75842285,-28.73300552,4);
	        MoveDynamicObject(FBIPrivate[1],299.33737183,-1496.86145020,-28.73300552,4);
			SetTimer("CloseFBIPrivate", 2500, 0);
	    }
	    else return SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
	}
	return false;
}


//PaintBall
PaintballMainMenu(playerid)
{
format(szDialog,sizeof(szDialog),"Elegir Arena\nComprar Fichas");
ShowPlayerDialog(playerid,PB_MENU,DIALOG_STYLE_LIST,"Paintball Arena - Menu:",szDialog,"Ok","Salir");
}

PaintballArenaSelection(playerid)
{
format(szDialog,sizeof(szDialog),"DeathMatch Arena \t\t Jugadores:(%d/20)\nDeathMatch Arena 2 \t\t Jugadores:(%d/20)\nTeam DeathMatch \t\t Jugadores:(%d)",TotalDM, TotalDM2, TotalTDM);
ShowPlayerDialog(playerid,PB_SARENA,DIALOG_STYLE_LIST,"Paintball Arena - Elige una Arena:",szDialog,"Ok","Atrás");
}

PaintballTokenBuyMenu(playerid)
{
format(szDialog,sizeof(szDialog),"{FFFFFF}Cuantas fichas deseas comprar?\n\nCada ficha cuesta $%d. Actualmente tienes {AA3333}%d{FFFFFF} fichas.", 20, Info[playerid][pPaintTokens]);
ShowPlayerDialog(playerid,PB_FICHAS,DIALOG_STYLE_INPUT,"Paintball Arena - Fichas:",szDialog,"Comprar","Atrás");
return 1;
}

PaintballScoreboard(playerid)
{
if(GetPVarInt(playerid, "IsInArena") == 0) { return 1; }
new titlestring[128];
new string[2048];
foreach(Player, p)
{
	if(GetPVarInt(p, "ArenaMode") == 1)
	{
		format(titlestring,sizeof(titlestring),"(DM) Scoreboard - Players: (%d)",TotalDM);
		format(string,sizeof(string),"%s(ID: %d) %s - (Puntos: %d) (Muertes: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],Info[p][pDeaths],GetPlayerPing(p));
	}
	if(GetPVarInt(p, "ArenaMode") == 3)
	{
		format(titlestring,sizeof(titlestring),"(DM) Scoreboard - Players: (%d)",TotalDM2);
		format(string,sizeof(string),"%s(ID: %d) %s - (Puntos: %d) (Muertes: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],Info[p][pDeaths],GetPlayerPing(p));
	}
	if(GetPVarInt(p, "ArenaMode") == 2)
	{
	    format(titlestring,sizeof(titlestring),"(TDM) Scoreboard - Rojo: (%d) - Azul: (%d)",TRedKills,TBlueKills);
	    switch(Info[p][pPaintTeam])
	    {   // 1: Red Team - 2: // Blue Team
	        case 1: format(string,sizeof(string),"%s(ID: %d) ({FF0000}Equipo Rojo{FFFFFF}) %s - (Puntos: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],GetPlayerPing(p));
	        case 2: format(string,sizeof(string),"%s(ID: %d) ({0000FF}Equipo Azul{FFFFFF}) %s - (Puntos: %d) (Ping: %d)\n", string, p, GetPlayerNameEx(p),Info[p][pKills],GetPlayerPing(p));
	    }
	}
}
ShowPlayerDialog(playerid,PBARENASCORES,DIALOG_STYLE_LIST,titlestring,string,"Actualizar","Cerrar");
return 1;
}

SpawnPaintballArena(playerid)
{
ResetPlayerWeapons(playerid);
switch(GetPVarInt(playerid, "ArenaMode")) // Deathmatch
{
    case 1:
    {
		Info[playerid][pVW] = 700; Info[playerid][pInt] = 10;
 		SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
		SetPlayerInterior(playerid, Info[playerid][pInt]);
		new rand = Random(1,5);
		switch (rand)
		{
    		case 1:
    		{
       			SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
				SetPlayerFacingAngle(playerid, 116.4942);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
    		}
    		case 2:
			{
	   			SetPlayerPos(playerid, -1126.8611,1020.4957,1345.5922);
				SetPlayerFacingAngle(playerid, 286.6877);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			case 3:
			{
	   			SetPlayerPos(playerid, -1087.2578,1094.6459,1343.9775);
				SetPlayerFacingAngle(playerid, 205.5335);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			case 4:
			{
	   			SetPlayerPos(playerid, -981.2971,1019.2087,1344.6238);
				SetPlayerFacingAngle(playerid, 51.9989);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		}
		SetHP(playerid, 100);
		SetPlayerArmour(playerid, 50);
		GivePlayerWeapon(playerid, 29, 60000);
		return 1;
	}
	case 3: // Deathmatch 2
	{
		Info[playerid][pVW] = 800; Info[playerid][pInt] = 10;
		SetPlayerInterior(playerid, Info[playerid][pInt]);
		SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
		new rand = Random(1,5);
		switch (rand)
		{
    		case 1:
    		{
    	   		SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
				SetPlayerFacingAngle(playerid, 116.4942);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
    		}
    		case 2:
			{
		   		SetPlayerPos(playerid, -1126.8611,1020.4957,1345.5922);
				SetPlayerFacingAngle(playerid, 286.6877);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			case 3:
			{
		   		SetPlayerPos(playerid, -1087.2578,1094.6459,1343.9775);
				SetPlayerFacingAngle(playerid, 205.5335);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			case 4:
			{
		   		SetPlayerPos(playerid, -981.2971,1019.2087,1344.6238);
				SetPlayerFacingAngle(playerid, 51.9989);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		}
		SetHP(playerid, 100);
		SetPlayerArmour(playerid, 50);
		GivePlayerWeapon(playerid, 29, 60000);
		return 1;
	}
	case 2: // Team Deathmatch
	{
    	Info[playerid][pVW] = 600; Info[playerid][pInt] = 10;
		SetPlayerInterior(playerid, Info[playerid][pInt]);
		SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
		SetHP(playerid, 100);
		SetPlayerArmour(playerid, 50);
		GivePlayerWeapon(playerid, 29, 60000);
    	switch(Info[playerid][pPaintTeam])
    	{
    	    case 1: //red
		    {
				SetPlayerPos(playerid, -1132.0417,1041.1082,1345.7397);
				SetPlayerFacingAngle(playerid, 116.4942);
				SetPlayerColor(playerid, PAINTBALL_TEAM_RED);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			case 2: // Blue
			{
				SetPlayerPos(playerid, -974.1334,1077.5168,1344.9895);
				SetPlayerFacingAngle(playerid, 351.7867);
		    	SetPlayerColor(playerid, PAINTBALL_TEAM_BLUE);
		    	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
		}
	}
}
return 1;
}

JoinPaintballArena(playerid, modo)
{
	new Float:oldX, Float:oldY, Float:oldZ, Float:oldHealth, Float:oldArmor;
	GetPlayerPos(playerid, oldX, oldY, oldZ);
	SetPVarFloat(playerid, "pbOldX", oldX);
	SetPVarFloat(playerid, "pbOldY", oldY);
	SetPVarFloat(playerid, "pbOldZ", oldZ);
	GetPlayerHealth(playerid,oldHealth);
	GetPlayerArmour(playerid,oldArmor);
	SetPVarInt(playerid, "pbOldInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "pbOldVW", GetPlayerVirtualWorld(playerid));
	SetPVarFloat(playerid, "pbOldHealth", oldHealth);
	SetPVarFloat(playerid, "pbOldArmor", oldArmor);
	pTazer[playerid] = 0; // Reset Tazer
	switch(modo)
	{
		case 1: // DM
		{
		    if(Info[playerid][pPaintTokens] < 3) return SendClientMessageEx(playerid, COLOR_GREY, "* Necesitas 3 fichas para entrar a está Arena");
	        if(TotalDM == 20) return SendClientMessageEx(playerid, COLOR_GREY, "* La Arena está FULL, espera un momento.");

			SetPVarInt(playerid, "IsInArena", 1);
			SetPVarInt(playerid, "ArenaMode", 1);

			ResetPlayerWeapons(playerid);
	        SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
			SetPlayerFacingAngle(playerid, 116.4942);
			SetHP(playerid, 100);
			SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 700);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(szMessage,sizeof(szMessage),"[Paintball Arena] %s se ha unido al Paintball Arena!", GetPlayerNameEx(playerid));
	        SendPaintballArenaMessage(1,COLOR_YELLOW,szMessage);
	        GivePlayerWeapon(playerid, 29, 60000);
	        SendClientMessageEx(playerid, COLOR_YELLOW, "[Paintball Arena] Te regalamos por tu entrada un MP5, cuando mueras usa /armas para ver las armas disponibles.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "Comandos Paintball Arena: /fichas - /armas - /salirarena - /arena - /cequipo - /scores");
			TotalDM++;
		}
		case 2: // CHOOSE TEAM
		{
		    if(Info[playerid][pPaintTokens] < 8) return SendClientMessageEx(playerid, COLOR_GREY, "* Necesitas 8 fichas para entrar a está Arena");
		    ShowPlayerDialog(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{0000FF}Equipo Azul","Entrar","Salir");
		}
		case 3: // JOIN TEAM
		{
		    if(TotalTDM == 32) return SendClientMessageEx(playerid, COLOR_GREY, "* La Arena esta FULL, espera un momento.");

			SetPVarInt(playerid, "IsInArena", 1);
			SetPVarInt(playerid, "ArenaMode", 2);

			ResetPlayerWeapons(playerid);
			SendClientMessageEx(playerid, COLOR_WHITE, "Comandos Paintball Arena: /fichas - /armas - /salirarena - /arena - /cequipo - /scores");
			switch(Info[playerid][pPaintTeam])
			{
				case 1: //RED
		    	{
		        	format(szMessage,sizeof(szMessage),"[Paintball Arena] %s se ha unido al Paintball Arena - Equipo Rojo!", GetPlayerNameEx(playerid));
	        		SendPaintballArenaMessage(2,COLOR_YELLOW,szMessage);
		        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        	SetPlayerPos(playerid,-1132.0417,1041.1082,1345.7397);
		        	SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 600);
		        	SetPlayerColor(playerid, PAINTBALL_TEAM_RED); SetHP(playerid, 100);
		        	SetPlayerArmour(playerid, 50); GivePlayerWeapon(playerid, 29, 60000);
		        	PlayersRed++;
		    	}
		    	case 2: //BLUE
		    	{
		       		format(szMessage,sizeof(szMessage),"[Paintball Arena] %s se ha unido al Paintball Arena - Equipo Azul!", GetPlayerNameEx(playerid));
	        		SendPaintballArenaMessage(2,COLOR_YELLOW,szMessage);
		        	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        	SetPlayerPos(playerid,-974.1334,1077.5168,1344.9895);
		        	SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 600);
		        	SetPlayerColor(playerid, PAINTBALL_TEAM_BLUE); SetHP(playerid, 100);
		        	SetPlayerArmour(playerid, 50); GivePlayerWeapon(playerid, 29, 60000);
		        	PlayersBlue++;
		    	}
			}
		}
		case 4: // CTF
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Proximamente, Nuevo modo de juego: Captura la Bandera!");
			/*if(Info[playerid][pPaintTokens] < 12) return SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas 12 fichas para entrar a está Arena");
		    TotalCTF[playerid]++;*/
		}
		case 5: // DM2
		{
		    if(Info[playerid][pPaintTokens] < 3) return SendClientMessageEx(playerid, COLOR_GREY, "* Necesitas 3 fichas para entrar a está Arena");
	        if(TotalDM2 == 20) return SendClientMessageEx(playerid, COLOR_GREY, "* La Arena 2 está FULL, espera un momento.");

			SetPVarInt(playerid, "IsInArena", 1);
			SetPVarInt(playerid, "ArenaMode", 3);

			ResetPlayerWeapons(playerid);
	        SetPlayerPos(playerid, -1045.3766,1098.6875,1345.2252);
			SetPlayerFacingAngle(playerid, 116.4942);
			SetHP(playerid, 100);
			SetPlayerInterior(playerid, 10); SetPlayerVirtualWorld(playerid, 800);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(szMessage,sizeof(szMessage),"[Paintball Arena] %s se ha unido al Paintball Arena!", GetPlayerNameEx(playerid));
	        SendPaintballArenaMessage(1,COLOR_YELLOW,szMessage);
	        GivePlayerWeapon(playerid, 29, 60000);
	        SendClientMessageEx(playerid, COLOR_YELLOW, "[Paintball Arena] Te regalamos por tu entrada un MP5, cuando mueras usa /armas para ver las armas disponibles.");
	        SendClientMessageEx(playerid, COLOR_WHITE, "Comandos Paintball Arena: /fichas - /armas - /salirarena - /arena - /cequipo - /scores");
			TotalDM2++;
		}
	}
	return 1;
}

LeavePaintballArena(playerid)
{
switch(GetPVarInt(playerid, "ArenaMode"))
{
    case 1: TotalDM -= 1;
    case 2: TotalTDM -= 1;
    case 3: TotalDM2 -= 1;
}
switch(Info[playerid][pPaintTeam])
{
    case 1: PlayersRed -= 1;
	case 2: PlayersBlue -= 1;
}
format(szMessage,sizeof(szMessage),"[Paintball Arena] %s ha dejado el Paintball Arena!", GetPlayerNameEx(playerid));
SendPaintballArenaMessage(GetPVarInt(playerid,"ArenaMode"), COLOR_YELLOW, szMessage);
//SendClientMessageEx(playerid, COLOR_WHITE, "Recuerda que puedes canjear tus fichas ganadas por premios.");
Info[playerid][pKills] = 0;
Info[playerid][pDeaths] = 0;
SetPlayerWeapons(playerid);
// SetPlayerToTeamColor(playerid);
SetPlayerColor(playerid,TEAM_HIT_COLOR);
SetPlayerSkin(playerid, Info[playerid][pChar]);
LoadObjects(playerid);
SetPVarInt(playerid, "ArenaMode", 0);
SetPVarInt(playerid, "IsInArena", 0);
SetPlayerPos(playerid, GetPVarFloat(playerid, "pbOldX"), GetPVarFloat(playerid, "pbOldY"), GetPVarFloat(playerid, "pbOldZ"));
SetHP(playerid, GetPVarFloat(playerid, "pbOldHealth"));
SetPlayerArmour(playerid, GetPVarFloat(playerid, "pbOldArmor"));
SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "pbOldVW"));
SetPlayerInterior(playerid, GetPVarInt(playerid, "pbOldInt"));
Info[playerid][pVW] = GetPVarInt(playerid, "pbOldVW");
Info[playerid][pInt] = GetPVarInt(playerid, "pbOldInt");
Info[playerid][pPaintTeam] = 0;
}

PaintballDisconnect(playerid)
{
switch(GetPVarInt(playerid, "ArenaMode"))
{
    case 1: TotalDM -= 1;
    case 2: TotalTDM -= 1;
    case 3: TotalDM2 -= 1;
}
switch(Info[playerid][pPaintTeam])
{
    case 1: PlayersRed -= 1;
	case 2: PlayersBlue -= 1;
}
Info[playerid][pKills] = 0;
Info[playerid][pDeaths] = 0;
// SetPlayerToTeamColor(playerid);
SetPlayerSkin(playerid, Info[playerid][pChar]);
SetPlayerPos(playerid, GetPVarFloat(playerid, "pbOldX"), GetPVarFloat(playerid, "pbOldY"), GetPVarFloat(playerid, "pbOldZ"));
SetHP(playerid, GetPVarFloat(playerid, "pbOldHealth"));
SetPlayerArmour(playerid, GetPVarFloat(playerid, "pbOldArmor"));
SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "pbOldVW"));
SetPlayerInterior(playerid, GetPVarInt(playerid, "pbOldInt"));
Info[playerid][pVW] = GetPVarInt(playerid, "pbOldVW");
Info[playerid][pInt] = GetPVarInt(playerid, "pbOldInt");
Info[playerid][pPaintTeam] = 0;
}

PaintballSwitchTeam(playerid)
{
format(szDialog,sizeof(szDialog),"{FF0000}Equipo Rojo (%d/12)\n{0000FF}Equipo Azul (%d/12)",PlayersRed,PlayersBlue);
ShowPlayerDialog(playerid,PB_CHOOSE,DIALOG_STYLE_LIST,"Paintball Arena - Elegir Equipo:",szDialog,"Unirse","Cancelar");
}

// EMS
function KillEMSQueue(playerid)
{
DeletePVar(playerid, "Injured");
SetPVarInt(playerid, "FirstSpawn", 1);
DeletePVar(playerid, "EMSAttempt");
//SetPVarInt(playerid, "MedicBill", 1);
DeletePVar(playerid, "MedicCall");
return 1;
}

// SendEMSQueue Function(playerid)
function SendEMSQueue(playerid,type)
{
switch(type)
{
	case 1:
	{
	    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
  		SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
		SetPVarInt(playerid, "EMSAttempt", -1);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1);

		if(GetPlayerInterior(playerid) > 0)
		{
		    LoadObjects(playerid);
		}
		GameTextForPlayer(playerid, "~y~Estas herido~n~~w~/aceptar muerte o /servicios", 5000, 3);
		SetHP(playerid, 100);
		SetPlayerArmour(playerid,0);
		SetPVarInt(playerid,"MedicCall",1);
	}
	case 2:
	{
	    SetPVarInt(playerid,"EMSAttempt", 2);
		//ClearAnimations(playerid);
	 	ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.0, 0, 1, 1, 1, 0, 1);
		SetHP(playerid, 100);
		SetPlayerArmour(playerid,0);
	}
}
return 1;
}
stock GetPricebyObject(modelid)
{
	switch(modelid)
	{
	    case 2822,2820: return 20;
	    case 2515,1715,1716,1720,1721,1714,1811: return 400;
	    case 2518,1737,2119,2116,2115,2111,1739,1810: return 450;
	    case 2516,2002,2160,2334,2335,2112,2079,2121: return 950;
	    case 2514,2015,2157,2159,2029,1825: return 1000;
	    case 2517,2014,2018,2156,2120: return 1200;
	    case 2336,2337,2013,2019: return 2000;
	    case 2519, 2520,2523,2524,2136: return 3000;
	    case 2521,2525,2528,2529,2135,2339,14720: return 4000;
	    case 2522,1208,2340,2415: return 5000;
	    default:
		{
			new priceex = Random(500,4000);
			return priceex;
	    }
	}
	return 1;
}
public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    new  	businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
    new 	hID = getPlayerHouseID(playerid);
    if(listid == DormitorioFur ||listid == ComedorFur ||listid == BanoFur || listid == LobbyFur || listid == CocinaFur || listid == ParedesFur || listid == OtrosFur || listid == ElectroFur )
    {
        if(!response) return 1;
        new price = GetPricebyObject(modelid);
        if(CheckMoney(playerid, price))
		{
			BuyFurniture(playerid, hID, modelid, price);
		}
    }
	if(listid == skinlist)
	{
		if(response)
		{
		    if(Info[playerid][pVIP] == 2)
		    {
		        if(CheckMoney(playerid,5))
		        {
		        	Info[playerid][pChar] = modelid;
		      		SetPlayerSkin(playerid, Info[playerid][pChar]);
		        	Bought(playerid, 5);
		        	businessVariables[businessID][bVault] += 5;
		        	businessVariables[businessID][bStock]--;
     				SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    				SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
		        }
		    }
		    else
		    {
				if(CheckMoney(playerid,10))
				{
		        	Info[playerid][pChar] = modelid;
		      		SetPlayerSkin(playerid, Info[playerid][pChar]);
		        	Bought(playerid, 10);
		        	businessVariables[businessID][bVault] += 10;
		        	businessVariables[businessID][bStock]--;
     				SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    				SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
				}
			}
		}
		return 1;
	}
	else if(listid == ToyList){
	    if(response){
	    	new price = 5 + random(25);
			if(GetPlayerCash(playerid) < price) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
			else
			{
				GivePlayerCash(playerid, -price);
				businessVariables[businessID][bVault] += price;
				businessVariables[businessID][bStock]--;
     			SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = modelid;
		    	modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    	if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
		    	{
		        	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		    	}
		    	else if(modelid >= 18891 && modelid <= 18910)
		    	{
		    		PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
				else if(modelid >= 18926 && modelid <= 18935)
				{
					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
				else if(modelid >= 18911 && modelid <= 18920)
				{
			   		PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
				else if(modelid == 19078 || modelid == 19078)
				{
			    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
				else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
				{
			    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
				else if(modelid == 19317)
				{
			    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.079;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = -0.10;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.09;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 30.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
		    	else
		    	{
					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
					PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
				}
				format(szMessage, sizeof(szMessage), "Compraste un objeto por $%d (Slot: %d)", price, slotselection[playerid]);
		    	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		    	SendClientMessageEx(playerid, -1, ""COL_WHITE"Usa "COL_GENERAL"/toys "COL_WHITE"para editar tus objetos.");
			}
		}
	}
	else if(listid == ToyListGold){
	    if(response){
			if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes acceso a estas funciones.");
	    	new price = 10 + random(50);
			if(GetPlayerCash(playerid) < price) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
			else{
				GivePlayerCash(playerid, -price);
				businessVariables[businessID][bVault] += price;
				businessVariables[businessID][bStock]--;
     			SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = modelid;
		    	modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    	if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140)){
		        	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
		    	}
		    	else if(modelid >= 18891 && modelid <= 18910){
		    		PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
				}
				else if(modelid >= 18926 && modelid <= 18935){
					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				}
				else if(modelid >= 18911 && modelid <= 18920){
			    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
				}
				else if(modelid == 19078 || modelid == 19078){
			    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				}
				else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890){
			    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				}
		    	else{
					PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
					PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
				}
				format(szMessage, sizeof(szMessage), "Compraste un objeto por $%d (Slot: %d)", price, slotselection[playerid]);
		    	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		    	SendClientMessageEx(playerid, -1, ""COL_WHITE"Usa "COL_GENERAL"/toys "COL_WHITE"para editar tus objetos.");
			}
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if (clickedid == TextdrawZCL1)
	{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
	    	if(INI_Exist(playername))
   			{
   			    gPlayerAccount[playerid] = 1;
                ShowPlayerDialog(playerid, DIALOG_CUENTAEXIST, DIALOG_STYLE_MSGBOX, ""COL_GENERAL"ZC:RP - "COL_WHITE"Aviso", "Tu cuenta se encuentra registrada", "Aceptar", "");
			}
			else
			{
	        	InsideMainMenu[playerid] = true;
				format(szMessage, sizeof(szMessage), ""COL_WHITE"Bienvenido %s!\nIngresa una contraseña para registrarte en el servidor.\n\n"COL_GENERAL"Contraseña:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid,DREGISTER,DIALOG_STYLE_INPUT ,""COL_GENERAL"ZC:RP - "COL_WHITE"Registro",szMessage,"Registrar","Salir");
	    		SetPlayerVirtualWorld(playerid, 20);
			}
		 	SelectTextDraw(playerid, COLOR_NEWS2);
			return 1;
	}
	else if (clickedid == TextdrawZCL2)
	{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
            if(INI_Exist(playername))
			{
  				InsideMainMenu[playerid] = true;
 				INI_ParseFile(UserPath(playerid), "LoadUser_pass", .bExtra = true, .extra = playerid);
				format(szMessage, sizeof(szMessage), ""COL_WHITE"Bienvenido %s!\nIngresa tu contraseña para ingresar al servidor.\n\n"COL_GENERAL"Contraseña:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid,DLOGIN,DIALOG_STYLE_PASSWORD ,""COL_GENERAL"ZC:RP - "COL_WHITE"Ingreso",szMessage,"Entrar","Salir");
				SetPlayerVirtualWorld(playerid, 20);
			}
			else
			{
   				gPlayerAccount[playerid] = 0;
                ShowPlayerDialog(playerid, DIALOG_NOLOGIN, DIALOG_STYLE_MSGBOX, ""COL_GENERAL"ZC:RP - "COL_WHITE"Aviso", "Tu cuenta no se encuentra registrada", "Aceptar", "");
                SelectTextDraw(playerid, COLOR_NEWS2);
			}
		 	SelectTextDraw(playerid, COLOR_NEWS2);
	}
	else if (clickedid == TextdrawZCL4)
	{
	    	TextDrawHideForPlayer(playerid, TextdrawZCL0);
			TextDrawHideForPlayer(playerid, TextdrawZCL1);
			TextDrawHideForPlayer(playerid, TextdrawZCL2);
			TextDrawHideForPlayer(playerid, TextdrawZCL3);
			TextDrawHideForPlayer(playerid, TextdrawZCL4);
			TextDrawHideForPlayer(playerid, TextdrawZCL5);
			TextDrawHideForPlayer(playerid, TextdrawZCL6);
			TextDrawHideForPlayer(playerid, TextdrawZCL7);
			Expulsar(playerid);

	}
	else if (clickedid == TextdrawZCL3)
	{
            TextDrawShowForPlayer(playerid, TextInfoZC0);
			TextDrawShowForPlayer(playerid, TextInfoZC1);
			TextDrawShowForPlayer(playerid, TextInfoZC2);
			TextDrawShowForPlayer(playerid, TextInfoZC3);
			TextDrawShowForPlayer(playerid, TextInfoZC4);
			TextDrawShowForPlayer(playerid, TextInfoZC5);
			TextDrawShowForPlayer(playerid, TextInfoZC6);
			TextDrawShowForPlayer(playerid, TextInfoZC7);
			SelectTextDraw(playerid, COLOR_NEWS2);
	}
	else if (clickedid == TextInfoZC3)
	{
 			TextDrawHideForPlayer(playerid, TextInfoZC0);
			TextDrawHideForPlayer(playerid, TextInfoZC1);
			TextDrawHideForPlayer(playerid, TextInfoZC2);
			TextDrawHideForPlayer(playerid, TextInfoZC3);
			TextDrawHideForPlayer(playerid, TextInfoZC4);
			TextDrawHideForPlayer(playerid, TextInfoZC5);
			TextDrawHideForPlayer(playerid, TextInfoZC6);
			TextDrawHideForPlayer(playerid, TextInfoZC7);
			SelectTextDraw(playerid, COLOR_NEWS2);
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(response == EDIT_RESPONSE_UPDATE) return 1;
	new ini[64];
	new key[24];
	for(new hID = 0; hID < MAX_HOUSES; hID ++)
	{
		for(new i = 0; i < MAX_FURNITURE; i ++)
		{
			if(objectid == HouseInfo[hID][FurnitureObj][i])
			{
				if(response) // Clicked on the save icon
				{
					format(ini, 64, HOUSE_FILE, hID);
	   				new INI:File = INI_Open(ini);
	    			INI_SetTag(File,"HouseData");
					HouseInfo[hID][FPosX][i] = x; HouseInfo[hID][FPosY][i] = y; HouseInfo[hID][FPosZ][i] = z;
					HouseInfo[hID][FRotX][i] = rx; HouseInfo[hID][FRotY][i] = ry; HouseInfo[hID][FRotZ][i] = rz;
					format(key, 24, "FPosX%d", i); INI_WriteFloat(File,key, HouseInfo[hID][FPosX][i]);
					format(key, 24, "FPosY%d", i); INI_WriteFloat(File,key, HouseInfo[hID][FPosY][i]);
					format(key, 24, "FPosZ%d", i); INI_WriteFloat(File,key, HouseInfo[hID][FPosZ][i]);
					format(key, 24, "FRotX%d", i); INI_WriteFloat(File,key, HouseInfo[hID][FRotX][i]);
					format(key, 24, "FRotY%d", i); INI_WriteFloat(File,key, HouseInfo[hID][FRotY][i]);
					format(key, 24, "FRotZ%d", i); INI_WriteFloat(File,key, HouseInfo[hID][FRotZ][i]);

					SetDynamicObjectPos(objectid, HouseInfo[hID][FPosX][i], HouseInfo[hID][FPosY][i], HouseInfo[hID][FPosZ][i]);
					SetDynamicObjectRot(objectid, HouseInfo[hID][FRotX][i], HouseInfo[hID][FRotY][i], HouseInfo[hID][FRotZ][i]);
					INI_Close(File);
				}
				else // Pressed ESC
				{
					SetDynamicObjectPos(objectid, HouseInfo[hID][FPosX][i], HouseInfo[hID][FPosY][i], HouseInfo[hID][FPosZ][i]);
					SetDynamicObjectRot(objectid, HouseInfo[hID][FRotX][i], HouseInfo[hID][FRotY][i], HouseInfo[hID][FRotZ][i]);
				}
				break;
			}
		}
	}
	return 1;
}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = fOffsetX;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = fOffsetY;
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = fOffsetZ;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = fRotX;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = fRotY;
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = fRotZ;

	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = fScaleX;
	if(fScaleX < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 0.1;
	else if(fScaleX > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1.5;

	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = fScaleY;
	if(fScaleY < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 0.1;
	else if(fScaleY > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1.5;

	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = fScaleZ;
	if(fScaleZ < 0.1) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 0.1;
	else if(fScaleZ > 1.5) PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1.5;

	if(IsPlayerAttachedObjectSlotUsed(playerid, slotselection[playerid])){RemovePlayerAttachedObject(playerid, slotselection[playerid]);}

	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);
	SendClientMessageEx(playerid, -1, "* Finalizaste de editar este objeto. Usa "COL_GENERAL"/toys {FFFFFF}si quieres editar otro objeto.");
	slotselection[playerid] = -1;
	Editing[playerid] = 0;
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
new idcar = GetPlayerVehicleID(playerid);
if(!isnull(inputtext))
{
    if(strfind(inputtext, "%s", true) != -1)
    {
		format(szMessage, sizeof(szMessage), "AdmWarning: %s (ID %d) es un posible dialog-exploiting, intenta enviar string en blanco mediante diálogos.", GetPlayerNameEx(playerid), playerid);
		ABroadCast(COLOR_GENERAL, szMessage, 2);
		format(szMessage, sizeof(szMessage), "%s a intentado insertar un falso string en un diálogo. [Exploit]", GetPlayerNameEx(playerid));
		Log("logs/reportbug.log", szMessage);
		Kick(playerid);
        return 1;
	}
}
switch(dialogid)
{
case DIALOG_BOOMBOX:
    {
		if(!response)
     	{
            SendClientMessage(playerid, COLOR_WHITE, " You cancel the Radio Station");
        	return 1;
        }
		switch(listitem)
  		{
    		case 0: { ShowPlayerDialog(playerid,DIALOG_BOOMBOX1,DIALOG_STYLE_MSGBOX,""COL_GENERAL"ZC:RP - Stereo",""COL_WHITE"¿Deseas colocar esta estación?\nAbsolutely Smooth Jazz - SKY.FM","Continuar","Atrás"); }
            case 1: { ShowPlayerDialog(playerid,DIALOG_BOOMBOX2,DIALOG_STYLE_MSGBOX,""COL_GENERAL"ZC:RP - Stereo",""COL_WHITE"¿Deseas colocar esta estación?\nRADIO SOUND POP - BRASIL","Continuar","Atrás"); }
            case 2: { ShowPlayerDialog(playerid,DIALOG_BOOMBOX3,DIALOG_STYLE_MSGBOX,""COL_GENERAL"ZC:RP - Stereo",""COL_WHITE"¿Deseas colocar esta estación?\nHOT 108 JAMZ","Continuar","Atrás"); }
            case 3: { ShowPlayerDialog(playerid,DIALOG_BOOMBOX4,DIALOG_STYLE_MSGBOX,""COL_GENERAL"ZC:RP - Stereo",""COL_WHITE"¿Deseas colocar esta estación?\nVenice Classic Radio Italia","Continuar","Atrás"); }
            case 4: { ShowPlayerDialog(playerid,DIALOG_BOOMBOX5,DIALOG_STYLE_MSGBOX,""COL_GENERAL"ZC:RP - Stereo",""COL_WHITE"¿Deseas colocar esta estación?\nRockRadio1.Com - Classic Rock and Heavy Metal","Continuar","Atrás"); }
            case 5: { ShowPlayerDialog(playerid,DIALOG_BOOMBOX6,DIALOG_STYLE_INPUT, ""COL_GENERAL"Stereo - Inserta URL", ""COL_WHITE"Inserta un Stream (www.shoutcast.com) para reproducirlo", "Continuar", "Cancelar"); }
			case 6:
			{
                if(GetPVarType(playerid, "pDynamicBBArea"))
			    {
			        new string[128];
					format(string, sizeof(string), "* %s apago su stereo.", GetPlayerNameEx(playerid));
			        foreach(Player, i)
					{
			            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
			            {
			                StopAudioEx(i);
			                SendClientMessage(i, COLOR_PURPLE, string);
						}
					}
			        DeletePVar(playerid, "pDynamicBBArea");
				}
				SendClientMessage(playerid, COLOR_WHITE, "Apagaste La Estacion");
			}
        }
		return 1;
	}
	case DIALOG_BOOMBOX1:
	{
	    if(!response)
	    {
	        ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,""COL_GENERAL"Stereo - Selecciona:",""COL_GENERAL"* "COL_WHITE"Jazz\n"COL_GENERAL"* "COL_WHITE"Pop\n"COL_GENERAL"* "COL_WHITE"Rap\n"COL_GENERAL"* "COL_WHITE"Clásica\n"COL_GENERAL"* "COL_WHITE"Rock & Metal\n"COL_GENERAL"* "COL_WHITE"Insertar URL\n"COL_GENERAL"* "COL_WHITE"Apagar Stereo","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "pDynamicBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
						{
							PlayAudioEx(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=86433", GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"), 50.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "pDynamicBBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=86433");
				}
			}
		}
		return 1;
	}
	case DIALOG_BOOMBOX2:
	{
	    if(!response)
	    {
	        ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,""COL_GENERAL"Stereo - Selecciona:",""COL_GENERAL"* "COL_WHITE"Jazz\n"COL_GENERAL"* "COL_WHITE"Pop\n"COL_GENERAL"* "COL_WHITE"Rap\n"COL_GENERAL"* "COL_WHITE"Clásica\n"COL_GENERAL"* "COL_WHITE"Rock & Metal\n"COL_GENERAL"* "COL_WHITE"Insertar URL\n"COL_GENERAL"* "COL_WHITE"Apagar Stereo","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "pDynamicBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
						{
							PlayAudioEx(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=7867", GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"), 50.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "pDynamicBBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=7867");
				}
			}
		}
		return 1;
	}
	case DIALOG_BOOMBOX3:
	{
	    if(!response)
	    {
	        ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,""COL_GENERAL"Stereo - Selecciona:",""COL_GENERAL"* "COL_WHITE"Jazz\n"COL_GENERAL"* "COL_WHITE"Pop\n"COL_GENERAL"* "COL_WHITE"Rap\n"COL_GENERAL"* "COL_WHITE"Clásica\n"COL_GENERAL"* "COL_WHITE"Rock & Metal\n"COL_GENERAL"* "COL_WHITE"Insertar URL\n"COL_GENERAL"* "COL_WHITE"Apagar Stereo","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "pDynamicBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
						{
							PlayAudioEx(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=32999", GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"), 50.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "pDynamicBBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=32999");
				}
			}
		}
		return 1;
	}
	case DIALOG_BOOMBOX4:
	{
		if(!response)
	    {
	        ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,""COL_GENERAL"Stereo - Selecciona:",""COL_GENERAL"* "COL_WHITE"Jazz\n"COL_GENERAL"* "COL_WHITE"Pop\n"COL_GENERAL"* "COL_WHITE"Rap\n"COL_GENERAL"* "COL_WHITE"Clásica\n"COL_GENERAL"* "COL_WHITE"Rock & Metal\n"COL_GENERAL"* "COL_WHITE"Insertar URL\n"COL_GENERAL"* "COL_WHITE"Apagar Stereo","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "pDynamicBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
						{
							PlayAudioEx(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=22146", GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"), 50.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "pDynamicBBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=22146");
				}
			}
		}
		return 1;
	}
	case DIALOG_BOOMBOX5:
	{
	    if(!response)
	    {
	        ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,""COL_GENERAL"Stereo - Selecciona:",""COL_GENERAL"* "COL_WHITE"Jazz\n"COL_GENERAL"* "COL_WHITE"Pop\n"COL_GENERAL"* "COL_WHITE"Rap\n"COL_GENERAL"* "COL_WHITE"Clásica\n"COL_GENERAL"* "COL_WHITE"Rock & Metal\n"COL_GENERAL"* "COL_WHITE"Insertar URL\n"COL_GENERAL"* "COL_WHITE"Apagar Stereo","Seleccionar", "Cancelar");
		}
		if(response)
        {
            if(listitem == 0)
            {
                if(GetPVarType(playerid, "pDynamicBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
						{
							PlayAudioEx(i, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=558051", GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"), 50.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "pDynamicBBStation", "http://yp.shoutcast.com/sbin/tunein-station.pls?id=558051");
				}
			}
		}
		return 1;
	}
	case DIALOG_BOOMBOX6:
	{
		if(response == 1)
		{
		    if(isnull(inputtext))
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "No has puesto ninguna URL." );
		        return 1;
		    }
		    if(strlen(inputtext))
		    {
		        if(GetPVarType(playerid, "pDynamicBB"))
				{
				    foreach(Player, i)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
						{
							PlayAudioEx(i, inputtext, GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"), 50.0, 1);
				  		}
				  	}
			  		SetPVarString(playerid, "pDynamicBBStation", inputtext);
				}
			}
		}
		else
		{
		    return 1;
		}
	}
case	MPSPAYTICKETS:
{
    if(response)
    {

		if(Info[playerid][pWantedLevel] != 0)
		{
			format(szMessage, sizeof(szMessage), "%s intenta pagar multas y es buscado por la policía - Nivel de búsqueda: %i.", GetPlayerNameEx(playerid), Info[playerid][pWantedLevel]);
			SendRadioMessage(1, TEAM_RADIO_COLOR, szMessage);
			SendRadioMessage(2, TEAM_RADIO_COLOR, szMessage);
			return SendClientMessageEx(playerid, COLOR_YELLOW, "La policía ha dado comunicado que usted está buscado, y están en camino.");
		}
		if(PlayerVehicleInfo[playerid][listitem][pvTicket])
		{
			if(GetPlayerCash(playerid) < PlayerVehicleInfo[playerid][listitem][pvTicket])
			{
				return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero para pagar la multa.");
			}
			GivePlayerCash(playerid, -PlayerVehicleInfo[playerid][listitem][pvTicket]);
			Tax += PlayerVehicleInfo[playerid][listitem][pvTicket];
			format(szMessage, sizeof(szMessage), "Pagaste la multa de $%d de tu %s.", PlayerVehicleInfo[playerid][listitem][pvTicket], VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400]);
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			PlayerVehicleInfo[playerid][listitem][pvTicket] = 0;
		}
		else if(PlayerVehicleInfo[playerid][listitem][pvImpounded])
		{
			new iCost = (PlayerVehicleInfo[playerid][listitem][pvPrice] / 20) + PlayerVehicleInfo[playerid][listitem][pvTicket] + (Info[playerid][pLevel] * 2);
			if(GetPlayerCash(playerid) < iCost)
			{
				return SendClientMessageEx(playerid, COLOR_GREY, "No tienes suficiente dinero para pagar la multa.");
			}
			format(szMessage, sizeof(szMessage), "Liberaste tu %s por $%i.", VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400], iCost);
			SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
			SendClientMessageEx(playerid, COLOR_GRAD2, "Tu auto se encuentra en el depósito municipal, puedes abrir la reja usando /deposito.");
			GivePlayerCash(playerid, -iCost);
			Tax += iCost;
			PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
			PlayerVehicleInfo[playerid][listitem][pvPosX] = 1655.4379;
			PlayerVehicleInfo[playerid][listitem][pvPosY] = -1829.5668;
			PlayerVehicleInfo[playerid][listitem][pvPosZ] = 13.2677;
			PlayerVehicleInfo[playerid][listitem][pvPosAngle] = 91.6165;
			PlayerVehicleInfo[playerid][listitem][pvTicket] = 0;
			PlayerVehicleInfo[playerid][listitem][pvVW] = 0;
            ++PlayerCars;
			PlayerVehicleInfo[playerid][listitem][pvId] = CreateVehicle(PlayerVehicleInfo[playerid][listitem][pvModelId], PlayerVehicleInfo[playerid][listitem][pvPosX], PlayerVehicleInfo[playerid][listitem][pvPosY], PlayerVehicleInfo[playerid][listitem][pvPosZ], PlayerVehicleInfo[playerid][listitem][pvPosAngle],PlayerVehicleInfo[playerid][listitem][pvColor1], PlayerVehicleInfo[playerid][listitem][pvColor2], -1);
			SetPlayerVirtualWorld(PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvVW]);
			VehicleFuel[PlayerVehicleInfo[playerid][listitem][pvId]] = PlayerVehicleInfo[playerid][listitem][pvFuel];
			if(PlayerVehicleInfo[playerid][listitem][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvLock]);
			LoadPlayerVehicleMods(playerid, listitem);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Este coche, o bien no existe, o no es necesario liberar o tiene sus multas pagadas.");
    }
	return 1;
}
case	DIALOG_CDBUY:
{
    if(!IsPlayerInAnyVehicle(playerid))
	{
	    TogglePlayerControllable(playerid, 1);
		SendClientMessageEx(playerid,COLOR_GREY,"* Necesitas estar en el vehículo que desea comprar.");
		return 1;
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	new d = GetCarSale(vehicleid);
	if(response)
	{
	    if(carsforplayer[playerid] == 2) return SendClientMessageEx(playerid,COLOR_WHITE,"* Tienes 2 coches liberados, primero guarda uno para comprar otro.");
        if(varCarSale[d][VehSpawn][0] == 0.0 && varCarSale[d][VehSpawn][1] == 0.0 && varCarSale[d][VehSpawn][2] == 0.0)
        {
			SendClientMessageEx(playerid, COLOR_GREY, "* Por el momento no puede comprarse este coche.");
			RemovePlayerFromVehicle(playerid);
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
			TogglePlayerControllable(playerid, 1);
			return 1;
        }
        new playervehicleid = GetPlayerFreeVehicleId(playerid);
        new carsamount = VehicleCount(playerid);
        if((Info[playerid][pVIP] == 0) && carsamount >= 2)
		{
            SendClientMessageEx(playerid, COLOR_GREY, "* No puedes tener más coches, usuarios normales sólo pueden tener 2 coches.");
            RemovePlayerFromVehicle(playerid);
            new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
            TogglePlayerControllable(playerid, 1);
            return 1;
		}
        if(Info[playerid][pVIP] == 1 && carsamount >= 5)
        {
            SendClientMessageEx(playerid, COLOR_GREY, "* No puedes tener más coches, SVIP Sólo puede tener 5 coches.");
            RemovePlayerFromVehicle(playerid);
            new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
            TogglePlayerControllable(playerid, 1);
            return 1;
        }
        if(Info[playerid][pVIP] == 2 && carsamount >= 8)
        {
            SendClientMessageEx(playerid, COLOR_GREY, "* No puedes tener más coches, GVIP Sólo puede tener 8 coches.");
            RemovePlayerFromVehicle(playerid);
            new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
            TogglePlayerControllable(playerid, 1);
            return 1;
        }
	    if(playervehicleid == -1)
	    {
	        SendClientMessageEx(playerid, COLOR_GREY, "* Este jugador no puede tener más coches.");
            RemovePlayerFromVehicle(playerid);
            new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
            TogglePlayerControllable(playerid, 1);
            return 1;
	    }
	    new randcolor1 = Random(0, 126);
	    new randcolor2 = Random(0, 126);
	    TogglePlayerControllable(playerid, 1);
	    new cost;
	    if(Info[playerid][pVIP] < 1)
        {
            cost = varCarSale[d][CSVehCost];
            if(GetPVarInt(playerid, "Cash") < cost)
            {
				SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero suficiente para comprar este coche.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				return 1;
            }
	        SendClientMessageEx(playerid, COLOR_WHITE, "* Gracias por la compra, usa /ayuda y en la sección COCHE puedes ver los comandos disponibles.");
	        SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")-varCarSale[d][CSVehCost]);
	        Tax += ( varCarSale[d][CSVehCost] * 40 ) / ( 100 );
        }
        else
        {
			cost = ( varCarSale[d][CSVehCost] * 40 ) / ( 100 );
            if(GetPVarInt(playerid, "Cash") < cost)
            {
				SendClientMessageEx(playerid, COLOR_GRAD1, "ERROR: No tienes dinero suficiente para comprar este coche.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				return 1;
            }
            SendClientMessageEx(playerid, COLOR_WHITE, "* Gracias por la compra, usa /ayuda y en la sección COCHE puedes ver los comandos disponibles.");
	        SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash") - cost );
			Tax += cost;
 		}
        //new car
        CreatePlayerVehicle(playerid, playervehicleid, varCarSale[d][CSVehModel], varCarSale[d][VehSpawn][0], varCarSale[d][VehSpawn][1], varCarSale[d][VehSpawn][2], varCarSale[d][VehSpawn][3], randcolor1, randcolor2, cost);
        SetPlayerPos(playerid, varCarSale[d][VehSpawn][0], varCarSale[d][VehSpawn][1], varCarSale[d][VehSpawn][2]+2);
		//SetTimerEx("PutPlayerInVeh", 2000, 0, "dd", playerid, car);
		//PutPlayerInVehicle(playerid, car, 1);
	}
	else
	{
        RemovePlayerFromVehicle(playerid);
        new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(playerid, slx, sly, slz);
		SetPlayerPos(playerid, slx, sly, slz+1.2);
        TogglePlayerControllable(playerid, 1);
		return 1;
	}
}
case    D_SPEEDCAMRANGE:
{
	if(response)
	{
		if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_SPEEDCAMRANGE,DIALOG_STYLE_INPUT,"Editar Cámara - Rango","Sólo números.\nEscribe el rango que alcanzará la cámara.","Ok","Cancelar");
		new id = GetPVarInt(playerid, "IDSpeedCam");
		new range = strval(inputtext);
		if(range < 5 || range > 30) return ShowPlayerDialog(playerid,D_SPEEDCAMRANGE,DIALOG_STYLE_INPUT,"Editar Cámara - Rango","* Rango no mayor de 30.\n* Rango no menor de 5.\nEscribe el rango que alcanzará la cámara.","Ok","Cancelar");
		vCameraInfo[id][vCameraRange] = range;
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el rango de la cámara.");
        saveSpeedCam();
        DeletePVar(playerid,"IDSpeedCam");
	}
	else return DeletePVar(playerid,"IDSpeedCam");
}
case    D_SPEEDCAMLIMIT:
{
	if(response)
	{
		if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_SPEEDCAMLIMIT,DIALOG_STYLE_INPUT,"Editar Cámara - Límite","Sólo números.\nEscribe el límite de velocidad que podrán pasar los coches.","Ok","Cancelar");
		new id = GetPVarInt(playerid, "IDSpeedCam");
		new text_info[64], limit = strval(inputtext);
		if(limit < 10 || limit > 250) return ShowPlayerDialog(playerid,D_SPEEDCAMLIMIT,DIALOG_STYLE_INPUT,"Editar Cámara - Límite","* Límite no mayor de 250.\n* Límite no menor de 10.\nEscribe el límite de velocidad que podrán pasar los coches.","Ok","Cancelar");
		vCameraInfo[id][vCameraLimit] = limit;
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el Límite de la cámara, puedes verlo en el 3dlabel.");
        saveSpeedCam();
        DeletePVar(playerid,"IDSpeedCam");
   		switch(vCameraInfo[id][vCameraStatus])
   		{
   			case 0: format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\nLímite: "COL_GENERAL"MPH %d", id,vCameraInfo[id][vCameraLimit]);
			case 1: format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\n"COL_RED"(DESACTIVADA)", id);
   		}
		UpdateDynamic3DTextLabelText(vCameraInfo[id][vCameraLabel],-1,text_info);
	}
	else return DeletePVar(playerid,"IDSpeedCam");
}
case 	D_SPEEDCAMSTATUS:
{
    if(response)
    {
        new id = GetPVarInt(playerid, "IDSpeedCam"), text_info[64];
   		switch(listitem)
   		{
   			case 0:
   			{
			   vCameraInfo[id][vCameraStatus] = 0;
			   format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\nLímite: "COL_GENERAL"MPH %d", id,vCameraInfo[id][vCameraLimit]);
			}
   			case 1:
			{
			   vCameraInfo[id][vCameraStatus] = 1;
			   format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\n"COL_RED"(DESACTIVADA)", id);
			}
   		}
		UpdateDynamic3DTextLabelText(vCameraInfo[id][vCameraLabel],-1,text_info);
    	SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el estado de la cámara, puedes verlo en el 3dlabel.");
        saveSpeedCam();
        DeletePVar(playerid,"IDSpeedCam");
   	}
   	else return DeletePVar(playerid,"IDSpeedCam");
}
case 	D_SPEEDCAMFINE:
{
    if(response)
    {
        if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_SPEEDCAMFINE,DIALOG_STYLE_INPUT,"Editar Cámara - Límite","Sólo números.\nEscribe la multa que dará la cámara.","Ok","Cancelar");
        new id = GetPVarInt(playerid, "IDSpeedCam");
        new fine = strval(inputtext);
        if(fine < 100 || fine > 15000) return ShowPlayerDialog(playerid,D_SPEEDCAMFINE,DIALOG_STYLE_INPUT,"Editar Cámara - Multa","* Multa no mayor de 15000.\n* Límite no menor de 100.\nEscribe la multa que dará la cámara.","Ok","Cancelar");
        vCameraInfo[id][vCameraTicket] = fine;
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste la multa de la cámara.");
        saveSpeedCam();
        DeletePVar(playerid,"IDSpeedCam");
   	}
   	else return DeletePVar(playerid,"IDSpeedCam");
}
case    D_NEWVEH:
{
	if(response)
	{
		if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid,D_NEWVEH,DIALOG_STYLE_INPUT,"Crear Vehículo","Sólo números.\nEscribe la ID del modelo del coche que quieres crear.","Ok","Cancelar");
		new modelid;
		modelid = strval(inputtext);
		if(modelid < 400 || modelid > 611) { SendClientMessageEx(playerid, COLOR_GREY, "* ID no menor de 400 y no mayor de 611 !"); return 1; }
        SendClientMessageEx(playerid, -1, "Ahora vé a la posición donde quieres que esté el vehículo.");
		SendClientMessageEx(playerid, -1, "Una vez listo, presiona el botón FIRE - DISPARAR (CLICK).");
        SetPVarInt(playerid, "ModelCarSale", modelid);
        SetPVarInt(playerid, "CreandoCoche", 1);
	}
	else return DeletePVar(playerid,"IDCarSale");
}
case 	D_NEWVEH_1:
{
	if(response)
	{
    	new Float: Pos[4];
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		GetPlayerFacingAngle(playerid, Pos[3]);
		SetPVarFloat(playerid,"CarSaleX",Pos[0]);
		SetPVarFloat(playerid,"CarSaleY",Pos[1]);
		SetPVarFloat(playerid,"CarSaleZ",Pos[2]);
		SetPVarFloat(playerid,"CarSaleA",Pos[3]);
		ShowPlayerDialog(playerid,D_NEWVEH_2,DIALOG_STYLE_INPUT,"Creando vehículo","Bien, ahora ingresa el precio de este vehículo.","Ok","Cancelar");
	}
	else
	{
	    DeletePVar(playerid,"IDCarSale");
	    DeletePVar(playerid,"CreandoCoche");
	   	return DeletePVar(playerid,"ModelCarSale");
	}
}
case D_NEWVEH_2:
{
	if(response)
	{
		if (isnumeric(inputtext))
    	{
        	SetPVarInt(playerid, "PriceSaleCar", strval(inputtext));
        	DeletePVar(playerid,"CreandoCoche");
        	SetPVarInt(playerid, "CreandoCoche2", 1);
        	SendClientMessageEx(playerid, -1, "Ahora vé a la posición donde quieres que aparezca el vehículo al comprarlo.");
			SendClientMessageEx(playerid, -1, "Una vez listo, presiona el botón FIRE - DISPARAR (CLICK).");
    	}
    	else
    	{
    	    return ShowPlayerDialog(playerid,D_NEWVEH_2,DIALOG_STYLE_INPUT,"Creando vehículo","Sólo números.\nIngresa el precio para el vehículo.","Ok","Cancelar");
    	}
	}
	else
	{
	    DeletePVar(playerid,"CarSaleX");
	    DeletePVar(playerid,"CarSaleY");
	    DeletePVar(playerid,"CarSaleZ");
	    DeletePVar(playerid,"CarSaleA");
	    DeletePVar(playerid,"IDCarSale");
	    DeletePVar(playerid,"CreandoCoche");
	   	return DeletePVar(playerid,"ModelCarSale");
	}
}
case D_NEWVEH_3:
{
	if(response)
	{
		new Float: Pos[4];
		GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		GetPlayerFacingAngle(playerid, Pos[3]);
		new Float: x, Float: y, Float: z, Float: a;
		new model, id, price;
		price = GetPVarInt(playerid, "PriceSaleCar");
		model = GetPVarInt(playerid, "ModelCarSale");
		id = GetPVarInt(playerid, "IDCarSale");
		x = GetPVarFloat(playerid,"CarSaleX");
		y = GetPVarFloat(playerid,"CarSaleY");
		z = GetPVarFloat(playerid,"CarSaleZ");
		a = GetPVarFloat(playerid,"CarSaleA");
		varCarSale[id][VehSpawn][0] = Pos[0];
		varCarSale[id][VehSpawn][1] = Pos[1];
		varCarSale[id][VehSpawn][2] = Pos[2];
		varCarSale[id][VehSpawn][3] = Pos[3];
		CreateSaleCar(id,model,x,y,z,a,price);
		
	    DeletePVar(playerid,"CarSaleX");DeletePVar(playerid,"CarSaleY");
	    DeletePVar(playerid,"CarSaleZ");DeletePVar(playerid,"CarSaleA");
	    DeletePVar(playerid,"IDCarSale");DeletePVar(playerid,"CreandoCoche");
	    DeletePVar(playerid,"CreandoCoche2");DeletePVar(playerid,"ModelCarSale");
	   	DeletePVar(playerid,"PriceSaleCar");
	   	return 1;
	}
}
case    D_SERVICES: if(response)
{
	switch(listitem)
	{
	    case    0:
	    {
			if(GetPVarInt(playerid, "Injured") == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás herido, no puedes llamar a médicos ahora!");
			new zone[MAX_ZONE_NAME];
			GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
			SetPVarInt(playerid, "EMSAttempt", 1);
			SendClientMessageEx(playerid, COLOR_WHITE, "La SAMD ha sido informado de su ubicación actual y están en camino.");
			format(szMessage, sizeof(szMessage), "* Central: Reportan a un tal (%d) %s que puede estar herido en %s, se requiere emegercia inmediata.",playerid, GetPlayerNameEx(playerid), zone);
			SendRadioMessage(4, TEAM_MED_COLOR, szMessage);
			Info[playerid][pServiceTime] = 30;
			return 1;
	    }
	    case    1:
	    {
  			SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SendClientMessageEx(playerid, COLOR_GREY, 		"Tip: Ahora usa T, y habla por el chat por teléfono. Usa /colgar para finalizar la llamada.");
			SendClientMessageEx(playerid, COLOR_ALLDEPT, 	"Comisaría: Buenas, explícanos brevemente lo que ha sucecido.");
			Mobile[playerid] = 912;
			return 1;
	    }
	    case    2:
	    {
			if(Medics < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* En este momento no se encuentran médicos disponibles, intenta más tarde!");
			format(szMessage, sizeof(szMessage), "** %s necesita un médico - usa /aceptar medico para aceptar la llamada.", GetPlayerNameEx(playerid));
			SendRadioMessage(4, TEAM_AZTECAS_COLOR, szMessage);
			SendClientMessageEx(playerid, COLOR_GENERAL, "* Llamaste a un médico espera a una llamada.");
			MedicCall = playerid;
			Info[playerid][pServiceTime] = 30;
			return 1;
	    }
	    case    3:
	    {
	        if(TaxiDrivers < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* En este momento no se encuentran taxistas trabajando, intenta más tarde!");
			format(szMessage, sizeof(szMessage), "** %s necesita un taxista en su posición - usa /aceptar taxi para aceptar la llamada.", GetPlayerNameEx(playerid));
			MessageTaxiDriver(9, TEAM_AZTECAS_COLOR, szMessage);
			SendClientMessageEx(playerid, COLOR_GENERAL, "* Has solicitado un taxista, espera por una respuesta.");
			Info[playerid][pServiceTime] = 30;
			TaxiCall = playerid;
			return 1;
	    }
	    case    4:
	    {
			if(Mechanics < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* En este momento no se encuentran mecánicos en servicio, intenta más tarde.");
			format(szMessage, sizeof(szMessage), "** %s necesita un mecánico - usa /aceptar mecanico para aceptar la llamada.", GetPlayerNameEx(playerid));
			SendFamilyMessage(6, TEAM_AZTECAS_COLOR, szMessage);
			SendJobMessage(13, TEAM_AZTECAS_COLOR, szMessage);
			SendClientMessageEx(playerid, COLOR_GENERAL, "* Has solicitado un mecanico, espera por una respuesta.");
			MechanicCall = playerid;
			Info[playerid][pServiceTime] = 30;
			return 1;
		}
		
	}
}
case	ELEVATOR4:
{
 	if(response)
	{
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 301.5812,-1490.6759,-45.1302);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 600);
		}
		else
		{
			SetPlayerPos(playerid, 308.8113,-1509.8134,77.7645);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
}
case	ELEVATOR5:
{
 	if(response)
	{
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 316.2381,-1513.3770,24.9219);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
			SetPlayerPos(playerid, 308.8113,-1509.8134,77.7645);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
}
case	ELEVATOR7:
{
 	if(response)
	{
		if (listitem == 0)
		{
			SetPlayerPos(playerid, 301.5812,-1490.6759,-45.1302);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 600);
		}
		else
		{
			SetPlayerPos(playerid, 316.2381,-1513.3770,24.9219);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
}
case 	FAMILY_SKIN:
{
	new familyex = Info[playerid][pFMember];
    switch(listitem)
    {
	    case 0: Info[playerid][pChar] = fINFO[familyex][FamilySkins][0];
        case 1: Info[playerid][pChar] = fINFO[familyex][FamilySkins][1];
        case 2: Info[playerid][pChar] = fINFO[familyex][FamilySkins][2];
        case 3: Info[playerid][pChar] = fINFO[familyex][FamilySkins][3];
    }
    SetPlayerSkin(playerid, Info[playerid][pChar]);
}
case	DIALOG_NAMECHANGE:
{
	if(response)
	{
	    if(isnull(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* No has ingresado nada, vuelve a intentarlo." );
	    if(strlen(inputtext) >= 20) return SendClientMessageEx( playerid, COLOR_GREY, "* No se puede usar un nombre que está por encima de 20 caracteres." );
	    for(new i = 0; i < strlen( inputtext ); i++) if (inputtext[i] == ' ') return SendClientMessageEx(playerid, COLOR_GREY, "* Porfavor usar '_'(Guión bajo) - Nombre_Apellido.");
	    switch(Info[playerid][pMember])
	    {
	        case 2:
	        {
	            SetPVarString(playerid, "NewNameRequest", inputtext);
	            SetPVarInt(playerid, "RequestingNameChange", 1);
	            format(szMessage, sizeof(szMessage), "Has solicitado un cambio de nombre libre, espera que los administradores generales lo aprueben.", inputtext);
	            SendClientMessageEx(playerid,COLOR_YELLOW,szMessage);
	            format( szMessage, sizeof( szMessage ), "AdmWarning: %s (FBI) (ID %d) solicitó un cambio de nombre libre a %s - /aname %d o /dname %d", GetPlayerNameEx(playerid), playerid, inputtext, playerid, playerid);
	            ABroadCast( COLOR_GENERAL, szMessage, 2 );
	        }
	        case 8:
	        {
	            SetPVarString(playerid, "NewNameRequest", inputtext);
	            SetPVarInt(playerid, "RequestingNameChange", 1);
	            format(szMessage, sizeof(szMessage), "Has solicitado un cambio de nombre libre, espera que los administradores generales lo aprueben.", inputtext);
	            SendClientMessageEx(playerid,COLOR_YELLOW,szMessage);
	            format( szMessage, sizeof( szMessage ), "AdmWarning: %s (HITMAN) (ID %d) solicitó un cambio de nombre libre a %s - /aname %d o /dname %d", GetPlayerNameEx(playerid), playerid, inputtext, playerid, playerid);
	            ABroadCast( COLOR_GENERAL, szMessage, 2 );
	        }
	        default: return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto.");
	    }
	}
	else return 1;
}
case	BUYTOYSCOP:
{
    new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
		new name[24] = "Nada";

		for(new i;i<sizeof(HoldingObjectsAll);i++)
		{
			if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			{
				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
			}
		}
		format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, BUYTOYSCOP2, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
}
case	BUYTOYSCOP2: if(response)
{
    if(listitem >= 8 && Info[playerid][pVIP] <= 1 || listitem >= 8) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser un nivel mayor de VIP.");
    if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");
	slotselection[playerid] = listitem;
	new stringg[512];
	for(new x;x<sizeof(HoldingObjectsCop);x++)
	{
	    format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsCop[x][holdingmodelname], HoldingObjectsCop[x][holdingprice]);
	}
	ShowPlayerDialog(playerid, BUYTOYSCOP3, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Objeto", stringg, "Comprar", "Cancelar");
}
case	BUYTOYSCOP3: if(response)
{
	if(GetPlayerCash(playerid) < HoldingObjectsCop[listitem][holdingprice]) return SendClientMessageEx(playerid, COLOR_WHITE, "* No puedes pagar eso!");
	else
	{
		GivePlayerCash(playerid, -HoldingObjectsCop[listitem][holdingprice]);
	    PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsCop[listitem][holdingmodelid];
	    Tax += HoldingObjectsCop[listitem][holdingprice];

		new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
	    if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
	    {
	        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
	    }
	    else if(modelid >= 18891 && modelid <= 18910)
	    {
	    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		}
		else if(modelid >= 18926 && modelid <= 18935)
		{
			PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		}
		else if(modelid >= 18911 && modelid <= 18920)
		{
		    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		}
		else if(modelid == 19078 || modelid == 19078)
		{
		    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		}
		else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
		{
		    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		}
	    else
	    {
			PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY] = 1;
			PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ] = 1;
		}

		format(szMessage, sizeof(szMessage), "* Has comprado un %s por $%d (Slot: %d)", HoldingObjectsCop[listitem][holdingmodelname], HoldingObjectsCop[listitem][holdingprice], slotselection[playerid]);
	    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	    SendClientMessageEx(playerid, COLOR_WHITE, " Usa /toys para editar tus objetos");
	}
}
case	BUYTOYSGOLD: if(response)
{
	if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "* No tienes acceso a este comando.");
    new stringg[512];
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
		new name[24] = "Nada";
		for(new i;i<sizeof(HoldingObjectsAll);i++)
		{
			if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID]){format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);}
		}
		format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
	}
	ShowPlayerDialog(playerid, BUYTOYSGOLD2, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
}
case	BUYTOYSGOLD2:
{
	if(response)
	{
    	if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "* No tienes acceso a este comando.");
		if(listitem >= 8 && Info[playerid][pVIP] != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser un nivel mayor de VIP para usar este slot.");
		slotselection[playerid] = listitem;
		ShowModelSelectionMenu(playerid, ToyListGold, "Objetos VIP Gold+", 0x000000FF, COLOR_GREY, 0xFFF6BDFF);
	}
	else return 1;
}
case	BUYTOYS:
{
    if(response)
    {
    	new stringg[512];
		for(new x;x<MAX_PLAYERTOYS;x++)
		{
			new name[24];
    		format(name, sizeof(name), "Nada");
			for(new i; i < sizeof(HoldingObjectsAll); i++)
   			{
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
    			{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		ShowPlayerDialog(playerid, BUYTOYS2, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Slot", stringg, "Seleccionar", "Cancelar");
	}
	if(!response)
	{
    	if(Info[playerid][pVIP] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "* No tienes acceso a esta función. (VIP Gold)");
    	return ShowPlayerDialog(playerid, BUYTOYSGOLD, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios VIP", "Bienvenido a la tienda de accesorios VIP! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir un slot.","Ok", "Salir");
	}
}
case	BUYTOYS2:
{
	if(response)
	{
 	   if(listitem >= 8 && Info[playerid][pVIP] != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser un nivel mayor de VIP para usar este slot.");
       if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_YELLOW, "* Ya tienes algo en esa ranura, eliminala con /toys");
	   slotselection[playerid] = listitem;
       ShowModelSelectionMenu(playerid, ToyList, "Selecciona un objeto", 0x000000FF, COLOR_GREY, 0xFFF6BDFF);
	}
	else return ShowPlayerDialog(playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "Bienvenido a la tienda de accesorios! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir que menú verás","Normal", "VIP");
}
case	TOYS:
{
	if(response)
	{
		switch(listitem)
		{
			case	0:
			{
	    		new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
		    		new name[24];
		    		format(name, sizeof(name), "Nada");
		    		for(new i;i<sizeof(HoldingObjectsAll);i++)
		    		{
   						if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
		        		{
       						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
						}
					}
					format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				}
				ShowPlayerDialog(playerid, WEARTOY, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Objeto", stringg, "Seleccionar", "Atrás");
    		}
    		case	1:
			{
	    		new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
		    		new name[24];
		    		format(name, sizeof(name), "Nada");
					for(new i;i<sizeof(HoldingObjectsAll);i++)
		    		{
   						if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
		        		{
       						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
						}
					}
					format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				}
				ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Objeto", stringg, "Seleccionar", "Atrás");
			}
			case	2:
			{
	    		new stringg[512];
				for(new x;x<MAX_PLAYERTOYS;x++)
				{
		    		new name[24];
		    		format(name, sizeof(name), "Nada");
		    		for(new i;i<sizeof(HoldingObjectsAll);i++)
		    		{
   						if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
		        		{
       						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
						}
					}
					format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
				}
				ShowPlayerDialog(playerid, DELETETOY, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Objeto", stringg, "Borrar", "Atrás");
			}
		}
	}
}
case	EDITTOYS:
{
	if(response)
	{
    	if(PlayerToyInfo[playerid][listitem][ptModelID] == 0) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""COL_GENERAL"Menu Accesorios: {FFFFFF}Edición", "No tienes nada en ese slot!", "OK", "");
		SendClientMessageEx(playerid, COLOR_WHITE, "TIP: Posiciona bien la cámara y usa /headmove para una edición mucho mejor.");
	    slotselection[playerid] = listitem;
	    ShowEditMenu(playerid);
	}
	else return ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, ""COL_GENERAL"Toy Menu", ""COL_GENERAL"* "COL_WHITE"Poner/Quitar un Toy\n"COL_GENERAL"* "COL_WHITE"Editar un Toy\n"COL_GENERAL"* "COL_WHITE"Eliminar un Toy","OK", "Cancelar" );
}
case	EDITTOYS2:
{
    if(response)
    {
        switch(listitem)
		{
            case 0: ShowPlayerDialog(playerid, EDITTOYSBONE, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona una Parte", "Columna\nCabeza\nBrazo Izq Sup\nBrazo Der Sup\nMano Izq\nMano Derecha\nMuslo Izq\nMuslo Der\nPie Izq\nPie Der\nRight calf\nLeft calf\nAnteBrazo Izq\nAnteBrazo Der\nClavicula Izq\nClavicula Der\nCuello\nQuijada", "Seleccionar", "Cancelar");
			case 1:
			{
				/*SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleX],
				PlayerToyInfo[playerid][slotselection[playerid]][ftscaleY], PlayerToyInfo[playerid][slotselection[playerid]][ftscaleZ]);*/
				EditAttachedObject(playerid, slotselection[playerid]);
				Editing[playerid] =1;
			    return SendClientMessage(playerid, -1, "* Mantén presionado "COL_GENERAL"~k~~PED_SPRINT~{FFFFFF} para cambiar la posición de la cámara.");
			}
		}
	}
	else
	{
	    new stringg[512];
		for(new x;x<MAX_PLAYERTOYS;x++)
		{
		    new name[24];
		    format(name, sizeof(name), "Nada");

		    for(new i;i<sizeof(HoldingObjectsAll);i++)
		    {
   				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
		        {
       				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		ShowPlayerDialog(playerid, EDITTOYS, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Accesorio", stringg, "Seleccionar", "Cancelar");
	}
}
case	EDITTOYSBONE:
{
    if(response){PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = listitem+1;}
 	ShowEditMenu(playerid);
}
case	WEARTOY:
{
    if(response)
    {
    	if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
    	{
        	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""COL_GENERAL"Menu Accesorios: {FFFFFF}Poner/Quitar", "No tienes ningún objeto en este slot!", "OK", "");
		}
		else
		{
	    	if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
			{
		 		new name[24];
		    	format(name, sizeof(name), "Nada");
				for(new i;i<sizeof(HoldingObjectsAll);i++)
   				{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
					{
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
		    	format(szMessage, sizeof(szMessage), "Te quitaste correctamente tu %s (Bone: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		    	RemovePlayerAttachedObject(playerid, listitem);
			}
			else
			{
		    	SetPlayerAttachedObject(playerid, listitem, PlayerToyInfo[playerid][listitem][ptModelID], PlayerToyInfo[playerid][listitem][ptBone], PlayerToyInfo[playerid][listitem][ptPosX], PlayerToyInfo[playerid][listitem][ptPosY], PlayerToyInfo[playerid][listitem][ptPosZ], PlayerToyInfo[playerid][listitem][ptRotX], PlayerToyInfo[playerid][listitem][ptRotY], PlayerToyInfo[playerid][listitem][ptRotZ], PlayerToyInfo[playerid][listitem][ftscaleX],
				PlayerToyInfo[playerid][listitem][ftscaleY], PlayerToyInfo[playerid][listitem][ftscaleZ]);
		    	new name[24];
		    	format(name, sizeof(name), "Nada");
				for(new i;i<sizeof(HoldingObjectsAll);i++)
   				{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
					{
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
				format(szMessage, sizeof(szMessage), "%s puesto correctamente. (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			}
		}
	}
	else return ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, ""COL_GENERAL"Toy Menu", ""COL_GENERAL"* "COL_WHITE"Poner/Quitar un Toy\n"COL_GENERAL"* "COL_WHITE"Editar un Toy\n"COL_GENERAL"* "COL_WHITE"Eliminar un Toy","OK", "Cancelar" );
}
case	DELETETOY:
{
	if(response)
	{
		PlayerToyInfo[playerid][listitem][ptModelID] = 0;
		PlayerToyInfo[playerid][listitem][ptBone] = 0;
		PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosX] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosY] = 0.0;
		PlayerToyInfo[playerid][listitem][ptPosZ] = 0.0;
		PlayerToyInfo[playerid][listitem][ftscaleZ] = 0.0;
		PlayerToyInfo[playerid][listitem][ftscaleY] = 0.0;
		PlayerToyInfo[playerid][listitem][ftscaleX] = 0.0;
		if(IsPlayerAttachedObjectSlotUsed(playerid, listitem)) RemovePlayerAttachedObject(playerid, listitem);
		format(szMessage, sizeof(szMessage), "Has eliminado tu accesorio del slot %d", listitem);
    	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""COL_GENERAL"Menu Accesorios", szMessage, "OK", "");
	}
	else return ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, ""COL_GENERAL"Toy Menu", ""COL_GENERAL"* "COL_WHITE"Poner/Quitar un Toy\n"COL_GENERAL"* "COL_WHITE"Editar un Toy\n"COL_GENERAL"* "COL_WHITE"Eliminar un Toy","OK", "Cancelar" );
}
case	EQUIPO_CNN:
{
    if(response == 1)
    {
        ResetPlayerWeaponsEx(playerid);
		switch(listitem)
        {
	        case 0:
	        {
				GivePlayerValidWeapon(playerid, 1);
				GivePlayerValidWeapon(playerid, 41); Skin(playerid, 164);
				SetHP(playerid, 100);
	            format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s coge el equipo de seguridad.", GetPlayerNameEx(playerid));
                NearMsg(playerid, -1, szMessage,20.0);
			}
	        case 1:
	        {
				GivePlayerValidWeapon(playerid, 41);
				GivePlayerValidWeapon(playerid, 43);
				SetHP(playerid, 100);
	            format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s coge el equipo de Periodista.", GetPlayerNameEx(playerid));
	            NearMsg(playerid, -1, szMessage,20.0);
	        }
	        case 2:
			{
			    Skin(playerid, Info[playerid][pChar]);
			    format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s se viste con ropa normal.", GetPlayerNameEx(playerid));
			    NearMsg(playerid, -1, szMessage,20.0);
			}
	    }
    }
}
case	EQUIPO_GOB:
{
    if(response == 1)
    {
        switch(listitem)
        {
	        case 0:
	        {
				GivePlayerValidWeapon(playerid, 22);
				GivePlayerValidWeapon(playerid, 1);
				GivePlayerValidWeapon(playerid, 41);
				SetPlayerSkin(playerid, 163);
				SetHP(playerid, 100);
	            format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s coge el equipo de seguridad.", GetPlayerNameEx(playerid));
	            NearMsg(playerid, -1, szMessage,20.0);
	        }
	        case 1:
	        {
				GivePlayerValidWeapon(playerid, 22);
				GivePlayerValidWeapon(playerid, 1);
				GivePlayerValidWeapon(playerid, 41);
				SetHP(playerid, 100);
				SetPlayerSkin(playerid, 166);
	            format(szMessage, sizeof(szMessage), "*"COL_YELLOW"* "COL_PURPLE"%s coge el equipo de chofér.", GetPlayerNameEx(playerid));
	            NearMsg(playerid, -1, szMessage,20.0);
	        }
	        case 2:
	        {
				GivePlayerValidWeapon(playerid, 22);
				SetHP(playerid, 100);
				format(szMessage, sizeof(szMessage), "*"COL_YELLOW"* "COL_PURPLE"%s coge botiquín de salud.", GetPlayerNameEx(playerid));
	            NearMsg(playerid, -1, szMessage,20.0);
	        }
	        case 3:
			{
			    SetPlayerSkin(playerid, Info[playerid][pChar]);
			    format(szMessage, sizeof(szMessage), "*"COL_YELLOW"* "COL_PURPLE"%s se viste con ropa normal.", GetPlayerNameEx(playerid));
			    NearMsg(playerid, -1, szMessage,20.0);
			}
	    }
    }
}
case	TELEPORTS_FACCIONES:
{
    if(response == 1){
        switch (listitem){
            case 0:{
				SetPosEx(playerid, 1553.1155,-1675.7045,16.1953,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "San Andreas Police Department.");
			}
			case 1:{
				SetPosEx(playerid, 363.0130,-1534.7684,33.3782,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "Federal Bureau Of Investigation.");
			}
			case 2:{
				SetPosEx(playerid, 1209.5090,-1325.6429,13.3984,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "San Andreas Medical Department.");
			}
			case 3:{
				SetPosEx(playerid, 792.8608,-1317.8787,13.3828,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "Cable News Network.");
			}
			case 4:{
				SetPosEx(playerid, 1753.9758,-1887.2660,13.3828,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "Taxi Yellow Company.");
			}
			case 5:{
				SetPosEx(playerid, 2228.7241,-1964.6078,13.5442,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "Car point.");
			}
			case 6:{
				SetPosEx(playerid, 1479.9824,-1766.3359,13.5469,0,0,0);
				SendClientMessageEx(playerid, COLOR_WHITE, "Gobierno de San Andreas.");
			}
		}
	}
}
case	PETITION_DIALOG:
{
    if(response == 1)
    {
        format(szMessage, sizeof(szMessage), "*"COL_YELLOW"* "COL_PURPLE"%s acepta una petición.", GetPlayerNameEx(playerid));
  		NearMsg(playerid, -1, szMessage,20.0);
		if(Petition_ID[playerid] == 2)
        {
			format(szMessage, sizeof(szMessage), "* Pagaste una multa de $%d al oficial %s.", TicketMoney[playerid], GetPlayerNameEx(TicketOffer[playerid]));
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			format(szMessage, sizeof(szMessage), "* %s te ha pagado la multa de $%d.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
			SendClientMessageEx(TicketOffer[playerid], COLOR_WHITE, szMessage);
			GivePlayerCash(playerid, - TicketMoney[playerid]);
			GivePlayerCash(TicketOffer[playerid], TicketMoney[playerid]);
			Tax += TicketMoney[playerid];
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			Facturing[playerid] = 0;
			Petition_ID[playerid] = 0;
        }
    }
    else
    {
        format(szMessage, sizeof(szMessage), "*"COL_YELLOW"* "COL_PURPLE"%s ha rechazado una petición.", GetPlayerNameEx(playerid));
  		NearMsg(playerid, -1, szMessage,20.0);
        if(Petition_ID[playerid] == 2)
        {
			SendClientMessageEx(playerid, COLOR_RED2, "Multa rechazada!");
			format(szMessage, sizeof(szMessage), "* %s te rechazó la multa!", GetPlayerNameEx(playerid));
			SendClientMessageEx(TicketOffer[playerid], COLOR_RED2, szMessage);
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			Facturing[playerid] = 0;
			Petition_ID[playerid] = 0;
        }
    }
}
case	NGMENU:
{
	if(response) switch(listitem)
	{
		case 0: // NG Duty
		{
			if(OnDuty[playerid]==0)
			{
				format(szMessage, sizeof(szMessage), "* Soldado %s toma una placa y una pistola de su casillero.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerColor(playerid, COLOR_NG);
				SetPlayerSkin(playerid, 287);
    			SetPlayerArmour(playerid, 100.0);
				GivePlayerValidWeapon(playerid, 24);
				GivePlayerValidWeapon(playerid, 31);
				OnDuty[playerid] = 1;
			}
			else if(OnDuty[playerid]==1)
			{
				format(szMessage, sizeof(szMessage), "* Soldado %s deja su placa y armas en el casillero.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsEx(playerid);
				SetPlayerColor(playerid, TEAM_HIT_COLOR);
				SetPlayerArmour(playerid, 0.0);
				SetPlayerSkin(playerid, Info[playerid][pChar]);
				OnDuty[playerid] = 0;
			}
		}
		case 1: // NG Uniforms
		{
		    ShowPlayerDialog(playerid, NGMENUSKIN, DIALOG_STYLE_LIST, "SAEM Skins", "Coronel\nOficial 1 (OFF)\nOfcial 2 (OFF)\nRanger\nOff Duty Hombre\nOff Duty Mujer\n\
			Seguridad Negro\nSeguridad Blanco\nMédico\nTraje Táctico", "Ok", "Cancelar");
		}
		case 2: // NG Weapons
		{
			ShowPlayerDialog(playerid, NGMENUWEP, DIALOG_STYLE_LIST, "SAEM Armas","Deagle\nSpas12\nShotgun\nMP5\nM4\nAK47\nSniper Rifle\nRifle\n\
			SDPistol\nGrenada\nTear Gas\nNitestick\nSpray\nCamara", "Purchase", "Cancelar");
		}
		case 3: // NG Undercover
		{
			ShowPlayerDialog(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Encubierto","Escoge un skin (por ID).", "Ok", "Cancelar");
		}
		case 4: // NG Heal
		{
			SetPlayerArmour(playerid, 100);
		}
		case 5: SetHP(playerid, 100);
		case 6: ShowPlayerDialog( playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Accesorios", "Bienvenido a la taquilla de accesorios de SAEM","Continuar", "Cancelar" );
		case 7: GivePlayerValidWeapon(playerid, 46);
	}
}
case	NGMENUSKIN:
{
	if(response)
	{
		if(listitem == 0) // LSPD Uniforms
		{
		    if(Info[playerid][pRank] == 6)
		    {
				SetPlayerSkin(playerid, 295);
			}
			else
			{
			    SendClientMessageEx(playerid, COLOR_GREY, "* No eres tango 6.");
			}
		}
		if(listitem == 1) //LSPD Uniforms
		{
			SetPlayerSkin(playerid, 240);
		}
		if(listitem == 2) // LSPD Uniforms
		{
			SetPlayerSkin(playerid, 186);
		}
		if(listitem == 3) //LSPD Uniforms
		{
			SetPlayerSkin(playerid, 287);
		}
		if(listitem == 4) //LSPD Uniforms
		{
			SetPlayerSkin(playerid, 179);
		}
		if(listitem == 5) // LSPD Uniforms
		{
			SetPlayerSkin(playerid, 191);
		}
		if(listitem == 6) // LSPD Uniforms
		{
			SetPlayerSkin(playerid, 163);
		}
		if(listitem == 7) //LSPD Uniforms
		{
			SetPlayerSkin(playerid, 164);
		}
		if(listitem == 8) //LSPD Uniforms
		{
			SetPlayerSkin(playerid, 276);
		}
		if(listitem == 9) //LSPD Uniforms
		{
			SetPlayerSkin(playerid, 285);
		}
	}
}
case	NGMENUWEP:
{
	if(response)
	{
		if(listitem == 0) return GivePlayerValidWeapon(playerid, 24);
		if(listitem == 1) return GivePlayerValidWeapon(playerid, 27);
		if(listitem == 2) return GivePlayerValidWeapon(playerid, 25);
		if(listitem == 3) return GivePlayerValidWeapon(playerid, 29);
		if(listitem == 4) return GivePlayerValidWeapon(playerid, 31);
		if(listitem == 5) return GivePlayerValidWeapon(playerid, 30);
		if(listitem == 6) return GivePlayerValidWeapon(playerid, 34);
		if(listitem == 7) return GivePlayerValidWeapon(playerid, 33);
		if(listitem == 8) return GivePlayerValidWeapon(playerid, 23);
		if(listitem == 9) return GivePlayerValidWeapon(playerid, 16);
		if(listitem == 10) return GivePlayerValidWeapon(playerid, 17);
		if(listitem == 11) return GivePlayerValidWeapon(playerid, 3);
		if(listitem == 12) return GivePlayerValidWeapon(playerid, 41);
		if(listitem == 13) return GivePlayerValidWeapon(playerid, 43);
	}
}
	case DIALOG_CREATEGUN:
	{
		if(!response)
			return 1;
	    switch(listitem){
			case 0:{
				if(Info[playerid][pMats] >= 30){
					GivePlayerValidWeapon(playerid, 8);
			        Info[playerid][pMats] -= 30;
			        SendClientMessage(playerid, COLOR_WHITE, "Creaste una katana. Usa /dararma [playerid] para dar el arma.");
			        format(szMessage, sizeof(szMessage), "* %s crea una katana con sus materiales.", GetPlayerNameEx(playerid));
			        ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			        Info[playerid][pArmsSkill]++;
			        Info[playerid][pScrewdriver]--;
			        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderes.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
			    }
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 1: {
				if(Info[playerid][pMats] >= 30) {
					GivePlayerValidWeapon(playerid, 15);
					Info[playerid][pMats] -= 30;
					SendClientMessage(playerid, COLOR_WHITE,"Creaste una Caña. Usa /dararma [playerid] para dar el arma.");
			        format(szMessage, sizeof(szMessage), "* %s crea una caña con sus materiales.", GetPlayerNameEx(playerid));
			        ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			        Info[playerid][pArmsSkill]++;
			        Info[playerid][pScrewdriver]--;
			        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderes.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 2: {
				if(Info[playerid][pMats] >= 33) {
					GivePlayerValidWeapon(playerid, 7);
					Info[playerid][pMats] -= 33;
					SendClientMessage(playerid, COLOR_WHITE,"Creaste un palo de Billar. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea un palo de billar con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			        Info[playerid][pArmsSkill]++;
			        Info[playerid][pScrewdriver]--;
			        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderes.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 3: {
				if(Info[playerid][pMats] >= 33) {
					GivePlayerValidWeapon(playerid, 5);
					Info[playerid][pMats] -= 33;
					SendClientMessage(playerid, COLOR_WHITE,"Creaste un bat. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea un bat con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			        Info[playerid][pArmsSkill]++;
			        Info[playerid][pScrewdriver]--;
			        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 4: {
				if(Info[playerid][pMats] >= 50) {
					GivePlayerValidWeapon(playerid, 6);
					Info[playerid][pMats] -= 50;
					SendClientMessage(playerid, COLOR_WHITE,"Creaste una Pala. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una Pala con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			        Info[playerid][pArmsSkill]++;
			        Info[playerid][pScrewdriver]--;
			        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 5: {
				if(Info[playerid][pMats] >= 250) {
					GivePlayerValidWeapon(playerid, 22);
					Info[playerid][pMats] -= 250;
					SendClientMessage(playerid, COLOR_WHITE,"Creastes una pistola 9mm. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una pistola 9mm con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 6: {
				if(Info[playerid][pMats] >= 300) {
					GivePlayerValidWeapon(playerid, 23);
					Info[playerid][pMats] -= 300;
					SendClientMessage(playerid, COLOR_WHITE, "Creastes una pistola con silenciador. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una pistola con silenciador con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 7: {
				if(Info[playerid][pMats] >= 550) {
					GivePlayerValidWeapon(playerid, 25);
					Info[playerid][pMats] -= 550;
					SendClientMessage(playerid, COLOR_WHITE,"Creastes una shotgun. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage),"* %s crea una shotgun con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 8: {
				if(Info[playerid][pMats] >= 1000) {
					GivePlayerValidWeapon(playerid, 24);
					Info[playerid][pMats] -= 1000;
					SendClientMessage(playerid, COLOR_WHITE, "Creastes una Desert Eagle. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una Desert Eagle con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 9: {
				if( Info[playerid][pMats] >= 1500 ){
					GivePlayerValidWeapon(playerid, 29);
					Info[playerid][pMats] -= 1500;
					SendClientMessage(playerid, COLOR_WHITE, "Creastes una MP5. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una MP5 con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 10: {
			    if(Info[playerid][pVIP] <= 2) return SendClientMessage(playerid, COLOR_GREY, "* No eres VIP Gold.");
				if(Info[playerid][pMats] >= 900 ){
					GivePlayerValidWeapon(playerid, 28);
					Info[playerid][pMats] -= 900;
					SendClientMessage(playerid, COLOR_WHITE, "Creastes un Micro Uzi. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una Micro Uzi con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 11: {
				if(Info[playerid][pMats] >= 15500) {
					GivePlayerValidWeapon(playerid, 30);
					Info[playerid][pMats] -= 15500;
					SendClientMessage(playerid, COLOR_WHITE, "Creastes una AK-47. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una AK-47 con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 12:{
				if(Info[playerid][pMats] >= 15500){
					GivePlayerValidWeapon(playerid, 31);
					Info[playerid][pMats] -= 15500;
					SendClientMessage(playerid, COLOR_WHITE, "Creastes una M4A1. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea una M4A1 con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
			case 13: {
				if(Info[playerid][pMats] >= 30000) {
					GivePlayerValidWeapon(playerid, 34);
					Info[playerid][pMats] -= 30000;
					SendClientMessage(playerid, COLOR_WHITE,"Creastes un sniper rifle. Usa /dararma [playerid] para dar el arma.");
					format(szMessage, sizeof(szMessage), "* %s crea un sniper rifle con sus materiales.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
					Info[playerid][pArmsSkill]++;
					Info[playerid][pScrewdriver]--;
					SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
					switch(Info[playerid][pArmsSkill]) {
						case 50, 100, 150, 200, 250, 300, 350, 400, 450, 500: {
							format(szMessage,sizeof(szMessage),"Felicitaciones! Tu nivel de creación de armas es ahora %d. Ahora puedes crear armas más poderosas.",Info[playerid][pArmsSkill]/50);
							SendClientMessage(playerid,COLOR_WHITE,szMessage);
						}
					}
				}
				else return SendClientMessage(playerid, COLOR_GREY, "* No tienes suficientes materiales.");
			}
		}
	}
    case DIALOG_GMX:
	{
		if(!response) return SendClientMessage(playerid, COLOR_GREY, "* Intento de reiniciar servidor cancelado.");
		foreach(Player, x)
		{
			if(Info[x][pAdmin] > 1)
			{
				if(Info[x][pTempName] == 1)
				{
					SetPlayerName(x, Info[x][pNormalName]);
					Info[x][pTempName] = 0;
					Info[x][pAdminDuty] = 0;
					SendClientMessage(x, COLOR_WHITE, "El servidor será reiniciado; se forzó tu cambio de nombre original para evitar perdidas en tu cuenta.");
				}
			}
		}

		saveAccounts();
		SaveStuff();
	    UpdatePoints();
		SaveDynamicDoors();
		atmSave();
		saveCarSale();
		saveCodes();
		SendClientMessage(playerid, COLOR_WHITE, "El servidor será reiniciado; se guardaron todos los datos de cuentas y servicios.");
		GameTextForAll("Protocolo de reinicio activado", 1110, 5);
		
		iGMXTick = 6;
		iGMXTimer = SetTimer("restartTimer", 1000, true);
	}
	case DIALOG_ADMAIN: if(response) switch(listitem)
	{
		case 0:{
			new addialog[2256], itemid = 0;
			for(new i = 0; i < MAX_AD; i++){
				if(ADInfo[i][aActive] == 1 && itemid < 40){
					ListItemTrackId[playerid][itemid] = i;
					itemid++;
					format(addialog, sizeof(addialog), "%s[%i] %s...[%d]", addialog, i, (ADInfo[i][aResume]), ADInfo[i][aNumber] );
					format(addialog, sizeof(addialog), "%s\n", addialog);
				}
			}
			format(addialog, sizeof(addialog), "%s\n", addialog);
			if(ADAvalibles() == 0) {
			    // Fix BUG Dialog String null - CRASH
				ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
				SendClientMessage(playerid, COLOR_GREY, "* Ningún anuncio ha sido publicado.");
			}
			else return ShowPlayerDialog(playerid, DIALOG_ADLIST, DIALOG_STYLE_LIST, "Anuncios - Lista", addialog, "Seleccionar", "Atrás");
		}
		case 1: ShowPlayerDialog(playerid, DIALOG_ADSEARCH, DIALOG_STYLE_INPUT, "Anuncios - Buscar", "Ingresa alguna frase de lo que buscas. (Más de 3 letras)", "Buscar", "Atrás");
		case 2:
		{
			if(Info[playerid][pADMute] == 1)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* Estás prohibido de hacer anuncios.");
			}
			else if(Info[playerid][pPnumber] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un teléfono.");
			}
			else ShowPlayerDialog(playerid, DIALOG_ADPLACE, DIALOG_STYLE_INPUT, "Anuncios - Hacer Anuncio", "Ingresa el anuncio que dejarás, recuerda que los anuncios son exclusivamente para compra y venta\nNota: Tamaño del texto sólo será máximo 128 Letras", "Enviar", "Atrás");
		}
		case 3:
		{
			if(Info[playerid][pAdverID] == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay ningún anuncio a tu nombre.");
			ClearAd(Info[playerid][pAdverID]);
			return SendClientMessageEx(playerid, COLOR_GREY, "* Borraste tu anuncio, puedes hacer otro o dejar ese espacio para otra persona.");
		}
		case 4:
		{
			if(Info[playerid][pADMute] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Estás prohibido de hacer anuncios.");
			if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un teléfono.");
			if(iAdverTimer >= 1)
			{
				ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
                new szerror[128];
				format(szerror, sizeof(szerror), "Sólo se puede enviar un anuncio global cada 1 Minuto, faltan %d segundos.", iAdverTimer);
				return SendClientMessageEx(playerid, COLOR_GREY, szerror);
			}
			else ShowPlayerDialog(playerid, DIALOG_ADPLACEP, DIALOG_STYLE_INPUT, "Anuncios - Anuncio Rápido","Ingresa el anuncio rápido, recuerda que los anuncios son exclusivamente para compra y venta\nNota: Tamaño del texto sólo será máximo 128 Letras.\nNota: Este anuncio se hará desde SA News y el costo es de $35", "Enviar", "Atrás");
		}
	}
	case DIALOG_ADPLACE:{
		if(response){
			new
				iLength = strlen(inputtext);
			if(Info[playerid][pAdverID] != -1) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya hiciste un anuncio, primero borra el anterior.");
			if(isnull(inputtext)){
			    ShowPlayerDialog(playerid, DIALOG_ADPLACE, DIALOG_STYLE_INPUT, "Anuncios - Hacer Anuncio", "Ingresa el anuncio que dejarás, recuerda que los anuncios son exclusivamente para compra y venta\nNota: Tamaño del texto sólo será máximo 128 Letras", "Enviar", "Atrás");
			    return SendClientMessageEx(playerid, COLOR_GREY, "* No ingresaste nada.");
			}
			if(strlen(inputtext) >= 128){
				ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
				return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresaste un anuncio con más de 128 Letras.");
			}
			iLength *= 5;
			if(GetPlayerCash(playerid) < iLength) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero para pagar el anuncio.");
			GivePlayerCash(playerid, -iLength);
			SendAD(playerid, inputtext, Info[playerid][pPnumber]);
			SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones tu anuncio saldrá en la lista.");
		}
		else ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
	}
	case DIALOG_ADPLACEP:{
		if(response){
			if(GetPlayerCash(playerid) < 35){
				ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
				return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero para hacer este anuncio.");
			}
			else if(strlen(inputtext) >= 128){
				ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
				return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresaste un anuncio con más de 128 Letras.");
			}
			iAdverTimer = 60;
			GivePlayerCash(playerid, -35);
			Tax += 35;
			new
				szMessage1[255];
			format(szMessage1, sizeof(szMessage1), "Anuncio: %s... Contacto %s (%i)", inputtext, GetPlayerNameEx(playerid), Info[playerid][pPnumber]);
			OOCNews(TEAM_GROVE_COLOR,szMessage1);
			return PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		}
		else ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
	}
	case DIALOG_ADSEARCH:
	{
		if(response)
		{
			if(strlen(inputtext) <= 3) return ShowPlayerDialog(playerid, DIALOG_ADSEARCH, DIALOG_STYLE_INPUT, "Anuncios - Buscar", "ERROR: Lo que buscas debe tener más de 3 letras. Ingresa alguna frase de lo que buscas. (Más de 3 letras)", "Buscar", "Atrás");
			new addialog[1000], itemid = 0;
			for(new i = 0; i < MAX_AD; i++)
			{
				//if(strfind(ADInfo[i][aAdvert], inputtext, true) != -1)
				//if(strfind(szBuffer          , inputtext, true) != -1)
				if(strfind(ADInfo[i][aAdvert], inputtext, true) != -1)
				{
					if(ADInfo[i][aActive] == 1 && itemid < 40)
					{
						ListItemTrackId[playerid][itemid] = i;
						itemid++;
						format(addialog, sizeof(addialog), "%s[%i] %s...[%d]", addialog, i, (ADInfo[i][aResume]), ADInfo[i][aNumber] );
						format(addialog, sizeof(addialog), "%s\n", addialog);
					}
					format(addialog, sizeof(addialog), "%s\n", addialog);
					return ShowPlayerDialog(playerid, DIALOG_ADLIST, DIALOG_STYLE_LIST, "Anuncios - Resultados", addialog,"Ok" ,"Atrás");
				}
				else ShowPlayerDialog(playerid, DIALOG_ADSEARCH, DIALOG_STYLE_INPUT, "Anuncios - Buscar", "No se encontraron resultados.\n\nIngresa una frase de lo que buscas. (Más de 3 letras)", "Buscar", "Volver");
			}
		}
		else ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
	}
	case DIALOG_ADLIST:
	{
		if(response)
		{
			new
				i = ListItemTrackId[playerid][listitem];
			format(szDialog, sizeof(szDialog), "%s\n\nContacto: %i - %s.", ADInfo[i][aAdvert], ADInfo[i][aNumber], ADInfo[i][aContact]);
			return ShowPlayerDialog(playerid, DIALOG_ADFINAL, DIALOG_STYLE_MSGBOX, "Anuncio:", szDialog, "Atrás", "Salir");
		}
		else ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
	}
	case DIALOG_ADFINAL:
	{
		if(response) return ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
	}
	case DIALOG_SHOPORDER:{
		if(response){
			if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid, DIALOG_SHOPERROR, DIALOG_STYLE_MSGBOX, "ID de Pedido","ERROR: La orden de la tienda sólo son números.", "Intentar", "Cancelar");
			new orderid = strval(inputtext);
			if(orderid == 0) return ShowPlayerDialog(playerid, DIALOG_SHOPERROR, DIALOG_STYLE_MSGBOX, "ID de Pedido","ERROR: La órden de compra no puede ser 0.", "Intentar", "Cancelar");
			Info[playerid][pOrder] = orderid;
			new shoptechs;
			foreach(Player, i){
				if(Info[i][pShopTech] == 1){
					shoptechs++;
				}
			}
			new shopstring[512];
			if(shoptechs > 0){
				format(shopstring, sizeof(shopstring), "{FFFFFF}Ahora usted debe esperar para recibir la orden de compra número: %d\n\nUn técnico será el responsable.\n\nSi usted tiene más de una orden por favor esperar a que terminen con una.\n\nTécnicos Online: %d\n\nNOTA: La orden de compra queda guardada incluso si usted se desconecta.\n\nGracias", orderid, shoptechs);
            	ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX, "Shop Order", shopstring, "Cerrar", "");
				format(shopstring, sizeof(shopstring), "AdmWarning: %s hizo una nueva orden de compra y está esperando - /ordenes.",GetPlayerNameEx(playerid));
				ShopTechBroadCast(COLOR_SHOP,shopstring);
				SendClientMessage(playerid, COLOR_GREY, "* Si no tienes una orden de compra, por favor usa /cancelarorden." );
			}
			else{
				format(shopstring, sizeof(shopstring), "{FFFFFF}Ahora usted debe esperar para recibir la orden de compra número: %d\n\nUn técnico será el responsable.\n\nSi usted tiene más de una orden por favor esperar a que terminen con una.\n\nActualmente no hay técnicos online.\n\nNOTA: La orden de compra queda guardada incluso si usted se desconecta.\n\nGracias", orderid);
  				ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX, "Orden de Compra", shopstring, "Cerrar", "");
  				SendClientMessage(playerid, COLOR_GREY, "* Si no tienes una orden de compra, por favor usa /cancelarorden." );
			}
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(szMessage, sizeof(szMessage), "Shop order ID %d from %s(IP: %s) is now pending.", orderid, GetPlayerNameEx(playerid), playerip);
			Log("logs/shoporders.log", szMessage);
		}
	}
	case DIALOG_SHOPERROR: if(response) return ShowPlayerDialog(playerid, DIALOG_SHOPORDER, DIALOG_STYLE_INPUT, "Orden de Compra", "Esto es para las órdenes de tienda de http://s3l.zcroleplay.net/shop/\n\nSi usted no tiene una orden de la tienda, por favor cancele este cuadro de diálogo ahora mismo.\n\nAdvertencia: Abuso de esta característica es sancionable con baneo permanente.\n\nPor favor ingrese la orden de compra (Si no la sabe ingrese 1):", "Enviar", "Cancelar" );
	case DOORLOCK:
	{
		if(response == 1)
		{
		    new i = GetPVarInt(playerid, "Door");
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No ingresaste nada." );
		    if(strlen(inputtext) > 24) return SendClientMessageEx(playerid, COLOR_GREY, "* La contraseña no es más de 24 letras o números.");
		    if(strcmp(inputtext, DDoorsInfo[i][dPass], true) == 0){
		        if(DDoorsInfo[i][dLocked] == 0){
					DDoorsInfo[i][dLocked] = 1;
					SendClientMessageEx(playerid, COLOR_WHITE, "Contraseña Aceptada, puerta bloqueada.");
		        }
		        else{
		            DDoorsInfo[i][dLocked] = 0;
		            SendClientMessageEx(playerid, COLOR_WHITE, "Contraseña Aceptada, puerta desbloqueada.");
		        }
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "¡Contraseña Incorrecta!");
		}
	}
	case ADMUTE:
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0: // Jailtime
				{
				    if(Info[playerid][pADMuteTotal] < 4)
				    {
					    Info[playerid][pADMute] = 0;
				        ResetPlayerWeaponsEx(playerid);
						if(Info[playerid][pJailed] != 0)
						{
						    Info[playerid][pJailTime] += Info[playerid][pADMuteTotal]*15*60;
						}
						else
						{
						    GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Fort DeMorgan", 5000, 3);
							Info[playerid][pJailed] = 1; PhoneOnline[playerid] = 1;
							Info[playerid][pJailTime] = Info[playerid][pADMuteTotal]*15*60;
							SetPlayerFacingAngle(playerid, 0);
							TogglePlayerControllable(playerid, 1);
							new rand = random(sizeof(OOCJail));
							LoadObjects(playerid);
							SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
							SetPlayerVirtualWorld(playerid, 1000);
							SetPlayerInterior(playerid,0);
							SetPlayerSkin(playerid, 50);
							SetPlayerToTeamColor(playerid);
						}
				    }
				    else if(Info[playerid][pADMuteTotal] >= 4 || Info[playerid][pADMuteTotal] < 7)
				    {
					    Info[playerid][pADMute] = 0;
						ResetPlayerWeaponsEx(playerid);
						if(Info[playerid][pJailed] != 0)
						{
						    Info[playerid][pJailTime] += Info[playerid][pADMuteTotal]*15*60;
						}
						else
						{
						    GameTextForPlayer(playerid, "~w~Bienvenido a ~n~~r~Fort DeMorgan", 5000, 3);
							new rand = random(sizeof(OOCJail));
							LoadObjects(playerid);
							SetPlayerPos(playerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
							SetPlayerVirtualWorld(playerid, 1000);
							SetPlayerInterior(playerid,0);
							SetPlayerSkin(playerid, 50);
							Info[playerid][pJailed] = 1;
							Info[playerid][pJailTime] = Info[playerid][pADMuteTotal]*15*60;
							PhoneOnline[playerid] = 1;
							SetPlayerToTeamColor(playerid);
							SetPlayerWantedLevel(playerid, 0);
							ClearAnimations(playerid);
							SetPlayerSkin(playerid, 50);
						}
				    }
					format(szMessage,sizeof(szMessage),"AdmWarning: %s estará en prisión %d Minutos, gracias a la oportunidad de AD Unmuted.",GetPlayerNameEx(playerid),Info[playerid][pADMuteTotal]*15);
					ABroadCast(COLOR_GENERAL,szMessage,2);
            	}
            	case 1: // Fine
            	{
            	    new playername[MAX_PLAYER_NAME];
            	    GetPlayerName(playerid, playername, sizeof(playername));

	                new allmoney;
 					if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
					{
 						allmoney = HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]+GetPlayerCash(playerid)+Info[playerid][pMoneyBank];
   					}
   					else
    				{
   						allmoney = GetPlayerCash(playerid)+Info[playerid][pMoneyBank];
    				}
                    Info[playerid][pADMute] = 0;
				    new fine = 10*allmoney/100;
	                format(szMessage,sizeof(szMessage),"AdmWarning: %s pagó $%d por la oportunidad de AD Unmuted.",GetPlayerNameEx(playerid),fine);
	                GivePlayerCash(playerid,-fine);
					ABroadCast(COLOR_GENERAL,szMessage,2);
	            }
	        }
	    }
	    else
	    {
	        format(szMessage,sizeof(szMessage),"AdmWarning: %s canceló su oportunidad de ser desmuteado del comando /ad.",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_GENERAL,szMessage,2);
	    }
	}
	case DUTYMENU:
	{
		if(response)
		{
			if(listitem == 0) // LSPD Duty
			{
				if(OnDuty[playerid] == 0)
				{
                    switch(Info[playerid][pSex])
                    {
					    case 1:
				        {
					        format(szMessage, sizeof(szMessage), "* Oficial %s coje una placa y su pistola.", GetPlayerNameEx(playerid));
					        ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					        SetPlayerColor(playerid, TEAM_BLUE_COLOR);
                            SetPlayerSkin(playerid, 280);
					        SetPlayerArmour(playerid, 100.0);
					        GivePlayerValidWeapon(playerid, 24);
					        GivePlayerValidWeapon(playerid, 41);
					        GivePlayerValidWeapon(playerid, 3);
					        OnDuty[playerid] = 1;
                        }
                        case 2:
				        {
					        format(szMessage, sizeof(szMessage), "* Oficial %s coje una placa y su pistola.", GetPlayerNameEx(playerid));
					        ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					        SetPlayerColor(playerid, TEAM_BLUE_COLOR);
					        SetPlayerSkin(playerid, 194);
    				        SetPlayerArmour(playerid, 100.0);
					        GivePlayerValidWeapon(playerid, 24);
					        GivePlayerValidWeapon(playerid, 41);
					        GivePlayerValidWeapon(playerid, 3);
					        OnDuty[playerid] = 1;
                        }
					}
				}
				else if(OnDuty[playerid] == 1)
				{
					format(szMessage, sizeof(szMessage), "* Oficial %s deja sus cosas en su casillero.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerArmour(playerid, 0.0);
					SetPlayerSkin(playerid, Info[playerid][pChar]);
					OnDuty[playerid] = 0;
				}
			}
			if(listitem == 1) // LSPD Weapons
			{
				ShowPlayerDialog(playerid, DUTYMENU2, DIALOG_STYLE_LIST, "LSPD Equipo","Mace\nNite Stick\nDesert Eagle\nSPAS-12\nMP5\nM4A1\nAK-47\nSmoke Grenade\nShotgun\nRifle\nSniper Rifle\nKevlar Vest\nFirst Aid Kit\nAccessorios", "Ok", "Cancelar");
			}
			if(listitem == 2) // LSPD SWAT Uniform
			{
			    if(Info[playerid][pDivision] == 5)
			    {
					SetPlayerSkin(playerid, 285);
				}
				else
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "No eres de la división de SWAT.");
				}
			}
			if(listitem == 3) // LSPD Uniforms
			{
				ShowPlayerDialog(playerid, DUTYMENU3, DIALOG_STYLE_LIST, "Uniformes LSPD","Cadete\nOficial Femenina\nOficial 1\nOficial 2\nOficial 3\nOficial Negro\nOficial Latino\nOficial Moto.\nOficial SWAT\nSargento\nCapitan\nComandante", "Ponerse", "Cancelar");
			}
			if(listitem == 4) // LSPD Undercover Uniform
			{
				ShowPlayerDialog(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Encubierto","Elige un Skin (por ID).", "Ok", "Cancelar");
			}
		}
	}
 	case DUTYMENU2:
	{
		if(response)
		{
	    	if(Tax > 0) switch(listitem)
			{
				case 0: GivePlayerValidWeapon(playerid, 41);
				case 1: GivePlayerValidWeapon(playerid, 3);
				case 2: GivePlayerValidWeapon(playerid, 24);
				case 3:
				{
					if(Info[playerid][pDivision] == 5 || Info[playerid][pRank] >= 1)
					{
						GivePlayerValidWeapon(playerid, 27);
						Tax -= 10000;
					}
					else SendClientMessageEx(playerid, COLOR_GREY, "* No eres de la división SWAT, o no eres mayor al rango 2.");
				}
				case 4: GivePlayerValidWeapon(playerid, 29);
				case 5: GivePlayerValidWeapon(playerid, 31);
				case 6: // LSPD ak-47 *
				{
					if(Info[playerid][pDivision] == 5 || Info[playerid][pRank] >= 1)
					{
						GivePlayerValidWeapon(playerid, 30);
					}
					else SendClientMessageEx(playerid, COLOR_GREY, "* No eres de la división SWAT, o no eres mayor al rango 3.");
				}
				case 7: // LSPD Smoke Bomb *
				{
					if(Info[playerid][pDivision] == 5 || Info[playerid][pRank] >= 1)
					{
						GivePlayerValidWeapon(playerid, 17);
					}
					else SendClientMessageEx(playerid, COLOR_GREY, "* No eres de la división SWAT, o no eres mayor al rango 3.");
				}
				case 8: GivePlayerValidWeapon(playerid, 25);
				case 9: GivePlayerValidWeapon(playerid, 33);
				case 10: // LSPD Sniper *
				{
					if(Info[playerid][pDivision] == 5 || Info[playerid][pRank] >= 1)
					{
						GivePlayerValidWeapon(playerid, 34);
					}
					else SendClientMessageEx(playerid, COLOR_GREY, "* No eres de la división SWAT, o no eres mayor al rango 3.");
				}
				case 11: SetPlayerArmour(playerid, 100.0);
				case 12: SetHP(playerid, 100);
				case 13: ShowPlayerDialog( playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Accessorios", "Bienvenido al casillero de accesorios del SAPD","Continuar", "Cancelar" );
			}
			else return SendClientMessageEx(playerid,COLOR_WHITE,"El gobierno no tiene fondos para facilitar armas.");
		}
	}
	case DUTYMENU3:
	{
		if(response)
		{
		    switch(listitem)
		    {
		        case 0: SetPlayerSkin(playerid, 71);
		        case 1: SetPlayerSkin(playerid, 141);
		        case 2: SetPlayerSkin(playerid, 280);
		        case 3: SetPlayerSkin(playerid, 266);
		        case 4: SetPlayerSkin(playerid, 281);
		        case 5: SetPlayerSkin(playerid, 265);
		        case 6: SetPlayerSkin(playerid, 267);
		        case 7: SetPlayerSkin(playerid, 284);
		        case 8: SetPlayerSkin(playerid, 285);
				case 9: SetPlayerSkin(playerid, 282);
		        case 10: SetPlayerSkin(playerid, 283);
		        case 11: SetPlayerSkin(playerid, 288);
		    }
		}
	}
	case FDUTYMENU:
	{
		if(response)
		{
			if(listitem == 0) // FBI Duty
			{
				if(OnDuty[playerid] == 0)
				{
					format(szMessage, sizeof(szMessage), "* Agente %s coge una placa y una pistola de su casillero.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_FBI_COLOR);
					SetPlayerArmour(playerid, 100.0);
					GivePlayerValidWeapon(playerid, 24);
					GivePlayerValidWeapon(playerid, 41);
					GivePlayerValidWeapon(playerid, 3);
					GivePlayerValidWeapon(playerid, 29);
					OnDuty[playerid] = 1;
				}
				else if(OnDuty[playerid] == 1)
				{
					format(szMessage, sizeof(szMessage), "* Agente %s deja su placa y su arma en su casillero.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerSkin(playerid, Info[playerid][pChar]);
					SetPlayerArmour(playerid, 0.0);
					OnDuty[playerid] = 0;
				}
			}
		}
		if(listitem == 1) // FBI Weapons
		{
			ShowPlayerDialog(playerid, FDUTYMENU2, DIALOG_STYLE_LIST, "FBI Armas","Mace\nNite Stick\nDesert Eagle\nSPAS-12\nMP5\nM4A1\nAK-47\nSmoke Grenade\nCamara\nSniper Rifle\nTactical Vest\nFirst Aid Kit\nAccesorios", "Ok", "Cancelar");
		}
		if(listitem == 2) // FBI SWAT Uniform
		{
       	    if(Info[playerid][pRank] > 3)
			{
				SetPlayerSkin(playerid, 285);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* No tienes el rango requerido (3)!");
				return 1;
			}
		}
		if(listitem == 3) // FBI Uniforms
		{
			ShowPlayerDialog(playerid, FDUTYMENU3, DIALOG_STYLE_LIST, "Uniformes FBI","Agente con escudo\nAgente 1\nAgente 2\nAgente Asiatico\nAgente Asiatico 2\nSWAT\nMujer", "Poner", "Cancelar");
		}
		if(listitem == 4) // FBI Undercover Uniform
		{
			ShowPlayerDialog(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Encubierto","Elige un skin (por ID).", "Ok", "Cancelar");
		}
	}
	case FDUTYMENU2:
	{
		if(response)
		{
	    	if(Tax <= 0) return SendClientMessageEx(playerid,COLOR_WHITE,"El gobierno no tiene fondos para facilitar armas.");
	    	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes obtener armas debido a tu restricción de dos horas!");
				else switch(listitem) {
				case 0: GivePlayerValidWeapon(playerid, 41);
				case 1: GivePlayerValidWeapon(playerid, 3);
				case 2: GivePlayerValidWeapon(playerid, 24);
				case 3:	GivePlayerValidWeapon(playerid, 27);
				case 4: GivePlayerValidWeapon(playerid, 29);
				case 5: GivePlayerValidWeapon(playerid, 31);
				case 6: GivePlayerValidWeapon(playerid, 30);
				case 7: GivePlayerValidWeapon(playerid, 17);
				case 8: GivePlayerValidWeapon(playerid, 43);
				case 9: GivePlayerValidWeapon(playerid, 34);
				case 10: SetPlayerArmour(playerid, 100);
				case 11: SetHP(playerid, 100);
				default: ShowPlayerDialog( playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Accesorios", "Bienvenido al casillero de accesorios del FBI!","Continuar", "Cancelar" );
			}
		}
	}
	case FDUTYMENU3:
	{
		if(response)
		{
			if(listitem == 0) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 286);
			}
			if(listitem == 1) //FBI Uniforms
			{
				SetPlayerSkin(playerid, 166);
			}
			if(listitem == 2) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 165);
			}
			if(listitem == 3) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 294);
			}
			if(listitem == 4) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 120);
			}
			if(listitem == 5) //FBI Uniforms
			{
				SetPlayerSkin(playerid, 285);
			}
			if(listitem == 6) //FBI Uniforms
			{
				SetPlayerSkin(playerid, 141);
			}
		}
	}
	/*case DIALOG_NAMECHANGE2:
	{
    	if(!response || strlen(inputtext) == 0) return Kick(playerid);
    	if(strlen(inputtext) >= 20)
    	{
    	    SendClientMessageEx( playerid, COLOR_WHITE, "No se puede seleccionar un nombre que está por encima de 20 caracteres." );
    	    ShowPlayerDialog(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "Cambio de Nombre - Libre","Este es un servidor de role play donde tu debes tener este formato: Nombre_Apellido.\nPor ejemplo: John_Smith o Jimmy_Johnson\n\nUn administrador te ha ofrecido un cambio de nombre libre. Por favor ingresa el nombre en el siguiente espacio.\n\nNota: Si pulsas presionar serás kikeada automáticamente.", "Cambiar", "Cancelar" );
    	}
    	else
    	{
        	if( strlen(inputtext) >= 1 )
        	{
            	if(!response)
            	{
					ShowPlayerDialog(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "Cambio de Nombre - Libre","Este es un servidor de role play donde tu debes tener este formato: Nombre_Apellido.\nPor ejemplo: John_Smith o Jimmy_Johnson\n\nUn administrador te ha ofrecido un cambio de nombre libre. Por favor ingresa el nombre en el siguiente espacio.\n\nNota: Si pulsas presionar serás kikeada automáticamente.", "Cambiar", "Cancelar" );
				}
            	else
            	{
       				for(new i = 0; i < strlen( inputtext ); i++)
					{
						if (inputtext[i] == ' ')
						{
							SendClientMessageEx(playerid, COLOR_WHITE, "Por favor usa '_'(Guión abajo) en lugar de ' '(Espacio)");
							ShowPlayerDialog(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "Cambio de Nombre - Libre","Este es un servidor de role play donde tu debes tener este formato: Nombre_Apellido.\nPor ejemplo: John_Smith o Jimmy_Johnson\n\nUn administrador te ha ofrecido un cambio de nombre libre. Por favor ingresa el nombre en el siguiente espacio.\n\nNota: Si pulsas presionar serás kikeada automáticamente.", "Cambiar", "Cancelar" );
							return 1;
						}
					}
					if( strfind( inputtext, "_", true) == -1 )
					{
						SendClientMessageEx( playerid, COLOR_WHITE, "Cambio de nombre rechazado. Por favor, elije un nombre en el formato correcto: Nombre_Apellido " );
						ShowPlayerDialog(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "Cambio de Nombre - Libre","Este es un servidor de role play donde tu debes tener este formato: Nombre_Apellido.\nPor ejemplo: John_Smith o Jimmy_Johnson\n\nUn administrador te ha ofrecido un cambio de nombre libre. Por favor ingresa el nombre en el siguiente espacio.\n\nNota: Si pulsas presionar serás kikeada automáticamente.", "Cambiar", "Cancelar" );
						return 1;
					}
 					else
					{
						new szMessage[256];
						SetPVarInt(playerid, "RequestingNameChange", 1);
						SetPVarString(playerid, "NewNameRequest", inputtext);
						new playername[MAX_PLAYER_NAME];
						GetPlayerName(playerid, playername, sizeof(playername));
						format( szMessage, sizeof( szMessage ), "Has enviado el cambio de nombre; de %s a %s por favor espera que la Administración General lo apruebe.", playername, inputtext);
   						SendClientMessageEx( playerid, COLOR_YELLOW, String );
      					format( String, sizeof( String ), "AdmExe: %s (ID %d) solicitó el cambio de nombre libre a: %s - /aname %d o /dname %d.", playername, playerid, inputtext, playerid, playerid);
        				ABroadCast( COLOR_GENERAL, String, 3 );
        				return 1;
        			}
				}
        	}
        	else
        	{
            	SendClientMessageEx( playerid, COLOR_WHITE, "Su nombre debe ser más de una letra." );
        	    ShowPlayerDialog(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "Cambio de Nombre - Libre","Este es un servidor de role play donde tu debes tener este formato: Nombre_Apellido.\nPor ejemplo: John_Smith o Jimmy_Johnson\n\nUn administrador te ha ofrecido un cambio de nombre libre. Por favor ingresa el nombre en el siguiente espacio.\n\nNota: Si pulsas presionar serás kikeada automáticamente.", "Cambiar", "Cancelar" );
    	    }
	    }
	}*/
	case FDUTYMENU4:
	{
		if(response)
		{
 	        new skinid = strval(inputtext);
	        if(!IsValidSkin(skinid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "ERROR! Skin de 1 a 299");
			if(!IsPublicSkin(skinid)) return ShowPlayerDialog(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Encubierto","Skin Inválido. Escoge otro.", "Seleccionar", "Cancelar");
			Info[playerid][pChar] = skinid;
			SetPlayerSkin(playerid, Info[playerid][pChar]);
		}
	}
	case DIALOG_LOADTRUCK: // TRUCKER JOB LOAD TRUCK
	{
		if(response)
		{
			if(listitem == 0) // Legal goods
			{
		    	ShowPlayerDialog(playerid, DIALOG_LOADTRUCKL, DIALOG_STYLE_LIST, "¿Que quieres transportar?","{00F70C}Comida y Bebida\n{00F70C}Ropa\n{00F70C}Materiales\n{00F70C}Objetos del 24/7", "Ok", "Cancelar");
			}
			if(listitem == 1) // Illegal goods
			{
				new level = Info[playerid][pTruckSkill];
				switch(level)
				{
					case 0 .. 50: ShowPlayerDialog(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "¿Que quieres transportar?","{FF0606}Armas 			{FFFFFF}(No Bonus)\n{FF0606}Drogas 			{FFFFFF}(Nivel 1 Bonus: 3gr de Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 1 Bonus: 25 materiales)", "Ok", "Cancelar");

					case 51 .. 100: ShowPlayerDialog(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "¿Que quieres transportar?","{FF0606}Armas 			{FFFFFF}(No Bonus)\n{FF0606}Drogas 			{FFFFFF}(Nivel 2 Bonus: 5gr de Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 2 Bonus: 50 materiales)", "Ok", "Cancelar");

					case 101 .. 200: ShowPlayerDialog(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "¿Que quieres transportar?","{FF0606}Armas 			{FFFFFF}(No Bonus)\n{FF0606}Drogas 			{FFFFFF}(Nivel 3 Bonus: 8gr de Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 3 Bonus: 100 materiales)", "Ok", "Cancelar");

					case 201 .. 400: ShowPlayerDialog(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "¿Que quieres transportar?","{FF0606}Armas 			{FFFFFF}(No Bonus)\n{FF0606}Drogas 			{FFFFFF}(Nivel 4 Bonus: 10gr de Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 4 Bonus: 150 materiales)", "Ok", "Cancelar");

					default: ShowPlayerDialog(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "¿Que quieres transportar?","{FF0606}Armas 			{FFFFFF}(No Bonus)\n{FF0606}Drogas 			{FFFFFF}(Nivel 5 Bonus: 15gr de Droga)\n{FF0606}Materiales I.  	{FFFFFF}(Nivel 5 Bonus: 200 materiales)", "Ok", "Cancelar");
				}
			}
		}
		else
		{
	    	DeletePVar(playerid, "IsFrozen");
			TogglePlayerControllable(playerid, 1);
			SendClientMessageEx(playerid, COLOR_GENERAL, "Cancelaste la carga del camión, usa /cargarcamion para intentarlo de nuevo.");
		}
	}
	case DIALOG_LOADTRUCKL: // TRUCKER JOB LEGAL GOODS
	{
		if(response)
		{
			if(listitem == 0) // Food & beverages
			{
				new route = Random(1, 4);
				switch(route)
				{
				    case 1: SetPVarInt(playerid, "TruckDeliver", 1);
				    case 2: SetPVarInt(playerid, "TruckDeliver", 2);
				    case 3: SetPVarInt(playerid, "TruckDeliver", 3);
				}
				SendClientMessageEx(playerid, COLOR_GENERAL, "* * Por favor, espere un momento mientras el camión está siendo cargado con comida y bebidas....");
			}
			if(listitem == 1) // Clothing
			{
				new route = Random(1, 4);
				switch(route)
				{
				    case 1: SetPVarInt(playerid, "TruckDeliver", 4);
				    case 2: SetPVarInt(playerid, "TruckDeliver", 5);
				    case 3: SetPVarInt(playerid, "TruckDeliver", 6);
				}
            	SendClientMessageEx(playerid, COLOR_GENERAL, "* Por favor, espere un momento mientras el camión está siendo cargado con ropa y calzado....");
			}
			if(listitem == 2) // Materials
			{
				SetPVarInt(playerid, "TruckDeliver", 7);
            	SendClientMessageEx(playerid, COLOR_GENERAL, "* Por favor, espere un momento mientras el camión está siendo cargado con materiales....");
			}
			if(listitem == 3) // 24/7 Items
			{
				new route = Random(1, 4);
				switch(route)
				{
				    case 1: SetPVarInt(playerid, "TruckDeliver", 8);
				    case 2: SetPVarInt(playerid, "TruckDeliver", 9);
				    case 3: SetPVarInt(playerid, "TruckDeliver", 10);
				}
            	SendClientMessageEx(playerid, COLOR_GENERAL, "* Por favor, espere un momento mientras el camión está siendo cargado con artículos del 24/7....");
			}
			LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
			SetProgressBarValue(LoadTruckBar[playerid], 100.0);
			ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
			SetTimerEx("LoadTruck", 1000, 0, "d", playerid);
		}
		else
		{
	    	DeletePVar(playerid, "IsFrozen");
			TogglePlayerControllable(playerid, 1);
			SendClientMessageEx(playerid, COLOR_GENERAL, "Has cancelado la carga de los camiones, usa /cargarcamion para intentarlo de nuevo.");
		}
	}
	case DIALOG_LOADTRUCKI: // TRUCKER JOB ILLEGAL GOODS
	{
		if(response)
		{
	    	new level = Info[playerid][pTruckSkill];
			if(listitem == 0) // Weapons
			{
				if(level >= 0 && level <= 50)
				{
                	SetPVarInt(playerid, "TruckDeliver", 11); // Bonus: 9mm
				}
				else if(level >= 51 && level <= 100)
				{
                	SetPVarInt(playerid, "TruckDeliver", 12); // Bonus: MP5
				}
				else if(level >= 101 && level <= 200)
				{
            		SetPVarInt(playerid, "TruckDeliver", 13); // Bonus: Deagle
				}
				else if(level >= 201 && level <= 400)
				{
                	SetPVarInt(playerid, "TruckDeliver", 14); // Bonus: AK-47
				}
				else if(level >= 401)
				{
                	SetPVarInt(playerid, "TruckDeliver", 15); // Bonus: Ak-47 or M4
				}
				SendClientMessageEx(playerid, COLOR_GENERAL, "* Por favor, espere un momento mientras el camión está siendo cargado con armas ....");
			}
			if(listitem == 1) // Drugs
			{
				if(level >= 0 && level <= 50)
				{
                	SetPVarInt(playerid, "TruckDeliver", 16); // Bonus: 10 pot, 5 crack
				}
				else if(level >= 51 && level <= 100)
				{
                	SetPVarInt(playerid, "TruckDeliver", 17); // Bonus: 20 pot, 10 crack
				}
				else if(level >= 101 && level <= 200)
				{
                	SetPVarInt(playerid, "TruckDeliver", 18); // Bonus: 30 pot, 15 crack
				}
				else if(level >= 201 && level <= 400)
				{
                	SetPVarInt(playerid, "TruckDeliver", 19); // Bonus: 40 pot, 20 crack
				}
				else if(level >= 401)
				{
               		SetPVarInt(playerid, "TruckDeliver", 20); // Bonus: 50 pot, 25 crack
				}
            	SendClientMessageEx(playerid, COLOR_GENERAL, "* Por favor, espere un momento mientras el camión está siendo cargado con drogas ....");
			}
			if(listitem == 2) // Illegal materials
			{
				if(level >= 0 && level <= 50)
				{
                	SetPVarInt(playerid, "TruckDeliver", 21); // Bonus: 100 materials
				}
				else if(level >= 51 && level <= 100)
				{
                	SetPVarInt(playerid, "TruckDeliver", 22); // Bonus: 300 materials
				}
				else if(level >= 101 && level <= 200)
				{
                	SetPVarInt(playerid, "TruckDeliver", 23); // Bonus: 750 materials
				}
				else if(level >= 201 && level <= 400)
				{
                	SetPVarInt(playerid, "TruckDeliver", 24); // Bonus: 1500 materials
				}
				else if(level >= 401)
				{
                	SetPVarInt(playerid, "TruckDeliver", 25); // Bonus: 2500 materials
				}
            	SendClientMessageEx(playerid, COLOR_GENERAL, "* Por favor, espera un momento mientras el camión está siendo cargado con mercancía ilegal ....");
			}
			LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
			SetProgressBarValue(LoadTruckBar[playerid], 100.0);
			ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
			SetTimerEx("LoadTruck", 1000, 0, "d", playerid);
		}
		else
		{
	    	DeletePVar(playerid, "IsFrozen");
			TogglePlayerControllable(playerid, 1);
			SendClientMessageEx(playerid, COLOR_GENERAL, "Has cancelado la carga de los camiones, usa /cargarcamion para intentarlo de nuevo.");
		}
	}
	case DIALOG_HITMAN:
	{
    	if(response == 1)
    	{
        	switch(listitem)
        	{
            	case 0:
            	{
                    if(GetPlayerCash(playerid) < 100) return SendClientMessageEx(playerid, COLOR_GREY, "No tienes dinero suficiente!");
                	GivePlayerValidWeapon(playerid, 4);
                	GivePlayerValidWeapon(playerid, 23);
                	GivePlayerCash(playerid, -100);
            	}
            	case 1:
            	{
                    if(GetPlayerCash(playerid) < 60) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero suficiente!");
           	    	GivePlayerValidWeapon(playerid, 34);
           	    	GivePlayerCash(playerid, -60);
            	}
            	case 2: ShowPlayerDialog(playerid, DIALOG_HIT, DIALOG_STYLE_INPUT, "> Disfraz <", "{78F700}Escribe el ID del que desees\n{FFFFFF}Skin's libres para Hitman's.\nTIP <1 - 299>\n", "Ok", "Salir");
				case 3:
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Adquiriste una máscara, usa: /mascara");
					Info[playerid][pMask] = 1;
				}
				case 4:
				{
				   	SendClientMessageEx(playerid, COLOR_WHITE, "Adquiriste un kit de secuestro");
					Rope[playerid] = 1;
				}
				case 5: ShowPlayerDialog(playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Cambiar Nombre","Por favor ingresa el nuevo nombre!\n\nNota: Lo cambios de nombre son libres para Hitman y FBI.", "Cambiar", "Cancelar" );
			}
		}
	}
    case DIALOG_HIT:
  	{
    	if(response == 1)
    	{
        	if(strval(inputtext) < 1 || strval(inputtext) > 299) return SendClientMessageEx(playerid, COLOR_GREY, "* Skin de 1 a 299.");
			Info[playerid][pChar] = strval(inputtext);
            SetPlayerSkin(playerid, Info[playerid][pChar]);
	    	return 1;
    	}
	}
	case CPASS:
	{
	    if( strlen( inputtext ) >= 24 )
	    {
	        SendClientMessageEx( playerid, COLOR_GRAD2, "No puedes cambiar una password a más de 24 carácteres." );
	    }
	    else
	    {
	        if( strlen( inputtext ) >= 1 )
	        {
	            if(!response) { SendClientMessageEx(playerid, COLOR_WHITE, "No has cambiado tu contraseña." ); }
	            else
	            {
		            new String[ 84 ];
    				new INI:File = INI_Open(UserPath(playerid));
    				INI_SetTag(File,"data");
 					INI_WriteInt(File,"Password",udb_hash(inputtext));
					INI_Close(File);
					format( String, sizeof( String ), "%s (IP: %s) a cambiado su contraseña.", GetPlayerNameEx(playerid), Info[playerid][pIP]);
					Log("logs/password.log", String);
		            format( String, sizeof( String ), "Has cambiado tu contraseña a: '%s'", inputtext );
		            SendClientMessageEx( playerid, COLOR_YELLOW, String );
	            }
	        }
	        else SendClientMessageEx( playerid, COLOR_WHITE, "No has cambiado tu contraseña." );
	    }
	}
	case JOBFINDMENU: if(response)
	{
		if(GetPVarInt(playerid, "Packages") != 0 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Asegúrate de no estar en otra función usando checkpoints.");
	    SetPVarInt(playerid, "FindJob", 1);
		switch(listitem)
		{
		    case 0: SetPlayerCheckpoint(playerid,503.2709,-11.6231,1000.6797,2);
		    case 1: SetPlayerCheckpoint(playerid,2104.8408,-1810.0991,13.5547,2);
		    case 2: SetPlayerCheckpoint(playerid,2218.0525,-2662.2483,13.5536,2);
		    case 3: SetPlayerCheckpoint(playerid,1289.1171,-1271.7650,13.5422,2);
		    case 4: SetPlayerCheckpoint(playerid,1752.7062,-1894.1708,13.5574,2);
		    case 5: SetPlayerCheckpoint(playerid,-104.2969,9.3283,3.1172,2);
		    case 6: SetPlayerCheckpoint(playerid,2226.1716,-1718.1792,13.5165,2);
		    case 7: SetPlayerCheckpoint(playerid,657.9695,-634.8121,16.3359,2);
        }
		SendClientMessageEx( playerid, COLOR_WHITE, "Se ha marcado un checkpoint en el mapa. (COLOR ROJO)");
	}
	case DIALOG_LICENSE_BUY: // LICENSE BUY DIALOG ~ Brian
	{
 		if(response)
		 {
			switch (listitem)
			{
				case 0:
				{
			    	if(Info[playerid][pCarLic] == 0)
					{
			        	if(GetPlayerCash(playerid) < 1000) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes pagar esta licencia de conducir.");

						GivePlayerCash(playerid,-1000);
						Tax += 1000;
						Info[playerid][pCarLic] = 1;
						SendClientMessageEx(playerid, COLOR_GRAD2, "Has adquirido con éxito una licencia de conducción.");
					}
					else SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes la licencia de conducción.");
				}
				case 1:
				{
			    	if(Info[playerid][pBoatLic] == 0)
					{
			        	if(GetPlayerCash(playerid) < 3000) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes pagar esta licencia de navegación.");
						GivePlayerCash(playerid,-3000);
						Tax += 3000;
						Info[playerid][pBoatLic] = 1;
						SendClientMessageEx(playerid, COLOR_GRAD2, "Has adquirido con éxito una licencia de navegación.");
					}
					else SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes la licencia de navegación.");
				}
				case 2:
				{
			    	if(Info[playerid][pFlyLic] == 0)
					{
			    		if(Info[playerid][pLevel] >=2)
						{
			    	    	if(GetPlayerCash(playerid) < 3000) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes pagar esta licencia de piloto.");
							GivePlayerCash(playerid,-3000);
							Tax += 3000;
							Info[playerid][pFlyLic] = 1;
  							SendClientMessageEx(playerid, COLOR_GRAD2, "Has adquirido con éxito una licencia de piloto; ahora será capaz de manejar aeronaves.");
						}
						else SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser nivel 2 para comprar la licencia de piloto.");
					}
    	      		else SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes la licencia de piloto.");
				}
				case 3:
				{
			    	if(Info[playerid][pTaxiLicense] == 0)
					{
			        	if(GetPlayerCash(playerid) < 2000) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes pagar esta licencia de taxi.");
						GivePlayerCash(playerid,-2000);
						Tax += 2000;
						Info[playerid][pTaxiLicense] = 1;
						SendClientMessageEx(playerid, COLOR_GRAD2, "Has adquirido con éxito una licencia de taxi; podrás utilizar /tarifa en cualquier vehículo y aceptar llamadas de taxis.");
					}
        	    	else SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes la licencia de taxista.");
				}
				case 4:
				{
		    		if(Info[playerid][pGunLic] == 0)
					{
		    	    	if(GetPlayerCash(playerid) < 4000) 	return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes pagar esta licencia de armas.");
						new gun[][] =
						{
							"Esta licencia sólo comprende:\n\n",
							"Armas de fuego cortas, las pistolas y revólveres.\n\n",
							"Obligaciones:\n\n",
							" Tendrás que enseñar la licencia cada vez que un policía.\n",
							"  lo solicite.\n",
							" No usarás el arma en discotecas o pubs, nightclubs.\n",
							" Pago mensual de $55.\n\n",
							"Tener armas es una responsabilidad muy grande y debes tener en cuenta\n",
							"que puedes hacer daño a las personas y esta licencia sólo es para uso\n",
							"de protección ante secuestros, robos, etc.\n\n",
							"Advertencias:\n\n",
							" Si caes preso nunca más volverás a tener armas de fuego.\n",
							" En caso de imcumplir las obligaciones, se suspenderá la licencia.\n",
							" El arma debe ser comprada exclusivamente en Ammunation.\n\n",
							"¿Estás de acuerdo con las obligaciones y advertencias?"
						};
					    new dialogs[740];
						format(dialogs,sizeof(dialogs),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",gun[0],gun[1],gun[2],gun[3],gun[4],gun[5],gun[6],gun[7],gun[8],gun[9],gun[10],gun[11],gun[12],gun[13],gun[14]);
						ShowPlayerDialog(playerid, DIALOG_GUNLIC, DIALOG_STYLE_MSGBOX, "Lee Atentamente:",dialogs, "Ok", "Cancelar");
					}
					else if(Info[playerid][pGunLic] == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes sacar licencia de armas por antecedentes penales.");
        	    	else SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes una licencia de armas vigente.");
				}
			}
		}
	}
	case    DIALOG_GUNLIC: if(response)
	{
		GivePlayerCash(playerid, -4000);
		Tax += 4000;
		Info[playerid][pGunLic] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Has adquirido con éxito una licencia de armas.");
	}
	case DIALOG_BSEX_SHOP: if(response)
	{
	    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	    if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
		switch(listitem)
	    {
			case 0:
			{
				Bought(playerid, 10);
            	businessVariables[businessID][bVault] += 10;
				GivePlayerValidWeapon(playerid, 10);
			}
			case 1:
			{
				Bought(playerid, 8);
            	businessVariables[businessID][bVault] += 8;
			    GivePlayerValidWeapon(playerid, 11);
			}
			case 2:
			{
				Bought(playerid, 12);
            	businessVariables[businessID][bVault] += 12;
			    GivePlayerValidWeapon(playerid, 12);
			}
			case 3:
			{
				Bought(playerid, 8);
            	businessVariables[businessID][bVault] += 8;
			    GivePlayerValidWeapon(playerid, 13);
			}
	    }
	    businessVariables[businessID][bStock]--;
     	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    	SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	}
	case DIALOG_BFOOD: if(response)
	{
	    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	    if(businessVariables[businessID][bStock] <= 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
		// Pizza - ($20)(+20 Hambre)\nPollo - ($18)(+18 Hambre)\nHamburgesa - ($15)(+15 Hambre)\nEnsalada - ($12)(+12 Hambre)\nPostre - ($8)(+8 Hambre)\nHelado - ($5)(+5 Hambre)
		switch(listitem)
	    { // Proceso
	        case 0:
	        {
	            if(GetPlayerCash(playerid) < 20) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] += 20.0;
            	businessVariables[businessID][bVault] += 20;
            	businessVariables[businessID][bStock] -= 4;
				GivePlayerCash(playerid, -20);
				ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.0,0,0,0,0,0);
	        }
	        case 1:
	        {
	            if(GetPlayerCash(playerid) < 18) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] += 18.0;
            	businessVariables[businessID][bVault] += 18;
            	businessVariables[businessID][bStock] -= 4;
				GivePlayerCash(playerid, -18);
				ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.0,0,0,0,0,0);
	        }
	        case 2:
	        {
	            if(GetPlayerCash(playerid) < 15) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] += 15.0;
            	businessVariables[businessID][bVault] += 15;
            	businessVariables[businessID][bStock] -= 2;
				GivePlayerCash(playerid, -15);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.0,0,0,0,0,0);
	        }
	        case 3:
	        {
	            if(GetPlayerCash(playerid) < 12) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] += 12.0;
            	businessVariables[businessID][bVault] += 12;
            	businessVariables[businessID][bStock] -= 2;
				GivePlayerCash(playerid, -12);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.0,0,0,0,0,0);
	        }
	        case 4:
	        {
	            if(GetPlayerCash(playerid) < 8) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] += 8.0;
            	businessVariables[businessID][bVault] += 8;
            	businessVariables[businessID][bStock]--;
				GivePlayerCash(playerid, -8);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.0,0,0,0,0,0);
	        }
	        case 5:
	        {
	            if(GetPlayerCash(playerid) < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] += 5.0;
            	businessVariables[businessID][bVault] += 5;
            	businessVariables[businessID][bStock]--;
				GivePlayerCash(playerid, -5);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.0,0,0,0,0,0);
	        }
	        case 6:
	        {
	            if(GetPlayerCash(playerid) < 350) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero.");
	            Info[playerid][pHungry] = 100.0;
            	businessVariables[businessID][bVault] += 350;
            	businessVariables[businessID][bStock]--;
				GivePlayerCash(playerid, -350);
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.0,0,0,0,0,0);
	        }
	    }
	    if(Info[playerid][pHungry] > 100.0) Info[playerid][pHungry] = 100.0;
		HungryCheck(playerid, Info[playerid][pHungry]);
     	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    	SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	}
	//Teléfono\t\t$200\nPhoneBook\t\t$20\nLoteria\t\t\t$10\nSpray\t\t\t$80\nCigarros\t\t$40\nCámara\t\t\t$160\nEncendedor\t\t$20\nSprunk\t\t\t$8\nRadio Portable\t\t$350\nFlores\t\t\t$7\nSeguro Alarma\t\t$800\nSeguro Electrico\t$1300\nSeguro Industrial\t$2000\nStereo Auto\t$2000
	case STOREMENU:
	{
		if(response == 1)
		{
  			new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
  			if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
			switch(listitem)
		    {
      			case 0:
		        {
		        	if(CheckMoney(playerid,200))
		        	{
		        	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                new randphone = 100000 + random(899999);
						Info[playerid][pPnumber] = randphone;
						format(szMessage, sizeof(szMessage), "Has comprado un nuevo teléfono. Tú número es: %d",Info[playerid][pPnumber]);
			            SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
               			businessVariables[businessID][bStock]--;
    					SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			            if(Info[playerid][pVIP] == 0)
						{
                            businessVariables[businessID][bVault] += 200;
                            SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
							return Bought(playerid, 200);
						}
						else
						{
						    Bought(playerid, 100);
						    businessVariables[businessID][bVault] += 100;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						    SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 200, a ti te costó 100.");
						}
			            return 1;
					}
		        }
	         	case 1:
		        {
		            if(CheckMoney(playerid,20))
		            {
		                if(Info[playerid][pLevel] > 1)
		                {
		                    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                    Info[playerid][pPhoneBook] = 1;
			            	SendClientMessageEx(playerid, COLOR_WHITE, "Has comprado un PhoneBook. Ahora puedes ver los números telefonicos de otra persona.");
                            SendClientMessageEx(playerid, COLOR_WHITE, "TIP: /numero <id>.");
                            businessVariables[businessID][bStock]--;
                            SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			            	if(Info[playerid][pVIP] == 0)
							{
							    businessVariables[businessID][bVault] += 20;
							    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						    	return Bought(playerid, 20);
							}
							else
							{
							    businessVariables[businessID][bVault] += 5;
							    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						    	Bought(playerid, 5);
						    	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 20, a ti te costó 5.");
							}
							return 1;
						}
						else SendClientMessageEx(playerid, COLOR_GRAD3, "Sólo usuarios mayores a nivel 2 pueden comprar un PhoneBook");
					}
		        }
	         	case 2:
		        {
		            if(CheckMoney(playerid,10))
		            {
			            ShowPlayerDialog(playerid, LOTTO_BUY, DIALOG_STYLE_INPUT, "Lotería Nacional","Inserta un número entre 1 y 250. Mucha Suerte!","Comprar","Cancelar");
						return 1;
					}
		        }
		         case 3:
		        {
		            if(CheckMoney(playerid,80))
					{
			    		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			            Info[playerid][pSpraycan] += 3;
			            SendClientMessageEx(playerid, COLOR_GRAD4, "Compraste 3 Potes de Spray. Puedes usar /paintcoche - /colorcoche dentro de tu coche para pintarlo.");
                        businessVariables[businessID][bStock]--;
                        SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
						if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 80;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 80);
						}
						else
						{
						    businessVariables[businessID][bVault] += 50;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 50);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 80, a ti te costó 50.");
						}
						return 1;
					}
		        }
	         	case 4:
		        {
		            if(CheckMoney(playerid,40))
		            {
		                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			            Info[playerid][pCigarettes] = 20;
			            SendClientMessageEx(playerid, COLOR_WHITE, "Has una cajetilla de 20 cigarros, utilza \"/cfumar\"");
                        businessVariables[businessID][bStock]--;
                        SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
						if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 40;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 40);
						}
						else
						{
						    businessVariables[businessID][bVault] += 20;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 20);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 40, a ti te costó 20.");
						}
			            return 1;
					}
		        }
	         	case 5:
		        {
		            if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes comprar esto las 2 primeras horas de juego");
		            if(CheckMoney(playerid,160))
		            {
		                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			            GivePlayerValidWeapon(playerid, 43);
			            SendClientMessageEx(playerid, COLOR_WHITE, "Has comprado una cámara de fotos.");
               			businessVariables[businessID][bStock]--;
               			SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			            if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 160;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 160);
						}
						else
						{
						    businessVariables[businessID][bVault] += 80;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 80);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 160, a ti te costó 80.");
						}
			            return 1;
					}
		        }
	         	case 6:
		        {
					if(CheckMoney(playerid,20))
		            {
		                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			            Info[playerid][pLighter] = 1;
			            SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un encendedor.");
			            businessVariables[businessID][bStock]--;
			            SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			            if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 20;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 20);
						}
						else
						{
						    businessVariables[businessID][bVault] += 3;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 3);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 20, a ti te costó 3.");
						}
			            return 1;
					}
		        }
		        case 7:
		        {
					if(CheckMoney(playerid,100))
		            {
		                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						Info[playerid][pSprunk]++;
						SendClientMessageEx(playerid, COLOR_GRAD4, "Sprunk comprado");
						SendClientMessageEx(playerid, COLOR_WHITE, "HINT: /bebersprunk para beber un sprunk. Botón izquierdo del ratón para tomar, F para botarlo.");
                        businessVariables[businessID][bStock]--;
                        SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
						if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 100;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 100);
						}
						else
						{
						    businessVariables[businessID][bVault] += 4;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 4);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 8, a ti te costó 4.");
						}
					}
		        }
		        case 8:
				{
					if(CheckMoney(playerid,350))
					{
		                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			            Info[playerid][pRadio] = 1;
			            SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un radio portátil /pr [Hablar] - /frecuencia - /togpr [Prender/Apagar]");
                        businessVariables[businessID][bStock]--;
                        SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
						if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 350;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 350);
						}
						else
						{
						    businessVariables[businessID][bVault] += 180;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 180);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 350, a ti te costó 180.");
						}
					}
				}
				case 9:
		        {
		     		if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes comprar esto las 2 primeras horas de juego");
					if(CheckMoney(playerid,7))
		            {
		                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessageEx(playerid, COLOR_GRAD4, "Has comprado unas flores");
						GivePlayerValidWeapon(playerid, 14);
                        businessVariables[businessID][bStock]--;
                        SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
						if(Info[playerid][pVIP] == 0)
						{
						    businessVariables[businessID][bVault] += 7;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	return Bought(playerid, 7);
						}
						else
						{
						    businessVariables[businessID][bVault] += 1;
						    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
						   	Bought(playerid, 1);
						   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento por ser VIP! El precio normal es 7, a ti te costó 1.");
						}
			            return 1;
					}
				}
				case 10:
		        {
					if(GetPlayerVehicleCount(playerid) != 0)
					{
      					if(CheckMoney(playerid,800))
      					{
							SetPVarInt(playerid, "lockmenu", 1);
  							for(new i=0; i<MAX_PLAYERVEHICLES; i++)
                			{
				    			if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
				    			{
	                		    	format(szMessage, sizeof(szMessage), "Coche %d | Modelo: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
	                		    	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
						     	}
				    		}
				    		ShowPlayerDialog(playerid, DIALOG_CDLOCKMENU, DIALOG_STYLE_INPUT, "Selecciona"," Selecciona el vehiculo en el cual instalarás el seguro:", "Ok", "Cancelar");
						}
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Usted no tiene coches - en cual instalamos el seguro?");
						return 1;
					}
				}
				case 11:
				{
					if(GetPlayerVehicleCount(playerid) != 0)
					{
			   			if(CheckMoney(playerid,2000))
				        {
							SetPVarInt(playerid, "lockmenu", 3);
			    			for(new i=0; i<MAX_PLAYERVEHICLES; i++)
                			{
				     			if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
				     			{
	                     			format(szMessage, sizeof(szMessage), "Coche %d | Modelo: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
	                     			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				     			}
			    			}
							ShowPlayerDialog(playerid, DIALOG_CDLOCKMENU, DIALOG_STYLE_INPUT, "Selecciona"," Selecciona el vehiculo en el cual instalarás el seguro:", "Ok", "Cancelar");
						}
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Usted no tiene coches - en cual instalamos el seguro?");
						return 1;
					}
				}
				case 12:
		        {
					if(GetPlayerVehicleCount(playerid) != 0)
					{
      					if(CheckMoney(playerid,1300))
      					{
				    		for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	                		{
						    	if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
						     	{
		            	        	format(szMessage, sizeof(szMessage), "Coche %d | Modelo: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
		            	        	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
						     	}
				    		}
				    		ShowPlayerDialog(playerid, DIALOG_CDSTEREOMENU, DIALOG_STYLE_INPUT, "Selecciona"," Selecciona el vehiculo en el cual instalarás el stereo:", "Ok", "Cancelar");
						}
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_WHITE, "Usted no tiene coches - en cual instalamos el stereo?");
						return 1;
					}
				}
			}
		}
	}
	case TRAFICDRUGS:
	{
	    if(GetPVarInt(playerid, "ChoosingDrugs") == 0) return SendClientMessageEx(playerid, COLOR_GREY, " No estás traficando drogas!");
	    if(response)
 	    {
			new mypoint = -1;
			for (new i=0; i<MAX_POINTS; i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Lab Drug", true) == 0)
				{
					mypoint = i;
				}
			}
			if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en el punto especificado!");
			if(Info[playerid][pCrates])
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* No se puede sostener más paquetes de drogas!");
				DeletePVar(playerid, "ChoosingDrugs");
				return 1;
			}
			if(GetPlayerCash(playerid) > 0)
			{
				SendClientMessageEx(playerid, COLOR_GENERAL,"* Recogiste unos de paquetes de hierba.");
				//GivePlayerCash(playerid, -150);
				Info[playerid][pCrates] = 1;
				SetPVarInt(playerid, "CrateDeliver", 1);
				DeletePVar(playerid, "ChoosingDrugs");
				SetPVarInt(playerid, "tpDrugRunTimer", 45);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
				SendClientMessageEx(playerid, COLOR_WHITE,"Ahora déjalo en en lugar indicado para tu paga. (Vé al checkpoint)");
				SetPlayerCheckpoint(playerid, 2165.8655,-1675.2634,15.0859, 2);
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY,"* No puedes traficar paquetes si no tienes dinero en mano!");
				DeletePVar(playerid, "ChoosingDrugs");
				return 1;
			}
		}
		else
		{
			new mypoint = -1;
			for (new i=0; i<MAX_POINTS; i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Lab Drug", true) == 0)
				{
					mypoint = i;
				}
			}
			if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en el punto especificado!");
			if(Info[playerid][pCrates])
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* No se puede sostener más paquetes de drogas!");
				DeletePVar(playerid, "ChoosingDrugs");
				return 1;
			}
			if(GetPlayerCash(playerid) > 0)
			{
				SendClientMessageEx(playerid, COLOR_GENERAL,"* Recogiste unos de paquetes de crack.");
				//GivePlayerCash(playerid, -200);
				Info[playerid][pCrates] = 1;
				SetPVarInt(playerid, "CrateDeliver", 2);
				DeletePVar(playerid, "ChoosingDrugs");
				SetPVarInt(playerid, "tpDrugRunTimer", 45);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
				SetPlayerCheckpoint(playerid, 2348.6213,-1168.0778,27.8631, 2);
				SendClientMessageEx(playerid, COLOR_WHITE,"Ahora déjalo en en lugar indicado para tu paga. (Vé al checkpoint)");
				return 1;
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY,"* No puedes traficar paquetes si no tienes dinero en mano!");
				DeletePVar(playerid, "ChoosingDrugs");
				return 1;
			}
		}
	}
	case GIVEKEYS:
	{
	    if(response)
	    {
			if(PlayerVehicleInfo[playerid][listitem][pvId] == INVALID_PLAYER_VEHICLE_ID)
			{
	            SendClientMessageEx(playerid, COLOR_GRAD2, "No se puede dar las llaves de un vehículo que no existe o que está embargado.");
	            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	            return 1;
			}
	        if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] != INVALID_PLAYER_ID)
	        {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "Usted ya ha dado a alguien las llaves de este coche.");
	            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	            return 1;
	        }
	        if(Info[GiveKeysTo[playerid]][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	        {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "Ese jugador ya tiene las llaves de un coche distinto.");
	            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	            return 1;
	        }
			PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] = GiveKeysTo[playerid];
			Info[GiveKeysTo[playerid]][pVehicleKeys] = listitem;
			Info[GiveKeysTo[playerid]][pVehicleKeysFrom] = playerid;
			format(szMessage, sizeof(szMessage), "%s te ha dado las llaves de su %s.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
			SendClientMessageEx(GiveKeysTo[playerid], COLOR_GRAD2, szMessage);
			format(szMessage, sizeof(szMessage), "Has dado a %s las llaves de tu %s.", GetPlayerNameEx(GiveKeysTo[playerid]), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	    }
	}
	case REMOVEKEYS:
	{
	    if(response)
	    {
	        if(PlayerVehicleInfo[playerid][listitem][pvId] == INVALID_PLAYER_VEHICLE_ID) {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "No se puede quitar las llaves de un vehículo que no existe o que estánembargados.");
	            return 1;
			}
	        if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] != PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId])
	        {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "Este jugador no tiene las llaves de este coche.");
	            return 1;
	        }
	        if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] == INVALID_PLAYER_ID)
	        {
	            SendClientMessageEx(playerid, COLOR_GRAD2, "Usted no ha dado a nadie las llaves de este coche.");
	            return 1;
	        }
			Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
			Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
			format(szMessage, sizeof(szMessage), "%s ha tomado las llaves de su %s.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
			SendClientMessageEx(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId], COLOR_GRAD2, szMessage);
			format(szMessage, sizeof(szMessage), "Tomaste las llaves de tu %s de %s.", GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]),GetPlayerNameEx(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]));
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] = INVALID_PLAYER_ID;
	    }
	}
	/*case DIALOG_NUMBERPLATE:
	{
	    if(response == 1)
		{
			for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
			{
			    if(listitem == i)
				{
			        if(Info[playerid][pVIP] >= 1)
					{
			            new
			                tmpSz_NumPlate[32];


			            GetPVarString(playerid, "szNumPS", tmpSz_NumPlate, sizeof(tmpSz_NumPlate));
			            strcpy(PlayerVehicleInfo[playerid][i][pvNumberPlate], tmpSz_NumPlate, 32);
			            RegisterVehicleNumberPlate(PlayerVehicleInfo[playerid][i][pvId], tmpSz_NumPlate);
			            GivePlayerCash(playerid, -4000);
			            SendClientMessageEx(playerid, COLOR_WHITE, "Fue registrada el numero de placa, en la base de datos de SAPD. (Pago fue de $4000 (Derecho de cambio de matricula.))");
					}
					else
					{
			        	new
			             	tmpSz_NumPlate[32];

		            	GetPVarString(playerid, "szNumPS", tmpSz_NumPlate, sizeof(tmpSz_NumPlate));
		            	strcpy(PlayerVehicleInfo[playerid][i][pvNumberPlate], tmpSz_NumPlate, 32);
		            	RegisterVehicleNumberPlate(PlayerVehicleInfo[playerid][i][pvId], tmpSz_NumPlate);
				    	GivePlayerCash(playerid, -24500);
				    	SendClientMessageEx(playerid, COLOR_WHITE, "Fue registrada el numero de placa, en la base de datos de SAPD. (Pago fue de $24500 (Derecho de cambio de matricula.))");
					}
					return 1;
				}
			}
		}
	}
	case DIALOG_NUMBER_PLATE:
	{
	    if(response)
		{
	        if(strlen(inputtext) < 1 || strlen(inputtext) > 8) {
	            SendClientMessageEx(playerid, COLOR_WHITE, "ERROR: Sólo puede tener un número de matrícula que consta de 1-8 caracteres.");
	        }
	        else
			{
	            if(strfind("XMT", inputtext, true) != -1)
				{
	                SendClientMessageEx(playerid, COLOR_WHITE, "ERROR: Usted no puede usar el término \"XMT\" en su placa de matrícula.");
					return 1;
				}

			    SetPVarString(playerid, "szNumPS", inputtext);

			    new
					vstring[1024]; // ew, another 4096 bytes of memory down the drain

		 		for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
				{
					if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					{
						format(vstring, sizeof(vstring), "%s\n%s", vstring, GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
					}
					else
					{
						format(vstring, sizeof(vstring), "%s\nVacío", vstring);
					}
				}

				ShowPlayerDialog(playerid, DIALOG_NUMBERPLATE, DIALOG_STYLE_LIST, "Selecciona un coche", vstring, "Ok", "Cancelar");
			}
		}
	}*/
	case TRACKCAR:
	{
	    if(response == 1)
	    {
			for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
			{
			    if(listitem == i)
			    {
			        new Float: carPos[3];
			        if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
			        {
			        	GetVehiclePos(PlayerVehicleInfo[playerid][i][pvId], carPos[0], carPos[1], carPos[2]);
			        	if(GetPVarInt(playerid, "Packages") == 0 || EMSAccepted[playerid] == 999 || MedicAccepted[playerid] == 999 || MechanicCallTime[playerid] == 0)
						{
					    	SetPVarInt(playerid, "TrackCar", 1);
				    		new zone[MAX_ZONE_NAME];
				    		GetCar3DZone(PlayerVehicleInfo[playerid][i][pvId], zone, sizeof(zone));
				    		format(szMessage, sizeof(szMessage), "Tu vehículo fue localizado en %s. (Vé al checkpoint)", zone);
				    		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
					    	SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
							PlayerPlaySound(playerid, 1138, 0,0,0);
						}
						else return SendClientMessageEx(playerid, COLOR_WHITE, "Primero ve al checkpoint que se te asigno primero, debes de estar en una llamada o algo.");
					}
					else if(PlayerVehicleInfo[playerid][i][pvImpounded]) SendClientMessageEx(playerid, COLOR_WHITE, "No se puede rastrear un vehículo confiscado. Si desea recuperarlo, tiene que pagar la multa.");
					else SendClientMessageEx(playerid, COLOR_WHITE, "No se puede rastrear un vehículo que no existe o no está spawneado.");
			    }
			}
	    }
	}
	/*case SELLCAR:
	{
	    if(response == 1)
	    {
			for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
			{
			    if(listitem == i)
			    {
			        if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
			        {
			            if(PlayerVehicleInfo[playerid][i][pvPrice] < 1) PlayerVehicleInfo[playerid][i][pvPrice] = 34000;
                        for(new m = 0; m < MAX_MODS; m++)
						{
                            PlayerVehicleInfo[playerid][i][pvMods][m] = 0;
                        }
			            DestroyVehicle(PlayerVehicleInfo[playerid][i][pvId]);
                        PlayerVehicleInfo[playerid][i][pvId] = 0;
                        PlayerVehicleInfo[playerid][i][pvModelId] = 0;
                        PlayerVehicleInfo[playerid][i][pvPosX] = 0.0;
                        PlayerVehicleInfo[playerid][i][pvPosY] = 0.0;
                        PlayerVehicleInfo[playerid][i][pvPosZ] = 0.0;
                        PlayerVehicleInfo[playerid][i][pvPosAngle] = 0.0;
                        PlayerVehicleInfo[playerid][i][pvLock] = 0;
                        PlayerVehicleInfo[playerid][i][pvLocked] = 0;
                        PlayerVehicleInfo[playerid][i][pvPaintJob] = -1;
                        PlayerVehicleInfo[playerid][i][pvColor1] = 0;
						PlayerVehicleInfo[playerid][i][pvImpounded] = 0;
                        PlayerVehicleInfo[playerid][i][pvColor2] = 0;
                        strmid(PlayerVehicleInfo[playerid][i][pvAllowPlayer], "Nadie", 0, strlen("Nadie"), 255);
                        PlayerVehicleInfo[playerid][i][pvAllowedPlayerId] = INVALID_PLAYER_ID;
                        PlayerVehicleInfo[playerid][i][pvPark] = 0;
                        PlayerVehicleInfo[playerid][i][pvHealth] = 1000.0;
                        format(szMessage, sizeof(szMessage), "Gracias por la venta, te pagamos la mitad del precio de tu coche. {33AA33}($%i)", PlayerVehicleInfo[playerid][i][pvPrice] / 2);
                        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
                        GivePlayerCash(playerid, PlayerVehicleInfo[playerid][i][pvPrice] / 2);
						--PlayerCars;
					}
					else if(PlayerVehicleInfo[playerid][i][pvImpounded]) SendClientMessageEx(playerid, COLOR_WHITE, "No se puede vender un vehículo confiscado.");
					else SendClientMessageEx(playerid, COLOR_WHITE, "No se puede vender un vehículo que no existe o no está liberado.");
			    }
			}
	    }
	}*/
	case UNMODCARMENU: if(response)
	{
		new count = GetPVarInt(playerid, "modCount");
		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId])) for (new i = 0; i < count; i++) if(listitem == i){
			format(szDialog, sizeof(szDialog), "partList%i", i);
			new partID = GetPVarInt(playerid, szDialog);
			if (partID == 999){
				for(new f = 0 ; f < MAX_MODS; f++){
					RemoveVehicleComponent(PlayerVehicleInfo[playerid][d][pvId], GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
					PlayerVehicleInfo[playerid][d][pvMods][f] = 0;
				}
				return SendClientMessageEx(playerid, COLOR_WHITE, "Todas las modificaciones se han eliminado de tu vehículo.");
			}
			RemoveVehicleComponent(GetPlayerVehicleID(playerid), partID);
			PlayerVehicleInfo[playerid][d][pvMods][GetVehicleComponentType(partID)] = 0;
			return SendClientMessageEx(playerid, COLOR_WHITE, "La modificación que has seleccionado ha sido eliminado.");
		}
	}
	case GOTOPLAYERCAR:{
	    if(response == 1){
	        for(new i = 0; i < MAX_PLAYERVEHICLES; i++){
	            if(listitem == i){
					new Float: carPos[3], id = GetPVarInt(playerid, "playeraffectedcarTP");
					if(PlayerVehicleInfo[id][i][pvId] > INVALID_PLAYER_VEHICLE_ID){
						GetVehiclePos(PlayerVehicleInfo[id][i][pvId], carPos[0], carPos[1], carPos[2]);
						SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(PlayerVehicleInfo[id][i][pvId]));
						SetPlayerInterior(playerid,0);
						SetPlayerPos(playerid, carPos[0], carPos[1], carPos[2]);
					}
					else return SendClientMessageEx(playerid, COLOR_WHITE, "No te puede teletransportar a un espacio vacío o embargado.");
				}
			}
	    }
	}
	case PB_MENU:
	{
		if(response == 1)
		{
		    switch(listitem)
		    {
		        // Elegir Arena
		        case 0: PaintballArenaSelection(playerid);
		        // Comprar Paintball Fichas
		        case 1: PaintballTokenBuyMenu(playerid);
		        case 2:
		        {
		            if(Info[playerid][pAdmin] >= 4)
		            {
		            	//PaintballAdminMenu(playerid);
					}
					else
					{
					    PaintballMainMenu(playerid);
					    SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes acceso al panel.");
					    return 1;
					}
		        }
		    }
		}
	}
	case PB_FICHAS:
	{
	    if(response == 1)
	    {
	        if(isnull(inputtext)) return PaintballTokenBuyMenu(playerid);
	        if(strval(inputtext) <= 0) return PaintballTokenBuyMenu(playerid);
	        if(strval(inputtext) > 1000)
	        {
	            PaintballTokenBuyMenu(playerid);
	            SendClientMessageEx(playerid, COLOR_WHITE, "No puedes comprar 1000 fichas en una compra.");
	            return 1;
	        }
	        if(GetPlayerCash(playerid) < 20*strval(inputtext))
	        {
				PaintballTokenBuyMenu(playerid);
	        	format(szMessage,sizeof(szMessage), "No puedes pagar %d fichas por $%d.",strval(inputtext),strval(inputtext)*5000);
	        	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        	return 1;
			}
	        GivePlayerCash(playerid, -20*strval(inputtext));
			Info[playerid][pPaintTokens] += strval(inputtext);
			format(szMessage,sizeof(szMessage), "Compraste %d fichas por $%d.",strval(inputtext),strval(inputtext)*20);
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	    }
	    else PaintballMainMenu(playerid);
	}
	case PBARENASCORES:
	{
	    if(response == 1) return PaintballScoreboard(playerid);
	}
	case PB_SARENA:
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
       	    	case 0: JoinPaintballArena(playerid, 1);//Join DM
       	    	case 1: JoinPaintballArena(playerid, 5);//Join DM2
       	    	case 2: JoinPaintballArena(playerid, 2);// Join Choose Team
       	    	case 3: JoinPaintballArena(playerid, 4); // SendClientMessageEx Coming soon
       	    }
       	}
	    else PaintballMainMenu(playerid);
	}
	case PB_CHOOSE:
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	        	case 0: // Red
 				{
 				    if(Info[playerid][pPaintTeam] == 1)
 				    {
 				        SendClientMessageEx(playerid, COLOR_WHITE, "Ya eres del equipo rojo!");
 				        PaintballSwitchTeam(playerid);
 				        return 1;
 				    }
 				    if(PlayersRed == 12)
 				    {
						SendClientMessageEx(playerid, COLOR_WHITE, "Equipo rojo está full, porfavor elige otro equipo.");
 				        PaintballSwitchTeam(playerid);
 				        return 1;
 				    }
 				    if(PlayersRed > PlayersBlue)
 				    {
 				        SendClientMessageEx(playerid, COLOR_WHITE, "No puedes unirte a equipos ahora, si llegas a entrar estarían disparejos.");
 				        return 1;
 				    }
 				    PlayersBlue--;
 				    PlayersRed++;
 				    Info[playerid][pPaintTeam] = 1;
 				    SetHP(playerid, 0);
	        	}
	        	case 1: // Blue
	        	{
	        	    if(Info[playerid][pPaintTeam] == 2)
 				    {
 				        SendClientMessageEx(playerid, COLOR_WHITE, "Ya eres del equipo azul!");
 				        PaintballSwitchTeam(playerid);
 				        return 1;
 				    }
 				    if(PlayersBlue == 12)
 				    {
						SendClientMessageEx(playerid, COLOR_WHITE, "Equipo azul está full, porfavor elige otro equipo.");
 				        PaintballSwitchTeam(playerid);
 				        return 1;
 				    }
 				    if(PlayersBlue > PlayersRed)
 				    {
 				        SendClientMessageEx(playerid, COLOR_WHITE, "No puedes unirte a equipos ahora, si llegas a entrar estarían disparejos.");
 				        return 1;
 				    }
 				    PlayersRed--;
 				    PlayersBlue++;
 				    Info[playerid][pPaintTeam] = 2;
 				    SetHP(playerid, 0);
	        	}
			}
	    }
	}
	case PBJOINTEAM:
	{
   		if(response == 1)
    	{
        	switch(listitem)
        	{
        		case 0: // Red
				{
				    if(PlayersRed == 12)
				    {
						SendClientMessageEx(playerid, COLOR_WHITE, "El equipo rojo está FULL, por favor elige otro equipo.");
				        ShowPlayerDialog(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{0000FF}Equipo Azul","Entrar","Salir");
				        return 1;
				    }
				    if(PlayersRed > PlayersBlue)
				    {
				        SendClientMessageEx(playerid, COLOR_WHITE, "Los equipos estarían disparejos, por favor elige otro equipo.");
				        ShowPlayerDialog(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{0000FF}Equipo Azul","Entrar","Salir");
				        return 1;
				    }
				    Info[playerid][pPaintTeam] = 1;
				    TotalTDM++;
					JoinPaintballArena(playerid, 3);
        		}
        		case 1: // Blue
        		{
				    if(PlayersBlue == 12)
				    {
						SendClientMessageEx(playerid, COLOR_WHITE, "El equipo azul está FULL, por favor elige otro equipo.");
				        ShowPlayerDialog(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{0000FF}Equipo Azul","Entrar","Salir");
				        return 1;
				    }
				    if(PlayersBlue > PlayersRed)
				    {
				        SendClientMessageEx(playerid, COLOR_WHITE, "Los equipos estarían disparejos, por favor elige otro equipo.");
				        ShowPlayerDialog(playerid,PBJOINTEAM,DIALOG_STYLE_LIST,"Paintball Arena - Elige un Equipo:","{FF0000}Equipo Rojo\n{0000FF}Equipo Azul","Entrar","Salir");
				        return 1;
				    }
				    Info[playerid][pPaintTeam] = 2;
				    TotalTDM++;
					JoinPaintballArena(playerid, 3);
	        	}
			}
	    }
	    else
	    {
	        PaintballArenaSelection(playerid);
	    }
	}
	case PB_ARMAS:
	{
		if(GetPVarInt(playerid, "ArenaMode") == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Lo sentimos, no estás dentro de la arena.");
	    if(Info[playerid][pPaintTokens] < 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Lo sentimos, no tienes suficientes fichas para canjear.");
		if(response)
		{
			if(listitem == 0) //
			{
				GivePlayerWeapon(playerid, 22, 60000);
				Info[playerid][pPaintTokens] -= 1;
			}
			if(listitem == 1) //deagle
			{
				GivePlayerWeapon(playerid, 24, 60000);
				Info[playerid][pPaintTokens] -= 1;
			}
			if(listitem == 2) //MP5
			{
				GivePlayerWeapon(playerid, 29, 60000);
				Info[playerid][pPaintTokens] -= 1;
			}
			if(listitem == 3) //AK-47
			{
				GivePlayerWeapon(playerid, 30, 60000);
				Info[playerid][pPaintTokens] -= 1;
			}
			if(listitem == 4) //M4
			{
			    if(Info[playerid][pPaintTokens] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas 2 fichas para esta arma.");
				GivePlayerWeapon(playerid, 31, 60000);
				return Info[playerid][pPaintTokens] -= 1;
			}
			if(listitem == 5) //shotgun
			{
				GivePlayerWeapon(playerid, 25, 60000);
				Info[playerid][pPaintTokens] -= 1;
			}
			if(listitem == 6) //spaz
			{
			    if(Info[playerid][pPaintTokens] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas 2 fichas para esta arma.");
				GivePlayerWeapon(playerid, 27, 60000);
				return Info[playerid][pPaintTokens] -= 2;
			}
			if(listitem == 7) //armor
			{
				new Float:health;
				GetPlayerHealth(playerid, health);
				if (health < 50)
				{
				 	return SendClientMessageEx(playerid,COLOR_WHITE,"No puedes comprar chaleco con menos de 35 de vida!");
				}
				SetPlayerArmour(playerid, 100);
				return Info[playerid][pPaintTokens] -= 1;
			}
		}
	}
	case DIALOG_CDLOCKMENU:
	{
		if(response)
		{
		    new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
			if(GetPVarInt(playerid, "lockmenu") == 1)
			{
            	new pvid;
            	if (isnumeric(inputtext))
	        	{
					pvid = strval(inputtext)-1;
			    	if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
			    	{
				    	SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: No tienes un vehiculo en este slot.");
				    	SetPVarInt(playerid, "lockmenu", 0);
				    	return 1;
			    	}
			    	if(PlayerVehicleInfo[playerid][pvid][pvLock] == 1)
			    	{
					    SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: Esto ya está instalado ene ste vehiculo.");
					    SetPVarInt(playerid, "lockmenu", 0);
					    return 1;
			    	}
			    	format(szMessage, sizeof(szMessage), "   Compraste un seguro de alarma!");
			    	SendClientMessageEx(playerid, COLOR_GRAD4, szMessage);
			    	SendClientMessageEx(playerid, COLOR_YELLOW, "HINT: Ahora puedes usar /seguro para asegurar tu auto.");
			    	PlayerVehicleInfo[playerid][pvid][pvLock] = 1;
			    	SetPVarInt(playerid, "lockmenu", 0);
					businessVariables[businessID][bStock]--;
					SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			        if(Info[playerid][pVIP] == 0)
					{
					    businessVariables[businessID][bVault] += 800;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	return GivePlayerCash(playerid, -800);
					}
					else
					{
					    businessVariables[businessID][bVault] += 500;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	GivePlayerCash(playerid, -500);
					   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento VIP! El precio normal es 800, a ti te costó 500.");
					}
		    	}
			}
			else if(GetPVarInt(playerid, "lockmenu") == 2)
			{
			    new pvid;
        	    if (isnumeric(inputtext))
	    	    {
	    	        pvid = strval(inputtext)-1;
				    if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
				    {
						SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: No tienes un vehiculo en este slot.");
						SetPVarInt(playerid, "lockmenu", 0);
						return 1;
					}
					if(PlayerVehicleInfo[playerid][pvid][pvLock] == 2)
					{
						SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: Esto ya está instalado ene ste vehiculo.");
						SetPVarInt(playerid, "lockmenu", 0);
						return 1;
					}
					format(szMessage, sizeof(szMessage), "   Compraste un seguro con descarga electrica!");
					SendClientMessageEx(playerid, COLOR_GRAD4, szMessage);
					SendClientMessageEx(playerid, COLOR_YELLOW, "HINT: Ahora puedes usar /seguro para asegurar tu auto.");
					PlayerVehicleInfo[playerid][pvid][pvLock] = 2;
					SetPVarInt(playerid, "lockmenu", 0);
					businessVariables[businessID][bStock]--;
					SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			        if(Info[playerid][pVIP] == 0)
					{
					    businessVariables[businessID][bVault] += 1300;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	return GivePlayerCash(playerid, -1300);
					}
					else
					{
					    businessVariables[businessID][bVault] += 900;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	GivePlayerCash(playerid, -900);
					   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento VIP! El precio normal es 1300, a ti te costó 900.");
					}
				}
			}
			else if(GetPVarInt(playerid, "lockmenu") == 3)
			{
	   			new pvid;
        		if (isnumeric(inputtext))
        		{
            		pvid = strval(inputtext)-1;
		    		if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
		    		{
			    		SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: No tienes un vehiculo en este slot.");
			    		SetPVarInt(playerid, "lockmenu", 0);
                		return 1;
		    		}
		    		if(PlayerVehicleInfo[playerid][pvid][pvLock] == 3)
	  	    		{
			    		SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: Esto ya está instalado ene ste vehiculo.");
			    		SetPVarInt(playerid, "lockmenu", 0);
			    		return 1;
		    		}
		    		format(szMessage, sizeof(szMessage), "   Compraste un seguro industrial!");
		    		SendClientMessageEx(playerid, COLOR_GRAD4, szMessage);
		    		SendClientMessageEx(playerid, COLOR_YELLOW, "HINT: Ahora puedes usar /seguro para asegurar tu coche.");
		    		PlayerVehicleInfo[playerid][pvid][pvLock] = 3;
		    		SetPVarInt(playerid, "lockmenu", 0);
		    		Tax += 1200;
		    		businessVariables[businessID][bStock]--;
		    		SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			        if(Info[playerid][pVIP] == 0)
					{
					    businessVariables[businessID][bVault] += 2000;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	return GivePlayerCash(playerid, -2000);
					}
					else
					{
					   	GivePlayerCash(playerid, -1200);
					   	businessVariables[businessID][bVault] += 1200;
					   	SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento VIP! El precio normal es 2000, a ti te costó 1200.");
					}
				}
			}
		}
	}
	case DIALOG_CDSTEREOMENU:
	{
		if(response)
		{
		    	new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
  				new pvid;
            	if (isnumeric(inputtext))
	        	{
					pvid = strval(inputtext)-1;
			    	if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
			    	{
				    	SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: No tienes un vehiculo en este slot.");
				    	return 1;
			    	}
			    	if(PlayerVehicleInfo[playerid][pvid][pvStereo] == 1)
			    	{
					    SendClientMessageEx(playerid, COLOR_GRAD4, "ERROR: Esto ya está instalado en este vehiculo.");
					    return 1;
			    	}
			    	format(szMessage, sizeof(szMessage), "   Compraste un stereo de auto!");
			    	SendClientMessageEx(playerid, COLOR_GRAD4, szMessage);
			    	SendClientMessageEx(playerid, COLOR_YELLOW, "HINT: Ahora puedes usar /stereo para prenderlo.");
			    	PlayerVehicleInfo[playerid][pvid][pvStereo] = 1;
					businessVariables[businessID][bStock]--;
					SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
			        if(Info[playerid][pVIP] == 0)
					{
					    businessVariables[businessID][bVault] += 2000;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	return GivePlayerCash(playerid, -2000);
					}
					else
					{
					    businessVariables[businessID][bVault] += 1200;
					    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
					   	GivePlayerCash(playerid, -1200);
					   	SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Descuento VIP! El precio normal es 2000, a ti te costó 1200.");
					}
		    	}
		}
	}
	case EQUIPO_DOC:
	{
	    if(response == 1)
	    {
	        switch (listitem)
	        {
	            case 0:
				{
			                SetHP(playerid, 100);
							SetPlayerSkin(playerid, 70);
							Medics += 1;
							format(szMessage, sizeof(szMessage), "* %s se pone su bata blanca y se desinfecta sus manos.", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 1:
				{
			                SetHP(playerid, 100);
							SetPlayerSkin(playerid, 274);
							Medics += 1;
							format(szMessage, sizeof(szMessage), "* %s se viste y guarda su radio.", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 2:
				{
			                SetHP(playerid, 100);
							SetPlayerSkin(playerid, 275);
							Medics += 1;
							format(szMessage, sizeof(szMessage), "* %s se viste y guarda su radio.", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 3:
				{
			                SetHP(playerid, 100);
							SetPlayerSkin(playerid, 276);
							Medics += 1;
							format(szMessage, sizeof(szMessage), "* %s se viste y guarda su radio.", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				case 4:
				{
							if(OnDuty[playerid] == 1) {	SendClientMessageEx(playerid, COLOR_GRAD2, "Estás en labor! Termina tu turno!"); return 1;    }
							SetPlayerSkin(playerid, Info[playerid][pChar]);
							Medics -= 1;
							format(szMessage, sizeof(szMessage), "* %s se viste con ropa normal", GetPlayerNameEx(playerid));
							ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	case LOTTO_BUY:
	{
		if(response == 1)
		{
		    new number = strval(inputtext);
		    if(number >= 0 && number <= 250)
		    {
		        if(CheckMoney(playerid, 10))
		        {
					Info[playerid][pLottoNr] = number;
					SendClientMessageEx(playerid, COLOR_WHITE, "Lotería comprada!");
					Bought(playerid, 10);
	    			Jackpot += 10;
	    		}
			}
			else SendClientMessage(playerid,COLOR_GREY,"* El número mínimo es 0 y el máximo es 250, inténtalo otra vez.");
		}
	}
	case FSTYLE_DIALOG:
	{
    	if(response == 1)
    	{
        	switch(listitem)
        	{
            	case 0:
            	{
		    	    if(CheckMoney(playerid, 1500))
		    	    {
						Bought(playerid, 1500);
						Info[playerid][pFStyle] = 7;
						SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
						SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido Knee Head!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
					}
				}
				case 1:
	            {
			        if(CheckMoney(playerid, 1000))
			        {
						Bought(playerid, 1000);
						Info[playerid][pFStyle] = 6;
						SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
						SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido Kung Fu!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
					}
				}
				case 2:
	            {
			        if(CheckMoney(playerid, 800))
			        {
						Bought(playerid, 800);
						Info[playerid][pFStyle] = 5;
						SetPlayerFightingStyle (playerid, Info[playerid][pFStyle]);
						SendClientMessageEx(playerid, COLOR_WHITE, "Felicidades! Has aprendido a Boxear!");
						ApplyAnimation(playerid,"benchpress", "gym_bp_celebrate",4.0,1,1,1,1,500);
					}
				}
			}
		}
	}
	case MMENU_REPARACION:
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0:
				{
					format(szMessage, sizeof(szMessage), "* %s arregla el motor del vehículo.", GetPlayerNameEx(playerid));
      				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		  			SetVehicleHealth(idcar, 1000.0);
					return 1;
				}
				case 1:
				{
					format(szMessage, sizeof(szMessage), "* %s coloca carrocería nueva al vehiculo.", GetPlayerNameEx(playerid));
      				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		  			RepairVehicle(idcar);
					return 1;
				}
			}
		}
	}
	case MECANICO_MENU:
	{
		if(response == 1)
	    {
	        switch(listitem)
	        {
				case 0:// Reparar
				{
				        if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en el taller de mecanica!");
	    				if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehículo!");
						ShowPlayerDialog(playerid, MMENU_REPARACION, DIALOG_STYLE_LIST, "Reparar", "Cambiar Motor\nCambiar Motor + Chasis", "Ok", "Atrás");
						return 1;
				}
				case 1: // Gasolina
				{
				    if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en el taller!");
				    if(IsPlayerInAnyVehicle(playerid))
				    {
						format(szMessage, sizeof(szMessage), "* %s llena el tanque del vehículo.", GetPlayerNameEx(playerid));
		      			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				  		VehicleFuel[idcar] = 500;
				  		return 1;
					}
					else return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehículo!");
				}
				case 2: // Tunnig
				{
	                if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en el taller!");
	    			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehículo!");
					ShowPlayerDialog(playerid, MMENUTUNING_G, DIALOG_STYLE_LIST, "Selecciona", "Piezas Wheel Arch Angels\nLlantas", "Aceptar", "Atrás");
					return 1;
				}
			}
		}
	}
    case MMENUTUNING_G:{
		if(response == 1){
	        switch(listitem){
	            case 0: ShowPlayerDialog(playerid, TUNING_WAA, DIALOG_STYLE_LIST, "Piezas W.A.A ", "Chasis X-Flow\nChasis Alien", "Aceptar", "Atrás");
	            case 1: ShowPlayerDialog(playerid, TUNING_MENU_RUEDAS, DIALOG_STYLE_LIST, "Llantas", "OffRoad\nShadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces", "Tunear", "<<");
			}
		}
	}
	case TUNING_WAA:
	{
		if(response == 1)
    	{
    	    switch(listitem)
    	    {
    	        // XFLOW TUNING Important Note: Using an invalid componentid crashes the game.
    	        case 0:
    	        {
    	            SendClientMessageEx(playerid, COLOR_GRAD2, "CASE0");
					switch(GetVehicleModel(idcar))
			        {
			            case 560:
			            {
	                        AddVehicleComponent(idcar, 1030);
	                        AddVehicleComponent(idcar, 1033);
	                        AddVehicleComponent(idcar, 1140);
	                        AddVehicleComponent(idcar, 1170);
	                        AddVehicleComponent(idcar, 1029);
	                        AddVehicleComponent(idcar, 1139);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Xflow instalada!");
			            }
			            case 562:
			            {
	                        AddVehicleComponent(idcar, 1039);
	                        AddVehicleComponent(idcar, 1035);
	                        AddVehicleComponent(idcar, 1148);
	                        AddVehicleComponent(idcar, 1172);
	                        AddVehicleComponent(idcar, 1037);
	                        AddVehicleComponent(idcar, 1146);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Xflow instalada!");
			            }
			            case 565:
			            {
	                        AddVehicleComponent(idcar, 1048);
	                        AddVehicleComponent(idcar, 1053);
	                        AddVehicleComponent(idcar, 1050);
	                        AddVehicleComponent(idcar, 1151);
	                        AddVehicleComponent(idcar, 1152);
	                        AddVehicleComponent(idcar, 1045);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Xflow instalada!");
			            }
		            	case 559:
		            	{
                        	AddVehicleComponent(idcar,1070);
                        	AddVehicleComponent(idcar,1068);
                        	AddVehicleComponent(idcar,1158);
                        	AddVehicleComponent(idcar,1161);
                        	AddVehicleComponent(idcar,1173);
                        	AddVehicleComponent(idcar,1066);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Xflow instalada!");
		            	}
		            	case 561:
		            	{
                        	AddVehicleComponent(idcar,1057);
                        	AddVehicleComponent(idcar,1061);
                        	AddVehicleComponent(idcar,1060);
                        	AddVehicleComponent(idcar,1156);
                        	AddVehicleComponent(idcar,1157);
                    	    AddVehicleComponent(idcar,1059);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Xflow instalada!");
		            	}
		            	case 558:
		           	 	{
                    	    AddVehicleComponent(idcar, 1093);
                    	    AddVehicleComponent(idcar,1091);
                	        AddVehicleComponent(idcar,1163);
            	            AddVehicleComponent(idcar, 1167);
            	            AddVehicleComponent(idcar, 1165);
            	            AddVehicleComponent(idcar, 1089);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Xflow instalada!");
		    	        }
		    	        default: SendClientMessageEx(playerid, COLOR_GRAD2, "Este coche no permite este tipo de tunning.");
		    	    }
		    	    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
					{
						UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
					}
            	}
            	// ALIEN TUNING Important Note: Using an invalid componentid crashes the game.
				case 1:
            	{
                	SendClientMessageEx(playerid, COLOR_GRAD2, "CASE0");
					switch(GetVehicleModel(idcar))
		        	{
		        	    case 560:
		        	    {
                	        AddVehicleComponent(idcar, 1026);
                	        AddVehicleComponent(idcar, 1032);
                	        AddVehicleComponent(idcar, 1138);
                	        AddVehicleComponent(idcar, 1141);
                	        AddVehicleComponent(idcar,1169);
                	        AddVehicleComponent(idcar, 1028);
        	                SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Alien instalada!");
		    	        }
		    	        case 562:
		    	        {
        	                AddVehicleComponent(idcar,1036);
        	                AddVehicleComponent(idcar,1038);
        	                AddVehicleComponent(idcar,1149);
        	                AddVehicleComponent(idcar,1171);
        	                AddVehicleComponent(idcar,1034);
        	                AddVehicleComponent(idcar,1147);
        	                SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Alien instalada!");
			            }
			            case 565:
			            {
        	                AddVehicleComponent(idcar, 1047);
        	                AddVehicleComponent(idcar, 1054);
        	                AddVehicleComponent(idcar, 1049);
        	                AddVehicleComponent(idcar, 1150);
        	                AddVehicleComponent(idcar, 1153);
        	                AddVehicleComponent(idcar, 1046);
        	                SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Alien instalada!");
			            }
			            case 559:
			            {
        	                AddVehicleComponent(idcar, 1069);
        	                AddVehicleComponent(idcar, 1067);
        	                AddVehicleComponent(idcar, 1162);
        	                AddVehicleComponent(idcar, 1159);
        	                AddVehicleComponent(idcar, 1160);
        	                AddVehicleComponent(idcar, 1065);
        	                SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Alien instalada!");
			            }
			            case 561:
			            {
	                        AddVehicleComponent(idcar, 1056);
	                        AddVehicleComponent(idcar, 1055);
	                        AddVehicleComponent(idcar, 1058);
	                        AddVehicleComponent(idcar, 1154);
	                        AddVehicleComponent(idcar, 1153);
	                        AddVehicleComponent(idcar, 1064);
        	                SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería Alien instalada!");
			            }
			            case 558:
			            {
	                        AddVehicleComponent(idcar,1094);
	                        AddVehicleComponent(idcar,1088);
	                        AddVehicleComponent(idcar, 1164);
	                        AddVehicleComponent(idcar,1168);
	                        AddVehicleComponent(idcar,1166);
	                        AddVehicleComponent(idcar,1092);
	                        SendClientMessageEx(playerid, COLOR_WHITE, "¡Carrocería ALIEN Instalada!");
			            }
		    	        default: SendClientMessageEx(playerid, COLOR_GRAD2, "Este coche no permite este tipo de tunning.");
			        }
		    	    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
					{
						UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
					}
	            }
	        }
		}
	}
	case TUNING_MENU_RUEDAS:
	{
		if(response == 1)
	    {
	        new Float:cx, Float:cy, Float:cz;
         	GetVehiclePos(idcar, cx, cy, cz);
         	PlayerPlaySound(playerid, 1133, cx, cy, cz);
	        switch(listitem)
	        {
	            case 0: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas OffRoad instaladas."); AddVehicleComponent(idcar, 1025); return 1; }
	            case 1: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Shadow instaladas."); AddVehicleComponent(idcar, 1073);  return 1; }
	            case 2: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Mega instaladas."); AddVehicleComponent(idcar, 1074); return 1; }
	            case 3: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Rimshine instaladas. "); AddVehicleComponent(idcar, 1075);  return 1; }
	            case 4: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Wires instaladas."); AddVehicleComponent(idcar, 1076);  return 1; }
	            case 5: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Classic instaladas."); AddVehicleComponent(idcar, 1077);  return 1; }
	            case 6: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Twist instaladas."); AddVehicleComponent(idcar, 1078);  return 1; }
	            case 7: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Cutter instaladas."); AddVehicleComponent(idcar, 1079);  return 1; }
	            case 8: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Switch instaladas."); AddVehicleComponent(idcar, 1080);  return 1; }
	            case 9: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Grove instaladas."); AddVehicleComponent(idcar, 1081);  return 1; }
	            case 10: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Import instaladas."); AddVehicleComponent(idcar, 1082);  return 1; }
	            case 11: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Dollar instaladas."); AddVehicleComponent(idcar, 1083);  return 1; }
    	        case 12: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Trance instaladas."); AddVehicleComponent(idcar, 1084);  return 1; }
	            case 13: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1085);  return 1; }
	            case 14: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1096);  return 1; }
	            case 15: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1097);  return 1; }
	            case 16: { SendClientMessageEx(playerid, COLOR_WHITE, "* Llantas Atomic instaladas."); AddVehicleComponent(idcar, 1098);  return 1; }
			}
		    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
			{
				UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
			}
		}
	}
	case REQF_ACCEPT:
	{
    	if(response == 1)
    	{
    	    format(szMessage, sizeof(szMessage), "¡Felicidades! Ahora trabajas en %s, aceptaste el contrato!",ReqF_Name[playerid]);
    	    SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
    	    Info[playerid][pMember]= ReqF_Faction[playerid];
    	    Info[playerid][pRank] = 1;
    	    Info[playerid][pDivision] = 1;
    	    format(szMessage, sizeof(szMessage), "* %s acepta un contrato", GetPlayerNameEx(playerid));
  			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    	    ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
    	}
    	else
		{
    	    SendClientMessageEx(playerid, COLOR_GRAD2, "Rechazaste el contrato.");
    	    format(szMessage, sizeof(szMessage), "* %s rechaza un contrato", GetPlayerNameEx(playerid));
  			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ReqF_Name[playerid] = "No-Faction"; ReqF_Faction[playerid] = 0; Facturing[playerid] = 0;
		}
	}
	case ENTER_LSTV:
	{
    	if(response == 1)
    	{
        	switch(listitem)
        	{
        	    case 0:
        	    {
        	        SetPosEx(playerid, -2719.7854,519.2936,48.3752,0,0,0);//-1965.2617,779.8456,107.1754
        	        GameTextForPlayer(playerid, "~g~~h~SA News", 5000, 1);
        	    }
        	    case 1:
        	    {
        	        SetPosEx(playerid, 243.2710,302.7583,999.1343+1,0,0,0);
        	        GameTextForPlayer(playerid, "~g~~h~SA News", 5000, 1);
        	    }
    	    }
	    }
	}
    case REBUG:
    {
        if(response == 1)
        {
			SendClientMessageEx(playerid, COLOR_WHITE, "Gracias. El bug será arreglado lo más antes posible.");
			format(szMessage, sizeof(szMessage), "AdmWarning: %s reportó un bug: %s", GetPlayerNameEx(playerid), inputtext);
			ABroadCast(COLOR_GENERAL,szMessage,4);
			Log("logs/reportbug.log", szMessage);
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "No dudes en reportar un bug si lo encuentras");
		}
	}
	case REG_AGE:
	{
        if(response)
        {
	         if(strval(inputtext) < 18 || strval(inputtext) > 99) return ShowPlayerDialog(playerid, REG_AGE, DIALOG_STYLE_INPUT,""COL_GENERAL"San Antón - "COL_WHITE"1/4", "ATENCIÓN!\n\n"COL_WHITE"* La edad mínima es 18\n * La edad máxima es 99",">","");
	         {
	         	Info[playerid][pAge] = strval(inputtext);
 				format(szDialog, sizeof(szDialog), ""COL_WHITE"* Edad: %d\n\nBien, ahora necesitamos saber que sexo es tu personaje.", strval(inputtext));
				ShowPlayerDialog(playerid, REG_SEX, DIALOG_STYLE_MSGBOX,""COL_GENERAL"San Antón Roleplay - "COL_WHITE"2/4", szDialog,"Hombre","Mujer");
	         }
	    }
	}
	case REG_SEX:
	{
		if(response == 1)
		{
			Info[playerid][pSex] = 1;
	        Info[playerid][pChar] = 299;
			format(szDialog, sizeof(szDialog), ""COL_WHITE"* Edad: %d.\n* Sexo: Masculino.\n\nLo último, como toda persona, todos tienen un lugar de nacimiento pero está vez tendrás que elegir un acento para tu personaje.\nEjm:\n\nNorteamericano.\nColombiano.", Info[playerid][pAge]);
	        ShowPlayerDialog(playerid, D_REGACENT, DIALOG_STYLE_INPUT, ""COL_GENERAL"San Antón Roleplay - "COL_WHITE"3/4",szDialog, "Ok", "");
	    }
		else
		{
			Info[playerid][pSex] = 2;
			Info[playerid][pChar] = 93;
			format(szDialog, sizeof(szDialog), ""COL_WHITE"* Edad: %d.\n* Sexo: Femenino.\n\nLo último, como toda persona, todos tienen un lugar de nacimiento pero está vez tendrás que elegir un acento para tu personaje.\nEjm:\n\nNorteamericano.\nColombiano.", Info[playerid][pAge]);
	        ShowPlayerDialog(playerid, D_REGACENT, DIALOG_STYLE_INPUT, ""COL_GENERAL"San Antón Roleplay - "COL_WHITE"3/4",szDialog, "Ok", "");
		}
	}
	case D_REGACENT:
	{
	    if(response)
	    {
	        if(isnumeric(inputtext))
	        {
	            format(szDialog, sizeof(szDialog), ""COL_WHITE"No se puede ingresar números.\nDebes usar menos de 14 letras.\nEjemplo:\n\n* Colombiano\n* Chino\n* Argentino\n* Peruano\n* Ingresa el que quieras...");
				return ShowPlayerDialog(playerid, D_REGACENT, DIALOG_STYLE_INPUT, ""COL_GENERAL"San Antón Roleplay - "COL_WHITE"3/4",szDialog, "Ok", "");
	        }
	        if(isnull(inputtext))
	        {
	            format(szDialog, sizeof(szDialog), ""COL_WHITE"No has ingresado nada.\nDebes usar menos de 14 letras.\nEjemplo:\n\n* Colombiano\n* Chino\n* Argentino\n* Peruano\n* Ingresa el que quieras...");
				return ShowPlayerDialog(playerid, D_REGACENT, DIALOG_STYLE_INPUT, ""COL_GENERAL"San Antón Roleplay - "COL_WHITE"3/4",szDialog, "Ok", "");
	        }
        	if(strlen(inputtext) >= 15)
			{
			    format(szDialog, sizeof(szDialog), ""COL_WHITE"El acento que elegiste usa demasiados carácteres.\nDebes usar menos de 15 letras.\nEjemplo:\n\n* Colombiano\n* Chino\n* Argentino\n* Peruano\n* Ingresa el que quieras...");
                return ShowPlayerDialog(playerid, D_REGACENT, DIALOG_STYLE_INPUT, ""COL_GENERAL"San Antón Roleplay - "COL_WHITE"3/4",szDialog, "Ok", "");
			}
			strmid(Info[playerid][pAcento], inputtext, 0, strlen(inputtext), 40);
	        new atext[7];
			switch(Info[playerid][pSex])
			{
				case 1: atext = "Hombre";
				case 2: atext = "Mujer";
			}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Muy bien eso es todo pero antes debes confirmar tus datos.\n\n * Nombre: %s.\n * Edad: %d.\n * Sexo: %s.\n * Acento: %s.\n\nSi quieras corregir tus datos selecciona cancelar.", GetPlayerNameEx(playerid),Info[playerid][pAge],atext,Info[playerid][pAcento]);
			ShowPlayerDialog(playerid, D_REGCON, DIALOG_STYLE_MSGBOX,""COL_GENERAL"San Antón Roleplay - "COL_WHITE"4/4", szDialog,"Confirmar","Cancelar");
	    }
	}
    case D_REGCON:
	{
	    if(response)
	    {
			new rt[] = "{FFFFFF}Gracias por confirmar los datos de tu personaje.\n\nAhora tienes que pasar por nuestro tutorial, te ayudará en un futuro.\n\nTerminando llegarás al aeropuerto donde comenzará la historia.\nSuerte! Gracias por preferirnos\n\n¿Preparado?";
	        ShowPlayerDialog(playerid,DIALOG_REG_TUT,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Fin del registro", rt,"Ver","");
	    }
	    else
	    {
      	 	format(szDialog, sizeof(szDialog), ""COL_WHITE"Hola de nuevo %s, antes de empezar tienes que ingresar la edad\nde tu personaje.\n\nMínimo 18 y Máximo 99", GetPlayerNameEx(playerid));
			ShowPlayerDialog(playerid, REG_AGE, DIALOG_STYLE_INPUT,""COL_GENERAL"San Antón - "COL_WHITE"1/4", szDialog,">","");
	    }
	}
	case DIALOG_REG_TUT:
	{
	    if(response == 1)
	    {
      		Info[playerid][pReg] = 1;
	        ClearChatbox(playerid);
	        TutStep[playerid] = 1;
			TutTime[playerid] = 1;
			Tutorial_Inside(playerid);
	        SendClientMessageEx(playerid, 	COLOR_YELLOW2, "* Bien, ahora verás el tutorial te tomará sólo 5 minutos.");
         	SendClientMessageEx(playerid,	COLOR_YELLOW2, "* Tu cuenta ha sido registrada exitósamente en nuestra base de datos.");
			SendClientMessageEx(playerid,	COLOR_YELLOW2, "* Pulsa la letra Y de tu teclado para pasar el tema del tutorial.");
		}
	}
	case RENT_BIKE:
	{
	    if(response == 1)
	    {
	        new lights,alarm,doors,bonnet,boot,objective;
	    	new newcar = GetPlayerVehicleID(playerid);
			if(GetPlayerCash(playerid) < 200)
			{
			  	SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes suficiente dinero.");
				RemovePlayerFromVehicle(playerid);
 				SetVehicleToRespawn(newcar);
		    	new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
	    		TogglePlayerControllable(playerid,1);
	    	}
	    	else
	    	{
			    TogglePlayerControllable(playerid, 1);
                SetVehicleParamsEx(newcar,1,lights,alarm,doors,bonnet,boot,objective);
	    		SendClientMessageEx(playerid,COLOR_GREY,"Acabas de rentar una bicicleta por 15 Minutos.");
	    		SendClientMessageEx(playerid,COLOR_GREY,"Cuando ya no quieras usarla usa /desrentarbici.");
	    		Bought(playerid, 200);
	    		RentTime[playerid] = 900;
	    		IsaRent[playerid] = 1; HireKey[playerid] = newcar;
	    	}
		}
		else
		{
			RemovePlayerFromVehicle(playerid);
		    new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
	    	TogglePlayerControllable(playerid,1);
	    }
	}
    case IPAD:
    {
	    if(response)
	    {
	    	new Float:X, Float:Y, Float:Z, Float:Distance = 1.0;
	        GetPlayerPos(playerid, X, Y, Z);
	        Ipadon[playerid] = 1;
	    	if(listitem == 0)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=56349", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Reggaeton 24/7 HD - "COL_GENERAL"Género: Reggeaton");
			}
	    	if(listitem == 1)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281016", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}HOT 108 JAMZ - "COL_GENERAL"Género: Hip-Hop");
			}
	    	if(listitem == 2)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=2187022", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}SanAnton Metal Time - "COL_GENERAL"Género: Rock & Metal");
			}
	    	if(listitem == 3)
	    	{
	    		StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377200", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Electronica & House - "COL_GENERAL"Género: Electro, House y Techno");
			}
	    	if(listitem == 4)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1662986", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}La Mega FM - "COL_GENERAL"Género: Reggaeton");
			}
	    	if(listitem == 5)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1266989", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}Reggae Hits - "COL_GENERAL"Género: Reggae & Rasta");
			}
	    	if(listitem == 6)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=66131", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}PowerMix - "COL_GENERAL"Género: Variada & Others");
			}
	    	if(listitem == 7)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616366", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}DEFJAY R&B - "COL_GENERAL"Género: Variada & R&B");
			}
	    	if(listitem == 8)
	    	{
	    		StopAudioStreamForPlayer(playerid);
	    	    PlayAudioStreamForPlayer(playerid, "http://72.55.174.251:8000/listen.pls", X, Y, Z, Distance, 0);
				SendClientMessageEx(playerid, COLOR_GENERAL, "Escuchando actualmente: {FFFFFF}SA News Radio 93.7 FM - "COL_GENERAL"Género: Variada");
			}
			if(listitem == 9)
	    	{
	    	    StopAudioStreamForPlayer(playerid);
				SendClientMessageEx(playerid, COLOR_WHITE, "Apaste tu IpodMusic");
				Ipadon[playerid] = 0;
			}
		}
		else
		{
		    format(szMessage, sizeof(szMessage), "* %s guarda su Ipod.", GetPlayerNameEx(playerid));
        	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	case DIALOG_SHOPFISH: if(response)
	{
		new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
		if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
    	switch(listitem)
    	{
	    	case 0:
	    	{
	    	    if(Carnada[playerid] > 20) return SendClientMessageEx(playerid, COLOR_GREY, "Ya has comprado 20 carnadas para pescar, gastalas.");
	    	    if(CheckMoney(playerid,15))
	    	    {
	    	        GivePlayerCash(playerid, -15);
	    	        SendClientMessageEx(playerid, COLOR_WHITE, "Compraste una lata de carnadas. (20)");
	    	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    	        Carnada[playerid] += 20;
	    	        businessVariables[businessID][bVault] += 15;
	    	        businessVariables[businessID][bStock]--;
	    	    }
	    	}
	    	case 1:
	    	{
	    	    if(Lineas[playerid] > 20 ) return SendClientMessageEx(playerid, COLOR_GREY, "Ya has comprado 20 lineas para pescar, gastalas.");
	    	    if(CheckMoney(playerid,30))
	    	    {
	    	        GivePlayerCash(playerid, -30);
	    	        SendClientMessageEx(playerid, COLOR_WHITE, "Compraste 10 lineas para la caña de pesca.");
	    	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    	        Lineas[playerid] += 10;
	    	        businessVariables[businessID][bVault] += 30;
	    	        businessVariables[businessID][bStock]--;
	    	    }
	    	}
	    }
	    SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
	}
	case DIALOG_AMMU: if(response)
	{
        if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tienes restricción de armas las 2 primeras horas de juego");
        if(Info[playerid][pGunLic] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Vendedor dice: Es imposible venderte armas, no tienes licencia para portarlas");
        new  businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
        if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento.");
		switch(listitem)
		{
		    case    0:
		    {
	    	    if(CheckMoney(playerid,50))
	    	    {
	    	        Bought(playerid, 50);
	    	        businessVariables[businessID][bVault] += 50;
            		GivePlayerValidWeapon(playerid, 1);
            		businessVariables[businessID][bStock]--;
            	}
		    }
		    case    1:
		    {
	    	    if(CheckMoney(playerid,110))
	    	    {
	    	        Bought(playerid, 110);
	    	        businessVariables[businessID][bVault] += 110;
            		GivePlayerValidWeapon(playerid, 5);
            		businessVariables[businessID][bStock]--;
            	}
		    }
		    case    2:
		    {
	    	    if(CheckMoney(playerid,3000))
	    	    {
	    	        Bought(playerid, 3000);
	    	        businessVariables[businessID][bVault] += 3000;
            		GivePlayerValidWeapon(playerid, 22);
            		businessVariables[businessID][bStock]--;
            	}
		    }
		    case    3:
		    {
	    	    if(CheckMoney(playerid,6000))
	    	    {
	    	        Bought(playerid, 6000);
	    	        businessVariables[businessID][bVault] += 6000;
            		GivePlayerValidWeapon(playerid, 24);
            		businessVariables[businessID][bStock]--;
            	}
		    }

		}
	    SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    }
    case MERCADONEGRO:
		{
		    if(response)
		    {
		        if(listitem == 0)
		    	{
		    	    if(CheckMoney(playerid,15))
		    	    if(Info[playerid][pWRestricted] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "* Tienes restricción de armas las 2 primeras horas de juego");
		    	    {
		    	        Bought(playerid, 15);
		    	        SendClientMessageEx(playerid, COLOR_WHITE, "Compraste un puño americano");
                		GivePlayerValidWeapon(playerid, 1);
                	}
		    	}
		    	if(listitem == 1)
		    	{
          			 if(CheckMoney(playerid, 50)){
					        if(Info[playerid][pLevel] <= 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "* Debes ser mayor a nivel 1.");
							Bought(playerid, 50);
							SendClientMessageEx(playerid, COLOR_WHITE, "Máscara comprada, utiliza /mascara");
							Info[playerid][pMask] = 1;
							return 1;
					}
		    	}
		    	if(listitem == 2)
		    	{
		    	    if(CheckMoney(playerid, 70)){
							Ganzuas[playerid] = 1;
							Bought(playerid, 70);
							SendClientMessageEx(playerid, COLOR_WHITE, "Ganzuas compradas.");
							return 1;
		     		}
		    	}
		    	if(listitem == 3)
		    	{
		    	    if(CheckMoney(playerid, 120)){
					        SendClientMessageEx(playerid, COLOR_WHITE, "Compraste una kit de secuestro");
							Rope[playerid] = 1;
							Bought(playerid, 120);
							return 1;
                	}
		    	}
		    }
		}
	case DRINKLISTDIALOG:
	{
    	if(response)
    	{
			switch(listitem)
			{
		    	case 0:
		    	{
		    	    SetPVarString(playerid, "DrinkName", "Cerveza");
		    	    SetPVarInt(playerid, "DrinkPrice", 60);
		    	    SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_BEER);
		    	}
		    	case 1:
		    	{
		    	    SetPVarString(playerid, "DrinkName", "Vodka");
		    	    SetPVarInt(playerid, "DrinkPrice", 100);
		    	    SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_WINE);
		    	}
		    	case 2:
		    	{
		    	    SetPVarString(playerid, "DrinkName", "Whiskey");
		    	    SetPVarInt(playerid, "DrinkPrice", 100);
		    	    SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_WINE);
		    	}
		    	case 3:
		    	{
		    	    SetPVarString(playerid, "DrinkName", "Agua");
		    	    SetPVarInt(playerid, "DrinkPrice", 20);
		    	    SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_SPRUNK);
		    	}
		    	case 4:
		    	{
		    	    SetPVarString(playerid, "DrinkName", "Gaseosa");
		    	    SetPVarInt(playerid, "DrinkPrice", 20);
		    	    SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_SPRUNK);
		    	}
			}
			if(GetPlayerCash(playerid) >= GetPVarInt(playerid, "DrinkPrice"))
			{
			    new drinkname[32];
				GetPVarString(playerid, "DrinkName", drinkname, sizeof(drinkname));
			    new drinkprice = GetPVarInt(playerid, "DrinkPrice");
				new dspecialaction = GetPVarInt(playerid, "DrinkSpecialAction");
			    format(szMessage, sizeof(szMessage), "Has pedido al bartender una bebida (%s) por $%d.  ¿Quieres dejarle una propina?", drinkname, drinkprice);
			    ShowPlayerDialog(playerid, DRINKDIALOG, DIALOG_STYLE_MSGBOX, "Comprar Bebida", szMessage, "Si", "No");
			    format(szMessage, sizeof(szMessage), "* %s le da a %s una %s.", GetPlayerNameEx(DrinkOffer[playerid]), GetPlayerNameEx(playerid), drinkname);
				ProxDetector(15.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(szMessage, sizeof(szMessage), "* Le diste a %s una %s. Ganaste $%d.", GetPlayerNameEx(playerid), drinkname, drinkprice );
				SendClientMessageEx(DrinkOffer[playerid], COLOR_GENERAL, szMessage);
				GivePlayerCash(DrinkOffer[playerid], drinkprice);
				GivePlayerCash(playerid, -drinkprice);
				SetPlayerSpecialAction(playerid, dspecialaction);
				SetPVarInt(playerid, "DrinkCooledDown", 1);

			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero para comprar está bebida!");
	    }
	    else DrinkOffer[playerid] = INVALID_PLAYER_ID;
	}
 	case DRINKDIALOG:
	{
	    if(response)
	    {
			ShowPlayerDialog(playerid, TIPDIALOG, DIALOG_STYLE_INPUT, "Propina", "¿Cuánto le gustaría dejar de propina al bartender por su servicio?", "OK", "Cancelar");
		}
		else
		{
		    DrinkOffer[playerid] = INVALID_PLAYER_ID;
		}
	}
	case TIPDIALOG:
	{
	    if(response)
	    {
			if(GetPlayerCash(playerid) >= strval(inputtext))
			{
			    if(strval(inputtext) < 0 || strval(inputtext) > 10000)
			    {
			    	return ShowPlayerDialog(playerid, TIPDIALOG, DIALOG_STYLE_INPUT, "Propina", "ERROR Sólo de: 0 - $10,000\n¿Cuánto le gustaría dejar de propina al bartender por su servicio?", "OK", "Cancel");
			    }
			    format(szMessage, sizeof(szMessage), "** %s le dá a %s algo de propina por el servicio.", GetPlayerNameEx(playerid), GetPlayerNameEx(DrinkOffer[playerid]));
				ProxDetector(15.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(szMessage, sizeof(szMessage), "* %s te a dado $%d de propina por tu servicio.", GetPlayerNameEx(playerid), strval(inputtext));
				SendClientMessageEx(DrinkOffer[playerid], COLOR_GENERAL, szMessage);
				GivePlayerCash(DrinkOffer[playerid], strval(inputtext));
				GivePlayerCash(playerid, -strval(inputtext));
				DrinkOffer[playerid] = INVALID_PLAYER_ID;
			}
		}
		else
		{
		    DrinkOffer[playerid] = INVALID_PLAYER_ID;
		}
	}
	case DLOGIN:
	{
    	if(response)
    	{
			if(udb_hash(inputtext) == Info[playerid][pKey])
			{
				InsideMainMenu[playerid] = false;
				INI_ParseFile(UserPath(playerid), "LoadUser_data", .bExtra = true, .extra = playerid);
				KillTimer(LoginTimer[playerid]);
				OnPlayerLoginEx(playerid);
			}
			else
			{
			    new cam = Random(1,8);
				SetPlayerJoinCamera(playerid, cam);
				format(szDialog, sizeof(szDialog), ""COL_WHITE"Ha ocurrido un error!\nHas ingresado una contraseña incorrecta.\nVuelve a ingresar tu contraseña correcta.\n\n"COL_GENERAL"Contraseña:", GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid,DLOGIN,DIALOG_STYLE_PASSWORD ,""COL_GENERAL"ZC:RP - "COL_WHITE"ERROR",szDialog,"Entrar","Salir");
				SetPlayerVirtualWorld(playerid, 20);
            	return 1;
			}
    	}
	}
	case DREGISTER:
	{
    	if(response)
    	{
        	if(strlen(inputtext) > 24)
        	{
   	    		new cam = Random(1,8);
				SetPlayerJoinCamera(playerid, cam);
				format(szDialog, sizeof(szDialog), ""COL_WHITE"Ha ocurrido un error.\nDebes ingresar una contraseña no mayor de 24 carácteres.\nVuelve a intentarlo.\n\n"COL_GENERAL"Contraseña:");
				ShowPlayerDialog(playerid,DREGISTER,DIALOG_STYLE_INPUT ,""COL_GENERAL"ZC:RP - "COL_WHITE"ERROR",szDialog,"Registrar","Salir");
            	return 1;
        	}
        	if(isnull(inputtext))
        	{
        	    new cam = Random(1,8);
				SetPlayerJoinCamera(playerid, cam);
				format(szDialog, sizeof(szDialog), ""COL_WHITE"Ha ocurrido un error.\nDebes ingresar una contraseña con más de 1 carácter, no has ingresado nada.\nVuelve a intentarlo.\n\n"COL_GENERAL"Contraseña:");
				ShowPlayerDialog(playerid,DREGISTER,DIALOG_STYLE_PASSWORD,""COL_GENERAL"ZC:RP - "COL_WHITE"ERROR",szDialog,"Registrar","Salir");
            	return 1;
        	}
        	InsideMainMenu[playerid] = false;
			OnPlayerRegister(playerid,inputtext);
			KillTimer(LoginTimer[playerid]);
        	return 1;
     		}


		}
	case D_ATM_PIN:
	{
	    if(response)
	    {
	        if(strlen(inputtext)> 4) return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* El PIN(clave) de tu cuenta bancaria consiste sólo en 4 dígitos.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Salir","");
	        if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* El PIN(clave) de tu cuenta bancaria consiste sólo en números.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Salir","");
	        if(Info[playerid][pPinBank] == strval(inputtext))
	        {
	    		ShowPlayerDialog(playerid, D_ATM_MENU, DIALOG_STYLE_LIST,""COL_GENERAL"ATM - "COL_WHITE"Selecciona","* Retirar dinero.\n* Depositar dinero.\n* Cambiar PIN.\n* Estado de cuenta.\n* Transferir dinero.","Cambiar","Salir");// MENU
			}
			else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* El PIN(clave) que ingresaste no conincide con la cuenta.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Ok","");
		}
	    else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Gracias", "Gracias por usar este ATM, recuerda que puedes usarlo cuando quieras.\n\nGracias, que tengas buen día.","Salir","");
	}
	case D_ATM_MENU:
	{
	    if(response)
	    {
  			switch(listitem)
  			{
				case 0:	ShowPlayerDialog(playerid, D_ATM_RET, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Retiro","Ingresa la cantidad que deseas retirar\n\nMáximo: $5000\nMínimo: $20","Retirar","Atrás");  // Retirar Dinero
				case 1: ShowPlayerDialog(playerid, D_ATM_DEP, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Depósito","Ingresa la cantidad que deseas depositar\n\nMáximo: $10000\nMínimo: $20","Depositar","Atrás");// Depositar Dinero
				case 2: ShowPlayerDialog(playerid, D_ATM_CAMPIN, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Cambiar PIN","Ingresa tu nuevo PIN(clave).","Cambiar","Atrás");// Cambiar PIN
				case 3:
				{
				    format(szDialog, sizeof(szDialog), "Nombre del titular: %s.\n\nNúmero de cuenta: %d.\n\nSaldo disponible: %d.", GetPlayerNameEx(playerid),Info[playerid][pNrCuenta],Info[playerid][pMoneyBank]);
					ShowPlayerDialog(playerid, D_ATM_ESTADO, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Tu cuenta",szDialog,"Atrás","Salir");// ESTADO de CUENTA
				}
				case 4: ShowPlayerDialog(playerid, D_ATM_TRANS, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Transferencia","Ingresa la cantidad que deseas transferir\n\nMáximo: $150000\nMínimo: $10","Continuar","Atrás");  // Transferir Dinero
			}
	    }
	    else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Gracias", "Gracias por usar este ATM, recuerda que puedes usarlo cuando quieras.\n\nGracias, que tengas buen día.","Salir","");
	}
	case D_ATM_RET:
	{
	    if(response)
	    {
	        new money = strval(inputtext);
	        if (isnumeric(inputtext))
	        {
	            new id = GetPVarInt(playerid,"atmID");
	            if(atmVariables[id][atmMoney] < money) return SendClientMessage(playerid, COLOR_GREY, "* Lo sentimos en este momento no hay dinero en este cajero, inténtalo más tarde.");
	            if(money < 20) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo mínimo que puedes retirar son $20.");
                if(money > 5000) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo mínimo que puedes retirar son $5000.");
				if(Info[playerid][pMoneyBank] < money)
				{
			    	format(szDialog, sizeof(szDialog), "Hubo un error con la cantidad ingresada.\nPuedes tomar en cuenta lo siguiente:\n\n* No tienes saldo suficiente en tu cuenta.\n* Hay un error en el sistema e inténtalo más tarde.\n\nRetira tu tarjeta.");
					return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", szDialog,"Ok","");
				}
				Earn(playerid, money-5); /* El banco ganaría las comisiones */
				Info[playerid][pMoneyBank] -= money;
				atmVariables[id][atmMoney] -= money-5;
				//fbank -= money-5;
				format(szMessage, sizeof(szMessage), "* Retiraste: $%d ($5 comisión) - Saldo Disponible: $%d",money,Info[playerid][pMoneyBank]);
				SendClientMessageEx(playerid, -1, szMessage);
				atmSave();
			}
			else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* Sólo puede usarse números en este espacio.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Salir","");
		}
	}
	case D_ATM_DEP:
	{
	    if(response)
	    {
	        new money = strval(inputtext);
	        if (isnumeric(inputtext))
	        {
	            if(money < 20) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo mínimo que puedes depositar son $20.");
	            if(money > 10000) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo mínimo que puedes depositar son $10000.");
	        	if(money > GetPlayerCash(playerid))
				{
			    	format(szDialog, sizeof(szDialog), "Hubo un error con la cantidad ingresada.\nPuedes tomar en cuenta lo siguiente:\n\n* No tienes el dinero suficiente.\n* Hay un error en el sistema e inténtalo más tarde.\n\nRetira tu tarjeta.");
					return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", szDialog,"Ok","");
				}
				new id = GetPVarInt(playerid,"atmID");
				Bought(playerid,money);
				Info[playerid][pMoneyBank] += money;
				atmVariables[id][atmMoney] += money;
				//fbank += money;
				format(szMessage, sizeof(szMessage), "* Depositaste: $%d - Saldo Disponible: $%d",money,Info[playerid][pMoneyBank]);
				SendClientMessageEx(playerid, -1, szMessage);
				atmSave();
			}
			else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* Sólo puede usarse números en este espacio.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Salir","");
		}
	}
	case D_ATM_CAMPIN:
	{
	    if(response)
	    {
			if(!isnumeric(inputtext)) return ShowPlayerDialog(playerid, D_ATM_CAMPIN, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Cambiar PIN", "* El PIN(clave) de tu cuenta bancaria consiste sólo en números.\n\nIngresa tu nuevo PIN(clave).","Continuar","Salir");
			if(strlen(inputtext) == 4)
			{
			    Info[playerid][pPinBank] = strval(inputtext);
				format(szDialog, sizeof(szDialog), "Nombre del titular: %s.\n\nNúmero de cuenta: %d.\n\nSaldo disponible: $%d.\n\nNuevo PIN: %d.", GetPlayerNameEx(playerid),Info[playerid][pNrCuenta],Info[playerid][pMoneyBank],Info[playerid][pPinBank]);
				ShowPlayerDialog(playerid, D_ATM_ESTADO, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Cambio éxitoso",szDialog,"Atrás","Salir");// ESTADO de CUENTA
			}
			else return ShowPlayerDialog(playerid, D_ATM_CAMPIN, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Cambiar PIN", "* El PIN(clave) de tu cuenta bancaria consiste sólo en 4 dígitos.\n\nIngresa tu nuevo PIN(clave).","Continuar","Salir");
	    }
	}
	case D_ATM_ESTADO:
	{
	    if(response) ShowPlayerDialog(playerid, D_ATM_MENU, DIALOG_STYLE_LIST,""COL_GENERAL"ATM - "COL_WHITE"Selecciona","* Retirar dinero.\n* Depositar dinero.\n* Cambiar PIN.\n* Estado de cuenta.\n* Transferir dinero.","Ok","Salir");// MENU
		else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Gracias", "Gracias por usar este ATM, recuerda que puedes usarlo cuando quieras.\n\nGracias, que tengas buen día.","Salir","");
	}
	case D_ATM_TRANS:
	{
	    if(response)
	    {
	        new money = strval(inputtext);
	        if (isnumeric(inputtext))
	        {
      			if(money < 10) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo mínimo que puedes transferir son $10.");
	        	if(money > 150000) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo mínimo que puedes transferir son $150000.");
	        	if(Info[playerid][pMoneyBank] > money)
	        	{
	            	TransferMoney[playerid] = money;
	            	ShowPlayerDialog(playerid, D_ATM_TRANS1, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Transferencia","Ingresa el número de cuenta para la transferencia.\n\nSon exactamente 8 dígitos.","Continuar","Atrás");  // Transferir Dinero
	        	}
	        	else
	        	{
			    	format(szDialog, sizeof(szDialog), "Hubo un error con la cantidad ingresada.\nPuedes tomar en cuenta lo siguiente:\n\n* No tienes el dinero suficiente en tu cuenta.\n* Hay un error en el sistema e inténtalo más tarde.\n\nRetira tu tarjeta.");
					return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", szDialog,"Ok","");
	        	}
	        }
	        else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* Sólo puede usarse números en este espacio.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Salir","");
	    }
	    else return ShowPlayerDialog(playerid, D_ATM_MENU, DIALOG_STYLE_LIST,""COL_GENERAL"ATM - "COL_WHITE"Selecciona","* Retirar dinero.\n* Depositar dinero.\n* Cambiar PIN.\n* Estado de cuenta.\n* Transferir dinero.","Cambiar","Salir");// MENU
	}
	case D_ATM_TRANS1:
	{
	    if(response){
	        new nroaccount = strval(inputtext);
	        if (isnumeric(inputtext)){
	            if(strlen(inputtext) == 8){
	                TransferNroAcc[playerid] = nroaccount;
					foreach(Player, i){
					    if(nroaccount == Info[i][pNrCuenta]){
					        TransferTo[playerid] = i;
					        format(szDialog, sizeof(szDialog), "Nombre del titular: %s.\n\nNúmero de cuenta: %d.\n\nCantidad a depositar: $%d.", GetPlayerNameEx(i),Info[i][pNrCuenta],TransferMoney[playerid]);
					        return ShowPlayerDialog(playerid, D_ATM_TRANS2, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Transferencia", szDialog,"Confirmar","Cancelar");
					    }
					}
					return SendClientMessage(playerid, COLOR_GREY, "* Ese número de cuenta aún no está disponible o no existe.");
	            } else return ShowPlayerDialog(playerid, D_ATM_TRANS1, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Transferencia", "* El número de cuenta bancaria consiste sólo en 8 dígitos.\n\nVuelve a Ingresar el número de cuenta.","Continuar","Salir");
	        } else return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Error", "* Sólo puede usarse números en este espacio.\n\nGracias, que tengas buen día e inténtalo de nuevo.","Salir","");
	    }
	    else
	    {
	        TransferNroAcc[playerid] = -1;
	        TransferTo[playerid] = -1;
	        return TransferMoney[playerid] = -1;
	    }
	}
	case D_ATM_TRANS2:
	{
	    if(response)
		{
		    Info[TransferTo[playerid]][pMoneyBank] += TransferMoney[playerid];
            Info[playerid][pMoneyBank] -= TransferMoney[playerid];
			format(szMessage, sizeof(szMessage), "* Transferiste a %s - $%d - Saldo Disponible: $%d",GetPlayerNameEx(TransferTo[playerid]),TransferMoney[playerid],Info[playerid][pMoneyBank]);
			SendClientMessageEx(playerid, -1, szMessage);
			format(szMessage, sizeof(szMessage), "* Transferencia de %s: $%d - Saldo Disponible: $%d",GetPlayerNameEx(playerid),TransferMoney[playerid],Info[TransferTo[playerid]][pMoneyBank]);
            SendClientMessageEx(TransferTo[playerid], -1, szMessage);
			TransferNroAcc[playerid] = -1; TransferTo[playerid] = -1; TransferMoney[playerid] = -1;
		}
		else
		{

			ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Gracias", "Gracias por usar este ATM, recuerda que puedes usarlo cuando quieras.\n\nGracias, que tengas buen día.","Salir","");
            TransferNroAcc[playerid] = -1;
	        TransferTo[playerid] = -1;
	        return TransferMoney[playerid] = -1;
		}
	}
	case	DIALOG_ATMB: if(response)
	{
	    new id = GetPVarInt(playerid,"atmID");
    	switch(listitem)
    	{
        	case    0:
			{
			    format(szDialog, sizeof(szDialog), "Ingresa la cantidad que deseas retirar\n\nFondos disponibles: %d.",atmVariables[id][atmMoney]);
				ShowPlayerDialog(playerid, DIALOG_ATMBR, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Retiro",szDialog,"Retirar","Atrás");  // Retirar Dinero
			}
			case 	1: 
			{
			    format(szDialog, sizeof(szDialog), "Ingresa la cantidad que deseas depositar\n\nFondos disponibles: %d.",Info[playerid][pMoneyBankT]);
			    ShowPlayerDialog(playerid, DIALOG_ATMBD, DIALOG_STYLE_INPUT,""COL_GENERAL"ATM - "COL_WHITE"Depósito",szDialog,"Depositar","Atrás");  // Depositar Dinero
			}
			case    2:
			{
            	format(szDialog, sizeof(szDialog), "ATM Nro: %d.\n\nFondo disponible: %d.",id,atmVariables[id][atmMoney]);
            	ShowPlayerDialog(playerid, DIALOG_ATMBE, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Estado",szDialog,"Atrás","Salir");
			}
		}
	}
	case    DIALOG_ATMBR:
	{
    	if(response)
    	{
 			new money = strval(inputtext);
	    	if (isnumeric(inputtext))
	    	{
	    		new id = GetPVarInt(playerid,"atmID");
	       		if(atmVariables[id][atmMoney] < money) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay dinero en este ATM, inténtalo más tarde.");
	       		atmVariables[id][atmMoney] -= money;
	       		Info[playerid][pMoneyBankT] += money;
				format(szMessage, sizeof(szMessage), "* Retiraste: $%d. - Dinero de ATM: $%d",money,atmVariables[id][atmMoney]);
				SendClientMessageEx(playerid, -1, szMessage);
				SendClientMessageEx(playerid, -1, "* Transporta con seguridad el dinero al banco.");
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_RETURNBANK;
				SetPlayerCheckpoint(playerid, 371.8534,161.6194,1996.0493, 3.0);
				atmSave();
	    	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresa sólo números.");
    	}
	}
	case    DIALOG_ATMBD:
	{
    	if(response)
    	{
 			new money = strval(inputtext);
	    	if (isnumeric(inputtext))
	    	{
	    		new id = GetPVarInt(playerid,"atmID");
	       		if(Info[playerid][pMoneyBankT] < money) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes el dinero suficiente para depositar este monto, inténtalo más tarde.");
	       		atmVariables[id][atmMoney] += money;
	       		Info[playerid][pMoneyBankT] -= money;
				format(szMessage, sizeof(szMessage), "* Depositaste: $%d. - Dinero de ATM: $%d",money,atmVariables[id][atmMoney]);
				SendClientMessageEx(playerid, -1, szMessage);
            	atmSave();
	    	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresa sólo números.");
    	}
	}
	case    DIALOG_ATMBE: if(response) ShowPlayerDialog(playerid, DIALOG_ATMB, DIALOG_STYLE_LIST,""COL_GENERAL"ATM - "COL_WHITE"Estado", "* Retirar fondos\n* Depositar fondos\n* Estado","Ok","Salir");
	case    DIALOG_BANKM: if(response)
	{
	    switch(listitem)
	    {
	        case    0:
	        {
	        	format(szDialog, sizeof(szDialog), "Ingresa la cantidad que deseas retirar\n\nFondos disponibles: %d.",fbank);
				ShowPlayerDialog(playerid, DIALOG_BANKMR, DIALOG_STYLE_INPUT,""COL_GENERAL"Fondos del Banco - "COL_WHITE"Retiro",szDialog,"Retirar","Salir");  // Retirar Dinero
	        }
	        case    1:
	        {
			    format(szDialog, sizeof(szDialog), "Ingresa la cantidad que deseas depositar\n\nFondos disponibles: %d.",fbank);
			    ShowPlayerDialog(playerid, DIALOG_BANKMD, DIALOG_STYLE_INPUT,""COL_GENERAL"Fondos del Banco - "COL_WHITE"Depósito",szDialog,"Depositar","Salir");  // Depositar Dinero
	        }
	        case    2:
	        {
            	format(szDialog, sizeof(szDialog), "Estado de los fondos del Banco Central de Los Santos.\nDisponible: %d.",fbank);
            	ShowPlayerDialog(playerid, DIALOG_BANKME, DIALOG_STYLE_MSGBOX,""COL_GENERAL"Fondos del Banco - "COL_WHITE"Estado",szDialog,"Atrás","Salir");
	        }
	        case    3:
	        {
				format(szMessage, sizeof(szMessage), "* BALANCE: "COL_WHITE"$%d.", fbank);
				SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
	        }
		}
	}
	case    DIALOG_BANKMR:
	{
    	if(response)
    	{
 			new money = strval(inputtext);
 			if(Info[playerid][pLeader] != 9) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes acceder a esta función, sólo el gerente.");
	    	if (isnumeric(inputtext))
	    	{
	    		if(fbank < money) return SendClientMessageEx(playerid, COLOR_GREY, "* En el fondo del banco no hay la cantidad ingresada.");
                Info[playerid][pMoneyBankT] += money;
				fbank -= money;
				format(szMessage, sizeof(szMessage), "* Retiraste: $%d. - Nuevo balance: $%d",money,fbank);
				SendClientMessageEx(playerid, -1, szMessage);
				SaveStuff();
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresa sólo números.");
		}
	}
	case    DIALOG_BANKMD:
	{
    	if(response)
    	{
 			new money = strval(inputtext);
			if(Info[playerid][pLeader] != 9) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes acceder a esta función, sólo el gerente.");
	    	if (isnumeric(inputtext))
	    	{
	       		if(Info[playerid][pMoneyBankT] < money) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes el dinero suficiente para depositar este monto, inténtalo más tarde.");
				Info[playerid][pMoneyBankT] -= money;
				fbank += money;
				format(szMessage, sizeof(szMessage), "* Retiraste: $%d. - Nuevo balance: $%d",money,fbank);
				SendClientMessageEx(playerid, -1, szMessage);
            	atmSave();
	    	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresa sólo números.");
    	}
	}
	case    DIALOG_BANKME: if(response) ShowPlayerDialog(playerid, DIALOG_BANKM, DIALOG_STYLE_LIST,""COL_GENERAL"Banco - "COL_WHITE"Balance", "* Retirar fondos\n* Depositar fondos\n* Estado\n* También "COL_YELLOW"/fbanco","Ok","Salir");
	case 	CARSPAWN:
	{
    	if (response == 1)
    	{
    		if(PlayerVehicleInfo[playerid][listitem][pvImpounded] == 1) return SendClientMessageEx(playerid,COLOR_WHITE,"El auto que intenta spawnear está embargado.");
	    	if(PlayerVehicleInfo[playerid][listitem][pvImpounded] >= 2) PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
        	if(PlayerVehicleInfo[playerid][listitem][pvModelId] != 0 && PlayerVehicleInfo[playerid][listitem][pvImpounded] == 0 && PlayerVehicleInfo[playerid][listitem][pvSpawned]== 0)
        	{
        	    if(carsforplayer[playerid] == 2) return SendClientMessageEx(playerid,COLOR_WHITE,"* Sólo puedes tener 2 coches spawneados y 6 guardados.");
            	PlayerCars++;
            	carsforplayer[playerid]++;
				new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][listitem][pvModelId], PlayerVehicleInfo[playerid][listitem][pvPosX], PlayerVehicleInfo[playerid][listitem][pvPosY], PlayerVehicleInfo[playerid][listitem][pvPosZ], PlayerVehicleInfo[playerid][listitem][pvPosAngle],PlayerVehicleInfo[playerid][listitem][pvColor1], PlayerVehicleInfo[playerid][listitem][pvColor2], -1);
				PlayerVehicleInfo[playerid][listitem][pvId] = carcreated;
				VehicleFuel[carcreated] = PlayerVehicleInfo[playerid][listitem][pvFuel];
				SetVehicleHealth(carcreated, PlayerVehicleInfo[playerid][listitem][pvHealth]);
				SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][listitem][pvVW]);
				PlayerVehicleInfo[playerid][listitem][pvSpawned] = 1;
				SendClientMessageEx(playerid,COLOR_WHITE,"Vehiculo spawneado correctamente, en la última posición que lo estacionaste. (/gps)");
				if(PlayerVehicleInfo[playerid][listitem][pvLocked] == 1)
				LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvLock]);
                LoadPlayerVehicleMods(playerid, listitem);
				return 1;
			}
        	else if(PlayerVehicleInfo[playerid][listitem][pvSpawned] == 1)
        	{
			    new playername[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playername, sizeof(playername));
				//printf(" Unloading %s's vehicles.", playername);
     			new Float:health;
        		GetVehicleHealth(PlayerVehicleInfo[playerid][listitem][pvId], health);
        		if(health < 500) return SendClientMessageEx(playerid, COLOR_GREY, " El vehiculo está muy dañado para ser guardado.");
                if(IsVehicleBusy(PlayerVehicleInfo[playerid][listitem][pvId])) return SendClientMessageEx(playerid, COLOR_GREY, " El vehiculo está ocupado por otra persona y no puede ser guardado.");
				if(PlayerVehicleInfo[playerid][listitem][pvImpounded] >= 2) PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
				if(PlayerVehicleInfo[playerid][listitem][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][listitem][pvImpounded] == 0 && PlayerVehicleInfo[playerid][listitem][pvSpawned]== 1)
				{
	            	PlayerCars--;
	            	carsforplayer[playerid]--;
        			if(LockStatus[PlayerVehicleInfo[playerid][listitem][pvId]] != 0) LockStatus[PlayerVehicleInfo[playerid][listitem][pvId]] = 0;
       		 		UpdatePlayerVehicleMods(playerid, listitem);
					DestroyVehicle(PlayerVehicleInfo[playerid][listitem][pvId]);
					VehicleFuel[PlayerVehicleInfo[playerid][listitem][pvId]] = 500;
					PlayerVehicleInfo[playerid][listitem][pvId] = INVALID_PLAYER_VEHICLE_ID;
					PlayerVehicleInfo[playerid][listitem][pvSpawned] = 0;
					SendClientMessageEx(playerid,COLOR_WHITE,"Vehiculo fue guardado correctamente.");
					if(PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] != INVALID_PLAYER_ID)
    				{
    	    			Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
    	    			Info[PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
    					PlayerVehicleInfo[playerid][listitem][pvAllowedPlayerId] = INVALID_PLAYER_ID;
    				}
    			}
            }
		}
    }
	case    DIALOG_FAMILIA:
	{
	    if(response)
		{
	        switch(listitem)
	        {
	            case 1: ShowPlayerDialog(playerid, DIALOG_FAMMONEY, DIALOG_STYLE_LIST,	""COL_GENERAL"Seleccionar:","* Retirar dinero\n* Depositar dinero",">","<");
				case 2: ShowPlayerDialog(playerid, DIALOG_FAMPOT, DIALOG_STYLE_LIST,	""COL_GENERAL"Seleccionar:","* Retirar hierba\n* Depositar hierba",">","<");
	            case 3: ShowPlayerDialog(playerid, DIALOG_FAMCRACK, DIALOG_STYLE_LIST,	""COL_GENERAL"Seleccionar:","* Retirar crack\n* Depositar crack",">","<");
				case 4: ShowPlayerDialog(playerid, DIALOG_FAMMATS, DIALOG_STYLE_LIST,	""COL_GENERAL"Seleccionar:","* Retirar materiales\n* Depositar materiales",">","<");
			 }
		}
	}
	case    DIALOG_FAMMONEY:
	{
		if(response)
		{
  			switch(listitem)
  			{
  			    case 0:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas retirar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyCash]);
                    ShowPlayerDialog(playerid, DIALOG_FAMMONEYR, DIALOG_STYLE_INPUT,""COL_YELLOW"Retirar:",szDialog,"Retirar","Salir");
				}
  			    case 1:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas depositar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyCash]);
                    ShowPlayerDialog(playerid, DIALOG_FAMMONEYD, DIALOG_STYLE_INPUT,""COL_YELLOW"Depósito:",szDialog,"Depositar","Atrás");
		  		}
  			}
        }
        else
        {
            new family = Info[playerid][pFMember];
        	format(szDialog, sizeof(szDialog), ""COL_YELLOW"Familia: "COL_WHITE"%s\nDinero: "COL_WHITE"$%d\nHierba: "COL_WHITE"%d\nCrack: "COL_WHITE"%d\nMateriales: "COL_WHITE"%d", fINFO[family][FamilyName], fINFO[family][FamilyCash], fINFO[family][FamilyPot], fINFO[family][FamilyCrack], fINFO[family][FamilyMats]);
			ShowPlayerDialog(playerid, DIALOG_FAMILIA, DIALOG_STYLE_LIST,""COL_YELLOW"Tu familia:",szDialog,"Seleccionar","Salir");
        }
	}
	case    DIALOG_FAMMONEYR:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar menos de un dolar.");
			new family = Info[playerid][pFMember];
			if(amount > fINFO[family][FamilyCash]) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay esa cantidad en la caja fuerte.");

			fINFO[family][FamilyCash] -= amount;
			GivePlayerCash(playerid, amount);
			format(szMessage, sizeof(szMessage), "Retiraste $%d de la caja fuerte de tu familia.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s retira algo de dinero de la caja fuerte.", GetPlayerNameEx(playerid));
            NearMsg(playerid, -1, szMessage,10.0);

			new year, month,day,ip[32];
			getdate(year, month, day); GetPlayerIp(playerid, ip, sizeof(ip));
			format(szMessage,sizeof(szMessage),"* %s (IP: %s) retiró $%d de la cajafuerte de lfa familia %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
			Log("logs/family.log", szMessage);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMMONEY, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar dinero\n* Depositar dinero",">","<");
	}
	case    DIALOG_FAMMONEYD:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar menos de un dolar.");
			new family = Info[playerid][pFMember];
			if(GetPlayerCash(playerid) < amount) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes la cantidad ingresada para depositar.");

			fINFO[family][FamilyCash] += amount;
			GivePlayerCash(playerid, -amount);
			format(szMessage, sizeof(szMessage), "Depositaste $%d en la caja fuerte de tu familia.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMMONEY, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar dinero\n* Depositar dinero",">","<");
	}
	case    DIALOG_FAMPOT:
	{
		if(response)
		{
  			switch(listitem)
  			{
  			    case 0:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas retirar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyPot]);
                    ShowPlayerDialog(playerid, DIALOG_FAMPOTR, DIALOG_STYLE_INPUT,""COL_YELLOW"Retirar:",szDialog,"Retirar","Salir");
				}
  			    case 1:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas depositar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyPot]);
                    ShowPlayerDialog(playerid, DIALOG_FAMPOTD, DIALOG_STYLE_INPUT,""COL_YELLOW"Depósito:",szDialog,"Depositar","Salir");
		  		}
  			}
		}
        else
        {
            new family = Info[playerid][pFMember];
        	format(szDialog, sizeof(szDialog), ""COL_YELLOW"Familia: "COL_WHITE"%s\nDinero: "COL_WHITE"$%d\nHierba: "COL_WHITE"%d\nCrack: "COL_WHITE"%d\nMateriales: "COL_WHITE"%d", fINFO[family][FamilyName], fINFO[family][FamilyCash], fINFO[family][FamilyPot], fINFO[family][FamilyCrack], fINFO[family][FamilyMats]);
			ShowPlayerDialog(playerid, DIALOG_FAMILIA, DIALOG_STYLE_LIST,""COL_YELLOW"Tu familia:",szDialog,"Seleccionar","Salir");
        }
	}
	case    DIALOG_FAMPOTR:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar esa cantidad.");
			new family = Info[playerid][pFMember];
			if(amount > fINFO[family][FamilyPot]) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay esa cantidad en la caja fuerte.");
			if(Info[playerid][pPot] > 50) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes 50 gramos de hierba.");

			fINFO[family][FamilyPot] -= amount;
			Info[playerid][pPot] += amount;
			format(szMessage, sizeof(szMessage), "Retiraste %d gramos de hierba de la caja fuerte.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s retira unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
			NearMsg(playerid, -1, szMessage,10.0);

			new ip[32],year, month,day;
			getdate(year, month, day); GetPlayerIp(playerid, ip, sizeof(ip));
			format(szMessage,sizeof(szMessage),"%s (IP: %s) retiró %d gramos de droga de la caja fuerte de su familia id %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
			Log("logs/family.log", szMessage);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMPOT, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar hierba\n* Depositar hierba",">","<");
	}
	case    DIALOG_FAMPOTD:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar esa cantidad.");
			new family = Info[playerid][pFMember];
			if(fINFO[family][FamilyPot] >= 1000) return SendClientMessageEx(playerid, COLOR_GREY, "* Está caja fuerte ya está llena de hierba.");
            if(amount > Info[playerid][pPot]) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes esa cantidad de hierba.");
			fINFO[family][FamilyPot] += amount;
			Info[playerid][pPot] -= amount;
			format(szMessage, sizeof(szMessage), "Depositaste %d gramos de hierba de la caja fuerte.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s deposita unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
			NearMsg(playerid, -1, szMessage,10.0);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMPOT, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar hierba\n* Depositar hierba",">","<");
	}
	case    DIALOG_FAMCRACK:
	{
		if(response)
		{
  			switch(listitem)
  			{
  			    case 0:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas retirar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyCrack]);
                    ShowPlayerDialog(playerid, DIALOG_FAMCRACKR, DIALOG_STYLE_INPUT,""COL_YELLOW"Retirar:",szDialog,"Retirar","Salir");
				}
  			    case 1:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas depositar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyCrack]);
                    ShowPlayerDialog(playerid, DIALOG_FAMCRACKD, DIALOG_STYLE_INPUT,""COL_YELLOW"Depósito:",szDialog,"Depositar","Salir");
		  		}
  			}
		}
        else
        {
            new family = Info[playerid][pFMember];
        	format(szDialog, sizeof(szDialog), ""COL_YELLOW"Familia: "COL_WHITE"%s\nDinero: "COL_WHITE"$%d\nHierba: "COL_WHITE"%d\nCrack: "COL_WHITE"%d\nMateriales: "COL_WHITE"%d", fINFO[family][FamilyName], fINFO[family][FamilyCash], fINFO[family][FamilyPot], fINFO[family][FamilyCrack], fINFO[family][FamilyMats]);
			ShowPlayerDialog(playerid, DIALOG_FAMILIA, DIALOG_STYLE_LIST,""COL_YELLOW"Tu familia:",szDialog,"Seleccionar","Salir");
        }
	}
	case    DIALOG_FAMCRACKR:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar esa cantidad.");
			new family = Info[playerid][pFMember];
			if(amount > fINFO[family][FamilyCrack]) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay esa cantidad en la caja fuerte.");
			if(Info[playerid][pCrack] > 25) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes 25 gramos de crack.");

			fINFO[family][FamilyCrack] -= amount;
			Info[playerid][pCrack] += amount;
			format(szMessage, sizeof(szMessage), "Retiraste %d gramos de crack de la caja fuerte.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s retira unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
			NearMsg(playerid, -1, szMessage,10.0);

			new ip[32],year, month,day;
			getdate(year, month, day); GetPlayerIp(playerid, ip, sizeof(ip));
			format(szMessage,sizeof(szMessage),"%s (IP: %s) retiró %d gramos de crack de la caja fuerte de su familia id %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
			Log("logs/family.log", szMessage);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMCRACK, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar crack\n* Depositar crack",">","<");
	}
	case    DIALOG_FAMCRACKD:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar esa cantidad.");
			new family = Info[playerid][pFMember];
			if(fINFO[family][FamilyCrack] >= 1000) return SendClientMessageEx(playerid, COLOR_GREY, "* Está caja fuerte ya está llena de hierba!");
            if(amount > Info[playerid][pCrack]) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes esa cantidad de crack.");

			fINFO[family][FamilyCrack] += amount;
			Info[playerid][pCrack] -= amount;
			format(szMessage, sizeof(szMessage), "Depositaste %d gramos de crack de la caja fuerte.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s deposita unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
			NearMsg(playerid, -1, szMessage,10.0);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMCRACK, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar crack\n* Depositar crack",">","<");
	}
	case    DIALOG_FAMMATS:
	{
		if(response)
		{
  			switch(listitem)
  			{
  			    case 0:
  			    {
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas retirar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyMats]);
                    ShowPlayerDialog(playerid, DIALOG_FAMMATSR, DIALOG_STYLE_INPUT,""COL_YELLOW"Retirar:",szDialog,"Retirar","Salir");
				}
  			    case 1:
				{
  			        new family = Info[playerid][pFMember];
  			        format(szDialog, sizeof(szDialog), "Ingresa el monto que deseas depositar:\n\n"COL_YELLOW"Disponible: %d", fINFO[family][FamilyMats]);
                    ShowPlayerDialog(playerid, DIALOG_FAMMATSD, DIALOG_STYLE_INPUT,""COL_YELLOW"Depósito:",szDialog,"Depositar","Salir");
		  		}
  			}
		}
        else
        {
            new family = Info[playerid][pFMember];
        	format(szDialog, sizeof(szDialog), ""COL_YELLOW"Familia: "COL_WHITE"%s\nDinero: "COL_WHITE"$%d\nHierba: "COL_WHITE"%d\nCrack: "COL_WHITE"%d\nMateriales: "COL_WHITE"%d", fINFO[family][FamilyName], fINFO[family][FamilyCash], fINFO[family][FamilyPot], fINFO[family][FamilyCrack], fINFO[family][FamilyMats]);
			ShowPlayerDialog(playerid, DIALOG_FAMILIA, DIALOG_STYLE_LIST,""COL_YELLOW"Tu familia:",szDialog,"Seleccionar","Salir");
        }
	}
	case    DIALOG_FAMMATSR:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar esa cantidad.");
			new family = Info[playerid][pFMember];
			if(amount > fINFO[family][FamilyMats]) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay esa cantidad en la caja fuerte.");

			fINFO[family][FamilyMats] -= amount;
			Info[playerid][pMats] += amount;
			format(szMessage, sizeof(szMessage), "Retiraste %d materiales de la caja fuerte.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s retira unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
			NearMsg(playerid, -1, szMessage,10.0);

			new ip[32],year, month,day;
			getdate(year, month, day); GetPlayerIp(playerid, ip, sizeof(ip));
			format(szMessage,sizeof(szMessage),"%s (IP: %s) retiró %d materiales de la caja fuerte de su familia id %d.",GetPlayerNameEx(playerid),ip,amount,Info[playerid][pFMember]+1);
			Log("logs/family.log", szMessage);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMMATS, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar materiales\n* Depositar materiales",">","<");
	}
	case    DIALOG_FAMMATSD:
	{
		if(response)
		{
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar esa cantidad.");
			new family = Info[playerid][pFMember];
            if(amount > Info[playerid][pMats]) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes esa cantidad de materiales.");

			fINFO[family][FamilyMats] += amount;
			Info[playerid][pMats] -= amount;
			format(szMessage, sizeof(szMessage), "Depositaste %d gramos de crack de la caja fuerte.", amount);
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
			format(szMessage,sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s deposita unos paquetes de la caja fuerte.", GetPlayerNameEx(playerid));
			NearMsg(playerid, -1, szMessage,10.0);
		}
		else ShowPlayerDialog(playerid, DIALOG_FAMMATS, DIALOG_STYLE_LIST,""COL_GENERAL"Seleccionar:","* Retirar materiales\n* Depositar materiales",">","<");
	}
    case	HOUSE_OPTIONS: if(response)
    {
        switch(listitem)
        {
            case 0:
            {
                format(szDialog, sizeof(szDialog), "Ingresa el monto que quieres retirar del baúl tu casa.\n\n"COL_WHITE"Tienes $%d.",HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]);
                ShowPlayerDialog(playerid,HOUSE_RETIRAR,DIALOG_STYLE_INPUT,""COL_GENERAL"Ingresa monto:",szDialog,"Ingresar","Atrás");
            }
            case 1:
            {
				format(szDialog, sizeof(szDialog), "Ingresa el monto que quieres depositar del baúl tu casa.\n\n"COL_WHITE"Tienes $%d.",HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]);
                ShowPlayerDialog(playerid,HOUSE_DEPOSITAR,DIALOG_STYLE_INPUT,""COL_GENERAL"Ingresa monto:",szDialog,"Ingresar","Atrás");
            }
            case 2:
            {
				new weaponsinlocker;
				for(new s = 0; s < 5; s++){if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][s] != 0){weaponsinlocker++;}}
                format(szDialog, sizeof(szDialog), ""COL_WHITE"Materiales "COL_GENERAL"(%d)\n"COL_WHITE"Hierba "COL_GENERAL"(%d)\n"COL_WHITE"Crack "COL_GENERAL"(%d)\n"COL_WHITE"Armas "COL_GENERAL"(%d/5)", HouseInfo[Info[playerid][pPhousekey]][hMaterials],HouseInfo[Info[playerid][pPhousekey]][hPot],HouseInfo[Info[playerid][pPhousekey]][hCrack],weaponsinlocker);
                ShowPlayerDialog(playerid,HOUSE_ITEM,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona Item:",szDialog,"Ingresar","Atrás");
            }
            case 3: ShowPlayerDialog(playerid,DIALOG_MENU_FURNITURE,DIALOG_STYLE_LIST,""COL_WHITE"Opciones"COL_GENERAL":",""COL_GENERAL"* "COL_WHITE"Seleccionar Objeto\n"COL_GENERAL"* "COL_WHITE"Ver Objetos\n"COL_GENERAL"* "COL_WHITE"Vender Objetos","Ingresar","Atrás");
        }
    }
    case DIALOG_MENU_FURNITURE:
    {
        if(!response) return ShowPlayerDialog(playerid,HOUSE_OPTIONS,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona:","* Retirar dinero\n* Depositar dinero\n* Tus Items\n* Tus objetos","Seleccionar","Atrás");
        switch(listitem)
        {
            case 0:
            {
				SelectObject(playerid);
				SendClientMessage(playerid, -1,"Ahora puedes seleccionar el objeto con el cursor.");
				SendClientMessageEx(playerid, COLOR_GENERAL, "TIP: "COL_WHITE"Si no puedes seleccionar el objeto, selecciónalo desde el menú de tu casa. (Ver Objetos)");
            }
            case 1:
            {
				new hID = getPlayerHouseID(playerid), string[128],bigstring[2048];
				for(new i = 0; i < MAX_FURNITURE; i++)
				{
					if(HouseInfo[hID][FModel][i] == INVALID_FURNITURE_ID) { format(string, 64, "%d. Vacío", i+1); }
					else
					{
						if(HouseInfo[hID][FPosX][i] != 0.0) format(string, 64, "%d. ID: %d (en la casa)", i+1, HouseInfo[hID][FModel][i]); // Edit
						else format(string, 64, "%d. ID: %d (guardado)", i+1, HouseInfo[hID][FModel][i]); // Place
					}
					format(bigstring, sizeof(bigstring), "%s%s\n", bigstring, string);
				}
				ShowPlayerDialog(playerid, DIALOG_EDIT_FURNITURE, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona (Poner o Editar)", bigstring, "Editar/Poner", "Cancelar");
			}
			case 2:
			{
				new bigstring[2048];
				new string[64];
				new hID = getPlayerHouseID(playerid);
				for(new i = 0; i < MAX_FURNITURE; i++)
				{
					if(HouseInfo[hID][FModel][i] == INVALID_FURNITURE_ID){format(string, 64, ""COL_GENERAL"%d. "COL_WHITE"Vacío", i+1);}
					else{format(string, 64, ""COL_GENERAL"%d. "COL_WHITE"ID: %d", i+1,HouseInfo[hID][FModel][i]);}
					format(bigstring, sizeof(bigstring), "%s%s\n", bigstring, string);
				}
				ShowPlayerDialog(playerid, DIALOG_SELL_FURNITURE, DIALOG_STYLE_LIST, "{33AA33}Selecciona un objeto para venderlo.", bigstring, "Vender", "Cancelar");
				return 1;
			}
		}
	}
	case DIALOG_EDIT_FURNITURE:
	{
		if(!response) return 1;
		new i = listitem;
		new hID = getPlayerHouseID(playerid);
		if(HouseInfo[hID][FModel][i] == INVALID_FURNITURE_ID) return SendClientMessageEx(playerid, COLOR_GREY, "* Objeto seleccionado inválido.");
		if(HouseInfo[hID][FPosX][i] != 0.0)
		{
			if(!IsValidDynamicObject(HouseInfo[hID][FurnitureObj][i])) return SendClientMessageEx(playerid, COLOR_GREY, "* Objeto seleccionado inválido.");
			EditDynamicObject(playerid, HouseInfo[hID][FurnitureObj][i]);
		}
		else
		{
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			GetXYInFrontOfPlayer(playerid, X, Y, 2.0);
			HouseInfo[hID][FPosX][i] = X; HouseInfo[hID][FPosY][i] = Y; HouseInfo[hID][FPosZ][i] = Z;
			HouseInfo[hID][FRotX][i] = 0; HouseInfo[hID][FRotY][i] = 0; HouseInfo[hID][FRotZ][i] = 0;
			HouseInfo[hID][FurnitureObj][i] = CreateDynamicObject(HouseInfo[hID][FModel][i], HouseInfo[hID][FPosX][i], HouseInfo[hID][FPosY][i], HouseInfo[hID][FPosZ][i], HouseInfo[hID][FRotX][i], HouseInfo[hID][FRotY][i], HouseInfo[hID][FRotZ][i], hID+6000, HouseInfo[hID][hHInteriorWorld], -1, 50.0);
			SaveFurniturePosition(hID, i);
		}
		return 1;
	}
	case DIALOG_BUY_FURNITURE:
	{
        new house = Info[playerid][pPhousekey];
		if(house == INVALID_HOUSE_ID) return SendClientMessageEx(playerid, COLOR_GREY, "* No eres dueño de una casa.");
		if(!response) return 1;
		switch(listitem)
		{
		    case 0: ShowModelSelectionMenu	(playerid, DormitorioFur, 	"Dormitorio", 		0x000000FF, COLOR_GREY, 0xFFF6BDFF);
		    case 1: ShowModelSelectionMenu	(playerid, ComedorFur, 		"Comedor", 			0x000000FF, COLOR_GREY, 0xFFF6BDFF);
            case 2: ShowModelSelectionMenu	(playerid, BanoFur, 		"Tocador", 			0x000000FF, COLOR_GREY, 0xFFF6BDFF);
            case 3: ShowModelSelectionMenu	(playerid, LobbyFur, 		"Lobby", 			0x000000FF, COLOR_GREY, 0xFFF6BDFF);
            case 4: ShowModelSelectionMenu	(playerid, CocinaFur, 		"Cocina", 			0x000000FF, COLOR_GREY, 0xFFF6BDFF);
            case 5: ShowModelSelectionMenu	(playerid, ElectroFur, 		"Electro", 			0x000000FF, COLOR_GREY, 0xFFF6BDFF);
			case 6: ShowModelSelectionMenu	(playerid, ParedesFur, 		"Paredes", 			0x000000FF, COLOR_GREY, 0xFFF6BDFF);
			case 7: ShowModelSelectionMenu	(playerid, OtrosFur,        "Otros",            0x000000FF, COLOR_GREY, 0xFFF6BDFF);
			default: SendClientMessageEx	(playerid, COLOR_GREY, 		"* En proceso.");
		}
		return 1;
	}
	case DIALOG_FURNITURE_BOUGHT: if(response) return ShowFurnitureMenu(playerid);
	
	case DIALOG_EDITOBJECT:
	{
		if(!response) return DeletePVar(playerid,"ObjetcIDFur");
		new hID = getPlayerHouseID(playerid);
		new i = GetPVarInt(playerid,"ObjetcIDFur");
		switch(listitem)
		{
		    case 0:
			{
				EditDynamicObject(playerid, HouseInfo[hID][FurnitureObj][i]);
				DeletePVar(playerid,"ObjetcIDFur");
			}
			case 1:
		    {
				HouseInfo[hID][FPosX][i] = 0.0; HouseInfo[hID][FPosY][i] = 0.0; HouseInfo[hID][FPosZ][i] = 0.0;
				HouseInfo[hID][FRotX][i] = 0.0; HouseInfo[hID][FRotY][i] = 0.0; HouseInfo[hID][FRotZ][i] = 0.0;
				SaveFurniturePosition(hID, i);
				if(IsValidDynamicObject(HouseInfo[hID][FurnitureObj][i])) DestroyDynamicObject(HouseInfo[hID][FurnitureObj][i]);
				DeletePVar(playerid,"ObjetcIDFur");
				SendClientMessageEx(playerid, -1, "Se ha guardado correctamente tu objeto.");
		    }
		    case 2:
		    {
		        new price = GetPricebyObject(HouseInfo[hID][FModel][i]);
				new money = price / 2, fname[42]; //cambiar
				GivePlayerCash(playerid, money);
				format(szMessage, 128, "{FFFFFF}Vendiste objeto id"COL_GENERAL"\"%d\"{FFFFFF} por "COL_GENERAL"%d$.", HouseInfo[hID][FModel][i], money);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				HouseInfo[hID][FModel][i] = INVALID_FURNITURE_ID;
				HouseInfo[hID][FPosX][i] = 0; HouseInfo[hID][FPosY][i] = 0; HouseInfo[hID][FPosZ][i] = 0;
				HouseInfo[hID][FRotX][i] = 0; HouseInfo[hID][FRotY][i] = 0; HouseInfo[hID][FRotZ][i] = 0;
				if(IsValidDynamicObject(HouseInfo[hID][FurnitureObj][i])) DestroyDynamicObject(HouseInfo[hID][FurnitureObj][i]);
				HouseInfo[hID][FurnitureObj][i] = 0;
				HouseInfo[hID][FCount] -= 1;
				format(fname, 128, HOUSE_FILE, hID);
				new key[24];
			    new INI:File = INI_Open(fname);
			    INI_SetTag(File,"HouseData");
				INI_WriteInt(File,"FCount", HouseInfo[hID][FCount]);
				format(key, 24, "FModel%d", i); INI_WriteInt(File, key, INVALID_FURNITURE_ID);
				INI_Close(File);
		        SaveFurniturePosition(hID, i);
		        DeletePVar(playerid,"ObjetcIDFur");
		    }
		}
	}
	case DIALOG_FURNITURE_KEEPSELL:
	{
		if(!response) return ShowPlayerDialog(playerid,HOUSE_OPTIONS,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona:","* Retirar dinero\n* Depositar dinero\n* Tus Items\n* Tus objetos","Seleccionar","Atrás");
		new bigstring[2048];
		new string[64];
		new hID = getPlayerHouseID(playerid);
		for(new i = 0; i < MAX_FURNITURE; i++)
		{
			if(HouseInfo[hID][FModel][i] == INVALID_FURNITURE_ID){format(string, 64, ""COL_GENERAL"%d. "COL_WHITE"Vacío", i+1);}
			else{format(string, 64, ""COL_GENERAL"%d. "COL_WHITE"ID: %d", i+1,HouseInfo[hID][FModel][i]);}
			format(bigstring, sizeof(bigstring), "%s%s\n", bigstring, string);
		}
		ShowPlayerDialog(playerid, DIALOG_SELL_FURNITURE, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un objeto para venderlo.", bigstring, "Vender", "Cancelar");
		return 1;
	}
	case DIALOG_SELL_FURNITURE:
	{
		if(!response) return 1;
		new i = listitem;
		new fname[128];
		new hID = getPlayerHouseID(playerid);
		if(HouseInfo[hID][FModel][i] == INVALID_FURNITURE_ID) return SendClientMessageEx(playerid, COLOR_GREY, "* Objeto seleccionado inválido.");
        new price = GetPricebyObject(HouseInfo[hID][FModel][i]);
		new money = price / 2; //cambiar
		GivePlayerCash(playerid, money);
		format(fname, 128, "{FFFFFF}Vendiste objeto id"COL_GENERAL"\"%d\"{FFFFFF} por "COL_GENERAL"%d$.", HouseInfo[hID][FModel][i], money);
		SendClientMessageEx(playerid, COLOR_WHITE, fname);
		HouseInfo[hID][FModel][i] = INVALID_FURNITURE_ID;
		HouseInfo[hID][FPosX][i] = 0; HouseInfo[hID][FPosY][i] = 0; HouseInfo[hID][FPosZ][i] = 0;
		HouseInfo[hID][FRotX][i] = 0; HouseInfo[hID][FRotY][i] = 0; HouseInfo[hID][FRotZ][i] = 0;
		if(IsValidDynamicObject(HouseInfo[hID][FurnitureObj][i])) DestroyDynamicObject(HouseInfo[hID][FurnitureObj][i]);
		HouseInfo[hID][FurnitureObj][i] = 0;
		HouseInfo[hID][FCount] -= 1;
		format(fname, 128, HOUSE_FILE, hID);
		new key[24];
	    new INI:File = INI_Open(fname);
	    INI_SetTag(File,"HouseData");
		INI_WriteInt(File,"FCount", HouseInfo[hID][FCount]);
		format(key, 24, "FModel%d", i); INI_WriteInt(File, key, INVALID_FURNITURE_ID);
		INI_Close(File);
        SaveFurniturePosition(hID, i);
        ShowPlayerDialog(playerid, DIALOG_FURNITURE_KEEPSELL, DIALOG_STYLE_MSGBOX, "Vender objetos", "Deseas seguir vendiendo tus objetos?", "Seguir", "Cancelar");
		return 1;
	}
    case	HOUSE_RETIRAR:
    {
        if(response)
        {
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar menos de un dolar.");
			if(HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] >= amount)
			{
			    HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] -= amount;
				GivePlayerCash(playerid, amount);
				format(szMessage, sizeof(szMessage), "Retiraste $%d de tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
    			SaveVarHouses(1,Info[playerid][pPhousekey], "SafeMoney",HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]);
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero en tu baúl para retirar.");
		}
		else ShowPlayerDialog(playerid,HOUSE_OPTIONS,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona:","* Retirar dinero\n* Depositar dinero\n* Tus Items\n* Tus objetos","Seleccionar","Atrás");
    }
    case	HOUSE_DEPOSITAR:
    {
        if(response)
        {
            new amount = strval(inputtext);
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar menos de un dolar.");
			if(GetPlayerCash(playerid) >= amount)
			{
			    HouseInfo[Info[playerid][pPhousekey]][hSafeMoney] += amount;
			    GivePlayerCash(playerid, -amount);
				format(szMessage, sizeof(szMessage), "Depositaste $%d en tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "SafeMoney",HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]);
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero para depositar.");
		}
		else ShowPlayerDialog(playerid,HOUSE_OPTIONS,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona:","* Retirar dinero\n* Depositar dinero\n* Tus Items\n* Tus objetos","Seleccionar","Atrás");
    }
    case	HOUSE_ITEM:
    {
        if(response)
        {
            new tittlestr[64];
        	switch(listitem)
        	{
        	    case 0:
        	    {
        	        format(tittlestr, sizeof(tittlestr), ""COL_WHITE"Materiales "COL_GENERAL"(%d)",HouseInfo[Info[playerid][pPhousekey]][hMaterials]);
        	        ShowPlayerDialog(playerid,HOUSE_ITEM_MAT,DIALOG_STYLE_LIST,tittlestr,"Depositar\nRetirar",">","Atrás");
        	    }
        	    case 1:
        	    {
        	        format(tittlestr, sizeof(tittlestr), ""COL_WHITE"Hierba "COL_GENERAL"(%d)",HouseInfo[Info[playerid][pPhousekey]][hPot]);
                    ShowPlayerDialog(playerid,HOUSE_ITEM_POT,DIALOG_STYLE_LIST,tittlestr,"Depositar\nRetirar",">","Atrás");
				}
        	    case 2:
        	    {
        	        format(tittlestr, sizeof(tittlestr), ""COL_WHITE"Crack "COL_GENERAL"(%d)",HouseInfo[Info[playerid][pPhousekey]][hCrack]);
                    ShowPlayerDialog(playerid,HOUSE_ITEM_CRACK,DIALOG_STYLE_LIST,tittlestr,"Depositar\nRetirar",">","Atrás");
				}
				case 3:
				{
				    SendClientMessageEx(playerid, COLOR_WHITE, "Puedes depositar armas en tu baúl con el comando /garma [Slot].");
				    SendClientMessageEx(playerid, COLOR_WHITE, "Puedes depositar armas en tu baúl con el comando /sarma [Slot].");
				}
        	}
        }
		else ShowPlayerDialog(playerid,HOUSE_OPTIONS,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona:","* Retirar dinero\n* Depositar dinero\n* Tus Items\n* Tus objetos","Seleccionar","Atrás");
    }
    case    HOUSE_ITEM_MAT:
    {
        if(response)
        {
        	switch(listitem)
        	{
				case 0: ShowPlayerDialog(playerid,HOUSE_ITEM_MAT_D,DIALOG_STYLE_INPUT,""COL_GENERAL"Depositar Materiales:","Ingresa el monto de materiales que depositarás en el baúl de tu casa.","Ingresar","Atrás");
				case 1: ShowPlayerDialog(playerid,HOUSE_ITEM_MAT_R,DIALOG_STYLE_INPUT,""COL_GENERAL"Retirar Materiales:","Ingresa el monto de materiales que retirarás del baúl de tu casa.","Ingresar","Atrás");
        	}
        }
        else
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++){if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][s] != 0){weaponsinlocker++;}}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Materiales "COL_GENERAL"(%d)\n"COL_WHITE"Hierba "COL_GENERAL"(%d)\n"COL_WHITE"Crack "COL_GENERAL"(%d)\n"COL_WHITE"Armas "COL_GENERAL"(%d/5)", HouseInfo[Info[playerid][pPhousekey]][hMaterials],HouseInfo[Info[playerid][pPhousekey]][hPot],HouseInfo[Info[playerid][pPhousekey]][hCrack],weaponsinlocker);
            ShowPlayerDialog(playerid,HOUSE_ITEM,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona Item:",szDialog,"Ingresar","Atrás");
        }
    }
    case    HOUSE_ITEM_POT:
    {
        if(response)
        {
        	switch(listitem)
        	{
				case 0: ShowPlayerDialog(playerid,HOUSE_ITEM_POT_D,DIALOG_STYLE_INPUT,""COL_GENERAL"Depositar Hierba:","Ingresa el monto de hierba que depositarás en el baúl de tu casa.","Ingresar","Atrás");
				case 1: ShowPlayerDialog(playerid,HOUSE_ITEM_POT_R,DIALOG_STYLE_INPUT,""COL_GENERAL"Retirar Hierba:","Ingresa el monto de hierba que retirarás del baúl de tu casa.","Ingresar","Atrás");
        	}
        }
        else
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++){if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][s] != 0){weaponsinlocker++;}}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Materiales "COL_GENERAL"(%d)\n"COL_WHITE"Hierba "COL_GENERAL"(%d)\n"COL_WHITE"Crack "COL_GENERAL"(%d)\n"COL_WHITE"Armas "COL_GENERAL"(%d/5)", HouseInfo[Info[playerid][pPhousekey]][hMaterials],HouseInfo[Info[playerid][pPhousekey]][hPot],HouseInfo[Info[playerid][pPhousekey]][hCrack],weaponsinlocker);
            ShowPlayerDialog(playerid,HOUSE_ITEM,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona Item:",szDialog,"Ingresar","Atrás");
        }
    }
    case    HOUSE_ITEM_CRACK:
    {
        if(response)
        {
        	switch(listitem)
        	{
				case 0: ShowPlayerDialog(playerid,HOUSE_ITEM_CRACK_D,DIALOG_STYLE_INPUT,""COL_GENERAL"Depositar Crack:","Ingresa el monto de crack que depositarás en el baúl de tu casa.","Ingresar","Atrás");
				case 1: ShowPlayerDialog(playerid,HOUSE_ITEM_CRACK_R,DIALOG_STYLE_INPUT,""COL_GENERAL"Retirar Crack:","Ingresa el monto de crack que retirarás del baúl de tu casa.","Ingresar","Atrás");
        	}
        }
        else
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++){if(HouseInfo[Info[playerid][pPhousekey]][hWeapons][s] != 0){weaponsinlocker++;}}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Materiales "COL_GENERAL"(%d)\n"COL_WHITE"Hierba "COL_GENERAL"(%d)\n"COL_WHITE"Crack "COL_GENERAL"(%d)\n"COL_WHITE"Armas "COL_GENERAL"(%d/5)", HouseInfo[Info[playerid][pPhousekey]][hMaterials],HouseInfo[Info[playerid][pPhousekey]][hPot],HouseInfo[Info[playerid][pPhousekey]][hCrack],weaponsinlocker);
            ShowPlayerDialog(playerid,HOUSE_ITEM,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona Item:",szDialog,"Ingresar","Atrás");
        }
    }
    case    HOUSE_ITEM_MAT_D:
    {
        if(response)
        {
            new amount = strval(inputtext);
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar menos de un material.");
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if( Info[playerid][pMats] >= amount )
			{
				HouseInfo[Info[playerid][pPhousekey]][hMaterials] += amount;
				Info[playerid][pMats] -= amount;
				format(szMessage, sizeof(szMessage), "Depositaste %d materiales en tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "Materials",HouseInfo[Info[playerid][pPhousekey]][hMaterials]);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes materiales para depositar.");
		}
    }
    case    HOUSE_ITEM_MAT_R:
    {
        if(response)
        {
            new amount = strval(inputtext);
			if(amount < 1) SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar menos de un material.");
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(HouseInfo[Info[playerid][pPhousekey]][hMaterials] >= amount)
			{
				HouseInfo[Info[playerid][pPhousekey]][hMaterials]-=amount;
				Info[playerid][pMats] += amount;
				format(szMessage, sizeof(szMessage), "Retiraste %d materiales de tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "Materials",HouseInfo[Info[playerid][pPhousekey]][hMaterials]);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes materiales para retirar.");
		}
    }
    case    HOUSE_ITEM_POT_D:
    {
        if(response)
        {
            new amount = strval(inputtext);
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar esta cantidad.");
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(Info[playerid][pPot] >= amount)
			{
			    if(HouseInfo[Info[playerid][pPhousekey]][hPot] > 20000) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes más de 20000 de hierba en tu casa, no puedes dejar más.");
				HouseInfo[Info[playerid][pPhousekey]][hPot]+=amount;
				Info[playerid][pPot] -= amount;
				format(szMessage, sizeof(szMessage), "Depositaste %d de hierba en tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "Pot",HouseInfo[Info[playerid][pPhousekey]][hPot]);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente hierba para depositar.");
		}
    }
    case    HOUSE_ITEM_POT_R:
    {
        if(response)
        {
            new amount = strval(inputtext);
			if(amount < 1) SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar esta cantidad.");
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(HouseInfo[Info[playerid][pPhousekey]][hPot] >= amount)
			{
			    if(Info[playerid][pPot] > 49) return SendClientMessageEx(playerid, COLOR_GREY,"* Ya tienes 50 de hierba no puedes llevar más.");
				HouseInfo[Info[playerid][pPhousekey]][hPot]-=amount;
				Info[playerid][pPot] += amount;
				format(szMessage, sizeof(szMessage), "Retiraste %d de hierba de tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "Pot",HouseInfo[Info[playerid][pPhousekey]][hPot]);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente hierba para retirar.");
		}
    }
    case	HOUSE_ITEM_CRACK_D:
    {
        if(response)
        {
            new amount = strval(inputtext);
			if(amount < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes depositar esta cantidad.");
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if( Info[playerid][pCrack] >= amount )
			{
			    if(HouseInfo[Info[playerid][pPhousekey]][hCrack] > 19999) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes más de 30000 de crack en tu casa, no puedes dejar más.");
				HouseInfo[Info[playerid][pPhousekey]][hCrack]+=amount;
				Info[playerid][pCrack] -= amount;
				format(szMessage, sizeof(szMessage), "Depositaste %d de crack en tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "Crack",HouseInfo[Info[playerid][pPhousekey]][hCrack]);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente crack para depositar.");
		}
    }
    case    HOUSE_ITEM_CRACK_R:
    {
        if(response)
        {
            new amount = strval(inputtext);
			if(amount < 1) SendClientMessageEx(playerid, COLOR_GREY, "* No puedes retirar esta cantidad.");
            if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo números porfavor, vuelve a intentarlo.");
			if(HouseInfo[Info[playerid][pPhousekey]][hCrack] >= amount)
			{
			    if(Info[playerid][pCrack] > 25) return SendClientMessageEx(playerid, COLOR_GREY,"* Ya tienes 25 de crack no puedes llevar más.");
				HouseInfo[Info[playerid][pPhousekey]][hCrack]-=amount;
				Info[playerid][pCrack] += amount;
				format(szMessage, sizeof(szMessage), "Retiraste %d de crack de tu casa.", amount);
				SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
				SaveVarHouses(1,Info[playerid][pPhousekey], "Crack",HouseInfo[Info[playerid][pPhousekey]][hCrack]);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente crack para retirar.");
		}
	}
	case DIALOG_DROP: if(response)
	{
		switch(listitem)
		{
			case 0:
			{
			    if(Info[playerid][pCrack] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes nada de crack para tirar.");
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s tira algo sospechoso muy cerca de el.", GetPlayerNameEx(playerid));
				NearMsg(playerid, -1, szMessage,10.0);
				Info[playerid][pCrack] = 0;

			}
			case 1:
			{
			    if(Info[playerid][pPot] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes nada de hierba para tirar.");
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s tira algo sospechoso muy cerca de el.", GetPlayerNameEx(playerid));
				NearMsg(playerid, -1, szMessage,10.0);
				Info[playerid][pPot] = 0;
			}
			case 2:
			{
			    if(Info[playerid][pMats] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes nada de materiales para tirar.");
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s tira todos sus materiales.", GetPlayerNameEx(playerid));
				NearMsg(playerid, -1, szMessage,10.0);
				Info[playerid][pMats] = 0;
			}
			case 3:
			{
			    if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un teléfono.");
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s tira su télefono al suelo y lo patea.", GetPlayerNameEx(playerid));
				NearMsg(playerid, -1, szMessage,10.0);
				Info[playerid][pPnumber] = 0;
			}
			case 4:
			{
			    if(Info[playerid][pRadio] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un radio.");
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s tira su radio al suelo y lo patea.", GetPlayerNameEx(playerid));
				NearMsg(playerid, -1, szMessage,10.0);
				Info[playerid][pRadio] = 0;
			}
			case 5:
			{
				if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes tirar las armas en el paintball!");
				if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar esto en un evento.");
				new weapon = GetPlayerWeapon(playerid);
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s ha tirado su %s.", GetPlayerNameEx(playerid), WeaponNames[weapon]);
				NearMsg(playerid, -1, szMessage,10.0);
				RemovePlayerWeapon(playerid, weapon);
			}
		}
	}
	case    D_PINVIPCREATE:
	{
		if(response)
		{
		    if(Info[playerid][pCoinsPIN] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes asignado un PIN VIP.");
			if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP sólo deben ser números.");
	    	if(strlen(inputtext) == 4)
	    	{
	    	    Info[playerid][pCoinsPIN] = strval(inputtext);
	    	    format(szMessage, sizeof(szMessage), "Has creado correctamente tu PIN VIP (%d). Ya puedes usar funciones VIP (/vips)", Info[playerid][pCoinsPIN]);
	    	    SendClientMessageEx(playerid, COLOR_GRAD2,szMessage);
	    	}
	    	else return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP sólo debe tener 4 dígitos.");
	    }
	    else ShowPlayerDialog(playerid,D_PINVIP,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona","Crear PIN VIP\nCambiar PIN VIP","Seleccionar","Salir");
	}
	case    D_PINVIPCHANGE:
	{
		if(response)
		{
		    if( Info[playerid][pCoinsPIN] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Not ienes asignado un PIN VIP.");
	        if( !isnumeric(inputtext) ) return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP sólo deben ser números.");
	        if( Info[playerid][pCoinsPIN] == strval(inputtext) )
	        {
	            ShowPlayerDialog(playerid,D_PINVIPCHANGE2,DIALOG_STYLE_INPUT ,""COL_GENERAL"Cambiar PIN VIP - 2/2",""COL_WHITE"Ingresa tu nuevo PIN VIP para completar el cambio.\n\nNuevo PIN VIP:","Cambiar","Atrás");
	        }
	        else return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresa correctamente el PIN de 4 dígitos.");
	    }
	    else ShowPlayerDialog(playerid,D_PINVIP,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona","Crear PIN VIP\nCambiar PIN VIP","Seleccionar","Salir");
	}
	case    D_PINVIPCHANGE2:
	{
		if(response)
		{
			if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP sólo deben ser números.");
	    	if(strlen(inputtext) == 4)
	    	{
	    	    Info[playerid][pCoinsPIN] = strval(inputtext);
	    	    format(szMessage, sizeof(szMessage), "Has cambiado correctamente tu PIN VIP (%d).", Info[playerid][pCoinsPIN]);
	    	    SendClientMessageEx(playerid, COLOR_GRAD2,szMessage);
	    	}
	    	else return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP sólo puede tener 4 dígitos.");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* No se ha cambiado tu PIN VIP.");
	}
	case    D_PINVIP: if(response)
	{
		switch(listitem)
		{
			case 0: return ShowPlayerDialog(playerid,D_PINVIPCREATE,DIALOG_STYLE_INPUT ,""COL_GENERAL"Crear PIN VIP",	""COL_WHITE"Ingresa 4 dígitos de preferencia alguna combinación que recuerdes facilmente.\n\nNuevo PIN VIP:","Continuar","Atrás");
			case 1: return ShowPlayerDialog(playerid,D_PINVIPCHANGE,DIALOG_STYLE_INPUT ,""COL_GENERAL"Cambiar PIN VIP - 1/2",	""COL_WHITE"Ingresa el actual PIN para cambiarlo.\n\nPIN:","Continuar","Atrás");
		}
	}
	case    D_VIPACC: if(response)
	{
	    if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP sólo deben ser números.");
	    if( Info[playerid][pCoinsPIN] == strval(inputtext) )
	    {
			new szDialogTittle[16];
		    format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
		    ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "* El PIN VIP ingresado es incorrecto.");
	}
	case    D_CODEVIP: if(response)
	{
	    if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* El código sólo consiste en números.");
	    if(strlen(inputtext) == 6)
	    {
	        new idx = -1, CodeInput = strval(inputtext);
        	for(new ex = 0; ex < sizeof(varCodesVIP); ex++)
			{
	            if(varCodesVIP[ex][CodeNro] == CodeInput)
	            {
	                idx = ex;
	                //printf("%d",ex);
	            }
	        }
			if(idx == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* El código que ingresaste no es válido.");
            format(szMessage, sizeof(szMessage), "Canjeaste el código (%d - %d) - Se te asignó: %d coins.",idx,varCodesVIP[idx][CodeNro],varCodesVIP[idx][CodeCoins]);
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		    format(szMessage, sizeof(szMessage), "[CODIGO VIP]: %s - Código %d - Coins %d", GetPlayerNameEx(playerid),varCodesVIP[idx][CodeNro],varCodesVIP[idx][CodeCoins]);
		    Log("logs/coins.log", szMessage);
		    Info[playerid][pCoinsVip] += varCodesVIP[idx][CodeCoins];
			varCodesVIP[idx][CodeNro] = 0;
	        varCodesVIP[idx][CodeCoins] = 0;
			saveCodes();
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Ingresaste un código incorrecto (Sólo 6 dígitos).");
	}
	case	D_COINSVIP: if(response)
	{
		switch(listitem)
		{
		    case    0:
		    {
		        if(Info[playerid][pCoinsVip] < 20) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
	            ShowPlayerDialog(playerid,D_CVCARMODEL,DIALOG_STYLE_INPUT ,""COL_GENERAL"Vehículo Personalizado","Ingresa la ID del vehículo que quieres comprar\n\n"COL_GENERAL"ID: 400 - 611","Aceptar","Atrás");
		    }
		    case    1:
		    {
	            format(szDialog, sizeof(szDialog),""COL_WHITE"NOTA:\n\nRecuerda que este objeto se asignará en el slot 5 de tu inventario de toys.\nSi estás seguro dale en COMPRAR.");
				ShowPlayerDialog(playerid,D_CVVEST,DIALOG_STYLE_MSGBOX ,""COL_GENERAL"Chaleco Antibalas VIP",szDialog,"Comprar","Salir");
		    }
		    case    2:
		    {
		        if(Info[playerid][pCoinsVip] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
	            ShowPlayerDialog(playerid,D_CVLASER,DIALOG_STYLE_LIST,""COL_GENERAL"Color de Laser",""COL_RED"Rojo\n"COL_BLUE"Azul\n"COL_GREEN"Verde\n"COL_GENERAL"Naranja\n"COL_YELLOW"Amarillo\n"COL_PINK"Rosado","Seleccionar","Atrás");
			}
		    case    3: return ShowPlayerDialog(playerid,D_CVVIP,DIALOG_STYLE_LIST,""COL_GENERAL"Paquetes VIP",""COL_WHITE"VIP Silver (20)\nVIP Gold (40)","Seleccionar","Atrás");
			case    4: return ShowPlayerDialog(playerid,D_CVDOBLEEXP,DIALOG_STYLE_MSGBOX,""COL_GENERAL"6 Horas de Doble Exp",""COL_WHITE"NOTA:\n\nEsta función te permitirá ganar el doble de experiencia cada payday o en cualquier job.\n\nPrecio: 5 Coins","Seleccionar","Atrás");
			case    5: return ShowPlayerDialog(playerid,D_CVNEON,DIALOG_STYLE_LIST,""COL_GENERAL"Color de Neon",""COL_RED"Rojo\n"COL_BLUE"Azul\n"COL_GREEN"Verde\n"COL_WHITE"Blanco\n"COL_YELLOW"Amarillo\n"COL_PINK"Rosado","Seleccionar","Atrás");
			case    6: return ShowPlayerDialog(playerid,D_CVOTHERS,DIALOG_STYLE_LIST,""COL_GENERAL"Todo a 1 Coin","Navaja\nBat\nDesert E\nEscopeta\nMP5\nAK-47\nM4\nSniper\nMochila Rockstar\nBigotes Falsos\nEstrella Sheriff","Seleccionar","Atrás");
			case    7:
			{
	            format(szDialog, sizeof(szDialog),""COL_WHITE"En esta opción cambiarás tu acento por 2 coins.\n\n* Acento actual: %s",Info[playerid][pAcento]);
				ShowPlayerDialog(playerid,D_CVACENTO,DIALOG_STYLE_MSGBOX ,""COL_GENERAL"Cambiar Acento",szDialog,"Seguir","Salir");
			}
		}
	}
	case    D_CVACENTO:
	{
	    if(response)
	    {
	        if(Info[playerid][pCoinsVip] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
	        if(isnull(inputtext))
	        {
	            format(szDialog, sizeof(szDialog), ""COL_WHITE"Debes usar menos de 14 letras.\nEjemplo:\n\n* Colombiano\n* Chino\n* Argentino\n* Africano\n* Ingresa el que quieras...");
				return ShowPlayerDialog(playerid, D_CVACENTO, DIALOG_STYLE_INPUT, ""COL_GENERAL"Cambiar Acento",szDialog, "Ok", "Atrás");
	        }
        	if(strlen(inputtext) >= 15)
			{
			    format(szDialog, sizeof(szDialog), ""COL_WHITE"El acento que elegiste usa demasiados carácteres.\nDebes usar menos de 15 letras.\nEjemplo:\n\n* Colombiano\n* Chino\n* Argentino\n* Peruano\n* Ingresa el que quieras...");
                return ShowPlayerDialog(playerid, D_CVACENTO, DIALOG_STYLE_INPUT, ""COL_GENERAL"Cambiar Acento",szDialog, "Ok", "Atrás");
			}
	        if(isnumeric(inputtext))
	        {
	            format(szDialog, sizeof(szDialog), ""COL_WHITE"No se puede ingresar números.\nDebes usar menos de 14 letras.\nEjemplo:\n\n* Colombiano\n* Chino\n* Argentino\n* Peruano\n* Ingresa el que quieras...");
				return ShowPlayerDialog(playerid, D_CVACENTO, DIALOG_STYLE_INPUT, ""COL_GENERAL"Cambiar Acento",szDialog, "Ok", "Atrás");
	        }
			strmid(Info[playerid][pAcento], inputtext, 0, strlen(inputtext), 40);
			Info[playerid][pCoinsVip] -= 2;
		    format(szMessage, sizeof(szMessage), "[ACENTO] %s - Acento %s - Factura por 2 coins.", GetPlayerNameEx(playerid),inputtext);
		    Log("logs/coins.log", szMessage);
			format(szMessage, sizeof(szMessage), "Cambiaste tu acento por 2 coins. (Nuevo Acento: %s)",inputtext);
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
		}
	}
	case    D_CVOTHERCONFIRM:
	{
	    if(response)
	    {
			new modelid = GetPVarInt(playerid,"OtherObject"), slot = slotselection[playerid];
			new name[24];
	    	format(name, sizeof(name), "ERROR (NO COMPRAR)");
			for(new i;i<sizeof(HoldingObjectsAll);i++)
	    	{
				if(HoldingObjectsAll[i][holdingmodelid] == modelid)
	        	{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			PlayerToyInfo[playerid][slot][ptModelID] = modelid;
			PlayerToyInfo[playerid][slot][ptBone] = 6;
			PlayerToyInfo[playerid][slot][ptPosX] = 0.0;
			PlayerToyInfo[playerid][slot][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slot][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotX] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotY] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotZ] = 0.0;
        	PlayerToyInfo[playerid][slot][ftscaleX] = 1.0;
        	PlayerToyInfo[playerid][slot][ftscaleY] = 1.0;
        	PlayerToyInfo[playerid][slot][ftscaleZ] = 1.0;
			format(szMessage, sizeof(szMessage), "Compraste un %s en el slot %d, usa /toys para verlo.", name, slot);
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			DeletePVar(playerid,"OtherObject");
			Info[playerid][pCoinsVip] -= 1;
		    format(szMessage, sizeof(szMessage), "[OBJECT] %s - Objeto %s - Factura por 1 coin.", GetPlayerNameEx(playerid),name);
		    Log("logs/coins.log", szMessage);
			return 1;
		}
		else return DeletePVar(playerid,"OtherObject");
	}
	case    D_CVOTHERSSLOT:
	{
	    if(response)
	    {
	    	if(listitem >= 8 && Info[playerid][pVIP] != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser un nivel mayor de VIP para usar este slot.");
	    	if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes algo en esa ranura, eliminala con /toys");
			slotselection[playerid] = listitem;
			new name[24];
	    	format(name, sizeof(name), "ERROR (NO COMPRAR)");
			for(new i;i<sizeof(HoldingObjectsAll);i++)
	    	{
				if(HoldingObjectsAll[i][holdingmodelid] == GetPVarInt(playerid,"OtherObject"))
	        	{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Objeto: %s\nSlot: %d\n\n¿Correcto?",name,slotselection);
	        ShowPlayerDialog(playerid,D_CVOTHERCONFIRM,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Confirmación",szDialog,"Confirmar","Salir");
		}
	    else
		{
		    DeletePVar(playerid,"OtherObject");
			return ShowPlayerDialog(playerid,D_CVOTHERS,DIALOG_STYLE_LIST,""COL_GENERAL"Todo a 1 Coin","Navaja\nBat\nDesert E\nEscopeta\nMP5\nAK-47\nM4\nSniper\nMochila Rockstar\nBigotes Falsos\nEstrella Sheriff","Seleccionar","Atrás");
		}
	}
	case    D_CVOTHERS:
	{
	    if(response)
	    {
		    if(Info[playerid][pCoinsVip] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
			switch(listitem)
		    {
	     		case    0: SetPVarInt(playerid,"OtherObject", 335);
		        case    1: SetPVarInt(playerid,"OtherObject", 336);
		        case    2: SetPVarInt(playerid,"OtherObject", 348);
		        case    3: SetPVarInt(playerid,"OtherObject", 349);
		        case    4: SetPVarInt(playerid,"OtherObject", 353);
		        case    5: SetPVarInt(playerid,"OtherObject", 355);
		        case    6: SetPVarInt(playerid,"OtherObject", 356);
		        case    7: SetPVarInt(playerid,"OtherObject", 358);
		        case    8: SetPVarInt(playerid,"OtherObject", 371);
		        case    9: SetPVarInt(playerid,"OtherObject", 19351);
		        case 	10: SetPVarInt(playerid,"OtherObject", 19347);
			}
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
				new name[24] = "Nada";
				for(new i;i<sizeof(HoldingObjectsAll);i++)
				{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID]){format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);}
				}
				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
			ShowPlayerDialog(playerid, D_CVOTHERSSLOT, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Slot", stringg, "Seleccionar", "Atrás");
		}
	    else
		{
			new szDialogTittle[16];
		    format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
		    ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
		}
	}
	case    D_CVNEONCONFIRM:
	{
	    if(response)
	    {
			new modelid = GetPVarInt(playerid,"NeonColor"), slot = slotselection[playerid];
			new name[24];
	    	format(name, sizeof(name), "ERROR (NO COMPRAR)");
			for(new i;i<sizeof(HoldingObjectsAll);i++)
	    	{
				if(HoldingObjectsAll[i][holdingmodelid] == modelid)
	        	{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			PlayerToyInfo[playerid][slot][ptModelID] = modelid;
			PlayerToyInfo[playerid][slot][ptBone] = 6;
			PlayerToyInfo[playerid][slot][ptPosX] = 0.0;
			PlayerToyInfo[playerid][slot][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slot][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotX] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotY] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotZ] = 0.0;
        	PlayerToyInfo[playerid][slot][ftscaleX] = 1.5;
        	PlayerToyInfo[playerid][slot][ftscaleY] = 1.5;
        	PlayerToyInfo[playerid][slot][ftscaleZ] = 1.5;
			format(szMessage, sizeof(szMessage), "Compraste un %s en el slot %d, usa /toys para verlo.", name, slot);
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			DeletePVar(playerid,"NeonColor");
			Info[playerid][pCoinsVip] -= 5;
		    format(szMessage, sizeof(szMessage), "[NEON] %s - Objeto: %s Factura por 5 coins.", GetPlayerNameEx(playerid),name);
		    Log("logs/coins.log", szMessage);
			return 1;
		}
		else return DeletePVar(playerid,"NeonColor");
	}
	case    D_CVNEONSLOT:
	{
	    if(response)
	    {
	    	if(listitem >= 8 && Info[playerid][pVIP] != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser un nivel mayor de VIP para usar este slot.");
	    	if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes algo en esa ranura, eliminala con /toys");
			slotselection[playerid] = listitem;
			new name[24];
	    	format(name, sizeof(name), "ERROR (NO COMPRAR)");
			for(new i;i<sizeof(HoldingObjectsAll);i++)
	    	{
				if(HoldingObjectsAll[i][holdingmodelid] == GetPVarInt(playerid,"NeonColor"))
	        	{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Objeto: %s\nSlot: %d\n\n¿Correcto?",name,slotselection);
	        ShowPlayerDialog(playerid,D_CVNEONCONFIRM,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Confirmación",szDialog,"Confirmar","Salir");
		}
	    else
		{
		    DeletePVar(playerid,"NeonColor");
			return ShowPlayerDialog(playerid,D_CVNEON,DIALOG_STYLE_LIST,""COL_GENERAL"Color de Neon",""COL_RED"Rojo\n"COL_BLUE"Azul\n"COL_GREEN"Verde\n"COL_WHITE"Blanco\n"COL_YELLOW"Amarillo\n"COL_PINK"Rosado","Seleccionar","Atrás");
		}
	}
	case    D_CVNEON:
	{
	    if(response)
	    {
	        if(Info[playerid][pCoinsVip] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
	        switch(listitem)
	        {
	            case    0: SetPVarInt(playerid,"NeonColor", 18647); // Rojo
	            case    1: SetPVarInt(playerid,"NeonColor", 18648); // Azul
	            case    2: SetPVarInt(playerid,"NeonColor", 18649); // Verde
	            case    3: SetPVarInt(playerid,"NeonColor", 18652); // Blanco
	            case    4: SetPVarInt(playerid,"NeonColor", 18650); // Amarillo
	            case    5: SetPVarInt(playerid,"NeonColor", 18651); // Rosado
	        }
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
				new name[24] = "Nada";
				for(new i;i<sizeof(HoldingObjectsAll);i++)
				{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID]){format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);}
				}
				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
			ShowPlayerDialog(playerid, D_CVNEONSLOT, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Slot", stringg, "Seleccionar", "Atrás");
	    }
	    else
		{
			new szDialogTittle[16];
		    format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
		    ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
		}
	}
	case    D_CVDOBLEEXP:
	{
	    if(response)
	    {
	        if(Info[playerid][pCoinsVip] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
            Info[playerid][pDobleExp] += 6;
            Info[playerid][pCoinsVip] -= 5;
			SendClientMessageEx(playerid,COLOR_GRAD1, "Se activó 6 horas de doble EXP, aprovéchalo!");
			format(szMessage, sizeof(szMessage), "[DOBLE-EXP] %s - Factura por 5 coins.", GetPlayerNameEx(playerid));
			Log("logs/coins.log", szMessage);
		}
	    else
		{
			new szDialogTittle[16];
		    format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
		    ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
		}
	}
	case    D_CVCARMODEL:
	{
		if(response)
		{
		    if(Info[playerid][pCoinsVip] < 20) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
			if(!isnumeric(inputtext)) return SendClientMessageEx(playerid, COLOR_GREY, "* ID del vehiculo debe ser sólo números.");
	    	new modelid = strval(inputtext);
			if(modelid < 400 || modelid > 611) return SendClientMessageEx(playerid, COLOR_GREY, "* ID del vehiculo debe ser del 400 al 611.");

			new playervehicleid = GetPlayerFreeVehicleId(playerid);
			if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* Lo sentimos no puedes tener más coches.");
			if(carsforplayer[playerid] == 2) return SendClientMessageEx(playerid,COLOR_GREY,"* Sólo puede tener 2 coches spawneados y 6 guardados.");

			new Float:X,Float:Y,Float:Z,Float:Angle;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,Angle);
			new car = CreatePlayerVehicle(playerid, playervehicleid, modelid, X, Y, Z, Angle, -1, -1, 0);
			if(car == INVALID_PLAYER_VEHICLE_ID){ SendClientMessageEx(playerid, COLOR_GREY, "ERROR: Algo salió mal y el coche no se creó."); }
			else
			{
			    Info[playerid][pCoinsVip] -= 20;
	            format(szMessage, sizeof(szMessage), "Felicitaciones tienes un coche nuevo (%s).",GetVehicleName(car));
			    SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
			    format(szMessage, sizeof(szMessage), "[COCHE] %s creó un coche [M - %d] - Factura por 20 coins.", GetPlayerNameEx(playerid), modelid);
			    Log("logs/coins.log", szMessage);
			}
			return 1;
		}
		else
		{
			new szDialogTittle[16];
		    format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
		    ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
		}
	}
	case    D_CVLASERCONFIRM:
	{
	    if(response)
	    {
			new modelid = GetPVarInt(playerid,"LaserColor"), slot = slotselection[playerid];
			new name[24];
	    	format(name, sizeof(name), "ERROR (NO COMPRAR)");
			for(new i;i<sizeof(HoldingObjectsAll);i++)
	    	{
				if(HoldingObjectsAll[i][holdingmodelid] == modelid)
	        	{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			PlayerToyInfo[playerid][slot][ptModelID] = modelid;
			PlayerToyInfo[playerid][slot][ptBone] = 6;
			PlayerToyInfo[playerid][slot][ptPosX] = 0.0;
			PlayerToyInfo[playerid][slot][ptPosY] = 0.0;
			PlayerToyInfo[playerid][slot][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotX] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotY] = 0.0;
			PlayerToyInfo[playerid][slot][ptRotZ] = 0.0;
        	PlayerToyInfo[playerid][slot][ftscaleX] = 1.0;
        	PlayerToyInfo[playerid][slot][ftscaleY] = 1.0;
        	PlayerToyInfo[playerid][slot][ftscaleZ] = 1.0;
			format(szMessage, sizeof(szMessage), "Compraste un %s en el slot %d, usa /toys para verlo.", name, slot);
			SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			DeletePVar(playerid,"LaserColor");
			Info[playerid][pCoinsVip] -= 2;
		    format(szMessage, sizeof(szMessage), "[LASER] %s - Objeto %s - Factura por 2 coins.", GetPlayerNameEx(playerid),name);
		    Log("logs/coins.log", szMessage);
			return 1;
		}
		else return DeletePVar(playerid,"LaserColor");
	}
	case    D_CVLASERSLOT:
	{
	    if(response)
	    {
	    	if(listitem >= 8 && Info[playerid][pVIP] != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser un nivel mayor de VIP para usar este slot.");
	    	if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes algo en esa ranura, eliminala con /toys");
			slotselection[playerid] = listitem;
			new name[24];
	    	format(name, sizeof(name), "ERROR (NO COMPRAR)");
			for(new i;i<sizeof(HoldingObjectsAll);i++)
	    	{
				if(HoldingObjectsAll[i][holdingmodelid] == GetPVarInt(playerid,"LaserColor"))
	        	{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(szDialog, sizeof(szDialog), ""COL_WHITE"Objeto: %s\nSlot: %d\n\n¿Correcto?",name,slotselection);
	        ShowPlayerDialog(playerid,D_CVLASERCONFIRM,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Confirmación",szDialog,"Confirmar","Salir");
		}
	    else
		{
		    DeletePVar(playerid,"LaserColor");
			return ShowPlayerDialog(playerid,D_CVLASER,DIALOG_STYLE_LIST,""COL_GENERAL"Color de Laser",""COL_RED"Rojo\n"COL_BLUE"Azul\n"COL_GREEN"Verde\n"COL_GENERAL"Naranja\n"COL_YELLOW"Amarillo\n"COL_PINK"Rosado","Seleccionar","Atrás");
		}
	}
	case    D_CVLASER:
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case    0: SetPVarInt(playerid,"LaserColor", 18643); // Rojo
	            case    1: SetPVarInt(playerid,"LaserColor", 19080); // Azul
	            case    2: SetPVarInt(playerid,"LaserColor", 19083); // Verde
	            case    3: SetPVarInt(playerid,"LaserColor", 19082); // Naranja
	            case    4: SetPVarInt(playerid,"LaserColor", 19084); // Amarillo
	            case    5: SetPVarInt(playerid,"LaserColor", 19081); // Rosado
	        }
		    new stringg[512];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
				new name[24] = "Nada";
				for(new i;i<sizeof(HoldingObjectsAll);i++)
				{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID]){format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);}
				}
				format(stringg, sizeof(stringg), "%s(%d) %s (Parte: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
			ShowPlayerDialog(playerid, D_CVLASERSLOT, DIALOG_STYLE_LIST, ""COL_GENERAL"Selecciona un Slot", stringg, "Seleccionar", "Atrás");
	    }
	    else
	    {
			new szDialogTittle[16];
    		format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
    		ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
		}
	}
	case    D_CVVEST:
	{
	    if(response)
	    {
	        if(Info[playerid][pCoinsVip] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
			PlayerToyInfo[playerid][5][ptModelID] = 19515;
			PlayerToyInfo[playerid][5][ptBone] = 1;
			PlayerToyInfo[playerid][5][ptPosX] = 0.07998;
			PlayerToyInfo[playerid][5][ptPosY] = 0.03999;
			PlayerToyInfo[playerid][5][ptPosZ] = 0.0;
			PlayerToyInfo[playerid][5][ptRotX] = 0.0;
			PlayerToyInfo[playerid][5][ptRotY] = 0.0;
			PlayerToyInfo[playerid][5][ptRotZ] = 0.0;
        	PlayerToyInfo[playerid][5][ftscaleX] = 1.0;
        	PlayerToyInfo[playerid][5][ftscaleY] = 1.0;
        	PlayerToyInfo[playerid][5][ftscaleZ] = 1.0;
        	
			SendClientMessageEx(playerid, COLOR_LIGHTGREEN, "Felicitaciones tienes un chaleco antibalas VIP en tu inventario de toys (Slot 5).");
	        Info[playerid][pCoinsVip] -= 4;
        
		    format(szMessage, sizeof(szMessage), "[CHALECO] %s - Factura por 4 coins.", GetPlayerNameEx(playerid));
		    Log("logs/coins.log", szMessage);
		}
		else
		{
			new szDialogTittle[16];
			format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
    		ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
		}
	}
	case	D_CVVIP: if(response)
	{
		switch(listitem)
		{
		    case 0:
			{
				new Features[][] = {

					""COL_WHITE"Producto: VIP Silver.\n",
					"Precio: 20.\n",
					"Funciones:\n\n",
					" Podrás tener hasta 5 vehículos.\n\n",
					" Acceso al chat OOC sólo para VIPs.\n\n",
					" 1.5x más de materiales por compra de paquetes.\n\n",
					" Podrás tener 2 trabajos.\n\n",
					" Más slots en tu inventario de toys.\n\n",
					" Descuentos en los 24/7.\n\n",
					" Acceso a Eventos VIP.\n\n",
					" Descuentos en coches en venta.\n\n",
					" Y mucho más que estamos trabajando..."};
			    new dialogs[512];
				format(dialogs,sizeof(dialogs),"%s%s%s%s%s%s%s%s%s%s%s%s",Features[0],Features[1],Features[2],Features[3],Features[4],Features[5],Features[6],Features[7],Features[8],Features[9],Features[10],Features[11]);
				ShowPlayerDialog(playerid,D_CVVIP2,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Información",dialogs,">","");
                SetPVarInt(playerid,"TypeVIP", 1);
                SetPVarInt(playerid,"PriceVIP", 20);
			}
			case 1:
			{
				new goldf[][] = {
					""COL_WHITE"Producto: VIP Gold.\n",
					"Precio: 40.\n",
					"Funciones:\n\n",
					" Podrás tener hasta 8 vehículos.\n\n",
					" Acceso al chat OOC sólo para VIPs.\n\n",
					" 2x más de materiales por compra de paquetes.\n\n",
					" Podrás tener 2 trabajos.\n\n",
					" Más slots en tu inventario de toys.\n\n",
					" Descuentos en los 24/7.\n\n",
					" Acceso a Eventos VIP.\n\n",
					" Descuentos en coches en venta.\n\n",
					" Nivel 5 en la habilidad de vendedor de armas.\n\n",
					" Un menú exclusivo para personas VIP Gold.\n\n",
					" Podrás usar UZI o la Tec9.\n\n",
					" Acceso al comando /spawncasa.\n\n",
					" Tus reportes serán prioritarios.\n\n",
					" Acceso a toys gold."};
			    new dialogs[578];
				format(dialogs,sizeof(dialogs),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",goldf[0],goldf[1],goldf[2],goldf[3],goldf[4],goldf[5],goldf[6],goldf[7],goldf[8],goldf[9],goldf[10],goldf[11],goldf[12],goldf[13],goldf[14],goldf[15],goldf[16]);
				ShowPlayerDialog(playerid,D_CVVIP2,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Información",dialogs,">","");
                SetPVarInt(playerid,"TypeVIP", 2);
                SetPVarInt(playerid,"PriceVIP", 40);
			}
		}
	}
	case    D_CVVIP2: if(response)
	{
		new Features2[][] =
		{
			""COL_GENERAL"Terminos y Condiciones\n\n",
			""COL_GENERAL"1."COL_WHITE" El paquete no es transferible.\n\n",
			""COL_GENERAL"2."COL_WHITE" Ser VIP no disminuye las reglas o los castigos.\n\n",
			""COL_GENERAL"3."COL_WHITE" Abuso de características VIP resulta a la pérdida temporal o total sin derecho a reembolso.\n\n",
			""COL_GENERAL"4."COL_WHITE" Cualquier tipo de problema contacte a un administrador en el foro.\n\n",
			""COL_GENERAL"5."COL_WHITE" Los objetos VIP deben ser usados correctamente.\n\n",
			""COL_GENERAL"6."COL_WHITE" Al adquirir el paquete VIP tu cuenta es propia y nadie más puede usarla.\n\n",
			"¿Estás de acuerdo?"
		};
		new dialogs[532];
		format(dialogs,sizeof(dialogs),"%s%s%s%s%s%s%s%s",Features2[0],Features2[1],Features2[2],Features2[3],Features2[4],Features2[5],Features2[6],Features2[7]);
		ShowPlayerDialog(playerid,D_CVVIPTERMS,DIALOG_STYLE_MSGBOX,""COL_GENERAL"Información",dialogs,"Si","No");
	}
	case    D_CVVIPTERMS:{
	    if(response){
	        if(Info[playerid][pVIP] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Para volver adquirir otro paquete VIP, debe vencer el actual.");
			new viptext[8];
	    	switch(GetPVarInt(playerid,"TypeVIP")){
	    	    case 1:{
				    if(Info[playerid][pCoinsVip] < 20)
					{
			            DeletePVar(playerid,"TypeVIP");
			            DeletePVar(playerid,"PriceVIP");
						return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
					}
					viptext = "Silver";
				}
				case 2:{
				    if(Info[playerid][pCoinsVip] < 40){
			            DeletePVar(playerid,"TypeVIP");
			            DeletePVar(playerid,"PriceVIP");
						return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficientes coins para comprar esta función.");
					}
					viptext = "Gold";
				}
	    	}
			new year, month,day;
			getdate(year, month, day);
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			if(month == 12){Info[playerid][pVIPDateM] = 1;}
			else{Info[playerid][pVIPDateM] = month + 1;}
			Info[playerid][pVIPDateD] = day;
			Info[playerid][pVIP] = GetPVarInt(playerid,"TypeVIP");
			Info[playerid][pCoinsVip] -= GetPVarInt(playerid,"PriceVIP");
			format(szDialog,sizeof(szDialog),""COL_WHITE"Gracias por la compra!\n\nPrecio:%d\nFecha de compra: %d/%d/%d\n\nTipo de VIP: "COL_GENERAL"%s",GetPVarInt(playerid,"PriceVIP"),day,month,year,viptext);
            ShowPlayerDialog(playerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Toma ScreenShot:",szDialog,"Listo","");
            DeletePVar(playerid,"TypeVIP");
            DeletePVar(playerid,"PriceVIP");
		    format(szMessage, sizeof(szMessage),"[VIP] %s - Tipo %s (%d/%d/%d)", GetPlayerNameEx(playerid),viptext,day,month,year);
		    Log("logs/coins.log", szMessage);
		}
	    else
	    {
			new szDialogTittle[16];
    		format(szDialogTittle, sizeof(szDialogTittle), "Coins VIP: %d",Info[playerid][pCoinsVip]);
    		ShowPlayerDialog(playerid,D_COINSVIP,DIALOG_STYLE_LIST,szDialogTittle,"Auto Personalizado (20)\nChaleco Antibalas (4)\nLaser Toy (2)\n"COL_YELLOW"Paquete VIP\n"COL_WHITE"Doble Exp (5)\nNeon Toy (5)\nTodo a 1 Coin\nCambiar Acento (2)","Seleccionar","Salir");
	    }
	}
	// "Cambiar Skin\nRegenerar Salud\nRegenerar Armadura\nComprar Lotería"
	case    D_VIPLOCKER: if(response)
	{
		switch(listitem)
		{
		    case    0: return ShowModelSelectionMenu(playerid, skinlist, "Cambia tu skin", 0x000000FF, COLOR_GREY, 0xFFF6BDFF);
		    case    1:
		    {
				new Float:health;
				GetPlayerHealth(playerid, health);
				new hpint = floatround(health,floatround_round );
	    		if(hpint >= 100) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes la vida llena.");
		    	SetHP(playerid, 100);
				SendClientMessageEx(playerid, COLOR_YELLOW, "VIP: Regeneraste tu salud, ahora tienes 100% de vida.");
		    }
		    case    2:
		    {
				new Float:armour;
				GetPlayerArmour(playerid, armour);
				if(armour >= 100) return SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes la armadura llena.");
				SetPlayerArmour(playerid, 100);
			}
			case    3: ShowPlayerDialog(playerid, LOTTO_BUY, DIALOG_STYLE_INPUT, ""COL_GENERAL"Lotería Nacional",""COL_WHITE"Inserta un número entre 1 y 250. Mucha Suerte!","Comprar","Cancelar");
		}
	}
	case DIALOG_MYBUSINESS: if(response)
	{
	    new x = getPlayerBusinessID(playerid),szDialogTittle[48];
	    switch(listitem)
	    {
			case 0:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "Disponible: $%d", businessVariables[x][bVault]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_RET,DIALOG_STYLE_INPUT,szDialogTittle,"Ingresa la cantidad que deseas retirar","Retirar","Atrás");
			}
			case 1:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "Disponible: $%d", businessVariables[x][bVault]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_DEP,DIALOG_STYLE_INPUT,szDialogTittle,"Ingresa la cantidad que deseas depositar","Depositar","Atrás");
			}
			case 2:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), ""COL_WHITE"Stock de productos disponibles: %d.", businessVariables[x][bStock]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_STO,DIALOG_STYLE_MSGBOX,"Stock",szDialogTittle,"Atrás","Salir");
			}
			case 3:
			{
		    	format(szDialogTittle, sizeof(szDialogTittle), "Ingresa la cantidad que deseas pedir.\n\n"COL_WHITE"Stock disponible: "COL_GENERAL"%d.", businessVariables[x][bStock]);
			    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_PSTO,DIALOG_STYLE_INPUT,"Pedir productos",szDialogTittle,"Pedir","Salir");
			}
	    }
	}
	case DIALOG_MYBUSINESS_RET:
	{
	    new id = getPlayerBusinessID(playerid), money = strval(inputtext);
		if(response)
		{
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No has ingresado nada.");
	        if (isnumeric(inputtext))
	        {
	            if(businessVariables[id][bVault] < money) return SendClientMessage(playerid, COLOR_GREY, "* No hay la cantidad de dinero que ingresaste.");
				Earn(playerid, money);
				businessVariables[id][bVault] -= money;
				format(szMessage, sizeof(szMessage), "* Retiraste: $%d - Dinero disponible: $%d",money,businessVariables[id][bVault]);
				SendClientMessageEx(playerid, -1, szMessage);
				SaveVarBusiness(1,id, "Vault",businessVariables[id][bVault]);
			}
			else return SendClientMessageEx(playerid, -1, "* Sólo puedes ingresar números.");
		}
		else
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[id][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
	}
	case DIALOG_MYBUSINESS_DEP:
	{
	    new id = getPlayerBusinessID(playerid), money = strval(inputtext);
		if(response)
		{
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No has ingresado nada.");
	        if(isnumeric(inputtext))
	        {
	            if(money > GetPlayerCash(playerid)) return SendClientMessage(playerid, COLOR_GREY, "* No tienes la cantidad de dinero que ingresaste.");
				Bought(playerid, money);
				businessVariables[id][bVault] += money;
				format(szMessage, sizeof(szMessage), "* Depositaste: $%d - Dinero disponible: $%d",money,businessVariables[id][bVault]);
				SendClientMessageEx(playerid, -1, szMessage);
				SaveVarBusiness(1,id, "Vault",businessVariables[id][bVault]);
			}
			else return SendClientMessageEx(playerid, -1, "* Sólo puedes ingresar números.");
		}
		else
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[id][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
	}
	case DIALOG_MYBUSINESS_STO:
	{
	    new id = getPlayerBusinessID(playerid);
		if(response)
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[id][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
		else { return 1; }
	}
	case DIALOG_MYBUSINESS_PSTO:
	{
		if(response)
		{
		    new stocke = strval(inputtext);
		    if(isnull(inputtext)) return SendClientMessage(playerid, COLOR_GREY, "* No has ingresado nada.");
	    	if(isnumeric(inputtext))
	    	{
		    	new szDialogTittle[84],
					IGV = 18,
					value = 4,
					total;
		    	total = (stocke * value) + 18;
		    	SetPVarInt(playerid,"BusinessStock",total);
		    	SetPVarInt(playerid,"Stock",stocke);
		    	format(szDialogTittle, sizeof(szDialogTittle), "Pedido de productos:\n\nCosto: %d\nImpuesto: %d\n\nTOTAL: %d.",stocke*value,IGV,total);
		    	ShowPlayerDialog(playerid, DIALOG_MYBUSINESS_PSTO2,DIALOG_STYLE_MSGBOX,"Factura:",szDialogTittle, "Pagar", "Salir");
			}
			else SendClientMessageEx(playerid, COLOR_GREY,"* Sólo puedes ingresar números.");
		}
		else { return 1; }
	}
	case DIALOG_MYBUSINESS_PSTO2:
	{
		if(response)
		{
		    new newtotal = GetPVarInt(playerid,"BusinessStock"), newstock = GetPVarInt(playerid,"Stock");
		    if(newtotal > GetPlayerCash(playerid)) return SendClientMessageEx(playerid, COLOR_GREY,"* No tienes el dinero que necesitas en tu mano, sácalo de la caja fuerte de tu negocio o del banco.");
            Bought(playerid,newtotal);
            Tax += newtotal;
			format(szMessage, sizeof(szMessage), "* Hiciste la compra de stock para tu negocio de %d por $%d",newstock,newtotal);
			SendClientMessageEx(playerid, -1, szMessage);
			new id = getPlayerBusinessID(playerid);
			businessVariables[id][bStock] += newstock;
			SaveVarBusiness(1,id, "Stock",businessVariables[id][bStock]);
			return 1;
		}
		else { return 1; }
	}
    case    HELP_MENU: if(response)
	{
		switch(listitem)
		{
	    	case 	0:
			{
	        	SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Animaciones:");
    			SendClientMessageEx(playerid, COLOR_WHITE,  "/poli /rendirse /sentarse /sinaliento /asiento /bailar /rap /cruzar /ped /jiggy /rap");
    			SendClientMessageEx(playerid, COLOR_WHITE,  "/gesto /fumar /sexo /orinar /chora /relax /crabs /saludo2 /stop /lavarse /llorar");
    			SendClientMessageEx(playerid, COLOR_WHITE,  "/sigueme /saludo /quieto /enganche /palmaputa /cpr /darregalo /palmada /borracho /bomba");
    			SendClientMessageEx(playerid, COLOR_WHITE,  "/arobar /reir /lookout /robman /esconder /vomitar /comer /crack /jodete /taichi /beso");
	    	}
	    	case 	1:
			{
  				SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Armas");
	    		SendClientMessageEx(playerid, COLOR_WHITE, 	 "/dararma /aceptar arma /cancelar arma");
			}
			case 	2:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Banco");
	    		SendClientMessageEx(playerid, COLOR_WHITE,   "/atm (Cerca a un cajero automático.)");
	    		SendClientMessageEx(playerid, COLOR_WHITE,   "Deberás conseguir una tarjeta en el banco de los santos.");
	    		SendClientMessageEx(playerid, COLOR_WHITE,   "Puedes cambiar tu PIN y para transferencias usa el número de cuenta.");
			}
			case 	3:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Casa");
	    		SendClientMessageEx(playerid, COLOR_WHITE, 	 "/comprarcasa /rentar /desrentar /timbre /vendermicasa /cseguro");
        		SendClientMessageEx(playerid, COLOR_WHITE, 	 "/vendercasa /ponerrenta /preciorenta /sarma /micasa /garma /cmejorar");
			}
			case 	4:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Chat");
	    		SendClientMessageEx(playerid, COLOR_WHITE,   "Comandos IC:  (/g)ritar (/s)usurar /me /c (/r)adio");
	    		SendClientMessageEx(playerid, COLOR_WHITE,   "Comandos OOC: /b (/w)hisper (/f)accion");
			}
			case 	5:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Coche");
        		SendClientMessageEx(playerid, COLOR_WHITE,   "/estacionar /v [nombre] /llaves /unmodcoche /seguro");
        		SendClientMessageEx(playerid, COLOR_WHITE,   "/vendermicoche /borrarcoche /llenar /smaletero /gmaletero /darllave /quitarllave");
			}
			case 	6:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Sistema de Concesionarios");
     			SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que subirte al coche deseado y usar la opción comprar.");
			}
			case 	7:
			{
	    		if (Info[playerid][pFMember] != 255)
	    		{
                    SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Familias");
                    SendClientMessageEx(playerid, COLOR_WHITE, "/salirfamilia /fropa /fmensaje /fopciones /fcajafuerte /fdespedir /finvitar ");
					if(Info[playerid][pAdmin] >= 4) SendClientMessageEx(playerid, COLOR_YELLOW, "ADMIN: /nombrefamilia /anombrerango /crearf /fedit");
				}
			}
			case 	8:
			{
	    		if(Info[playerid][pLeader] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No eres líder de una facción!");
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Líder");
	    		SendClientMessageEx(playerid, COLOR_WHITE, "/contratar /despedir /darrango /odespedir /nofac");
			}
			case 	9:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Matrimonio");
	    		SendClientMessageEx(playerid, COLOR_WHITE, "/testigo /proponer /divorcio");
			}
			case 	10:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Sistema de Pesca");
     			SendClientMessageEx(playerid, COLOR_WHITE, "/liberarpez - /venderpez - /pescar");
     			SendClientMessageEx(playerid, COLOR_WHITE, "/comprar - En la Tienda del Puerto.");
			}
			case 	11:
			{
	    		if(Info[playerid][pVIP] == 0){return SendClientMessageEx(playerid, COLOR_GRAD2, "* No eres Jugador VIP!");}
        		else
				{
					SendClientMessageEx(playerid, COLOR_GENERAL, "Sistema VIP On!");
					//SendClientMessageEx(playerid, COLOR_VIP, "/lockervip /togvip /automensaje /vips");
            		//SendClientMessageEx(playerid, COLOR_VIP, "/ayudafichas /togphone /vip /spawncasa");
				}
			}
			case 	12:
			{
		    	SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Teléfono");
	    		SendClientMessageEx(playerid, COLOR_WHITE, "/llamar /sms /altavoz");
			}
			case 	13:
			{
		    	SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Trabajo");
            	switch(Info[playerid][pJob])
            	{
	        		case 1: SendClientMessageEx(playerid, COLOR_WHITE, "/venderbebida");
	        		case 2: SendClientMessageEx(playerid, COLOR_WHITE, "/barrer /dbarrer");
	        		case 3: SendClientMessageEx(playerid, COLOR_WHITE, "/vendertelefono");
	        		case 5: SendClientMessageEx(playerid, COLOR_WHITE, "/tomarpizza [En lugar de las PizzaBikes]");
	        		case 7: SendClientMessageEx(playerid, COLOR_WHITE, "/cargarcamion /robarcamion /skill");
	        		case 9: SendClientMessageEx(playerid, COLOR_WHITE, "/tarifa - /aceptar taxi - /cancelar taxi");
	        		case 10: SendClientMessageEx(playerid, COLOR_WHITE, "/cosechar - /dcosechar- /vendercosecha");
	        		case 12: SendClientMessageEx(playerid, COLOR_WHITE, "/proteccion");
	        		case 13: SendClientMessageEx(playerid, COLOR_WHITE, "/reparar - /recargar - /mduty - /fix");
	        		case 14: SendClientMessageEx(playerid, COLOR_WHITE, "/crear - /materiales - /vendermateriales /creararma");
	        		default: SendClientMessageEx(playerid, COLOR_GRAD2, "* No tienes un trabajo!");
            	}
				switch(Info[playerid][pJob2])
				{ 
					case 1: SendClientMessageEx(playerid, COLOR_WHITE, "/venderbebida");
	        		case 2: SendClientMessageEx(playerid, COLOR_WHITE, "/barrer /dbarrer");
	        		case 3: SendClientMessageEx(playerid, COLOR_WHITE, "/vendertelefono");
	        		case 5: SendClientMessageEx(playerid, COLOR_WHITE, "/tomarpizza [En lugar de las PizzaBikes]");
	        		case 7: SendClientMessageEx(playerid, COLOR_WHITE, "/cargarcamion /robarcamion /skill");
	        		case 9: SendClientMessageEx(playerid, COLOR_WHITE, "/tarifa - /aceptar taxi - /cancelar taxi");
	        		case 10: SendClientMessageEx(playerid, COLOR_WHITE, "/cosechar - /dcosechar- /vendercosecha");
	        		case 12: SendClientMessageEx(playerid, COLOR_WHITE, "/proteccion");
	        		case 13: SendClientMessageEx(playerid, COLOR_WHITE, "/reparar - /recargar - /mduty - /fix");
	        		case 14: SendClientMessageEx(playerid, COLOR_WHITE, "/crear - /materiales - /vendermateriales /creararma");
				}
			}
			case 	14:
			{
				if(IsAPolice(playerid))
	    		{
	        		SendClientMessageEx(playerid, COLOR_GENERAL, "Departamento de Policía");
	        		SendClientMessageEx(playerid, COLOR_WHITE, "/radio /r /d (/m)egafono /su /duty /esposar /ta(zer) /ap /radargun /fondos /limpiarcamion /vmaletero /ram /luces");
	        		SendClientMessageEx(playerid, COLOR_WHITE, "/quitar /multar /detener /bk(c) (/tlc) /miranda /bar /qb /placa /expediente /embargar /tgunmaletero /(q)(p)spikes /placaex");
					SendClientMessageEx(playerid, COLOR_WHITE, "(/ant)ecedente (/su)spect /limpiar /sospechosos /sapddiv /verllaves /vcoche /dejarmulta /sapd /arrestar /destruirplanta");
	    		}
	    		else if(Team_SAMD(playerid))
				{
		    		SendClientMessageEx(playerid, COLOR_GENERAL, "Equipo SAMD");
            		SendClientMessageEx(playerid, COLOR_WHITE, "/placa /duty (/r)adio (/d)epartaments /subirpt /dejarpt /curar /irpt /placaex");
				}
				else if(Team_Mecanicos(playerid))
				{
		 	   		SendClientMessageEx(playerid, COLOR_GENERAL, "Taller de Mecánicos");
         	   		SendClientMessageEx(playerid, COLOR_WHITE, "/menu /mduty /nos /hyd /venderspray /remolcar /reparar /recargar");
				}
				else if(Hitman(playerid))
				{
		    		SendClientMessageEx(playerid, COLOR_GENERAL, "Hitman Agency");
            		SendClientMessageEx(playerid, COLOR_WHITE, "/mihq /buscar /acontrato /darhit /hrangos /borrarhit /equipo /apgarage /hits");
            		SendClientMessageEx(playerid, COLOR_WHITE, "Nota: Se les ruega usar nombres en clave en el teamspeak3 como: AG15 - Agente 15, etc.");
				}
				else if(Team_NG(playerid))
				{
		    		SendClientMessageEx(playerid, COLOR_GENERAL, "San Andreas Ejercito Militar");
            		SendClientMessageEx(playerid, COLOR_WHITE, "/misil [En la torre de control] - /vestuario - (/r)adio - (/d)epartments - (/m)egáfono - (/ta)zer -  /tgunmaletero - /placaex");
            		SendClientMessageEx(playerid, COLOR_WHITE, "/revisar - /bar - /placa  - /expediente - /qb - /esposar - /gob - /limpiarcamion - /vmaletero - /(q)(p)spikes - /detener - /prision");
            		SendClientMessageEx(playerid, COLOR_WHITE, "Div Médicos: /dejarpt - /subirpt /bk (bkc)");
				}
				else if(Team_LSTV(playerid))
				{
		    		SendClientMessageEx(playerid, COLOR_GENERAL, "Cable News Network");
            		SendClientMessageEx(playerid, COLOR_WHITE, "/nr (Noticias) - /entrevista /f /apgarage /r");
				}
				else if(Gobierno(playerid))
				{
		    		SendClientMessageEx(playerid, COLOR_GENERAL, "Gobierno");
		    		SendClientMessageEx(playerid, COLOR_WHITE, "/equipo (/gob)ierno /impuesto /sfondos /dfondos /gobdiv /apgarage");
				}
				/*else if(NoDuty(playerid))
				{
		    		SendClientMessageEx(playerid, COLOR_GENERAL, "Sistema Judicial");
					SendClientMessageEx(playerid, COLOR_WHITE, "(/r)adio (/d)epartments /orden /qorden /multajudicial /scarcel /sprision /buscados");
					SendClientMessageEx(playerid, COLOR_WHITE, "/juicio /librarcargos /recompensar /verjuicios /revertir /presentar");
				}*/
				else if(Team_FBI(playerid))
				{
	        		SendClientMessageEx(playerid, COLOR_GENERAL, "Federal Bureau of Investigation");
	        		SendClientMessageEx(playerid, COLOR_WHITE, "(/r)adio (/d)epartments (/m)egaphone (/su)spect /duty /esposar (/ta)zer /vmaletero /fbi /arrestar");
					SendClientMessageEx(playerid, COLOR_WHITE, "/revisar /cachearinv /quitar /multar /detener /miranda /encontrar /encontrarveh /bk (bkc)");
					SendClientMessageEx(playerid, COLOR_WHITE, "/placa  (/ant)ecedente (/su)spect /limpiar /sospechosos /fbidiv /tgunmaletero /ram /placaex /luces");
				}
				else if(BankSystem(playerid))
				{
				    SendClientMessageEx(playerid, COLOR_GENERAL, "Banco Central de Los Santos");
				    SendClientMessageEx(playerid, COLOR_WHITE, "(/r)adio (/d)epartments /equipo /estadoatm /estadobanco /fbanco /prestamo /tarjeta /bcuenta");
				}
			}
			case 15:
			{
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - General");
	    		SendClientMessageEx(playerid, COLOR_GENERAL, "[ADMINISTRACIÓN] /reportar /tipduda /retips /ayudame /duda");
	    		SendClientMessageEx(playerid, COLOR_WHITE,   "[CUENTA]: /cuenta /subirnivel /cambiarclave /misarmas /fichas /tirar /mostrar /saludar /vercinturon");
				SendClientMessageEx(playerid, COLOR_WHITE,   "[CMDS  ]: /pagar /hora /id /cfumar /cropa /licencias /acciones /ven /seguro /admins /dararma");
				SendClientMessageEx(playerid, COLOR_WHITE,   "[CMDS  ]: /ap /cp /apgarage /cpgarage /togduda /togooc /tognews /togfam /togphone");
				SendClientMessageEx(playerid, COLOR_WHITE,   "[CMDS  ]: /eject /usarcrack /usarhierba /llenar /moneda /dar /numero /contrato /stopanim");
				SendClientMessageEx(playerid, COLOR_WHITE,   "[OTROS ]: /vendercrack - /venderhierba - /comprarcrack - /comprarhierba - /plantar - /checkplanta - /sacarplanta");
				SendClientMessageEx(playerid, COLOR_WHITE,   "[OTROS ]: /creararma /dararma - /materiales - /vendermateriales - /skill /salirfaccion /salirfamilia");
			}
			case 16:
			{
			    SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Negocios");
			    SendClientMessageEx(playerid, COLOR_WHITE,   "/vendernegocio /comprarnegocio /ncaja /nombrenegocio /abrir /cerrar /minegocio");
                if(Info[playerid][pAdmin] >= 4) SendClientMessageEx(playerid, COLOR_YELLOW, "ADMIN: /movernegocio /nprecio /ntipo /crearnegocio /asellnegocio /ntipo");
			}
			case 	17:
			{
		    	SendClientMessageEx(playerid, COLOR_GENERAL, "Ayuda - Stereo");
	    		SendClientMessageEx(playerid, COLOR_WHITE, "/stereo /estacion /apagarstereo");
			}
		}
	}
}
return 1;
}

IsVehicleBusy(vehicleid) // The_Chaoz ¿?¿?¿
{
	foreach(Player, i)
		if(IsPlayerConnectedEx(i) && IsPlayerInVehicle(i, vehicleid))
			return 1;
	return 0;
}

function BroadCast(color, string[])
{
foreach(Player, i)
{
	if(Info[i][pLevel] >= 1)
	{
	    SendClientMessageEx(i, color, string);
	}
}
return 1;
}

function SendVIPMessage(color, string[])
{
	foreach(Player, i)
	{
		if((Info[i][pVIP] >= 1 || Info[i][pAdmin] >= 2) && Info[i][pVIPCHAT] >= 1)
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

stock ShopTechBroadCast(color,string[])
{
foreach(Player, i)
{
	if (Info[i][pShopTech] == 1 || Info[i][pAdmin] >= 5)
	{
		SendClientMessageEx(i, color, string);
	}
}
return 1;
}

stock ABroadCast(color,string[],level)
{
foreach(Player, i)
{
	if (Info[i][pAdmin] >= level && AdminChat[i] == 0)
	{
		SendClientMessageEx(i, color, string);
	}
}
return 1;
}

stock CBroadCast(color,string[],level)
{
foreach(Player, i)
{
	if (Info[i][pHelper] >= level)
	{
		SendClientMessageEx(i, color, string);
		//printf("%s", string);
	}
}
return 1;
}

function SendDutyAdvisorMessage(color, string[])
{
foreach(Player, i)
{
	if(Info[i][pHelper] >= 1 && GetPVarInt(i, "AdvisorDuty") == 1)
	{
		SendClientMessageEx(i, color, string);
	}
}
}

function SendAdvisorMessage(color, string[])
{
foreach(Player, i)
{
		if((Info[i][pHelper] >= 1 || Info[i][pVIP] == 3) && advisorchat[i])
		{
			SendClientMessageEx(i, color, string);
		}
		else
		{
		    if(Info[i][pAdmin] >= 1 && advisorchat[i])
		    {
		        SendClientMessageEx(i, color, string);
		    }
		}
}
}

function OOCOff(color, string[])
{
foreach(Player, i)
{
	if(!gOoc[i])
	{
		SendClientMessageEx(i, color, string);
	}
}
}

function OOCNews(color,string[])
{
foreach(Player, i)
{
	if(!gNews[i])
	{
		SendClientMessageEx(i, color, string);
	}
}
}

function SendRadioMessage(member, color, string[])
{
foreach(Player, i)
{
	if(Info[i][pMember] == member)
	{
		if(RadioOn[i])
        {
			SendClientMessageEx(i, color, string);
		}
	}
}
}

function SendNewFamilyMessage(family, color, string[])
{
foreach(Player, i)
{
		if(Info[i][pFMember] == family)
		{
			if(!gFam[i])
			{
				SendClientMessageEx(i, color, string);
			}
		}
}
}

function SendFamilyMessage(family, color, string[])
{
foreach(Player, i)
{
	if(Info[i][pMember] == family || Info[i][pLeader] == family)
	{
		if(!gFam[i])
		{
			SendClientMessageEx(i, color, string);
		}
	}
}
}

stock SendAdminMessage(color, string[])
{
foreach(Player, i)
{
	if(IsPlayerConnectedEx(i))
	{
	    if(Info[i][pAdmin] >= 1 && AdminChat[i] == 0)
	    {
			SendClientMessageEx(i, color, string);
		}
	}
}
}

stock SendAD(from, advert[], number)
{
new bool:breakingloop = false, newid = -1;

for(new i=0;i<MAX_AD;i++)
{
	if(!breakingloop)
	{
		if(ADInfo[i][aActive] == 0)
		{
			breakingloop = true;
			newid = i;
		}
	}
}
if(newid != -1)
{
    strmid(ADInfo[newid][aAdvert], advert, 0, strlen(advert), 128);
    strmid(ADInfo[newid][aResume], advert, 0, strlen(advert), 15);
    ADInfo[newid][aOther] = from;
    ADInfo[newid][aActive] = 1;
    ADInfo[newid][aNumber] = number;
    //ADInfo[newid][aTimer] = SetTimerEx("ADTimer", 60000, 0, "d", newid);
    Info[from][pAdverID] = newid;
    new PlayerName[MAX_PLAYER_NAME];
 	GetPlayerName(from, PlayerName, sizeof(PlayerName));
 	strmid(ADInfo[newid][aContact], PlayerName, 0, strlen(PlayerName), MAX_PLAYER_NAME);
}
else
{
	SendClientMessageEx(from, COLOR_WHITE,"Tienes que esperar, el espacio de anuncios está lleno.");
}
return 1;
}

stock ClearAd(id)
{
strmid(ADInfo[id][aAdvert], "Nada", 0, 4, 4);
strmid(ADInfo[id][aResume], "Nada", 0, 4, 4);
Info[ADInfo[id][aOther]][pAdverID] = -1;
ADInfo[id][aOther] = 0;
ADInfo[id][aActive] = 0;
ADInfo[id][aNumber] = 0;
}
stock businessTypeMessages(const businessid, const playerid)
{
	switch(businessVariables[businessid][bType])
	{
		case 1:        	SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido! para comprar comida debes usar el comando /comprar.");
		case 2: 		SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido! para comprar ropa o toys debes usar el comando /cropa y /ctoys.");
		default: 		SendClientMessageEx(playerid, COLOR_WHITE, "Bienvenido! para comprar aquí usa /comprar");
	}
	return 1;
}
getPlayerBusinessID(const playerid)
{
	new x;
    while(x < MAX_BUSINESS)
	{
		if(strlen(businessVariables[x][bOwner]) >= 1)
		{
	        if(!strcmp(businessVariables[x][bOwner], Info[playerid][pNormalName], true)){return x;}
		}
		x++;
	}
    return 0;
}

//cambios

CMD:cambios(playerid, params[]) return cmd_informacion(playerid, params);
CMD:informacion(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnectedEx(playerid))
	{
 		SendClientMessageEx(playerid, COLOR_WHITE, "Lista de Cambios {ff7b00}v2.2(b)");
		SendClientMessageEx(playerid, COLOR_GREY, "- Entrada y salida de puertas por C");
		SendClientMessageEx(playerid, COLOR_GREY, "- Cambios en JOBs");
		SendClientMessageEx(playerid, COLOR_GREY, "- Activado sistema VIP");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	return 1;
}

//anims ============================================================================================================================
// native ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0);
zcmd(rendirse, playerid, params[])
{
    if(PlayerDrunk[playerid] > 9) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora.");
    if(GetPVarInt(playerid, "IsFrozen") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto porque estás congelado.");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid, "Injured") == 0)
	{
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
  		return 1;
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora.");
}
zcmd(sentarse, playerid, params[])
{
    new anim;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /sentarse [1-5]");
    switch(anim){
		case 1: LoopingAnim(playerid,"BEACH","bather",4.0,1,0,0,0,0);
		case 2: LoopingAnim(playerid,"BEACH","Lay_Bac_Loop",4.0,1,0,0,0,0);
		case 3: LoopingAnim(playerid,"BEACH","ParkSit_W_loop",4.0,1,0,0,0,0);
		case 4: LoopingAnim(playerid,"BEACH","SitnWait_loop_W",4.0,1,0,0,0,0);
		case 5: LoopingAnim(playerid,"BEACH","SitnWait_loop_W",4.0,1,0,0,0,0);
		case 6: LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0,1,0,0,0,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /sentarse [1-5]");
	}
	return 1;
}
zcmd(orinar, playerid, params[]){
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
    if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora.");
	SetPlayerSpecialAction(playerid, 68);
	return 1;
}
zcmd(dj, playerid, params[]){
    new anim;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /dj [1-4]");
    switch(anim){
		case 1: LoopingAnim(playerid,"SCRATCHING","scdldlp",4.0,1,0,0,0,0);
		case 2: LoopingAnim(playerid,"SCRATCHING","scdlulp",4.0,1,0,0,0,0);
		case 3: LoopingAnim(playerid,"SCRATCHING","scdrdlp",4.0,1,0,0,0,0);
		case 4: LoopingAnim(playerid,"SCRATCHING","scdrulp",4.0,1,0,0,0,0);
	 	default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /dj [1-4]");
	}
	return 1;
}
zcmd(sinaliento, playerid, params[]){
    new anim;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /sinaliento [1-2]");
    switch(anim){
		case 1: LoopingAnim(playerid,"PED","IDLE_tired",4.0,1,0,0,0,0);
		case 2: LoopingAnim(playerid,"FAT","IDLE_tired",4.0,1,0,0,0,0);
        default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /sinaliento [1-2]");
	}
	return 1;
}
zcmd(poli, playerid, params[]){
    new anim;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /poli [1-2]");
	switch(anim){
		case 1:LoopingAnim(playerid,"POLICE","CopTraf_Come",4.0,0,0,0,0,0);
		case 2:LoopingAnim(playerid,"POLICE","CopTraf_Stop",4.0,0,0,0,0,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /poli [1-2]");
	}
	return 1;
}
zcmd(asiento, playerid, params[]){
    new anim;
	if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /asiento [1-7]");
	if(anim < 1 || anim > 7) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /asiento [1-7]");
	switch(anim)
		{
			case 1:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"Attractors","Stepsit_in",4.0,0,0,0,1,0);
			}// Not looping
			case 2:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"CRIB","PED_Console_Loop",4.0,1,0,0,0,0);
			}
			case 3:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"INT_HOUSE","LOU_In",4.0,0,0,0,1,0);
			} // Not looping
			case 4:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"MISC","SEAT_LR",4.0,1,0,0,0,0);
			}
			case 5:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"MISC","Seat_talk_01",4.0,1,0,0,0,0);
			}
			case 6:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"MISC","Seat_talk_02",4.0,1,0,0,0,0);
			}
			case 7:
			{
			JugadorSentado[playerid] = 1; LoopingAnim(playerid,"ped","SEAT_down",4.0,0,0,0,1,0);
			} // Not looping
		}
	return 1;
}
zcmd(bailar, playerid, params[]){
    new dancestyle;
	if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
    if(sscanf(params, "d", dancestyle)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /bailar [1-3]");
	switch(dancestyle){
		case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
	}
   	return 1;
}
zcmd(cruzar, playerid, params[]){
    new anim;
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /cruzar [1-5]");
	if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora!");
	switch(anim){
		case 1: LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
		case 2: LoopingAnim(playerid, "DEALER", "DEALER_IDLE", 4.0, 0, 1, 1, 1, -1);
		case 3: LoopingAnim(playerid, "DEALER", "DEALER_IDLE_01", 4.0, 0, 1, 1, 1, -1);
		case 4: LoopingAnim(playerid,"GRAVEYARD","mrnM_loop",4.0,1,0,0,0,0);
		case 5: LoopingAnim(playerid,"GRAVEYARD","prst_loopa",4.0,1,0,0,0,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /cruzar [1-5]");
	}
	return 1;
}
zcmd(jiggy, playerid, params[])
{
    new anim;
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /jiggy [1-10]");
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
	switch(anim){
		case 1: LoopingAnim(playerid,"DANCING","DAN_Down_A",4.0,1,0,0,0,0);
		case 2: LoopingAnim(playerid,"DANCING","DAN_Left_A",4.0,1,0,0,0,0);
		case 3: LoopingAnim(playerid,"DANCING","DAN_Loop_A",4.0,1,0,0,0,0);
		case 4: LoopingAnim(playerid,"DANCING","DAN_Right_A",4.0,1,0,0,0,0);
		case 5: LoopingAnim(playerid,"DANCING","DAN_Up_A",4.0,1,0,0,0,0);
		case 6: LoopingAnim(playerid,"DANCING","dnce_M_a",4.0,1,0,0,0,0);
		case 7: LoopingAnim(playerid,"DANCING","dnce_M_b",4.0,1,0,0,0,0);
		case 8: LoopingAnim(playerid,"DANCING","dnce_M_c",4.0,1,0,0,0,0);
		case 9: LoopingAnim(playerid,"DANCING","dnce_M_c",4.0,1,0,0,0,0);
		case 10: LoopingAnim(playerid,"DANCING","dnce_M_d",4.0,1,0,0,0,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /jiggy [1-10]");
	}
	return 1;
}
zcmd(ped, playerid, params[]){
    new anim;
    if(sscanf(params, "d", anim)) return SendClientMessageEx(playerid,COLOR_GREY,"USA: /ped [1-26]");
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
	switch(anim){
		case 1: LoopingAnim(playerid,"PED","JOG_femaleA",4.0,1,1,1,1,1);
		case 2: LoopingAnim(playerid,"PED","JOG_maleA",4.0,1,1,1,1,1);
		case 3: LoopingAnim(playerid,"PED","WOMAN_walkfatold",4.0,1,1,1,1,1);
		case 4: LoopingAnim(playerid,"PED","run_fat",4.0,1,1,1,1,1);
		case 5: LoopingAnim(playerid,"PED","run_fatold",4.0,1,1,1,1,1);
		case 6: LoopingAnim(playerid,"PED","run_old",4.0,1,1,1,1,1);
		case 7: LoopingAnim(playerid,"PED","Run_Wuzi",4.0,1,1,1,1,1);
		case 8: LoopingAnim(playerid,"PED","swat_run",4.0,1,1,1,1,1);
		case 9: LoopingAnim(playerid,"PED","WALK_fat",4.0,1,1,1,1,1);
		case 10: LoopingAnim(playerid,"PED","WALK_fatold",4.0,1,1,1,1,1);
		case 11: LoopingAnim(playerid,"PED","WALK_gang1",4.0,1,1,1,1,1);
		case 12: LoopingAnim(playerid,"PED","WALK_gang2",4.0,1,1,1,1,1);
		case 13: LoopingAnim(playerid,"PED","WALK_old",4.0,1,1,1,1,1);
		case 14: LoopingAnim(playerid,"PED","WALK_shuffle",4.0,1,1,1,1,1);
		case 15: LoopingAnim(playerid,"PED","woman_run",4.0,1,1,1,1,1);
		case 16: LoopingAnim(playerid,"PED","WOMAN_runbusy",4.0,1,1,1,1,1);
		case 17: LoopingAnim(playerid,"PED","WOMAN_runfatold",4.0,1,1,1,1,1);
		case 18: LoopingAnim(playerid,"PED","woman_runpanic",4.0,1,1,1,1,1);
		case 19: LoopingAnim(playerid,"PED","WOMAN_runsexy",4.0,1,1,1,1,1);
		case 20: LoopingAnim(playerid,"PED","WOMAN_walkbusy",4.0,1,1,1,1,1);
		case 21: LoopingAnim(playerid,"PED","WOMAN_walkfatold",4.0,1,1,1,1,1);
		case 22: LoopingAnim(playerid,"PED","WOMAN_walknorm",4.0,1,1,1,1,1);
		case 23: LoopingAnim(playerid,"PED","WOMAN_walkold",4.0,1,1,1,1,1);
		case 24: LoopingAnim(playerid,"PED","WOMAN_walkpro",4.0,1,1,1,1,1);
		case 25: LoopingAnim(playerid,"PED","WOMAN_walksexy",4.0,1,1,1,1,1);
		case 26: LoopingAnim(playerid,"PED","WOMAN_walkshop",4.0,1,1,1,1,1);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /ped [1-26]");
	}
	return 1;
}
zcmd(rap, playerid, params[]){
    new rapstyle;
    if(sscanf(params, "d", rapstyle)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /rap [1-3]");
	if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
	switch(rapstyle){
		case 1: LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,1,1,1,0);
		case 2: LoopingAnim(playerid,"RAPPING","RAP_B_Loop",4.0,1,1,1,1,0);
		case 3: LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,1,1,1,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /rap [1-3]");
	}
   	return 1;
}
zcmd(gesto, playerid, params[]){
    new gesto;
    if(sscanf(params, "d", gesto)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /gesto [1-15]");
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
	switch(gesto){
		case 1: OnePlayAnim(playerid,"GHANDS","gsign1",4.0,0,0,0,0,0);
		case 2: OnePlayAnim(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0);
		case 3: OnePlayAnim(playerid,"GHANDS","gsign2",4.0,0,0,0,0,0);
		case 4: OnePlayAnim(playerid,"GHANDS","gsign2LH",4.0,0,0,0,0,0);
		case 5: OnePlayAnim(playerid,"GHANDS","gsign3",4.0,0,0,0,0,0);
		case 6: OnePlayAnim(playerid,"GHANDS","gsign3LH",4.0,0,0,0,0,0);
		case 7: OnePlayAnim(playerid,"GHANDS","gsign4",4.0,0,0,0,0,0);
		case 8: OnePlayAnim(playerid,"GHANDS","gsign4LH",4.0,0,0,0,0,0);
		case 9: OnePlayAnim(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);
		case 10: OnePlayAnim(playerid,"GHANDS","gsign5",4.0,0,0,0,0,0);
		case 11: OnePlayAnim(playerid,"GHANDS","gsign5LH",4.0,0,0,0,0,0);
		case 12: OnePlayAnim(playerid,"GANGS","Invite_No",4.0,0,0,0,0,0);
		case 13: OnePlayAnim(playerid,"GANGS","Invite_Yes",4.0,0,0,0,0,0);
		case 14: OnePlayAnim(playerid,"GANGS","prtial_gngtlkD",4.0,0,0,0,0,0);
		case 15: OnePlayAnim(playerid,"GANGS","smkcig_prtl",4.0,0,0,0,0,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /gesto [1-15]");
	}
	return 1;
}
zcmd(sexo, playerid, params[]){
    new sexstyle;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
    if(sscanf(params, "d", sexstyle)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /sexo [1-8]");
	switch(sexstyle){
		case 1: LoopingAnim(playerid,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,0);
		case 2: LoopingAnim(playerid,"SNM","SPANKING_IDLEP",4.1,0,1,1,1,0);
		case 3: LoopingAnim(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,0);
		case 4: LoopingAnim(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,0);
		case 5: LoopingAnim(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,0);
		case 6: LoopingAnim(playerid,"SNM","SPANKEDP",4.1,0,1,1,1,0);
		case 7: LoopingAnim(playerid,"SNM","SPANKING_ENDW",4.1,0,1,1,1,0);
		case 8: LoopingAnim(playerid,"SNM","SPANKING_ENDP",4.1,0,1,1,1,0);
		default: return SendClientMessageEx(playerid,COLOR_GREY,"USA: /sexo [style 1-8]");
	}
  	return 1;
}
zcmd(fumar, playerid, params[]){
    new gesto;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
    if(sscanf(params, "d", gesto)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /fumar [1-2]");
	switch(gesto){
		case 1: OnePlayAnim(playerid,"SMOKING","M_smk_in",4.0,0,0,0,0,0);
		case 2: LoopingAnim(playerid,"SMOKING","M_smklean_loop",4.0,1,0,0,0,0);
		default: return SendClientMessageEx(playerid, COLOR_GREY, "USA: /fumar [1-2]");
	}
	return 1;
}
CMD:herido(playerid, params[])
{
	new herido;
    if(Info[playerid][pEstado] != 0 || IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora !");
    if(sscanf(params, "d", herido)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /herido [1-4]");
    switch(herido)
	{
		case 1: LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
		case 2: LoopingAnim(playerid, "WUZI", "CS_Dead_Guy", 4.0, 1, 1, 1, 1, 1);
		case 3: LoopingAnim(playerid, "PED", "gas_cwr", 4.0, 1, 1, 1, 1, 1);
		case 4: LoopingAnim(playerid, "FINALE", "FIN_Cop1_Loop", 4.0, 1, 0, 0, 0, 0);
		default: return SendClientMessageEx(playerid, COLOR_GREY, "USA: /herido [1-4]");
    }
    return 1;
}
zcmd(paja, playerid, params[])
{
    if(GetPVarInt(playerid, "IsFrozen") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto porque estás congelado.");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid, "Injured") == 0)
	{
	    ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0,1,0,0,1,0);
  		return 1;
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora.");
}
zcmd(chora, playerid, params[]) { OnePlayAnim(playerid, "COP_AMBIENT", "Coplook_watch",4.0,0,0,0,0,0); return 1; }
zcmd(relax, playerid, params[]) { LoopingAnim(playerid, "CRACK", "crckidle1",4.0,0,1,1,1,-1); return 1; }
zcmd(crabs, playerid, params[]) { OnePlayAnim(playerid,"MISC","Scratchballs_01",4.0,0,0,0,0,0); return 1; }
zcmd(saludo2, playerid, params[]) { OnePlayAnim(playerid,"ON_LOOKERS","Pointup_loop",4.0,0,0,0,0,0); return 1; }
zcmd(stop, playerid, params[]) { OnePlayAnim(playerid,"PED","endchat_01",4.0,0,0,0,0,0); return 1; }
zcmd(lavarse, playerid, params[]) { OnePlayAnim(playerid,"BD_FIRE","wash_up",4.0,0,0,0,0,0); return 1; }
zcmd(llorar, playerid, params[]) { LoopingAnim(playerid,"GRAVEYARD","mrnF_loop",4.0,1,0,0,0,0); return 1; }
zcmd(sigueme, playerid, params[]) { ApplyAnimation(playerid,"WUZI","Wuzi_follow",4.0,0,0,0,0,0); return 1; }
zcmd(saludo, playerid, params[]) { ApplyAnimation(playerid,"WUZI","Wuzi_Greet_Wuzi",4.0,0,0,0,0,0); return 1; }
zcmd(quieto, playerid, params[]) { LoopingAnim(playerid,"WUZI","Wuzi_stand_loop", 4.0, 1, 0, 0, 0, 0); return 1; }
zcmd(enganche, playerid, params[]) { LoopingAnim(playerid,"MISC","Hiker_Pose", 4.0, 1, 0, 0, 0, 0); return 1; }
zcmd(palmaputa, playerid, params[]) { ApplyAnimation(playerid,"MISC","bitchslap",4.0,0,0,0,0,0); return 1; }
zcmd(cpr, playerid, params[]) { OnePlayAnim(playerid,"MEDIC","CPR",4.0,0,0,0,0,0); return 1; }
zcmd(darregalo, playerid, params[]) { ApplyAnimation(playerid,"KISSING","gift_give",4.0,0,0,0,0,0); return 1; }
zcmd(palmada, playerid, params[]) { ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.0,0,0,0,0,0); return 1; }
zcmd(borracho, playerid, params[]) { LoopingAnim(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1); return 1; }
zcmd(bomba, playerid, params[]) { ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0); return 1; }
zcmd(arobar, playerid, params[]) { LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, 0); return 1; }
zcmd(reir, playerid, params[]) { ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); return 1; }
zcmd(lookout, playerid, params[])  { ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); return 1; }
zcmd(robman, playerid, params[]) { LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); return 1; }
zcmd(esconder, playerid, params[]) { LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); return 1; }
zcmd(vomitar, playerid, params[]) { ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); return 1; }
zcmd(comer, playerid, params[]) { ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); return 1; }
zcmd(crack, playerid, params[]) { LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); return 1; }
zcmd(jodete, playerid, params[]) { ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0); return 1; }
zcmd(taichi, playerid, params[]) { LoopingAnim(playerid,"PARK","Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0); return 1; }
zcmd(beso, playerid, params[]) { ApplyAnimation(playerid,"KISSING","Playa_Kiss_01",4.0,0,0,0,0,0); return 1; }
zcmd(acciones, playerid, params[])
{
    SendClientMessageEx(playerid,COLOR_GENERAL,"Animaciones:");
    SendClientMessageEx(playerid,COLOR_WHITE,"/poli /rendirse /sentarse /sinaliento /asiento /bailar /rap /cruzar /ped /jiggy /rap /paja");
    SendClientMessageEx(playerid,COLOR_WHITE,"/gesto /fumar /sexo /orinar /chora /relax /crabs /saludo2 /stop /lavarse /llorar /pedo /eructo");
    SendClientMessageEx(playerid,COLOR_WHITE,"/sigueme /saludo /quieto /enganche /palmaputa /cpr /darregalo /palmada /borracho /bomba /herido");
    return SendClientMessageEx(playerid,COLOR_WHITE,"/arobar /reir /lookout /robman /esconder /vomitar /comer /crack /jodete /taichi /beso");
}
/*COMMAND:pedo(playerid, params[]) {  //By OTACON From Forum SAMP
    if(!IsPlayerConnected(playerid) || GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
    new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	DestroyObject(FlatulenciaTroll[playerid][0]);
	FlatulenciaTroll[playerid][0]=CreateObject(EfectoPedo, pos[0], pos[1], pos[2], 0.000, 0.000, 0.000);
	AttachObjectToPlayer(FlatulenciaTroll[playerid][0], playerid, 0.0, 0.0, -1.9, 0.0, 0.0, 180.0);
    PlayAudioStreamForPlayerEx(playerid, 8.0, "http://www.sonidosmp3gratis.com/sounds/los-frijoles_1.mp3");
    KillTimer(MatarFlatulencia[playerid][0]);
	MatarFlatulencia[playerid][0]=SetTimerEx("MatarFlatulencia_1", 1000, false, "d", playerid);
    return 1;
}
COMMAND:erupto(playerid, params[]) {  //By OTACON From Forum SAMP
    if(!IsPlayerConnected(playerid) || GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return true;
    new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	DestroyObject(FlatulenciaTroll[playerid][1]);
	FlatulenciaTroll[playerid][1]=CreateObject(EfectoEructo, pos[0], pos[1], pos[2], 0.000, 0.000, 0.000);
	AttachObjectToPlayer(FlatulenciaTroll[playerid][1], playerid, 0.0, 0.0, -0.9, 0.0, 0.0, 360.0);
	PlayAudioStreamForPlayerEx(playerid, 8.0, "http://www.sonidosmp3gratis.com/sounds/burp3.mp3");
	KillTimer(MatarFlatulencia[playerid][1]);
	MatarFlatulencia[playerid][1]=SetTimerEx("MatarFlatulencia_2", 1000, false, "d", playerid);
    return 1;
}
*/
CMD:apelear(playerid, params[])
{
    #pragma unused params
    if(PlayerToPoint(10, playerid, 767.6719,13.6320,1000.7010))
	{
        ShowPlayerDialog(playerid, FSTYLE_DIALOG, DIALOG_STYLE_LIST, " Que le gustaria aprender?", "Me gustaría aprender Knee Head\t 1500$\nMe gustaría aprender Kung Fu\t 1000$\nMe gustaría aprender Boxeo\t 800$", "Sí", "No");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No estas en el GYM !");
	return 1;
}
CMD:venderbebida(playerid, params[])
{
	if(Info[playerid][pJob] == 1 || Info[playerid][pJob2] == 1)
	{
		if(IsAtBar(playerid))
		{
			new giveplayerid;
			if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /venderbebida [playerid]");
			if(IsPlayerConnectedEx(giveplayerid))
			{
				if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes venderte a ti mismo.");
				if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
					DrinkOffer[giveplayerid] = playerid;
					format(szMessage, sizeof(szMessage), "* Bartender %s te ha ofrecido una bebida. /aceptar bebida para aceptar la bebida", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
					format(szMessage, sizeof(szMessage), "* Has ofrecído a %s una bebida.",GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está cerca tuyo");
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en un bar");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No eres Bartender!");
	return 1;
}
CMD:aceptar(playerid, params[])
{
    new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
    if(IsPlayerConnectedEx(playerid))
	{
        if(isnull(params))
		{
            SendClientMessageEx(playerid, COLOR_GREY, "USA: /aceptar [nombre]");
            SendClientMessageEx(playerid, COLOR_GREY, "Nombres: bebida - telefono - multa - materiales - matrimonio - coche");
            SendClientMessageEx(playerid, COLOR_GREY, "Nombres: taxi - mecanico - muerte - familia - fix - recarga - arma");
            return 1;
        }
        else if(strcmp(params,"taxi",true) == 0)
		{
            if(TaxiOnDuty[playerid] != 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en servicio para aceptar llamadas.");
            if(TaxiCallReady[playerid] >= 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya aceptaste una llamada!");
            if(TaxiCall >= 0)
			{
                if(IsPlayerConnected(TaxiCall))
				{
                    format(szMessage, sizeof(szMessage), "* Aceptaste la llamada de %s, puedes ir al marcador rojo para recogerlo.",GetPlayerNameEx(TaxiCall));
                    SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                    format(szMessage, sizeof(szMessage), "* Taxista %s aceptó tu llamada; por favor espera en tu posición actual.",GetPlayerNameEx(playerid));
                    SendClientMessageEx(TaxiCall, COLOR_GENERAL, szMessage);
                    GameTextForPlayer(playerid, "~n~~r~Ve al CheckPoint.", 5000, 1);
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(TaxiCall, X, Y, Z);
                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					TaxiCallReady[playerid] = TaxiCall;
                    TaxiCall = 999;
                }
                return 1;
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "* Nadie ha llamado a un taxista!");
        }
        if(strcmp(params,"muerte",true) == 0)
		{
   	    	if(GetPVarInt(playerid, "Injured") == 1)
			{
            	KillEMSQueue(playerid);
            	ResetPlayerWeaponsEx(playerid);
            	SetPVarInt(playerid, "Hospital", 1);
            	SendClientMessageEx(playerid, COLOR_WHITE, "Perdiste la esperanza y caiste inconsciente, se te envió de inmediato al hospital.");
            	SpawnPlayer(playerid);
        	}
        	else SendClientMessageEx(playerid, COLOR_GREY, "* No estás apunto de morir, no puedes hacer esto ahora!");
    	}
    	else if(strcmp(params,"familia",true) == 0)
		{
        	if(InviteOffer[playerid] < 999)
			{
            	if(IsPlayerConnectedEx(InviteOffer[playerid]))
				{
                	if(InviteFaction[playerid] == 0 && InviteFamily[playerid] != 255)
					{
                    	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Por favor primero sal del paintball arena.");

                        if(Info[playerid][pJailTime] > 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes ser invitado estando en prisión.");

                    	if( Info[playerid][pMember] >= 3 || Info[playerid][pFMember] != 255 || Info[playerid][pLeader] >= 3 || Info[playerid][pLeader] == 1 || Info[playerid][pMember] == 1 || Info[playerid][pMember] == 2 && Info[playerid][pDivision] >= 3 || Info[playerid][pMember] == 2 && Info[playerid][pDivision] == 1)
						{
                    	    return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes aceptar esta invitación, porque ya estás en una familia/facción.");
                    	}
                    	else
						{
                        	Info[playerid][pFMember] = InviteFamily[playerid];
                        	Info[playerid][pRank] = 1;
                        	fINFO[InviteFamily[playerid]][FamilyMembers] ++;
                        	saveFamilies();
                        	format(szMessage, sizeof(szMessage), "   Aceptaste unirte a %s, fuiste invitado por %s.", fINFO[InviteFamily[playerid]][FamilyName], GetPlayerNameEx(InviteOffer[playerid]));
                        	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                        	format(szMessage, sizeof(szMessage), "   %s aceptó la invitación para unirse a %s.", GetPlayerNameEx(playerid),fINFO[InviteFamily[playerid]][FamilyName]);
                        	SendClientMessageEx(InviteOffer[playerid], COLOR_GENERAL, szMessage);
           	             	SendClientMessageEx(playerid, COLOR_WHITE, "Usa (/f) para hablar por el chat de familias. /ayuda familia");
	                        InviteOffer[playerid] = 999;
	                        InviteFaction[playerid] = 0;
	                        InviteFamily[playerid] = 255;
	                    }
	                }
	            }
	        }
	        else return SendClientMessageEx(playerid, COLOR_GREY, "* Nadie te ha invitado a unirte a una familia!");
        }
        else if(strcmp(params,"fix",true) == 0)
		{
	        if(RepairOffer[playerid] < 999){
    	        if(GetPlayerCash(playerid) > RepairPrice[playerid]){
        	        if(IsPlayerInAnyVehicle(playerid)){
            	        if(IsPlayerConnectedEx(RepairOffer[playerid])){
            	            RepairCar[playerid] = GetPlayerVehicleID(playerid);

            	            RepairVehicle(RepairCar[playerid]);
            	            SetVehicleHealth(RepairCar[playerid], 1000.0);

                            GivePlayerCash(RepairOffer[playerid], RepairPrice[playerid]);
                            GivePlayerCash(playerid, -RepairPrice[playerid]);
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(RepairOffer[playerid], ipex, sizeof(ipex));
                            format(szMessage, sizeof(szMessage), "%s(IP:%s) has repaired the vehicle from %s(IP:%s) for $%d", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RepairOffer[playerid]), ipex, RepairPrice[playerid]);
                            Log("logs/pay.log", szMessage);
                            format(szMessage, sizeof(szMessage), "* %s repara el vehiculo de %s.", GetPlayerNameEx(RepairOffer[playerid]), GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            format(szMessage, sizeof(szMessage), "* Tu coche fue reparado por $%d, por el mecánico %s.",RepairPrice[playerid],GetPlayerNameEx(RepairOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);

                            format(szMessage, sizeof(szMessage), "* Reparaste el coche de %s, ganaste $%d!",GetPlayerNameEx(playerid),RepairPrice[playerid]);
                            SendClientMessageEx(RepairOffer[playerid], COLOR_GENERAL, szMessage);
                            RepairOffer[playerid] = 999;
                            RepairPrice[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    return 1;
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero para pagar esto!");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "* Nadie te ha ofrecido reparar tu vehiculo!");
        }
	    else if(strcmp(params, "saludo",true) == 0){
        	new Count;
	        foreach(Player, i){
               	if(GetPVarInt(i, "shrequest") == playerid){
                	new Float: ppFloats[3];
                	GetPlayerPos(i, ppFloats[0], ppFloats[1], ppFloats[2]);
                	if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2])){
 						Count++;
               	    	SendClientMessageEx(playerid, COLOR_WHITE, "Estás demasiado lejos. No puedes aceptar el saludo ahora.");
                	}
                	else
					{
                    	switch(GetPVarInt(i, "shstyle"))
						{
                        	case 1:
                        	{
                        	    Count++;
                        	    PlayerFacePlayer( playerid, i );
                        	    ApplyAnimation( playerid, "GANGS", "hndshkaa", 4.0, 1, 1, 1, 0, 1000,1);
                        	    ApplyAnimation( i, "GANGS", "hndshkaa", 4.0, 1, 1, 1, 0, 1000,1);
                        	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                        	    format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                        	    ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        	    DeletePVar(i, "shstyle");
                        	}
                       	 	case 2:
                        	{
                        	    Count++;
                        	    PlayerFacePlayer( playerid, i );
                        	    ApplyAnimation( playerid, "GANGS", "hndshkba", 4.0, 1, 1, 1, 0, 1000,1);
                        	    ApplyAnimation( i, "GANGS", "hndshkba", 4.0, 1, 1, 1, 0, 1000,1);
                        	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                        	    format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                        	    ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        	    DeletePVar(i, "shstyle");
                        	}
                        	case 3:
                        	{
                            	Count++;
                            	PlayerFacePlayer( playerid, i );
                            	ApplyAnimation( playerid, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                            	ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                            	SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	DeletePVar(i, "shstyle");
                        	}
                        	case 4:
                        	{
                            	Count++;
                            	PlayerFacePlayer( playerid, i );
                            	ApplyAnimation( playerid, "GANGS", "hndshkcb", 4.0, 1, 1, 1, 0, 1000,1);
                            	ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                            	SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	DeletePVar(i, "shstyle");
                        	}
                        	case 5:
                        	{
                       	    	Count++;
                        	   	PlayerFacePlayer( playerid, i );
                        	    ApplyAnimation( playerid, "GANGS", "hndshkda", 4.0, 1, 1, 1, 0, 1000,1);
                        	    ApplyAnimation( i, "GANGS", "hndshkca", 4.0, 1, 1, 1, 0, 1000,1);
                        	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                        	    format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                        	    ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        	    DeletePVar(i, "shstyle");
                        	}
                        	case 6:
                        	{
                        	    Count++;
                        	    PlayerFacePlayer( playerid, i );
                        	    ApplyAnimation( playerid, "GANGS","hndshkfa_swt", 4.0, 1, 1, 1, 0, 2600,1);
                        	    ApplyAnimation( i, "GANGS","hndshkfa_swt", 4.0, 1, 1, 1, 0, 2600,1);
                        	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                        	    format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                        	    ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        	    DeletePVar(i, "shstyle");
                        	}
                        	case 7:
                        	{
                        	    Count++;
                        	    PlayerFacePlayer( playerid, i );
                        	    ApplyAnimation( playerid, "GANGS", "prtial_hndshk_01", 4.0, 1, 1, 1, 0, 1250,1);
                        	    ApplyAnimation( i, "GANGS", "prtial_hndshk_01", 4.0, 1, 1, 1, 0, 1250,1);
                        	    SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                        	    format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                        	    ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        	    DeletePVar(i, "shstyle");
                        	}
                        	case 8:
                        	{
                            	Count++;
                            	PlayerFacePlayer( playerid, i );
                            	ApplyAnimation( playerid, "GANGS", "prtial_hndshk_biz_01", 3.7, 1, 1, 1, 0, 2200,1);
                            	ApplyAnimation( i, "GANGS", "prtial_hndshk_biz_01", 3.5, 1, 1, 1, 0, 2200,1);
                            	SetPVarInt(i, "shrequest", INVALID_PLAYER_ID);
                            	format(szMessage, sizeof(szMessage), "* %s se saluda con %s.", GetPlayerNameEx(i), GetPlayerNameEx(playerid));
                            	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            	DeletePVar(i, "shstyle");
                        	}
                    	}
                	}
            	}
        	}
    	    if(Count == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Nadie te ha saludado.");
	        return 1;
        }
        else if(strcmp(params,"entrevista",true) == 0)
		{
            if(LiveOffer[playerid] < 999)
			{
                if(IsPlayerConnectedEx(LiveOffer[playerid]))
				{
                    if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
					{
                        SendClientMessageEx(playerid, COLOR_GENERAL, "* Estarás congelado hasta que termine la entrevista.");
                        SendClientMessageEx(LiveOffer[playerid], COLOR_GENERAL, "* Estás congelado hasta que termine la entrevista. (usa /live again).");
                        //TogglePlayerControllable(playerid, 0);
                        //TogglePlayerControllable(LiveOffer[playerid], 0);
                        TalkingLive[playerid] = LiveOffer[playerid];
                        TalkingLive[LiveOffer[playerid]] = playerid;
                        LiveOffer[playerid] = 999;
                        return 1;
                    }
                    else return SendClientMessageEx(playerid, COLOR_GREY, "Estás lejos del reportero!");
                }
                return 1;
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "Nadie te ha invitado a una entrevista!");
        }
        else if(strcmp(params,"recarga",true) == 0){
	        if(RefillOffer[playerid] < 499){
    	        if(GetPlayerCash(playerid) > RefillPrice[playerid]){
        	        if(IsPlayerInAnyVehicle(playerid)){
            	        if(IsPlayerConnectedEx(RefillOffer[playerid])){
                        	new vehicleid = GetPlayerVehicleID(playerid);
                        	VehicleFuel[vehicleid] = 500;
                        	if(VehicleFuel[vehicleid] > 500) VehicleFuel[vehicleid] = 500;
                        	GivePlayerCash(RefillOffer[playerid], RefillPrice[playerid]);
                        	GivePlayerCash(playerid, -RefillPrice[playerid]);
                        	new ip[32], ipex[32];
                        	GetPlayerIp(playerid, ip, sizeof(ip));
                        	GetPlayerIp(RefillOffer[playerid], ipex, sizeof(ipex));
                        	format(szMessage, sizeof(szMessage), "%s(IP:%s) has refilled the vehicle from %s(IP:%s) for $%d", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RefillOffer[playerid]), ipex, RefillPrice[playerid]);
                        	Log("logs/pay.log", szMessage);

                        	format(szMessage, sizeof(szMessage), "* %s llenó el tanque del vehículo de %s.", GetPlayerNameEx(RefillOffer[playerid]), GetPlayerNameEx(playerid));
                        	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

                        	format(szMessage, sizeof(szMessage), "* Tu vehiculo fue llenado por $%d por el mecánico %s.",RefillPrice[playerid],GetPlayerNameEx(RefillOffer[playerid]));
                        	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);

                        	format(szMessage, sizeof(szMessage), "* Llenaste el tanque del vehículo de %s por $%d!", GetPlayerNameEx(playerid),RefillPrice[playerid]);
                        	SendClientMessageEx(RefillOffer[playerid], COLOR_GENERAL, szMessage);
                            RefillOffer[playerid] = 499;
                            RefillPrice[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    return 1;
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes pagar !");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha ofrecido llenar el tanque de tu coche!");
		}
    	else if(strcmp(params,"medico",true) == 0) {
        	if(Info[playerid][pMember] == 4 || Info[playerid][pLeader] == 4){
            	if(MedicCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ya aceptaste una llamada!");
            	if(GetPVarInt(playerid, "Packages") >= 1 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1){
                	SendClientMessageEx(playerid, COLOR_WHITE, "Asegurate de que no hay ningún checkpoint activado en este momento.");
                	return 1;
            	}
            	if(MedicCall < 999){
                	if(IsPlayerConnectedEx(MedicCall))
					{
                    	format(szMessage, sizeof(szMessage), "* Aceptaste una llamada de %s",GetPlayerNameEx(MedicCall));
                    	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                    	SendClientMessageEx(playerid, COLOR_GENERAL, "* Después de 45 segundos en checkpoint desaparecerá.");
                    	format(szMessage, sizeof(szMessage), "* Médico %s aceptó tu llamada espera en tu actual posición.",GetPlayerNameEx(playerid));
                    	SendClientMessageEx(MedicCall, COLOR_GENERAL, szMessage);
                    	new Float:X,Float:Y,Float:Z;
                    	GetPlayerPos(MedicCall, X, Y, Z);
                    	SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                    	new zone[MAX_ZONE_NAME];
                    	GetPlayer3DZone(MedicCall, zone, sizeof(zone));
                    	format(szMessage, sizeof(szMessage), "HINT: %s fue localizado en %s", GetPlayerNameEx(MedicCall), zone);
                    	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
                    	MedicCallTime[playerid] = 1;
                    	MedicAccepted[playerid] = MedicCall;
                    	MedicCall = 999;
                    	return 1;
                	}
                	return 1;
            	}
            	else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie a llamado un médico!");
        	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "   No eres un médico!");
    	}
        if(strcmp(params,"casa",true) == 0){
            if(HouseOffer[playerid] < 999){
                if(IsPlayerConnectedEx(HouseOffer[playerid])){
                    if(Info[HouseOffer[playerid]][pPhousekey] == INVALID_HOUSE_ID){
                        SendClientMessageEx(playerid, COLOR_WHITE, "Ese jugador no tiene ninguna casa.");
                        return 1;
                    }
                    if(GetPlayerCash(playerid) > HousePrice[playerid])
					{
                        new house;
                        if(House[playerid] == 1) house = Info[HouseOffer[playerid]][pPhousekey];
                        else return SendClientMessageEx(playerid, COLOR_RED, "Error: Casa no especificada.");
                        ClearHouse(house);
                        HouseInfo[house][hLock] = 1;
                        format( HouseInfo[house][hOwner], 128, "Nobody" );
                        sendername = GetPlayerNameEx(HouseOffer[playerid]);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(szMessage, sizeof(szMessage), "~w~Felicitaciones~n~ Has vendido tu propiedad por ~n~~g~$%d", HousePrice[playerid]);
                        GameTextForPlayer(HouseOffer[playerid], szMessage, 4000, 3);
                        if(House[playerid] == 1) Info[HouseOffer[playerid]][pPhousekey] = INVALID_HOUSE_ID;
                        saveHouse(house);
                        OnPlayerUpdate(HouseOffer[playerid]);
                        DestroyDynamicPickup(HouseInfo[house][hPickupID]);
                        HouseInfo[house][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
                        GivePlayerCash(HouseOffer[playerid],HousePrice[playerid]);

                        Info[playerid][pPhousekey] = house;
                        HouseInfo[house][hOwned] = 1;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(HouseInfo[house][hOwner], sendername, 0, strlen(sendername), 255);
                        GivePlayerCash(playerid,-HousePrice[playerid]);
                        SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones por tu nueva compra!");
                        SendClientMessageEx(playerid, COLOR_WHITE, "Usa /ayuda casa para ver los comandos disponibles.");
                        saveHouse(house);
                        OnPlayerUpdate(playerid);
                        DestroyDynamicPickup(HouseInfo[house][hPickupID]);
                        HouseInfo[house][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
                        format(szMessage, sizeof(szMessage), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[house][hOwner],HouseInfo[house][hLevel],house);
                        UpdateDynamic3DTextLabelText(HouseInfo[house][hTextID], -1, szMessage);
                        new ip[32], ipex[32];
                        GetPlayerIp(HouseOffer[playerid],ip,sizeof(ip));
                        GetPlayerIp(playerid,ipex,sizeof(ipex));
                        format(szMessage,sizeof(szMessage),"%s (IP: %s) has sold their house (ID %d) to %s (IP: %s) for $%d.",GetPlayerNameEx(HouseOffer[playerid]),ip,house,GetPlayerNameEx(playerid),ipex,HousePrice[playerid]);
                        Log("logs/house.log", szMessage);

                        HouseOffer[playerid] = 999;
                        HousePrice[playerid] = 0;
                        House[playerid] = 0;
                    }
                    else{
                        SendClientMessageEx(playerid, COLOR_GREY, "No puedes pagar esta casa!");
                        HouseOffer[playerid] = 999;
                        HousePrice[playerid] = 0;
                        House[playerid] = 0;
                        return 1;
                    }
                }
                return 1;
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te a ofrecido una casa!");
        }
        else if(strcmp(params,"mecanico",true) == 0){
            if(Team_Mecanicos(playerid)){
			if(MechanicCallTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ya aceptaste una llamada");
            if(GetPVarInt(playerid, "Packages") >= 1 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor primero termina de llegar al otro checkpoint (Estás en una llamada o algo que activó un marcador rojo.");
            if(MechanicCall < 999)
			{
                if(IsPlayerConnectedEx(MechanicCall))
				{
                    if(playerid == MechanicCall) return 1;
                    format(szMessage, sizeof(szMessage), "* Aceptaste la llamada de %s, tienes 60 segundos para ir allá.",GetPlayerNameEx(MechanicCall));
                    SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                    SendClientMessageEx(playerid, COLOR_GENERAL, "* Después de 60 Segundos el marcador rojo desaparecerá.");
                    format(szMessage, sizeof(szMessage), "* Mecánico %s aceptó tu llamada por favor, espera en tu posición actual.",GetPlayerNameEx(playerid));
                    SendClientMessageEx(MechanicCall, COLOR_GENERAL, szMessage);
					format(szMessage, sizeof(szMessage), "** %s aceptó la llamada reciente de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(MechanicCall));
					SendFamilyMessage(6, TEAM_AZTECAS_COLOR, szMessage);
					new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(MechanicCall, X, Y, Z);
                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                    GameTextForPlayer(playerid, "~r~Ve al Marcador rojo", 5000, 1);
	                MechanicCallTime[playerid] = 1;
                	MechanicCall = 999;
                	return 1;
            	}
            	return 1;
        	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie a llamado un mecanico!");
        	}
    	}
        if(strcmp(params,"bebida",true) == 0){
			if((DrinkOffer[playerid] != INVALID_PLAYER_ID) && (IsPlayerConnectedEx(DrinkOffer[playerid]))){
                if (ProxDetectorS(8.0, playerid, DrinkOffer[playerid])){
                    ShowPlayerDialog(playerid, DRINKLISTDIALOG, DIALOG_STYLE_LIST, "Bebidas", "Cerveza ($60)\nVodka ($100)\nWhiskey ($100)\nAgua ($20)\nGaseosa($20)", "Comprar", "Cancelar");
                }
                else{
                    SendClientMessageEx(playerid, COLOR_GREY, " Estás lejos del bartender.");
                    DrinkOffer[playerid] = INVALID_PLAYER_ID;
                    return 1;
                }
            	return 1;
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, " Nadie te ha ofrecido una bebida.");
	    }
        if(strcmp(params,"telefono",true) == 0){
            if(NumBuy[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
            if(NumPrice[playerid] > GetPlayerCash(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No tienes suficiente dinero!");
            format(szMessage, sizeof(szMessage), "* %s compra un número de teléfono", GetPlayerNameEx(playerid));
            ProxDetector(30.0,playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
            Info[playerid][pPnumber] = NumBuy[playerid];
            Earn(NumSeller[playerid], NumPrice[playerid]);
            Bought(playerid, NumPrice[playerid]);
            NumBuy[playerid] = 0;
            NumPrice[playerid] = 0;
            NumSeller[playerid] = 0;
            Facturing[playerid] = 0;
        }
		else if(strcmp(params,"multa",true) == 0){
		    if(TicketOffer[playerid] == 999) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Nadie te multado!");
		    format(szMessage, sizeof(szMessage), "* %s paga una multa", GetPlayerNameEx(playerid));
			ProxDetector(30.0,playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			format(szMessage, sizeof(szMessage), " %s pagó una multa de %d$.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
			SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
			SendClientMessageEx(TicketOffer[playerid], COLOR_GENERAL, szMessage);
			Bought(playerid, TicketMoney[playerid]);
			Tax += TicketMoney[playerid];
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			Facturing[playerid] = 0;
		}
        else if(strcmp(params,"matrimonio",true) == 0) {
            if(ProposeOffer[playerid] < 999) {
                if(IsPlayerConnectedEx(ProposeOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) {
                        if(MarryWitness[ProposeOffer[playerid]] == 999) return SendClientMessageEx(playerid, COLOR_GREY, "   El proponente no tiene un testigo de matrimonio!");
                        if(IsPlayerConnectedEx(MarryWitness[ProposeOffer[playerid]])) {
                            if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]])) {
                                if(!IsPlayerInRangeOfPoint(playerid, 1.0, 1963.9612, -369.1851, 1093.7289))
								{
	                                format(szMessage, sizeof(szMessage), "* Aceptaste la petición de matrimonio a %s.", GetPlayerNameEx(ProposeOffer[playerid]));
    	                            SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
   	                             	format(szMessage, sizeof(szMessage), "* %s ha aceptado la solicitud de ser tu esposa", GetPlayerNameEx(playerid));
                                	SendClientMessageEx(ProposeOffer[playerid], COLOR_GENERAL, szMessage);
                                	format(szMessage, sizeof(szMessage), "Sacerdote: %s, aceptas a %s como tu marido por siempre? (Escribe 'si', que otro caracter arruinará el matrimonio.)", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposeOffer[playerid]));
                                	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
                                	MarriageCeremoney[playerid] = 1;
                                	ProposedTo[ProposeOffer[playerid]] = playerid;
                                	GotProposedBy[playerid] = ProposeOffer[playerid];
                                	MarryWitness[ProposeOffer[playerid]] = 999;
                                	ProposeOffer[playerid] = 999;
                                	return 1;
                            	}
                            	else return SendClientMessageEx(playerid, COLOR_GREY, "   No estás en la iglesia!");
                        	}
                        	else return SendClientMessageEx(playerid, COLOR_GREY, "   El testigo del matrimonio no está cerca de su proponente!");
                    	}
                    	return 1;
                	}
                	else return SendClientMessageEx(playerid, COLOR_GREY, "   El jugador que propuso no está cerca de ti!");
            	}
        	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha propuesto matrimonio!");
    	}
    	if(strcmp(params,"coche",true) == 0) {
        	if(VehicleOffer[playerid] < 999) {
            	if(IsPlayerConnectedEx(VehicleOffer[playerid])) {
                	if(GetPlayerCash(playerid) > VehiclePrice[playerid]) {
                    	if(IsPlayerInVehicle(VehicleOffer[playerid], PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]))
						{
                        	if(!ProxDetectorS(8.0, VehicleOffer[playerid], playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás cerca del que te va a vender");
                        	new playervehicleid = GetPlayerFreeVehicleId(playerid);
                        	new carsamount = VehicleCount(playerid);
                        	if(Info[playerid][pVIP] == 0 && carsamount >= 2) return SendClientMessageEx(playerid, COLOR_GREY, "ERROR: No puedes tener más coches, usuarios normales sólo pueden tener 2 coches.");
                        	if(Info[playerid][pVIP] == 1 && carsamount >= 5) return SendClientMessageEx(playerid, COLOR_GREY, "ERROR: No puedes tener más coches, SVIP Sólo puede tener 5 coches.");
                        	if(Info[playerid][pVIP] == 2 && carsamount >= 8) return SendClientMessageEx(playerid, COLOR_GREY, "ERROR: No puedes tener más coches, GVIP Sólo puede tener 8 coches.");
							if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_GREY, "ERROR: No puedes tener más autos.");
                        	new ip[32], ipex[32];
                        	GetPlayerIp(playerid, ip, sizeof(ip));
                        	GetPlayerIp(VehicleOffer[playerid], ipex, sizeof(ipex));
                        	format(szMessage, sizeof(szMessage), "[CAR] %s (IP: %s) pagó $%d a %s por el %s (IP: %s)", GetPlayerNameEx(playerid), ip, VehiclePrice[playerid], GetPlayerNameEx(VehicleOffer[playerid]), GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), ipex);
                        	Log("logs/pay.log", szMessage);
                        	GetPlayerName(VehicleOffer[playerid], giveplayer, sizeof(giveplayer));
                        	GetPlayerName(playerid, sendername, sizeof(sendername));
                        	format(szMessage, sizeof(szMessage), "* Has pagado por un %s, $%d, de %s. (Usa /ayuda coche para más información)", GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), VehiclePrice[playerid],giveplayer);
                        	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                        	format(szMessage, sizeof(szMessage), "* Vendiste tu %s a %s por $%d.",GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), sendername,VehiclePrice[playerid]);
                        	SendClientMessageEx(VehicleOffer[playerid], COLOR_GENERAL, szMessage);
                        	GivePlayerCash( VehicleOffer[playerid], VehiclePrice[playerid] );
                        	GivePlayerCash(playerid, -VehiclePrice[playerid]);
                        	RemovePlayerFromVehicle(VehicleOffer[playerid]);
                        	new Float:slx, Float:sly, Float:slz;
                        	GetPlayerPos(VehicleOffer[playerid], slx, sly, slz);
                        	SetPlayerPos(VehicleOffer[playerid], slx, sly, slz+2);
                        	PlayerVehicleInfo[playerid][playervehicleid][pvId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle];
                            PlayerVehicleInfo[playerid][playervehicleid][pvVW] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvVW];
							PlayerVehicleInfo[playerid][playervehicleid][pvLock] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvLocked] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvStereo] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvStereo];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2];
                        	strmid(PlayerVehicleInfo[playerid][playervehicleid][pvAllowPlayer], PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowPlayer], 0, strlen(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowPlayer]), 255);
                        	PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedPlayerId];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPark] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = VehiclePrice[playerid];
                        	PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
                        	carsforplayer[playerid]++;
                        	for(new m = 0; m < MAX_MODS; m++){
                        	    PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m];
                        	}
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId] = 0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId] = 0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX] = 0.0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY] = 0.0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ] = 0.0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvVW] = 0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock] = 0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked] = 0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvStereo] = 0;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob] = -1;
                        	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvImpounded] = 0;
           	             	PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2] = 0;
         	             	strmid(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowPlayer], "Nadie", 0, strlen("Nadie"), 255);
            	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedPlayerId] = INVALID_PLAYER_ID;
            	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark] = 0;
            	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPrice] = 0;
            	            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvSpawned] = 0;
            	            carsforplayer[VehicleOffer[playerid]]++;
            	            for(new m = 0; m < MAX_MODS; m++) {
            	                PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m] = 0;
            	            }
            	            VehicleOffer[playerid] = 999;
            	            VehiclePrice[playerid] = 0;
            	            return 1;
            	        }
            	        else return SendClientMessageEx(playerid, COLOR_GREY, "   El que te va a vender no está en el coche.");
            	    }
            	    else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes pagar este coche!");
            	}
            	return 1;
        	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha ofrecido un coche!");
    	}
		else if(strcmp(params,"crack",true) == 0){
            if(CrackOffer[playerid] < 999){
                if(GetPlayerCash(playerid) > CrackPrice[playerid]){
                    if(Info[playerid][pCrack] < 60){
                        if(IsPlayerConnectedEx(CrackOffer[playerid])){
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(CrackOffer[playerid], ipex, sizeof(ipex));
                            format(szMessage, sizeof(szMessage), "[CRACK DEAL (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", CrackGram[playerid], GetPlayerNameEx(playerid), ip, CrackPrice[playerid], GetPlayerNameEx(CrackOffer[playerid]), ipex);
                            Log("logs/pay.log", szMessage);

                            GivePlayerCash(playerid, -CrackPrice[playerid]);
                            GivePlayerCash(CrackOffer[playerid], CrackPrice[playerid]);
                            format(szMessage, sizeof(szMessage), "* Le compraste %d gramos por $%d al vendedor %s.",CrackGram[playerid],CrackPrice[playerid],GetPlayerNameEx(CrackOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s ha comprado %d gramos, ganaste $%d.",GetPlayerNameEx(playerid),CrackGram[playerid],CrackPrice[playerid]);
                            SendClientMessageEx(CrackOffer[playerid], COLOR_GENERAL, szMessage);
                            Info[playerid][pCrack] += CrackGram[playerid];
                            Info[CrackOffer[playerid]][pCrack] -= CrackGram[playerid];
                            //Info[CrackOffer[playerid]][pDrugsSkill] ++;
        					if(Info[CrackOffer[playerid]][pDobleExp] == 0)
							{
          						Info[CrackOffer[playerid]][pDrugsSkill]++;
							}
							else
							{
								Info[CrackOffer[playerid]][pDrugsSkill] += 2;
								SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
							}
        	                if(Info[CrackOffer[playerid]][pDrugsSkill] == 50)
        	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 2, puedes comprar más gramos y más barato."); }
        	                else if(Info[CrackOffer[playerid]][pDrugsSkill] == 100)
        	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 3, puedes comprar más gramos y más barato."); }
        	                else if(Info[CrackOffer[playerid]][pDrugsSkill] == 200)
        	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 4, puedes comprar más gramos y más barato."); }
        	                else if(Info[CrackOffer[playerid]][pDrugsSkill] == 400)
        	                { SendClientMessageEx(CrackOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 5, puedes comprar más gramos y más barato."); }
							CrackOffer[playerid] = 999;
                            CrackPrice[playerid] = 0;
                            CrackGram[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    else return SendClientMessageEx(playerid, COLOR_GREY, "   Estás muy cargado de droga!");
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes pagar esa cantidad!");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha ofrecido droga!");
        }
        else if(strcmp(params,"hierba",true) == 0) {
            if(PotOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > PotPrice[playerid]) {
                    if(Info[playerid][pPot] < 25) {
                        if(IsPlayerConnectedEx(PotOffer[playerid])) {
							if(Info[PotOffer[playerid]][pPot] < PotGram[playerid])
							{
						    	SendClientMessageEx(playerid,COLOR_GREY, "Ese jugador no tiene esa cantidad de hierba!");
						    	return 1;
							}
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(PotOffer[playerid], ipex, sizeof(ipex));
                            format(szMessage, sizeof(szMessage), "[HIERBA (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", PotGram[playerid], GetPlayerNameEx(playerid), ip, PotPrice[playerid], GetPlayerNameEx(PotOffer[playerid]), ipex);
                            Log("logs/pay.log", szMessage);
        	                format(szMessage, sizeof(szMessage), "* Le Compraste %d gramos por $%d a %s.",PotGram[playerid],PotPrice[playerid],GetPlayerNameEx(PotOffer[playerid]));
        	                SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
        	                format(szMessage, sizeof(szMessage), "* %s te compro %d gramos, ganaste $%d.",GetPlayerNameEx(playerid),PotGram[playerid],PotPrice[playerid]);
        	                SendClientMessageEx(PotOffer[playerid], COLOR_GENERAL, szMessage);
        	                SetPVarInt(PotOffer[playerid], "Cash", GetPVarInt(PotOffer[playerid], "Cash")+PotPrice[playerid]);
							if(Info[PotOffer[playerid]][pDobleExp] == 0)
							{
          						Info[PotOffer[playerid]][pDrugsSkill]++;
							}
							else
							{
								Info[PotOffer[playerid]][pDrugsSkill] += 2;
								SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
							}
        	                GivePlayerCash(playerid, -PotPrice[playerid]);
        	                Info[playerid][pPot] += PotGram[playerid];
        	                Info[PotOffer[playerid]][pPot] -= PotGram[playerid];
        	                if(Info[PotOffer[playerid]][pDrugsSkill] == 50)
        	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 2, puedes comprar más gramos y más barato."); }
        	                else if(Info[PotOffer[playerid]][pDrugsSkill] == 100)
        	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 3, puedes comprar más gramos y más barato."); }
        	                else if(Info[PotOffer[playerid]][pDrugsSkill] == 200)
        	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 4, puedes comprar más gramos y más barato."); }
        	                else if(Info[PotOffer[playerid]][pDrugsSkill] == 400)
        	                { SendClientMessageEx(PotOffer[playerid], COLOR_YELLOW, "* Tu nivel de Vendedor de Drogas es de nivel 5, puedes comprar más gramos y más barato."); }
        	                PotOffer[playerid] = 999;
        	                PotPrice[playerid] = 0;
        	                PotGram[playerid] = 0;
        	                return 1;
        	            }
        	            return 1;
        	        }
        	        else return SendClientMessageEx(playerid, COLOR_GREY, "   Estás totalmente cargado con hierba, utilízala primero!");
        	    }
        	    else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes pagar estos gramos de hierba!");
        	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "  Nadie te ha ofrecido hierba!");
   	 	}
        else if(strcmp(params,"bodyguard",true) == 0) {
            if(GuardOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > GuardPrice[playerid]) {
                    if(IsPlayerConnectedEx(GuardOffer[playerid]))
					{
                        if(ProxDetectorS(6.0, playerid, GuardOffer[playerid])) {
                            new Float:armour;
                            GetPlayerArmour(playerid, armour);
                            if(armour >= 50) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes un chaleco!");
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(GuardOffer[playerid], ipex, sizeof(ipex));
                            format(szMessage, sizeof(szMessage), "[BODYGUARD] %s (IP:%s) has paid $%d to %s (IP:%s)", GetPlayerNameEx(playerid), ip, GuardPrice[playerid], GetPlayerNameEx(GuardOffer[playerid]), ipex);
                            Log("logs/pay.log", szMessage);
                            SetPlayerArmour(playerid, 50);
                            format(szMessage, sizeof(szMessage), "* Aceptaste la protección por $%d de %s.",GuardPrice[playerid],GetPlayerNameEx(GuardOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s acepto tu protección, y te pagó $%d.",GetPlayerNameEx(playerid),GuardPrice[playerid]);
                            SendClientMessageEx(GuardOffer[playerid], COLOR_GENERAL, szMessage);
                            GivePlayerCash(GuardOffer[playerid], GuardPrice[playerid]);
                            GivePlayerCash(playerid, -GuardPrice[playerid]);
                            GuardOffer[playerid] = 999;
                            GuardPrice[playerid] = 0;
                            return 1;
                        }
                        else return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás cerca de la persona que te va a vender!");
                    }
                    return 1;
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes pagar esta protección!");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha ofrecido nada!");
        }
        else if(strcmp(params,"spray",true) == 0){
            if(SprayOffer[playerid] < 999){
                if(GetPlayerCash(playerid) >= SprayPrice[playerid]){
                    if(Info[playerid][pLevel] >= 1){
                        if(IsPlayerConnectedEx(SprayOffer[playerid])){
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(SprayOffer[playerid], ipex, sizeof(ipex));
                            format(szMessage, sizeof(szMessage), "[SPRAY DEAL (%d HIERBAS)] %s (IP:%s) has paid $%d to %s (IP:%s)", SprayGram[playerid], GetPlayerNameEx(playerid), ip, SprayPrice[playerid], GetPlayerNameEx(SprayOffer[playerid]), ipex);
                            Log("logs/pay.log", szMessage);

                            GivePlayerCash(playerid, -SprayPrice[playerid]);
                            GivePlayerCash(SprayOffer[playerid], SprayPrice[playerid]);
                            format(szMessage, sizeof(szMessage), "* Le compraste %d potes por $%d al vendedor %s. (Puedes usar /colorcoche y /paintcoche para pintar tu coche.",SprayGram[playerid],SprayPrice[playerid],GetPlayerNameEx(SprayOffer[playerid]));
                            SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                            format(szMessage, sizeof(szMessage), "* %s ha comprado %d potes, ganaste $%d.",GetPlayerNameEx(playerid),SprayGram[playerid],SprayPrice[playerid]);
                            SendClientMessageEx(SprayOffer[playerid], COLOR_GENERAL, szMessage);
                            Info[playerid][pSpraycan] += SprayGram[playerid];
							SprayOffer[playerid] = 999;
                            SprayPrice[playerid] = 0;
                            SprayGram[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes hacer esto!");
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes pagar esa cantidad!");
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha ofrecido sprays!");
        }
		else if(strcmp(params, "arma", true) == 0) {

			new
				playerOffering = GetPVarInt(playerid,"gunID"),
				weaponOffering = GetPVarInt(GetPVarInt(playerid,"gunID"),"gun"),
				slotOffering = GetPVarInt(GetPVarInt(playerid,"gunID"),"slot"),
				wstring[128];

	   		if(weaponOffering != 0 && slotOffering != 0) {
				if(ProxDetectorS(6.0, playerid, playerOffering) && !IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(playerOffering)) {
					if(Info[playerOffering][pEstado]!=0) {
						return SendClientMessage(playerid, COLOR_GREY, "El jugador que quiere venderte está tazeado, esposado o congelado.");
					}
					else if(Info[playerid][pEstado]!=0) {
						return SendClientMessage(playerid, COLOR_GREY, "No puedes hacer esto mientras estas tazeado, esposado o congelado.");
					}
					else {
						RemovePlayerWeapon(playerOffering, weaponOffering);
						GivePlayerValidWeapon(playerid, weaponOffering);
						format(wstring, sizeof(wstring), "Aceptas el %s de %s.", WeaponNames[weaponOffering], GetPlayerNameEx(playerOffering));
						SendClientMessage(playerid, COLOR_WHITE, wstring);
						format(wstring, sizeof(wstring), "%s aceptó tu %s que le ofreciste.", GetPlayerNameEx(playerid), WeaponNames[weaponOffering]);
						SendClientMessage(playerOffering, COLOR_WHITE, wstring);
						format(wstring, sizeof(wstring), "* %s le da su %s a %s.", GetPlayerNameEx(playerOffering), WeaponNames[weaponOffering], GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, wstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						DeletePVar(playerOffering,"gun");
						DeletePVar(playerid,"gunID");
						DeletePVar(playerOffering,"slot");
						SetPVarInt(playerid,"Dandoarma",0);
					}
		    	}
		    	else SendClientMessage(playerid, COLOR_GREY, "Estás muy lejos de la persona o está en un vehículo.");
		    }
	    	else SendClientMessage(playerid, COLOR_GREY, "Nadie te ha ofrecido un arma.");
		}
        else if(strcmp(params,"objeto",true) == 0)
		{
		    if(CraftOffer[playerid] < 999)
			{
				if(IsPlayerConnectedEx(CraftOffer[playerid]))
				{
				    if (ProxDetectorS(5.0, playerid, CraftOffer[playerid]))
				    {
                    	new weaponname[50];
                    	format(weaponname, 50, "%s", CraftName[playerid]);
                    	switch(CraftId[playerid])
						{
							case 1:
							{
								Info[playerid][pScrewdriver]++;
								return SendClientMessageEx(playerid, COLOR_GENERAL, "/creararma");
							}
							case 2:
							{
								Info[playerid][pSurveillance]++;
								return SendClientMessageEx(playerid, COLOR_GENERAL, "/ponercam /quitarcam /vercam");
							}
							case 3:
							{
								Info[playerid][pFirstaid]++;
								return SendClientMessageEx(playerid, COLOR_GENERAL, "/hpsave");
							}
							case 4:
							{
								return GivePlayerValidWeapon(playerid, 46);
							}
						}
                    	Info[CraftOffer[playerid]][pMats] -= CraftMats[playerid];
                    	Info[CraftOffer[playerid]][pArmsSkill]++;
                    	format(szMessage, sizeof(szMessage), "Le diste a %s una %s.", GetPlayerNameEx(playerid),weaponname);
                    	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    	SendClientMessageEx(CraftOffer[playerid], COLOR_GRAD1, szMessage);
                    	format(szMessage, sizeof(szMessage), "Recibiste una %s de %s.", weaponname, GetPlayerNameEx(CraftOffer[playerid]));
                    	SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
                    	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                    	format(szMessage, sizeof(szMessage), "* %s crea algo de materiales, y se lo da a %s.", GetPlayerNameEx(CraftOffer[playerid]), GetPlayerNameEx(playerid));
                    	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    	CraftOffer[playerid] = 999;
                    	CraftId[playerid] = 0;
                    	CraftMats[playerid] = 0;
				    }
               		else return SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas estar cerca de la persona para aceptar el objeto!");
				}
				return 1;
			}
			return 1;
		}
        else if(strcmp(params,"testigo",true) == 0) {
            if(MarryWitnessOffer[playerid] < 999) {
                if(IsPlayerConnectedEx(MarryWitnessOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid])){
                        format(szMessage, sizeof(szMessage), "* Aceptaste la solicitud de %s, para ser tu testigo de matrimonio.", GetPlayerNameEx(MarryWitnessOffer[playerid]));
                        SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                        format(szMessage, sizeof(szMessage), "* %s aceptó tu solicitud para ser tu testigo de matrimonio.", GetPlayerNameEx(playerid));
                        SendClientMessageEx(MarryWitnessOffer[playerid], COLOR_GENERAL, szMessage);
                        MarryWitness[MarryWitnessOffer[playerid]] = playerid;
                        MarryWitnessOffer[playerid] = 999;
                        return 1;
                    }
                    else return SendClientMessageEx(playerid, COLOR_GREY, "   El jugador que te ha pedido que seas su testigo de matrimonio no está cerca de ti!");
                }
                return 1;
	        }
	        else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te pidió ser testigo de matrimonio!");
	    }
        else if(strcmp(params,"divorcio",true) == 0){
            if(DivorceOffer[playerid] < 999){
                if(IsPlayerConnectedEx(DivorceOffer[playerid])){
                    if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid])){
                        format(szMessage, sizeof(szMessage), "* Firmaste los papeles del divorcio de %s, ahora estás solo(a) de nuevo.", GetPlayerNameEx(DivorceOffer[playerid]));
                        SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                        format(szMessage, sizeof(szMessage), "* %s firmó los papeles del divorcio, ahora estás solo(a) de nuevo.", GetPlayerNameEx(playerid));
                        SendClientMessageEx(DivorceOffer[playerid], COLOR_GENERAL, szMessage);
                        ClearMarriage(playerid);
                        ClearMarriage(DivorceOffer[playerid]);
                        Info[playerid][pPhousekey] = 999;
                        return 1;
                    }
                    else return SendClientMessageEx(playerid, COLOR_GREY, "   El jugador que te propuso el divorcio no está cerca tuyo!");
            	}
            	return 1;
        	}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "Nadie te propuso el divorcio.");
    	}
		else if(strcmp(params,"materiales",true) == 0){
            if(MatsOffer[playerid] < 999){
                if(GetPlayerCash(playerid) >= MatsPrice[playerid]){
					if(IsPlayerConnectedEx(MatsOffer[playerid])){
						if(Info[MatsOffer[playerid]][pMats] < MatsAmount[playerid]) return SendClientMessageEx(playerid,COLOR_GREY, "No tiene los materiales suficientes.");

         				format(szMessage, sizeof(szMessage), "* Compraste %d materiales por $%d, de  %s.", MatsAmount[playerid], MatsPrice[playerid], GetPlayerNameEx(MatsOffer[playerid]));
            			SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
              			format(szMessage, sizeof(szMessage), "* %s has vendido %d materiales, ganaste $%d.", GetPlayerNameEx(playerid), MatsAmount[playerid], MatsPrice[playerid]);
                		SendClientMessageEx(MatsOffer[playerid], COLOR_GENERAL, szMessage);

                  		GivePlayerCash(MatsOffer[playerid], MatsPrice[playerid]);
						GivePlayerCash(playerid, -MatsPrice[playerid]);
                    	Info[playerid][pMats] += MatsAmount[playerid];
                    	Info[MatsOffer[playerid]][pMats] -= MatsAmount[playerid];
                    	
                        new ip[32], ipex[32];
                        GetPlayerIp(playerid, ip, sizeof(ip));
                        GetPlayerIp(MatsOffer[playerid], ipex, sizeof(ipex));
                        format(szMessage, sizeof(szMessage), "[MATS DEAL] %s(IP:%s) pagó %d materiales de %s(IP:%s)", GetPlayerNameEx(playerid), ip, MatsAmount[playerid], GetPlayerNameEx(MatsOffer[playerid]), ipex);
                        Log("logs/pay.log", szMessage);
                        
                        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
                    	MatsOffer[playerid] = 999;
                    	MatsPrice[playerid] = 0;
                    	MatsAmount[playerid] = 0;
                    }
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "No tienes dinero suficiente.");
			}
        	else return SendClientMessageEx(playerid, COLOR_GREY, "Nadie te ha ofrecido materiales.");
		}
    	else { return 1; }
	}                                             //not connected
 	return 1;
}
zcmd(cfumar, playerid, params[])
{
	if(Info[playerid][pCigarettes] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, 		"No tienes cigarros!");
    else if(Info[playerid][pLighter] == 0) 	return SendClientMessageEx(playerid, COLOR_GRAD2, 		"No tienes encendedor!");
    else if(IsSmoking[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, 		"Ya estas fumando! Usa: /dfumar");
    else
	{
        new randsmoke = random(6);
        if(randsmoke < 5)
 	   {
			Info[playerid][pCigarettes]--;
			IsSmoking[playerid] = 1;
    		format(szMessage, sizeof(szMessage), "* %s saca un cigarro y lo enciende.", GetPlayerNameEx(playerid));
		    ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
			SendClientMessageEx(playerid, COLOR_WHITE, "Estás Fumando. Ahora puedes utilizar /dfumar (para dejar de fumar).");
        }
        else SendClientMessageEx(playerid, COLOR_GRAD2, "¡Mucho viento, no lograste encender el cigarro!");
    }
    return 1;
}
zcmd(dfumar, playerid, params[])
{
    if(IsSmoking[playerid] > 0)
	{
    	IsSmoking[playerid] = 0;
     	format(szMessage, sizeof(szMessage), "* %s tira el cigarro al suelo y lo pisa.", GetPlayerNameEx(playerid));
     	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
      	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
      	ClearAnimations(playerid);
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "¡No está fumando!");
    return 1;
}
//Toys
zcmd(ayudatoy,playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Accesorios (Toys)");
    SendClientMessageEx(playerid, COLOR_WHITE,"Para comprar un toys en la tienda usa: /ctoys");
    SendClientMessageEx(playerid, COLOR_WHITE,"Para ponerte y editar un toys usa: /toys");
    SendClientMessageEx(playerid, COLOR_WHITE,"Para ponerte todos tus toys usa: /ptoys");
    SendClientMessageEx(playerid, COLOR_WHITE,"Para quitarte todos tus toys usa: /qtoys");
    SendClientMessageEx(playerid, COLOR_WHITE,"Para poner o quitar un determinado toy usa: /toy [0-9 slot]");
    return 1;
}
CMD:ayudasafe(playerid, params[])
{
    #pragma unused params
    SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Caja Fuerte (Familia)");
	SendClientMessageEx(playerid, COLOR_WHITE, "C. Fuerte: /cfdepositar /cfretirar /fgarma /fsarma /cfbalance");
	return 1;
}
CMD:admincasa(playerid, params[])
{
    #pragma unused params
    if(Info[playerid][pAdmin] >= 6)
    {
    	SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Comandos Administrativos Casa");
		SendClientMessageEx(playerid, COLOR_WHITE, "/gotohouse - /goinhouse - /hnext - /editar - /editarh - /hname");
	}
	else NoAutorizado
	return 1;
}
CMD:adminnegocio(playerid, params[])
{
    #pragma unused params
    if(Info[playerid][pAdmin] >= 5)
    {
    	SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Comandos Administrativos Negocios");
		SendClientMessageEx(playerid, COLOR_WHITE, "/asellnegocio - /createbiz - /nprecio - /ntipo - /nstock - /gotoneg");
	}
	else NoAutorizado
	return 1;
}
CMD:adminfam(playerid, params[])
{
    #pragma unused params
    if(Info[playerid][pAdmin] >= 4 || Info[playerid][pGangModerator] == 1)
    {
    	SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Comandos Administrativos Familia");
		SendClientMessageEx(playerid, COLOR_WHITE, "/fedit /familias /fopciones /famchat /facchat");
		SendClientMessageEx(playerid, COLOR_WHITE, "/cfdepositar /cjretirar /ajustar /rango /anombrerango /crearf /facmotd /fammotd");
		SendClientMessageEx(playerid, COLOR_WHITE, "/borrarfam /darfam");
	}
	else NoAutorizado
	return 1;
}
zcmd(toys,playerid, params[])
{
    ShowPlayerDialog( playerid, TOYS, DIALOG_STYLE_LIST, ""COL_GENERAL"Toy Menu", ""COL_GENERAL"* "COL_WHITE"Poner/Quitar un Toy\n"COL_GENERAL"* "COL_WHITE"Editar un Toy\n"COL_GENERAL"* "COL_WHITE"Eliminar un Toy","OK", "Cancelar" );
    return 1;
}
zcmd(ptoys,playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_WHITE, "* Te pusiste todos los toys.");
    for(new x;x<MAX_PLAYERTOYS;x++)
    {
	    if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ],
		PlayerToyInfo[playerid][x][ftscaleX], PlayerToyInfo[playerid][x][ftscaleY], PlayerToyInfo[playerid][x][ftscaleZ]);
    }
    return 1;
}
zcmd(qtoys,playerid, params[])
{
    SendClientMessageEx(playerid, COLOR_WHITE, "* Te quitaste todos los toys.");
    for(new x;x<MAX_PLAYERTOYS;x++)
    {
	    RemovePlayerAttachedObject(playerid, x);
    }
    return 1;
}
//Canales
zcmd(togac, playerid, params[])
{
    if(Info[playerid][pAdmin] > 0)
	{
        if(!AdminChat[playerid])
		{
	        AdminChat[playerid] = 1;
	        SendClientMessageEx(playerid, COLOR_GRAD2, "- Canal de administración desactivado");
	    }
	    else
		{
	        AdminChat[playerid] = 0;
	        SendClientMessageEx(playerid, COLOR_GRAD2, "- Canal de administración activado");
	    }
    } else NoAutorizado
    return 1;
}
zcmd(togfam, playerid, params[]){
    if(!gFam[playerid]){
		gFam[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Chat de Facción desactivado.");
	}
	else{
		gFam[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Chat de Facción activado.");
	}
    return 1;
}
zcmd(tognews, playerid, params[]){
    if(!gNews[playerid]){
		gNews[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Chat de Radio/Ads desactivado.");
	}
	else{
		gNews[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Chat de Radio/Ads activado.");
	}
    return 1;
}
zcmd(togphone, playerid, params[]){
    if (!PhoneOnline[playerid]){
		PhoneOnline[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Teléfono apagado.");
	}
	else{
		PhoneOnline[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Teléfono encendido.");
	}
    return 1;
}
/*
zcmd(tognewbie, playerid, params[]){
	if (!gOoc[playerid]){
		gOoc[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "    Desactivaste el chat de ayuda.");
	}
	else{
		gOoc[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "    Activaste el chat de ayuda.");
	}
	return 1;
}
*/
zcmd(removegps, playerid, params[]){
	if(IsPlayerConnectedEx(playerid)) DisablePlayerCheckpoint(playerid);
	return 1;
}
zcmd(esnifococaina, playerid, params[]){
    if(TutStep[playerid] > 0){
		TutTime[playerid] = 14;
		Tutorial_Inside(playerid);
	}
	else SendClientMessageEx(playerid, -1, "No estás en el tutorial!");
	return 1;
}
zcmd(jetpack, playerid, params[])
{
    if (Info[playerid][pAdmin] < 2) return NoAutorizado
	if(IsPlayerConnectedEx(playerid))
    {
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
    	JetPack[playerid] = 1;
    }
	return 1;
}
zcmd(eject, playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid))
    {
        new State = GetPlayerState(playerid), giveplayerid;
        if(State!=PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No eres conductor!");
        if(!sscanf(params, "d", giveplayerid))
        {
            if(IsPlayerConnectedEx(giveplayerid))
			{
				if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No te puedes echar ati mismo!");
    			if(IsPlayerInAnyVehicle(giveplayerid))
		        {
					if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(giveplayerid))
					{
      					format(szMessage, sizeof(szMessage), "* %s agarra fuertemente a %s y lo expulsa del vehículo", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				    	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    	    RemovePlayerFromVehicle(giveplayerid);
					} else SendClientMessageEx(playerid, COLOR_GRAD2, "El jugador no está en tu vehículo");
				} else SendClientMessageEx(playerid, COLOR_GRAD2, "El jugador no está en un vehículo");
			} else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /eject <ID>");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "¡No estás en ningún vehículo!");
    return 1;
}
// Other's
zcmd(tlc, playerid, params[])
{
    if(Team_SAPD(playerid))
    {
    	if(pdtrace == 0 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
     	{
            SendClientMessageEx(playerid, 0xFF8080FF, ">><<>><<>> Estableciendo contacto ... >><<>><<>>");
            SendClientMessageEx(playerid, COLOR_WHITE, "GPS: Servicio no Disponible");
			//SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
        }
        else SendClientMessageEx(playerid, COLOR_WHITE, "Error en la localizacion de la persona que llama.");
	}
    else if(Team_SAMD(playerid))
    {
    	if(emdtrace == 0 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
     	{
            SendClientMessageEx(playerid, COLOR_WHITE, "GPS: Servicio no Disponible");
			//SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
        } else SendClientMessageEx(playerid, COLOR_WHITE, "Error al localizar!");
	} else SendClientMessageEx(playerid, COLOR_WHITE, "[ERROR]: No tienes autorización a usar este comando.");
    return 1;
}
zcmd(entrar, playerid, params[])
{
    if( Info[playerid][pJailed] > 0 ) return SendClientMessageEx(playerid, COLOR_WHITE, "[ERROR]: No puedes usar este comando.");
    if(IsPlayerConnectedEx(playerid))
	{
	    for(new i = 0; i < sizeof(DDoorsInfo); i++)
		{
        	if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddExteriorVW])
			{
            	if(DDoorsInfo[i][ddVIP] > 0 && Info[playerid][pVIP] < DDoorsInfo[i][ddVIP])
				{
                	SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar necesitas ser un mayor nivel de VIP.");
                	return 1;
            	}
            	if(DDoorsInfo[i][ddFamily] > 0)
				{
                	if(Info[playerid][pFMember] != DDoorsInfo[i][ddFamily]-1)
					{
                    	SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, sólo para miembros de la familia.");
    					return 1;
    				}
   	            }
	            if(DDoorsInfo[i][ddFaction] > 0)
				{
					if(DDoorsInfo[i][ddFaction] >= 1 && DDoorsInfo[i][ddFaction] <= 3)
					{
						if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, esta puerta está restringida. (Sólo Policías)");
					}
					else if(DDoorsInfo[i][ddFaction] < 32 && Info[playerid][pMember] != DDoorsInfo[i][ddFaction])
					{
						return	SendClientMessageEx(playerid, COLOR_GRAD2, "Sólo ingreso a miembros de la facción.");
					}
	            }
	            if(DDoorsInfo[i][ddAdmin] > 0 && Info[playerid][pAdmin] < DDoorsInfo[i][ddAdmin]) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, necesitas ser de más nivel administrativo.");

				if(DDoorsInfo[i][ddWanted] > 0 && Info[playerid][pWantedLevel] != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta puerta esta restringida a personas con nivel de búsqueda.");
	            
				if(DDoorsInfo[i][dLocked] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta puerta está bloqueada.");
        		SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
        		Info[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
        		Info[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
        		SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
        		if(DDoorsInfo[i][ddCustomInterior])
				{
        		   LoadObjects(playerid);
        		}
        		if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
        	    	SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
        	    	SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
        	    	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
        	    	LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
        		}
        		else
				{
            		SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
            		SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
            		SetCameraBehindPlayer(playerid);
        		}
        		if(DDoorsInfo[i][dMusic] == 0) return 1;
        		else
        		{
        		    switch(DDoorsInfo[i][dMusic])
        		    {
        		        case 1: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=56349", 1, 1, 1, 1, 0); // Reggeaton
                        case 2: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=860870", 1, 1, 1, 1, 0); // Electro
                        case 3: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377200", 1, 1, 1, 1, 0); // Techno
                        case 4: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281016", 1, 1, 1, 1, 0); // Hip hop
                        case 5: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616366", 1, 1, 1, 1, 0); // Variada
                    }
                }
				return 1;
    		}
	    }
		if (IsPlayerInRangeOfPoint(playerid,3,2281.1748,-1724.4528,13.2521)) //  GARAGE 1
		{

        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
            	SetVehiclePos(GetPlayerVehicleID(playerid),  2233.9280,-1758.3882,2031.3885);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid),  11.4);
            	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 2235.1851,-1763.5916,2032.9728);
				SetPlayerFacingAngle(playerid, 14.9);
				SetCameraBehindPlayer(playerid);
				LoadObjects(playerid);
			}
			return 1;
		}
		if (IsPlayerInRangeOfPoint(playerid,3,1242.2382,-1732.4800,13.2911)) //  GARAGE 2
		{

        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
            	SetVehiclePos(GetPlayerVehicleID(playerid),  1134.0381,-1591.4459,6602.5879);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid),  176.3030);
            	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 1134.0381,-1591.4459,6602.5879);
				SetPlayerFacingAngle(playerid, 14.9);
				SetCameraBehindPlayer(playerid);
				LoadObjects(playerid);
			}
			return 1;
		}
		if (IsPlayerInRangeOfPoint(playerid,3,853.3862,-1387.1884,13.7470)) //  GARAGE VIP
		{
		
			if(Info[playerid][pVIP] == 0) return GameTextForPlayer(playerid, "~r~No eres VIP", 2000, 4);
        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
            	SetVehiclePos(GetPlayerVehicleID(playerid),  855.6053,-1412.6117,4202.1577);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid),  NORTE);
            	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 855.6053,-1412.6117,4202.1577);
				SetPlayerFacingAngle(playerid, NORTE);
				SetCameraBehindPlayer(playerid);
				LoadObjects(playerid);
			}
			return 1;
		}
	    for(new i = 0; i < sizeof(HouseInfo); i++){
    		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ])){
        		if(Info[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0 || Info[playerid][pRenting] == i){
			        LoadObjects(playerid);
            		SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
            		Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
            		Info[playerid][pVW] = i+6000;
            		SetPlayerVirtualWorld(playerid, i+6000);
            		if(HouseInfo[i][hCustomInterior] == 1){
                		LoadObjects(playerid);
            		}
            		SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
            		SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorA]);
            		SetCameraBehindPlayer(playerid);
            		GameTextForPlayer(playerid, "~w~Bienvenido", 5000, 1);
					Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
        		}
        		else GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
        		return 1;
        	}
    	}
	}
	return 1;
}
zcmd(salir, playerid, params[])
{
    if( Info[playerid][pJailed] > 0 ) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora.");
    if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto en la arena!");
    if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora.");
	for(new i = 0; i <  sizeof(DDoorsInfo); i++)
	{
    	if (IsPlayerInRangeOfPoint(playerid,3,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
        	SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
        	Info[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
        	SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
        	Info[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
        	if(DDoorsInfo[i][ddCustomExterior])
			{
				LoadObjects(playerid);
        	}
        	if(DDoorsInfo[i][dMusic] != 0) StopAudioStreamForPlayer(playerid);
        	if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
            	SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
            	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
            	LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
        	}
        	else
			{
            	SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
            	SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
            	SetCameraBehindPlayer(playerid);
            	return 1;
        	}
    	}
	}
	if (IsPlayerInRangeOfPoint(playerid,8,2233.9280,-1758.3882,2031.3885)) //  GARAGE 1
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
           	SetVehiclePos(GetPlayerVehicleID(playerid),  2281.1748,-1724.4528,13.2521);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid),  179.93);
           	Streamer_Update(playerid);
        }
        else{
			SetPlayerPos(playerid, 2280.5620,-1722.8878,13.5469);
			SetPlayerFacingAngle(playerid, 181);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid,8,1140.7430,-1592.1893,6602.4922)) //  GARAGE 1
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
           	SetVehiclePos(GetPlayerVehicleID(playerid),  1242.2382,-1732.4800,13.2911);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid),  359.47);
           	Streamer_Update(playerid);
        }
        else{
			SetPlayerPos(playerid, 1241.9020,-1734.0985,13.5899);
			SetPlayerFacingAngle(playerid, 354.9746);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid,8,855.6053,-1412.6117,4202.1577)) //  GARAGE VIP
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
           	SetVehiclePos(GetPlayerVehicleID(playerid),  853.3862,-1387.1884,13.7470);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid),  182.4513);
           	Streamer_Update(playerid);
        }
        else{
			SetPlayerPos(playerid, 853.3862,-1387.1884,13.7470);
			SetPlayerFacingAngle(playerid, 182.4513);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
    for(new i = 0; i <  sizeof(HouseInfo); i++)
	{
        if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && Info[playerid][pVW] == i+6000)
		{
			SetPlayerInterior(playerid,0);
            Info[playerid][pInt] = 0;
            if(HouseInfo[i][hCustomExterior]){LoadObjects(i);}
            SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
            SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorA]);
            SetCameraBehindPlayer(playerid);
            SetPlayerVirtualWorld(playerid, 0);
            Info[playerid][pVW] = 0;
            return Streamer_UpdateEx(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
        }
    }
	return 1;
}
CMD:contrato(playerid, params[])
{
	if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
	if(Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto estando en la carcel.");

	new giveplayerid, moneys, detail[32];
	if(sscanf(params, "dds[32]", giveplayerid, moneys, detail)) return SendClientMessageEx(playerid, COLOR_WHITE, "USO: /contrato [ID] [Monto] [Detalles]");

	if( moneys < 2000 || moneys > 1000000)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "No se puede hacer contratos de menos de $ 2000 o más de $ 1.000.000.");
		return 1;
	}
	else if((moneys < 100000 || moneys > 1000000) && IsACop(giveplayerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "La cantidad de dinero mínimo para un agente es de $ 100.000.");
		return 1;
	}
	if(Info[playerid][pLevel] < 3)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Debes ser el nivel 3 para hacer un contrato.");
		return 1;
	}
	if(Info[giveplayerid][pConnectTime] < 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "No se puede hacer contratos a los jugadores con menos de 1 horas de juego.");
		return 1;
	}
	if (IsPlayerConnectedEx(giveplayerid))
	{
		if(Hitman(giveplayerid)){SendClientMessageEx( playerid, COLOR_GREY, "No se puede poner un contrato a un Hitman." );}
		else
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(moneys >= 1000001) return SendClientMessageEx( playerid, COLOR_GREY, "El precio máximo del contrato es de $ 1.000.000!" );

				if( Info[giveplayerid][pHead] >= 1000000 ) return SendClientMessageEx( playerid, COLOR_GREY, "Ese jugador ya tiene un contrato maximo." );
				
				if(moneys + Info[giveplayerid][pHead] >= 1000001 ) return SendClientMessageEx( playerid, COLOR_GREY, "Ese jugador ya tiene un contrato maximo." );
				
				if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "No te puedes hacer un contrato."); return 1; }
				new playermoney = GetPlayerCash(playerid);
				if (moneys > 0 && playermoney >= moneys)
				{
					if(strlen(detail) > 32) return SendClientMessageEx(playerid, COLOR_GRAD1, "Los detalles del contrato no podrá ser superior a 32 carácteres.");
					GivePlayerCash(playerid, (0 - moneys));
					Info[giveplayerid][pHead]+=moneys;
					strmid(Info[giveplayerid][pContractBy], GetPlayerNameEx(playerid), 0, strlen(GetPlayerNameEx(playerid)), MAX_PLAYER_NAME);
					strmid(Info[giveplayerid][pContractDetail], detail, 0, strlen(detail), 32);
					format(szMessage, sizeof(szMessage), "%s ha echo un contrato: Matar a %s por $%d, detalles: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
					SendFamilyMessage(17, COLOR_YELLOW, szMessage);
					format(szMessage, sizeof(szMessage), "* Has echo un contrato: Matar a %s for $%d, detalles: %s.",GetPlayerNameEx(giveplayerid), moneys, detail);
					SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					new year, month,day;
					new hour,minuite,second;
					getdate(year, month, day);
					gettime(hour,minuite,second);
					format(szMessage, sizeof(szMessage), "<< %s hizó un contrato: Matar a %s por $%d, detalles: %s (%d-%d-%d)(%d:%d) >>",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),moneys,detail,month,day,year,hour,minuite);
					Log("logs/contracts.log", szMessage);
					format(szMessage, sizeof(szMessage), "%s hizó un contrato: Matar a %s por $%d, detalles: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
					ABroadCast(COLOR_YELLOW,szMessage,4);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				else return SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes dinero para esto.");
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Jugador especificado inválido.");
	return 1;
}
zcmd(acontrato, playerid, params[])
{
	if(HitOffer[playerid] < 999)
	{
		if(HitToGet[playerid] < 999)
		{
        	if(IsPlayerConnectedEx(HitToGet[playerid]))
			{
            	format(szMessage, sizeof(szMessage), "* %s aceptó el contrato para matar a %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(HitToGet[playerid]));
                SendClientMessageEx(HitOffer[playerid], COLOR_GENERAL, szMessage);
                format(szMessage, sizeof(szMessage), "* Aceptaste el contrato para matar a %s, recibirás $%d cuando completes la misión.", GetPlayerNameEx(HitToGet[playerid]), Info[HitToGet[playerid]][pHead] / 4 * 2);
                SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
                format(szMessage, sizeof(szMessage), "Se le asignó a %s el contrato de %s, por $%d.", GetPlayerNameEx(playerid), GetPlayerNameEx(HitToGet[playerid]),  Info[HitToGet[playerid]][pHead] / 4 * 2);
                SendFamilyMessage(8, COLOR_YELLOW, szMessage);
                GoChase[playerid] = HitToGet[playerid];
                GetChased[HitToGet[playerid]] = playerid;
                GotHit[HitToGet[playerid]] = 1;
                HitToGet[playerid] = 999;
                HitOffer[playerid] = 999;
                return 1;
			}
			else
			{
				HitToGet[playerid] = 999;
                HitOffer[playerid] = 999;
                return 1;
            }
        }
        else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie te ha ofrecido un contrato!");
	}
	return 1;
}
CMD:hrangos(playerid, params[])
{
    #pragma unused params
	if (!Hitman(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No eres de la agencia Hitman!");
	SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Rangos __________________|");
	foreach(Player, i)
	{
		if(Hitman(i))
		{
			if( GoChase[playerid] == 999 )
			{
				format(szMessage, sizeof(szMessage), "* Nombre: %s | Rango %d | Hits Completados: %d | Hits Fallados: %d", GetPlayerNameEx(i),Info[i][pRank], Info[i][pCHits], Info[i][pFHits]);
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
			}
			else
			{
				format(szMessage, sizeof(szMessage), "* Nombre: %s | Rango %d | Hits Completados: %d | Hits Fallados: %d | Siguiendo: %s", GetPlayerNameEx(i),Info[i][pRank], Info[i][pCHits], Info[i][pFHits], GetPlayerNameEx(GoChase[i]));
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
			}
		}
	}
	return 1;
}
/*CMD:darmehit(playerid, params[])
{
	if(Hitman(playerid))
	{
		new szMessage[128], targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darmehit [ID de Objetivo]");

		if(IsPlayerConnectedEx(targetid))
		{
			if(GoChase[playerid] < 999)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Ya estás ocupado con otro contrato!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Otro asesino ya ha asignado ese contrato");
				return 1;
			}
			if(Info[targetid][pHead] == 0)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   Ese objetivo no tiene un contrato con la agencia!");
				return 1;
			}
			format(string, sizeof(string), "* Has ofrecido un contrato para matar a %s. (Utiliza /acontrato)", GetPlayerNameEx(targetid));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			HitOffer[playerid] = playerid;
			HitToGet[playerid] = targetid;
			return 1;
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GREY, "   La persona contratada no está en línea, utiliza /contratos!");
			return 1;
		}
	}
	return 1;
}*/
CMD:darhit(playerid, params[])
{
	if(Hitman(playerid))
	{
		if(Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "   Sólo rangos 4 y superiores pueden asignar contactos a la gente!");
		new giveplayerid, targetid;
		if(sscanf(params, "dd", giveplayerid, targetid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darhit [playerid] [ID de Objetivo]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if(GoChase[giveplayerid] < 999) return SendClientMessageEx(playerid, COLOR_GREY, "   Ese hitman ya está ocupado con otro contrato!");
			if(GotHit[targetid] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Otro asesino ya fue asignado ese contrato!");
			if(IsPlayerConnectedEx(targetid))
			{
				if(Info[targetid][pHead] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ese objetivo no tiene un contrato con la agencia!");
				format(szMessage, sizeof(szMessage), "* Ofreciste %s un contrato para matar a %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(targetid));
				SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
				format(szMessage, sizeof(szMessage), "* Hitman %s te ofreció un contrato para matar a %s (Usa /acontrato), para aceptarlo.", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid));
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
				HitOffer[giveplayerid] = playerid;
				HitToGet[giveplayerid] = targetid;
				return 1;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "  La persona contratada no está en línea, utiliza /contratos!");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "   Ese hitman no está online");
	}
	return 1;
}
CMD:borrarhit(playerid, params[])
{
	if( Info[playerid][pAdmin] >= 4 || Hitman(playerid) && Info[playerid][pRank] >= 5)
	{
		new giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /deletehit [playerid]");
		if(!IsPlayerConnectedEx(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Jugador no está online.");
		if(Info[giveplayerid][pHead] >= 1 )
		{
			Info[giveplayerid][pHead] = 0;
			new year, month,day;
			getdate(year, month, day);
			format(szMessage, sizeof(szMessage), "<< %s has removido el contrato de %s(%d-%d-%d) >>", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), month,day,year);
			Log("logs/contracts.log", szMessage);
			format(szMessage, sizeof(szMessage), "Has removido el contrato por la cabeza de %s.", GetPlayerNameEx(giveplayerid) );
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			GoChase[giveplayerid] = 999;

			foreach(Player, i)
			{
				if( HitToGet[i] == giveplayerid )
				{
					HitToGet[i] = 999;
					HitOffer[i] = 999;
				}
			}
		}
		else SendClientMessageEx( playerid, COLOR_GREY, "* No hay un contrato activo en ese jugador!" );
	}
	else NoAutorizado
	return 1;
}
CMD:ip(playerid, params[]){
	if(Info[playerid][pAdmin] >= 2)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ip [ip]");
		new IP[32];
		foreach(Player, i){
			GetPlayerIp(i, IP, sizeof(IP));
			if(strfind(IP, params, true) != -1){
				format(szMessage, sizeof(szMessage),
				 "Player: %s (ID: %d) | IP: %s",
				  GetPlayerNameEx(i),
				  i,
				  IP);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			}
		}
	}
	else NoAutorizado
	return 1;
}
zcmd(amascara, playerid, params[]){
    if(Info[playerid][pMask] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, " Ya tienes una máscara.");
    if(Hitman(playerid)){
    	if(PlayerToPoint(5, playerid, 1107,-323,68.66)){
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Cogiste una máscara, "COL_WHITE"/mascara "COL_GENERAL"para ponertela.");
        	Info[playerid][pMask] = 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, " No eres Hitman.");
	return 1;
}
zcmd(radio, playerid, params[])
{
    if(OnDuty[playerid] == 0 && !NoDuty(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, " No estás en servicio.");
    if(!RadioOn[playerid])
	{
		RadioOn[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Prendiste tu radio");
	}
	else
	{
		RadioOn[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Apagaste tu radio");
	}
    return 1;
}
zcmd(duty, playerid, params[])
        {
        if(Team_SAMD(playerid) || Gobierno(playerid))
                {
            if(OnDuty[playerid]== 0)
                        {
                        OnDuty[playerid] = 1;
                        SetPlayerToTeamColor(playerid);
                        SendClientMessageEx(playerid, COLOR_WHITE, "* Ahora estas en servicio.");
                        }
                else
                        {
                        OnDuty[playerid] = 0;
                        SetPlayerToTeamColor(playerid);
                        SendClientMessageEx(playerid, COLOR_WHITE, "* Ahora ya no estas en servicio.");
                        }
        }

        else if(Team_LSTV(playerid))
        {
                if(OnDuty[playerid]== 0)
                {
                        OnDuty[playerid] = 1;
                        SendClientMessageEx(playerid, COLOR_WHITE, "* Ahora estas en servicio.");
                                }
            	else
                {
                        OnDuty[playerid] = 0;
                        SendClientMessageEx(playerid, COLOR_WHITE, "* Ahora ya no estas en servicio.");
                }
        }

        else SendClientMessageEx(playerid, -1, "[ERROR]: No tienes autorización a usar este comando.");
        return 1;
    }
zcmd(frecuencia, playerid, params[])
{
	new frequency;
	if(sscanf(params, "d", frequency))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /frecuencia [frecuencia]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "* Ajuste la frecuencia de su radio - 0 Si no quieres oir nada.");
		return 1;
	}
    if(frequency > 9999999 || frequency < -9999999) { SendClientMessageEx(playerid, COLOR_GREY, "Frecuencia no debe ser menor a -9999999 y mayor 9999999."); return 1; }
	if (Info[playerid][pRadio] == 1)
	{
		Info[playerid][pRadioFreq] = frequency;
		format(szMessage, sizeof(szMessage), "Ajustaste la frecuencia de tu radio portable a %d khz.",frequency);
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	}
    else SendClientMessageEx(playerid, COLOR_GRAD2, "No tiene una Radio Portable.");
    return 1;
}
zcmd(pr, playerid, params[]){
	if(Info[playerid][pRadio] == 1){
        if(Info[playerid][pRadioFreq] >= 1 || Info[playerid][pRadioFreq] <= -1){
			if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /pr [chat]");
			if(GetPVarInt(playerid, "Injured") != 0||Info[playerid][pEstado] !=0) return SendClientMessageEx (playerid, COLOR_GRAD2, "No puedes usar esto ahora.");
			RadioBroadCast(playerid, COLOR_GREY, params);
        }
        else SendClientMessageEx(playerid, COLOR_GRAD2, "* Primero ajusta la frecuencia. /frecuencia'");
    }
    else SendClientMessageEx(playerid, COLOR_GRAD2, "* Primero necesitas tener una radio portatil, comprala en el 24/7");
    return 1;
}
zcmd(togpr, playerid, params[])
{
	if(Info[playerid][pRadio] == 1)
	{
		if (gRadio[playerid] == 0)
		{
 			gRadio[playerid] = 1;
   			format(szMessage,sizeof(szMessage),"Has prendido tu radio portátil, y está sincronizada a %d khz.",Info[playerid][pRadioFreq]);
        	SendClientMessageEx(playerid,COLOR_WHITE,szMessage);
    	}
    	else
    	{
 			gRadio[playerid] = 0;
   			SendClientMessageEx(playerid,COLOR_WHITE,"Has apagado su radio portátil.");
    	}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes una Radio portátil.");
	return 1;
}
zcmd(f, playerid, params[])
{
    new facstring[128];
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(nofac != 1)
    {
        if(!isnull(params))
        {
            if(Info[playerid][pFMember] < 255)
            {
                switch(Info[playerid][pRank])
                {
					case 6: format(facstring, sizeof(facstring), "{04FFFF}** (6) %s %s: %s **", fINFO[Info[playerid][pFMember]][FamilyRank6], GetPlayerNameEx(playerid), params);
					case 5: format(facstring, sizeof(facstring), "** (5) %s %s: %s **", fINFO[Info[playerid][pFMember]][FamilyRank5], GetPlayerNameEx(playerid), params);
					case 4: format(facstring, sizeof(facstring), "** (4) %s %s: %s  **", fINFO[Info[playerid][pFMember]][FamilyRank4], GetPlayerNameEx(playerid), params);
					case 3: format(facstring, sizeof(facstring), "** (3) %s %s: %s  **", fINFO[Info[playerid][pFMember]][FamilyRank3], GetPlayerNameEx(playerid), params);
					case 2: format(facstring, sizeof(facstring), "** (2) %s %s: %s  **", fINFO[Info[playerid][pFMember]][FamilyRank2], GetPlayerNameEx(playerid), params);
					case 1: format(facstring, sizeof(facstring), "** (1) %s %s: %s  **", fINFO[Info[playerid][pFMember]][FamilyRank1], GetPlayerNameEx(playerid), params);
				}
				SendNewFamilyMessage(Info[playerid][pFMember], TEAM_AZTECAS_COLOR, facstring);
				return 1;
            }
            if(Info[playerid][pLeader] > 0 || Info[playerid][pMember] > 0)
            {
            	switch(Info[playerid][pMember])
            	{
            	    case 1:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Comandante %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Teniente %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Sargento %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Detective %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Oficial %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Cadete %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
            	    case 2:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Director %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Sub-Director %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Agente Esp. %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Agente Especial %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Agente Superior %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Agente %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
            	    case 3:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Coronel %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Mayor %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Capitan %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Sargento %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Soldado %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Cabo %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
					case 4:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Director %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Responsable Tec. %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Supervisor %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Médico %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Paramédico %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Prácticante %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
					case 5:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Director %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Presentador %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Enviado Especial %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Periodista %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Redactor %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Becario %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
            	    case 6:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Director %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Supervisor %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Ingeniero %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Mecánico %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Trucker %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Ayudante %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
            	    case 7:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Presidente %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Vice-Presidente %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Ministro %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Alcalde %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Secretario %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Staff %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
            	    case 8:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Director %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Vice-Director %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Agente Especial %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Sicario %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Asesino %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Novato %s: %s ))  **", GetPlayerNameEx(playerid), params);
						}
					}
            	    case 9:
            	    {
            	        switch(Info[playerid][pRank])
            	        {
            	            case 6: format(facstring, sizeof(facstring), "{04FFFF}** (( Gerente %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 5: format(facstring, sizeof(facstring), "** (( Administrador %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 4: format(facstring, sizeof(facstring), "** (( Supervisor %s: %s )) **", GetPlayerNameEx(playerid), params);
            	            case 3: format(facstring, sizeof(facstring), "** (( Asesor %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 2: format(facstring, sizeof(facstring), "** (( Recepcionista %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	            case 1: format(facstring, sizeof(facstring), "** (( Seguridad %s: %s ))  **", GetPlayerNameEx(playerid), params);
            	        }
            	    }
            	}
            	SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, facstring);
            }
            else return SendClientMessageEx(playerid, COLOR_GREY, "No estás en una facción/familia.");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /f <Chat>");
    }
    else SendClientMessageEx(playerid, COLOR_GRAD2, "El Chat de faccion esta bloqueado");
    return 1;
}
zcmd(d, playerid, params[])
{
	new rank[64], div[16];
	if(RadioOn[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu radio está apagada.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: (/d)epartament [radio chat]");
	switch (Info[playerid][pMember])
	{
    	case 1:
    	{
        	switch(Info[playerid][pRank])
        	{
				case 1: rank = "Cadete";
				case 2: rank = "Oficial";
				case 3: rank = "Detective";
				case 4: rank = "Sargento";
				case 5: rank = "Teniente";
				case 6: rank = "Comandante";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (DIVCRI)";
				case 3: div = " (DIVOES)";
				case 4: div = " (DIVANDRO)";
				case 5: div = " (SWAT)";
				case 6: div = " (UL)";
				default: div = "";
			}
			format(szMessage, sizeof(szMessage), "** [SAPD] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
		}
		case 2:
		{
	    	switch(Info[playerid][pRank])
	    	{
				case 1: rank = "Agente";
				case 2: rank = "Agente Superior";
				case 3: rank = "Agente Especial";
				case 4: rank = "Criminalista";
				case 5: rank = "Sub/Director";
				case 6: rank = "Director";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (OS)";
				case 3: div = " (UCO)";
				case 4: div = " (UI)";
				case 5: div = " (UAE)";
				default: div = "";
			}
        	format(szMessage, sizeof(szMessage), "** [FBI] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
		}
		case 3:
		{
			switch(Info[playerid][pRank])
			{
				case 1: rank = "Cabo";
				case 2: rank = "Soldado";
				case 3: rank = "Sargento";
				case 4: rank = "Capitán";
				case 5: rank = "Mayor";
				case 6: rank = "Coronel";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (FASA)";
				case 3: div = " (EMSA)";
				case 4: div = " (BO)";
				case 5: div = " (FMSA)";
				default: div = "";
			}
        	format(szMessage, sizeof(szMessage), "** [SAEM] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
		}
		case 4:
		{
	    	switch(Info[playerid][pRank])
	    	{
				case 1: rank = "Practicante";
				case 2: rank = "Paramédico";
				case 3: rank = "Médico";
				case 4: rank = "Supervisor";
				case 5: rank = "Técnico";
				case 6: rank = "Director";
				default: rank = "[Error]";
			}
			format(szMessage, sizeof(szMessage), "** [SAMC] %s %s: %s **", rank, GetPlayerNameEx(playerid), params);
		}
		case 7:
		{
	    	switch(Info[playerid][pRank])
	    	{
				case 1: rank = "Staff";
				case 2: rank = "Secretario";
				case 3: rank = "Alcalde";
				case 4: rank = "Ministro de";
				case 5: rank = "Vice-Presidente";
				case 6: rank = "Presidente";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (Chofer)";
				case 3: div = " (UG)";
				case 4: div = " Defensa";
				case 5: div = " Justicia";
				case 6: div = " Economía";
				default: div = "";
			}
			format(szMessage, sizeof(szMessage), "** [GOB] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
		}
		case 9:
		{
			switch(Info[playerid][pRank])
			{
				case 1: rank =  "Seguridad";
				case 2: rank =  "Recepcionista";
				case 3: rank =  "Asesor";
				case 4: rank =  "Supervisor";
				case 5: rank =  "Administrador";
				case 6: rank =  "Gerente General";
				default: rank = "[Error]";
			}
			format(szMessage, sizeof(szMessage), "** [BANCO] %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
		}
		default: SendClientMessageEx(playerid,COLOR_GREY,"* No tienes autorización para usar este comando.");
	}
	for(new i = 1; i < 5; i++){SendRadioMessage(i, COLOR_ALLDEPT, szMessage);}
	SendRadioMessage(7, COLOR_ALLDEPT, szMessage);
	SendRadioMessage(9, COLOR_ALLDEPT, szMessage);
	format(szMessage, sizeof(szMessage), "(radio) %s",params);
	SetPlayerChatBubble(playerid,szMessage,COLOR_WHITE,15.0,5000);
	return 1;
}
zcmd(r, playerid, params[])
{
	new rank[64], div[16];
	if(RadioOn[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, " Tu radio está apagada.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: (/r)adio [radio chat]");
	switch (Info[playerid][pMember]) // employer/rank/division data is pulled from here
	{
		case 1:
		{
			switch(Info[playerid][pRank])
			{
				case 1: rank = "Cadete";
				case 2: rank = "Oficial";
				case 3: rank = "Detective";
				case 4: rank = "Sargento";
				case 5: rank = "Teniente";
				case 6: rank = "Comandante";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (DIVCRI)";
				case 3: div = " (DIVOES)";
				case 4: div = " (DIVANDRO)";
				case 5: div = " (SWAT)";
				case 6: div = " (UL)";
				default: div = "";
			}
			format(szMessage, sizeof(szMessage), "** %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			SendRadioMessage(1, TEAM_RADIO_COLOR, szMessage);
		}
		case 2:
		{
		    switch(Info[playerid][pRank])
		    {
				case 1: rank = "Agente";
				case 2: rank = "Agente Superior";
				case 3: rank = "Agente Especial";
				case 4: rank = "Agente Especializado";
				case 5: rank = "Sub/Director";
				case 6: rank = "Director";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (OS)";
				case 3: div = " (UCO)";
				case 4: div = " (UI)";
				case 5: div = " (UAE)";
				default: div = "";
			}
			format(szMessage, sizeof(szMessage), "** %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			SendRadioMessage(2, TEAM_RADIO_COLOR, szMessage);
		}
        case 3:
		{
		    switch(Info[playerid][pRank])
		    {
				case 1: rank = "Cabo";
				case 2: rank = "Soldado";
				case 3: rank = "Sargento";
				case 4: rank = "Capitán";
				case 5: rank = "Mayor";
				case 6: rank = "Coronel";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (FASA)";
				case 3: div = " (EMSA)";
				case 4: div = " (BO)";
				case 5: div = " (FMSA)";
				default: div = "";
			}
            format(szMessage, sizeof(szMessage), "** %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			SendRadioMessage(3, TEAM_RADIO_COLOR, szMessage);
		}
		case 4:
		{
		    switch(Info[playerid][pRank])
		    {
				case 1: rank = "Practicante";
				case 2: rank = "Paramédico";
				case 3: rank = "Médico";
				case 4: rank = "Supervisor";
				case 5: rank = "Técnico";
				case 6: rank = "Director";
				default: rank = "[Error]";
			}
			format(szMessage, sizeof(szMessage), "** %s %s: %s **", rank, GetPlayerNameEx(playerid), params);
			SendRadioMessage(4, TEAM_RADIO_COLOR, szMessage);
		}
		case 5:
		{
		    switch(Info[playerid][pRank])
		    {
				case 1: rank = "Fotógrafo";
				case 2: rank = "Redactor";
				case 3: rank = "Periodista";
				case 4: rank = "Administrador";
				case 5: rank = "Gerente";
				case 6: rank = "Director SA News";
				default: rank = "[Error]";
			}
			format(szMessage, sizeof(szMessage), "** %s %s: %s **", rank, GetPlayerNameEx(playerid), params);
			SendRadioMessage(5, TEAM_RADIO_COLOR, szMessage);
		}
		case 6:
		{
		    switch(Info[playerid][pRank])
		    {
				case 1: rank = "Ayudante";
				case 2: rank = "Trucker";
				case 3: rank = "Mecánico";
				case 4: rank = "Ingeniero";
				case 5: rank = "Supervisor";
				case 6: rank = "Director";
				default: rank = "[Error]";
			}
			format(szMessage, sizeof(szMessage), "** %s %s: %s **", rank, GetPlayerNameEx(playerid), params);
			SendRadioMessage(6, TEAM_RADIO_COLOR, szMessage);
		}
		case 7:
		{
		    switch(Info[playerid][pRank])
		    {
				case 1: rank = "Staff";
				case 2: rank = "Secretario";
				case 3: rank = "Alcalde";
				case 4: rank = "Ministro de";
				case 5: rank = "Vice-Presidente";
				case 6: rank = "Presidente";
				default: rank = "[Error]";
			}
			switch(Info[playerid][pDivision])
			{
				case 2: div = " (Chofer)";
				case 3: div = " (UG)";
				case 4: div = " Defensa";
				case 5: div = " Justicia";
				case 6: div = " Economía";
				default: div = "";
			}
			format(szMessage, sizeof(szMessage), "** %s%s %s: %s **", rank,div, GetPlayerNameEx(playerid), params);
			SendRadioMessage(7, TEAM_RADIO_COLOR, szMessage);
		}
		case 9:
		{
			switch(Info[playerid][pRank])
			{
				case 1: rank = "Seguridad";
				case 2: rank = "Recepcionista";
				case 3: rank = "Asesor";
				case 4: rank = "Supervisor";
				case 5: rank = "Administrador";
				case 6: rank = "Gerente General";
				default: rank = "[Error]";
			}
			format(szMessage, sizeof(szMessage), "** %s %s: %s **", rank, GetPlayerNameEx(playerid), params);
			SendRadioMessage(9, TEAM_RADIO_COLOR, szMessage);
		}
		default: return SendClientMessageEx(playerid,COLOR_GRAD2,"Tu facción no tiene radio, puedes comprar una en el 24/7.");
	}
	format(szMessage, sizeof(szMessage), "(radio) %s",params);
    SetPlayerChatBubble(playerid,szMessage,COLOR_WHITE,15.0,5000);
    return 1;
}
zcmd(sapddiv, playerid, params[])
{
	if(Info[playerid][pLeader] == 1)
	{
		new giveplayerid, division;
		if(sscanf(params, "dd", giveplayerid, division))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "USA: /sapddiv [playerid] [#division]");
			SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones SAPD: 1 (Ninguna), 2 (DIVCRI), 3 (DIVOES), 4 (DIVANDRO), 5 (SWAT), 6 (UL)");
			return 1;
		}
		if (Info[playerid][pRank] == 6)
		{
			if(IsPlayerConnectedEx(giveplayerid))
			{
				if(Info[giveplayerid][pMember] == 1)
				{
					if(division == 3)
					{
						Info[giveplayerid][pDivision] = 3;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la División de Operaciones Especiales [DIVOES].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la División de Operaciones Especiales [DIVOES].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 2)
					{
						Info[giveplayerid][pDivision] = 2;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la División de Criminalistica [DIVCRI].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la División de Criminalistica [DIVCRI].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 4)
					{
						Info[giveplayerid][pDivision] = 4;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la División de Anti-Drogas [DIVANDRO].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la División de Anti-Drogas [DIVANDRO].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 5)
					{
						Info[giveplayerid][pDivision] = 5;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la SWAT.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la SWAT.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 6)
					{
						Info[giveplayerid][pDivision] = 6;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la Unidad de Licencieros.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la Unidad de Licencieros.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 1)
					{
						Info[giveplayerid][pDivision] = 1;
						format(szMessage, sizeof(szMessage), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no pertenece a SAPD");
			}
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* No estás autorizado para hacer divisiones en SAPD.");
	}
	return 1;
}
zcmd(fbidiv, playerid, params[])
{
	if(Info[playerid][pLeader] == 2)
	{
		new giveplayerid, division;
		if(sscanf(params, "dd", giveplayerid, division))
		{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /fbidiv [playerid] [#division]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones FBI: 1 (Ninguna), 2 (DIVHO), 3 (UCO), 4 (UI), 5 (RR.HH)");
		return 1;
		}

		if (Info[playerid][pRank] == 6)
		{
			if(IsPlayerConnectedEx(giveplayerid))
			{
				if(Info[giveplayerid][pMember] == 2)
				{
					if(division == 3)
					{
						Info[giveplayerid][pDivision] = 3;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la Unidad de Crimen Organizado [UCO].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la Unidad de Crimen Organizado [UCO].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 2)
					{
						Info[giveplayerid][pDivision] = 2;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la División de Homicidios [DIVHO].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la División de Homicidios [DIVHO].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 4)
					{
						Info[giveplayerid][pDivision] = 4;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la Unidad de Investigación [UI].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la Unidad de Investigación [UI].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 5)
					{
						Info[giveplayerid][pDivision] = 5;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la Unidad de Agentes Especiales [UAE].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la Unidad de Agentes Especiales [UAE].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 1)
					{
						Info[giveplayerid][pDivision] = 1;
						format(szMessage, sizeof(szMessage), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no pertenece al FBI");
			}
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* No estás autorizado para hacer divisiones en FBI.");
	}
	return 1;
}
zcmd(saemdiv, playerid, params[])
{
	if(Info[playerid][pLeader] == 3)
	{
		new giveplayerid, division;
		if(sscanf(params, "dd", giveplayerid, division))
		{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /saemdiv [playerid] [#division]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones SAEM: 1 (Ninguna), 2 (FASA), 3 (EMM), 4 (BO), 5 (FMSA)");
		return 1;
		}
		if (Info[playerid][pRank] == 6)
		{
			if(IsPlayerConnectedEx(giveplayerid))
			{
				if(Info[giveplayerid][pMember] == 3)
				{
					if(division == 3)
					{
						Info[giveplayerid][pDivision] = 3;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte del Equipo Médico Militar [EMM].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse al Equipo Médico Militar [EMM].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 2)
					{
						Info[giveplayerid][pDivision] = 2;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de las Fuerzas Aéreas de San Andreas [FASA].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a las Fuerzas Aéreas de San Andreas [FASA].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 4)
					{
						Info[giveplayerid][pDivision] = 4;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de los Black Ops [BO].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a los Black Ops [BO].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 5)
					{
						Info[giveplayerid][pDivision] = 5;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la Fuerza Marítima de San Andreas [FMSA].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la Fuerza Marítima de San Andreas [FMSA].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 1)
					{
						Info[giveplayerid][pDivision] = 1;
						format(szMessage, sizeof(szMessage), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
				} else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no pertenece a SAEM");
			}
		} else SendClientMessageEx(playerid, COLOR_GREY, "* No estás autorizado para hacer divisiones en SAEM.");
	}
	return 1;
}
zcmd(gobdiv, playerid, params[])
{
	if(Presidente(playerid))
	{
		new giveplayerid, division;
		if(sscanf(params, "dd", giveplayerid, division))
		{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /gobdiv [playerid] [#division]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones Staff: 1 (Ninguna), 2 (Chofer), 3 (UG)(Guardaespaldas)");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Divisiones Ministros: 4 (Defensa), 5 (Justicia), 6 (Economía)");
		return 1;
		}

		if (Info[playerid][pRank] == 6)
		{
			if(IsPlayerConnectedEx(giveplayerid))
			{
				if(Info[giveplayerid][pMember] == 7)
				{
					if(division == 2)
					{
						Info[giveplayerid][pDivision] = 2;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de los choféres del gobierno.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a los choféres del gobierno.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 3)
					{
						Info[giveplayerid][pDivision] = 3;
						format(szMessage, sizeof(szMessage), "%s te ha invitado a formar parte de la Unidad de Guardaespaldas [UG].", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has invitado a %s para unirse a la Unidad de Guardaespaldas [UG].", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 4)
					{
						Info[giveplayerid][pDivision] = 4;
						format(szMessage, sizeof(szMessage), "%s te ha nombrado Ministro de Defensa.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has nombrado a %s Ministro de Defensa.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 5)
					{
						Info[giveplayerid][pDivision] = 5;
						format(szMessage, sizeof(szMessage), "%s te ha nombrado Ministro de Justicia.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has nombrado a %s Ministro de Justicia.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 6)
					{
						Info[giveplayerid][pDivision] = 6;
						format(szMessage, sizeof(szMessage), "%s te ha nombrado Ministro de Economía.", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has nombrado a %s Ministro de Economía.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
					else if(division == 1)
					{
						Info[giveplayerid][pDivision] = 1;
						format(szMessage, sizeof(szMessage), "%s te ha echado de la división actual", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
						format(szMessage, sizeof(szMessage), "Has echado a %s de su división.", GetPlayerNameEx(giveplayerid));
						SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
					}
				} else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no pertenece al FBI");
			}
		}else SendClientMessageEx(playerid, COLOR_GREY, "* No estás autorizado para hacer divisiones en FBI.");
	}
	return 1;
}
   zcmd(vestidor, playerid, params[])
	{
        if(Info[playerid][pJob] == 5 && PlayerToPoint(20, playerid, 2104.8408,-1810.0991,13.5547+0.6) && GetPlayerSkin(playerid) == 155)
			{
			SetPlayerSkin(playerid, ropapizzero[playerid]);
			Info[playerid][pChar] = 155;
			}
        else if(Info[playerid][pJob] == 5 && PlayerToPoint(20, playerid, 2104.8408,-1810.0991,13.5547+0.6))
			{
			ropapizzero[playerid] = GetPlayerSkin(playerid);

			SetPlayerSkin(playerid, 155);
			Info[playerid][pChar] = 155;
			}
		else if(PlayerToPoint(20, playerid, 2104.8408,-1810.0991,13.5547))
			{
			SendClientMessageEx(playerid, COLOR_GRAD2, "¡No eres pizzero!");
			}
		else
			{
			SendClientMessageEx(playerid, COLOR_GRAD2, "¡No estas en los vestidores!");
			}
		return 1;
	}
zcmd(contratar, playerid, params[]){
    if(Info[playerid][pLeader] > 0){
        new giveplayerid;
    	if(!sscanf(params, "d", giveplayerid)){
    	    if(IsPlayerConnectedEx(giveplayerid)){
    	        if(ProxDetectorS(8.0, playerid, giveplayerid)){
            	    if(giveplayerid == playerid) 		return	SendClientMessageEx(playerid, COLOR_GRAD2, "¡No puedes invitarte ati mismo!");
            	    if(Info[giveplayerid][pFMember] < 255)	return	SendClientMessageEx(playerid, COLOR_GRAD2, "¡No puedes invitar a una persona que está en una banda o familia!");
            	    if(Facturing[giveplayerid] > 0)    return 	SendClientMessageEx(playerid, COLOR_GRAD2, "Este jugador está en otra tarea, espera.");
            	    if(Info[giveplayerid][pMember] > 0 || Info[giveplayerid][pLeader] > 0) return 	SendClientMessageEx(playerid, COLOR_GRAD2, "Este jugador ya tiene facción.");
            	    switch(Info[playerid][pLeader]){
					    case 1: 	ReqF_Name[giveplayerid] = "SA Police Departament";
					    case 2: 	ReqF_Name[giveplayerid] = "FBI";
					    case 3: 	ReqF_Name[giveplayerid] = "San Andreas Ejército Militar";
					    case 4: 	ReqF_Name[giveplayerid] = "SA Medical Department";
					    case 5:     ReqF_Name[giveplayerid] = "Cable News Network";
					    case 6: 	ReqF_Name[giveplayerid] = "Mecanicos 24/7";
					    case 7: 	ReqF_Name[giveplayerid] = "Gobierno SA";
					    case 8: 	ReqF_Name[giveplayerid] = "Hitman";
					    case 9: 	ReqF_Name[giveplayerid] = "Banco central de LS";
					}
                    ReqF_Faction[giveplayerid] = Info[playerid][pLeader];
                    Facturing[giveplayerid] = 1;
					format(szDialog, sizeof(szDialog), "\t\tContrato\n\n\t%s te ofrece un contrato en %s\n\t¿Quieres aceptarlo y pertenecer a esta organización?", GetPlayerNameEx(playerid), ReqF_Name[giveplayerid]);
	        		ShowPlayerDialog(giveplayerid, REQF_ACCEPT, DIALOG_STYLE_MSGBOX, "Contrato de Trabajo", szDialog, "Aceptar", "Rechazar");
            	}else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
    	    }else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
		}else SendClientMessageEx(playerid, COLOR_GRAD2, "* /contratar <jugador>");
	}else SendClientMessageEx(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
	return 1;
}
zcmd(despedir, playerid, params[]){
	new give;
    if(Info[playerid][pLeader] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Usted no es lider de facción.");
	if(sscanf(params, "d", give)) return SendClientMessageEx(playerid, COLOR_GRAD2, "* /despedir <jugador>");
	if(!IsPlayerConnectedEx(give)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
    if(Info[playerid][pLeader] == Info[give][pMember])
	{
		format(szMessage, sizeof(szMessage), "  El líder %s te ha echado de la facción.", GetPlayerNameEx(playerid));
		SendClientMessageEx(give, COLOR_WHITE, szMessage);
		format(szMessage, sizeof(szMessage), "  Despediste a %s", GetPlayerNameEx(give));
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		Info[give][pMember] = 0;
		Info[give][pRank] = 0;
		Info[give][pDivision] = 0;
		SetPlayerSkin(give, NOOB_SKIN);
		pTazer[give] = 0;
		for(new iToyIter; iToyIter < MAX_PLAYER_ATTACHED_OBJECTS; ++iToyIter)
		{
			for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsCop); ++LoopRapist)
			{
				if(HoldingObjectsCop[LoopRapist][holdingmodelid] == PlayerToyInfo[give][iToyIter][ptModelID])
				{
					PlayerToyInfo[give][iToyIter][ptModelID] = 0;
					PlayerToyInfo[give][iToyIter][ptBone] = 0;
					PlayerToyInfo[give][iToyIter][ptPosX] = 0.0;
					PlayerToyInfo[give][iToyIter][ptPosY] = 0.0;
					PlayerToyInfo[give][iToyIter][ptPosZ] = 0.0;
					PlayerToyInfo[give][iToyIter][ptPosX] = 0.0;
					PlayerToyInfo[give][iToyIter][ptPosY] = 0.0;
					PlayerToyInfo[give][iToyIter][ptPosZ] = 0.0;
					PlayerToyInfo[give][iToyIter][ftscaleX] = 0.0;
					PlayerToyInfo[give][iToyIter][ftscaleY] = 0.0;
					PlayerToyInfo[give][iToyIter][ftscaleZ] = 0.0;
				}
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "El jugador no pertenece a tu facción.");
    return 1;
}
zcmd(darrango, playerid, params[])
{
    new giveplayerid, rank;
    if(!sscanf(params, "di", giveplayerid, rank))
	{
        if(rank > 6 || rank < 1) { SendClientMessageEx(playerid, COLOR_GREY, "Rangos: 1 al 6!"); return 1; }
	    if(Info[playerid][pLeader] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No eres líder de facción.");
	    if(IsPlayerConnectedEx(giveplayerid))
	    {
	        if(Info[giveplayerid][pLeader] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No puedes asignar rango a un líder!");
      		if(Info[playerid][pLeader] == Info[giveplayerid][pMember])
        	{
        	    Info[giveplayerid][pRank] = rank;
        	    format(szMessage, sizeof(szMessage), "Líder %s te asignó rango %d", GetPlayerNameEx(playerid), Info[giveplayerid][pRank]);
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
                format(szMessage, sizeof(szMessage), "Asiganaste a %s rango %d", GetPlayerNameEx(giveplayerid), Info[giveplayerid][pRank]);
				SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
        	}
        	else SendClientMessageEx(playerid, COLOR_GRAD2, "¡Este miembro no es de tu facción!");
	    }
	    else SendClientMessageEx(playerid, COLOR_GREY, "Jugado desconectado.");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "* /giverank <jugador> <rango>");
    return 1;
}
zcmd(equipo, playerid, params[])
{
	if(Team_LSTV(playerid))
	{
	    if(PlayerToPoint(5, playerid, -2782.3835,273.8393,23.7078))
	    {
	        new cnn[] = "Seguridad\nPeriodista\nRopa Normal";
	        ShowPlayerDialog(playerid,EQUIPO_CNN,DIALOG_STYLE_LIST,">> SA News <<",cnn,"Equipar","Cancelar");
	    }
	}
	if(Gobierno(playerid))
	{
	    if(PlayerToPoint(5, playerid, 352.3081,172.4763,1025.7891))
	    {
	        new gob[] = "Seguridad\nChofér\nBotiquin\nRopa Normal";
	        ShowPlayerDialog(playerid,EQUIPO_GOB,DIALOG_STYLE_LIST,">> Gobierno <<",gob,"Equipar","Cancelar");
	    }
	}
    if(Hitman(playerid))
	{
		if(GetPlayerVirtualWorld(playerid) == 5000)
		{
        	new hit[] = "Cuchillo + Pistola SD\nSniper\nDisfraz\nMáscara\nKit de Secuestro\nCambiar Nombre";
        	ShowPlayerDialog(playerid,DIALOG_HITMAN,DIALOG_STYLE_LIST,"Armeria y Disfraces",hit,"Equipar","Cancelar");
		}
	}
	else if(Team_SAMD(playerid))
	{
		if(PlayerToPoint(5, playerid, 842.9451,-1223.4346,1195.2655))
		{
		    new eq[] = "Traje Doctor\nTraje Médico Blanco\nTraje Médico Azul\nTraje Médico Verde\nIndumentario Normal";
		    ShowPlayerDialog(playerid,EQUIPO_DOC,DIALOG_STYLE_LIST,">> Equipo SAMD <<",eq,"Equipar","Cancelar");
		}
	}
    return 1;
}
/*
zcmd(irfacc, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] >= 2)
	{
		new admintel[] = "SAPD\nFBI\nSAMD\nSA News\nTaxistas\nCar Point\nGobierno";
        ShowPlayerDialog(playerid,TELEPORTS_FACCIONES,DIALOG_STYLE_LIST,">> Teleports Facciones <<",admintel,"Ir","Cancelar");
	}
	else NoAutorizado
	return 1;
}
*/
zcmd(moneda, playerid, params[])
{
    new coin = random(2)+1, coinname[10];
    if(coin == 1) 	coinname = "cara";
    else 			coinname = "cruz";
    format(szMessage, sizeof(szMessage), "*** %s lanza una moneda al aire y cae %s", GetPlayerNameEx(playerid), coinname);
    ProxDetector(10.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    return 1;
}
zcmd(ven, playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid))
    {
        if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
        {
	       VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
	       format(szMessage, sizeof(szMessage), "* %s baja la ventana.", GetPlayerNameEx(playerid));
	       ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	       return 1;
        }
        else if(VehicleWindows[GetPlayerVehicleID(playerid)] == 1)
        {
	       VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
	       format(szMessage, sizeof(szMessage), "* %s sube la ventanilla.", GetPlayerNameEx(playerid));
	       ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	       return 1;
        }
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "   Usted necesita estar en el vehiculo para utilizar esta funcion !");
    return 1;
}
zcmd(nokear, playerid, params[])
{
    if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás herido.");
    if(sscanf(params, "d", params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nokear <ID>");
    if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser mayor al nivel 2.");
	if(KnockedDown[playerid] == 0 || IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))
	{
		if(ProxDetectorS(3.0, playerid, params[0]))
		{
			new rands = random(2)+1;
			format(szMessage, sizeof(szMessage), "* %s agarra una piedra.", GetPlayerNameEx(playerid));
        	ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        	ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
        	KnockedDown[playerid] = 100;

        	if(rands == 1)
			{
				ApplyAnimation(params[0], "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
				SetTimerEx("ClearKnock", 60000, false, "i", params[0]);
				SetTimerEx("ClearKnock", 60000, false, "i", playerid);
				KnockedDown[params[0]] = 1;
                format(szMessage, sizeof(szMessage), "* %s intenta noquear a %s con la piedra y lo consige.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
				ProxDetector(3.0, playerid, szMessage, 0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF,0x00BF60FF);
				format(szMessage, sizeof(szMessage), "* %s queda inconsciente.", GetPlayerNameEx(params[0]));
        		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				format(szMessage, sizeof(szMessage), "* %s intenta noquear a %s con la piedra y le da muy suave.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
				ProxDetector(3.0, playerid, szMessage, 0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF,0xB90000FF);
			}
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* El jugador está muy lejos de ti.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes utilizar este comando ahora.");
	return 1;
}
//SAEM
zcmd(misil, playerid, params[])
{
    new Float:M_X, Float:M_Y, Float:M_Z, Float:radius;
    if(Team_NG(playerid))
	{
        if(Misile_Launcher < 3)
		{
	        if(PlayerToPoint(1.0,playerid,274.3819,2050.3386,46.5048))
			{
		        if(!sscanf(params, "fffiii",M_X,M_Y,M_Z,radius,params[1],params[2])){
		            if(Info[playerid][pRank] > 3){
		                if(radius > 100 || radius < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Radio máximo 100");
		                if(params[1] > 13  || params[1] < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tipo explosión 0-13");
		                if(params[2] > 60  || params[1] < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Tiempo máximo 60 segundos");
		            	SetTimerEx("MissileLaunchEx", params[2]*1000, false, "fffii", M_X,M_Y,M_Z,radius,params[1]);
						Misile_Launcher ++;
						SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                        format(szMessage, sizeof(szMessage), " %s ejecutará Lanzamiento de misil en %d segundos, destino: %0.2f - %0.2f - %0.2f, radio: %d",
                        GetPlayerNameEx(playerid),params[2],M_X,M_Y,M_Z,radius,params[1]);
                        SendRadioMessage(3, TEAM_RADIO_COLOR, szMessage);
					} else SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 3.");
		        } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /misil <coordenada X> <coordenada Y> <coordenada Z> <radio> <tipo> <tiempo>");
			}
			else if(PlayerToPoint(1.0,playerid,275.4055,2044.6295,46.5048))
			{
			    if(!sscanf(params, "id",params[0], params[1]))
				{
		            if(Info[playerid][pRank] > 3)
					{
		                if(params[0] > MAX_VEHICLES || params[0] < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Vehículo incorrecto.");
		                SetTimerEx("MissileLaunch", params[1]*1000, false, "i", params[0]);
		                Misile_Launcher ++;
		                SendRadioMessage(3, TEAM_RADIO_COLOR, "** AVISO DE LANZAMIENTO DE MISIL **");
                        format(szMessage, sizeof(szMessage), " %s ejecutará Lanzamiento de misil en %d Segundos, Objetivo Vehículo %d", GetPlayerNameEx(playerid), params[1], params[0]);
                        SendRadioMessage(3, TEAM_RADIO_COLOR, szMessage);
		            } else SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas ser mayor de rango 3.");
		        } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /misil <vehículo> <tiempo>");
			} else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en ningún lanzamisiles.");
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "Aún no han detonado los otros misiles.");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "No autorizado.");
    return 1;
}
zcmd(su, playerid, params[])
{
    if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No eres policía.");
    if(OnDuty[playerid] == 0 && IsACop(playerid)) return  SendClientMessageEx(playerid, COLOR_GREY, "¡No estas OnDuty!");
    if(!sscanf(params, "ds[64]", params[0], params[1]))
    {
        if(IsPlayerConnectedEx(params[0]))
        {
            //if (IsACop(params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes acusar a un policía.");
            if (Info[params[0]][pWantedLevel] == 6)
			{
				ClearChatbox(playerid);
				SendClientMessageEx(playerid, WANTED_COLOR, "Este jugador ha alcanzado el nivel de búsqueda máximo");
    			return SendClientMessageEx(playerid, WANTED_COLOR, "Nivel de búsqueda: 6/6");
			}
			else
			{
				if(Info[params[0]][pWantedLevel] < 1)
			    {
    				SendRadioMessage(1, TEAM_RADIO_COLOR, "** Central: se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.");
			        SendRadioMessage(2, TEAM_RADIO_COLOR, "** Central: se ha encontrado un nuevo sospechoso, para más información miren sus ordenadores.");
			    }
			    ClearChatbox(playerid);
				Info[params[0]][pWantedLevel] ++;
				format(szMessage, sizeof(szMessage), "** Acusaste a %s: %s", GetPlayerNameEx(params[0]), params[1]);
			    SendClientMessageEx(playerid, WANTED_COLOR, szMessage);
		    	format(szMessage, sizeof(szMessage), "Nivel de búsqueda: %d/6", Info[params[0]][pWantedLevel]);
			    SendClientMessageEx(playerid, WANTED_COLOR, szMessage);
			    SetPlayerWantedLevel(params[0], Info[params[0]][pWantedLevel]);
			}
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "Esa ID es inválida.");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "* (/su)spect <PlayerID> <crimen>");
    return 1;
}
CMD:sospechosos(playerid, params[])
{
    #pragma unused params
	if(IsACop(playerid))
	{
		new x, ccstring[128];
		SendClientMessageEx(playerid, COLOR_GREEN, "Sospechosos buscados:");
		foreach(Player, i)
		{
			if(Info[i][pWantedLevel] >= 1)
			{
				format(ccstring, sizeof(ccstring), "%s%s: %d", szMessage,GetPlayerNameEx(i),Info[i][pWantedLevel]);
				x++;
				if(x > 3)
				{
					SendClientMessageEx(playerid, COLOR_WHITE, ccstring);
					x = 0;
					format(ccstring, sizeof(ccstring), " ");
				}
				else
				{
					format(ccstring, sizeof(ccstring), "%s, ", ccstring);
				}
			}
		}
		if(x <= 3 && x > 0)
		{
			ccstring[strlen(ccstring)-2] = '.';
			SendClientMessageEx(playerid, COLOR_WHITE, ccstring);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No eres policía.");
	return 1;
}
    zcmd(bk, playerid, params[])
	{
        if(Info[playerid][pRequestingBackup] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ya tienes un pedido de ayuda.");
        if(IsACop(playerid))
		{
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
			if(Team_SAPD(playerid)|| Team_FBI(playerid) || Team_NG(playerid))
			{
			    Info[playerid][pRequestingBackup] = 1;
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", GetPlayerNameEx(playerid));
			    SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Team_SAPD(i) && OnDuty[i] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, 0x8D8DFF00);
							//if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
						}
						if(Team_FBI(i) && OnDuty[i] == 1)
						{
						    SetPlayerMarkerForPlayer(i, playerid, 0x8D8DFF00);
						}
						if(Team_NG(i) && OnDuty[i] == 1)
						{
						    SetPlayerMarkerForPlayer(i, playerid, 0x9ACD3200);
						}
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Los refuerzos fueron pedidos.");
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /bkc, para cancelar los refuerzos.");
				SetTimerEx("BackupClear", 180000, false, "iii", playerid, 1, 1);
			}
        } else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
    }
    zcmd(bkc, playerid, params[])
	{
        if(Team_SAPD(playerid) || Team_FBI(playerid) || Team_NG(playerid)) BackupClear(playerid, 1, 0);
        else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
	}
zcmd(multar, playerid, params[])
{
    if(!IsACop(playerid) && !Team_NG(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No eres policía.");
    if(OnDuty[playerid] == 0 && !Team_NG(playerid)) return  SendClientMessageEx(playerid, COLOR_GREY, "¡No estas OnDuty!");
    if(!sscanf(params, "dis[64]", params[0], params[1], params[2]))
    {
        if(params[1] < 0 || params[1] > 10000) return SendClientMessageEx(playerid, COLOR_GREY, "El máximo de multa son 10000$");
        if(IsPlayerConnectedEx(params[0]))
		{
		    if(Facturing[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Este jugador ya tiene una petición pendiente");
		    if(!ProxDetectorS(8.0,playerid,params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "Muy lejos de el jugador.");
		    if(GetPlayerCash(params[0]) < params[1])
			{
				format(szMessage, sizeof(szMessage), "* El infractor no tiene %d$ para pagar la multa.", params[1]);
				return SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
			}
			else
			{
			    ClearChatbox(playerid);
			    SendClientMessageEx(params[0], -1, "Estado de San Andreas");
			    format(szMessage, sizeof(szMessage), "Demandante: %s", GetPlayerNameEx(playerid));
				SendClientMessageEx(params[0], -1, szMessage);
				format(szMessage, sizeof(szMessage), "Infracción: %s", params[2]);
				SendClientMessageEx(params[0], -1, szMessage);
				format(szMessage, sizeof(szMessage), "Multa: %d$", params[1]);
				SendClientMessageEx(params[0], -1, szMessage);
				SendClientMessageEx(playerid, COLOR_WHITE, "* Espera la respuesta del sujeto");
				SendClientMessageEx(params[0], COLOR_WHITE, "Te han multado. Utilize [/aceptar multa ó /cancelar multa] para pagar la multa.");
				TicketOffer[params[0]] = playerid;
				TicketMoney[params[0]] = params[1];
				Facturing[params[0]] = 1;
			}
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "Esa ID es inválida.");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /multar <ID> <precio> <razón>");
    return 1;
}
zcmd(m, playerid, params[])
{
    if(sscanf(params, "s[128]", params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "* /m <texto>");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehículo!");
	if(Team_SAMD(playerid) || IsACop(playerid) || Team_NG(playerid))
    {
		format(szMessage, sizeof(szMessage), "(Megáfono) %s: %s",GetPlayerNameEx(playerid), params[0]);
		ProxDetector(60.0, playerid, szMessage,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE,COLOR_MEGAPHONE);
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes utilizar este comando.");
    return 1;
}
zcmd(dni, playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "* /dni <id>");
    if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
    if(ProxDetectorS(8.0, playerid, params[0]))
    {
        ShowDNI(playerid, params[0]);
        format(szMessage, sizeof(szMessage), "* %s le muestra su DNI a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
	return 1;
}
zcmd(encontrar, playerid, params[])
{
    if(!Team_FBI(playerid) || Info[playerid][pDivision] != 4) return SendClientMessageEx(playerid, COLOR_GRAD2, "No perteneces a la Unidad de Investigación.");
    if(UsedFind[playerid] > 1) return SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Central: Ahora es imposible, prueba de aquí a unos segundos");
	if(!sscanf(params, "d", params[0]))
	{
	    if(IsPlayerConnectedEx(params[0]))
		{

		    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
		    SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "Estableciendo conexión . . .");
		    format(szMessage, sizeof(szMessage), "** Conectado con Satélite #%d Cobertura(%d)", sat,luck);
		    SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
		    format(szMessage, sizeof(szMessage), "** Persona a buscar: %s", GetPlayerNameEx(params[0]));
		    SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
			if(luck > 10 && Info[params[0]][pSex] == 1) 		SendClientMessageEx(playerid, COLOR_WHITE,"Sexo: Masculino");
			if(luck > 10 && Info[params[0]][pSex] == 2) 		SendClientMessageEx(playerid, COLOR_WHITE,"Sexo: Femenino");
			if(luck > 13 && IsPlayerInAnyVehicle(params[0])) 		SendClientMessageEx(playerid, COLOR_WHITE,"Estado: En Automóvil");
			if(luck > 17 && Info[params[0]][pPnumber] != 0)	format(szMessage, sizeof(szMessage), "Teléfono: %d", Info[params[0]][pPnumber]); SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
			SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "_____________________________________");
   			UsedFind[playerid] = reuse_time;
			WhoFind[playerid] = params[0];
			format(szMessage, sizeof(szMessage), "La información se marcara en el mapa en: %d segundos.", sat+luck);
			SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
			format(szMessage, sizeof(szMessage), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
			SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
			SetTimerEx("Detective_FindPerson", sat+luck*1000, false, "i", playerid);
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "* /encontrar <jugador>");
    return 1;
}
zcmd(encontrarveh, playerid, params[])
{
    if(!Team_FBI(playerid) || Info[playerid][pDivision] != 4) return SendClientMessageEx(playerid, COLOR_GRAD2, "No perteneces a la Unidad de Investigación.");
    if(UsedFind[playerid] > 1) return SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Central: Ahora es imposible, prueba de aquí a unos segundos");
	if(!sscanf(params, "i", params[0]))
	{
	    if(params[0] < 0 || params[0] > MAX_VEHICLES) return SendClientMessageEx(playerid, COLOR_GRAD2, "Error ID.");
	    new sat = random(30), luck = random(20), reuse_time = (sat+luck)*2;
	    SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "* Estableciendo conexión . . .");
	    format(szMessage, sizeof(szMessage), "Conectado con Satélite #%d Cobertura(%d)", sat,luck);
	    SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
	    format(szMessage, sizeof(szMessage), "ID Vehículo: %d",params[0]);
	    SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
		if(luck > 13)
		{
			format(szMessage, sizeof(szMessage), "Modelo Vehículo: %s", GetVehicleFriendlyName(params[0]));
	    	SendClientMessageEx(playerid, COLOR_WHITE,szMessage);
		}
		SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "_____________________________________");
		UsedFind[playerid] = reuse_time;
		WhoFind[playerid] = params[0];
		format(szMessage, sizeof(szMessage), "La información se marcara en el mapa en: %d segundos.", sat+luck);
   		SendClientMessageEx(playerid, COLOR_YELLOW,szMessage);
   		format(szMessage, sizeof(szMessage), "El satélite volverá a estar disponible en: %d segundos.", UsedFind[playerid]);
   		SendClientMessageEx(playerid, COLOR_YELLOW,szMessage);
   		SetTimerEx("Detective_FindCar", sat+luck*1000, false, "i", playerid);
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "* /encontrar <vehículo>");
    return 1;
}
// md:admin ============================================================================================================================
zcmd(pagar, playerid, params[])
{
    new string[128];
    if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar esto aquí.");
    if(!sscanf(params, "di", params[0], params[1])){
        if(params[1] > GetPlayerCash(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No posees esa cantidad.");
        if(params[1] < 1 || params[1] > 100000) return SendClientMessageEx(playerid, COLOR_GREY, "* Máximo: $100.000");
		if(Info[params[0]][pSpectating] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* El jugador está muy lejos.");
		if(IsPlayerConnectedEx(params[0])){
            if (GetPVarInt(playerid, "GiveMoneyTimer") > 0){
				format(string, sizeof(string), "Tienes que esperar %d segundos después de pagado.", GetPVarInt(playerid, "GiveMoneyTimer"));
				SendClientMessageEx(playerid,COLOR_GREY,string);
				return 1;
			}
			if(Info[playerid][pLevel] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes pagar siendo nivel 1.");
			if(ProxDetectorS(5.0, playerid, params[0]))
			{
                SetPVarInt(playerid, "GiveMoneyTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PAYTIMER);
				Bought(playerid, params[1]);
				Earn(params[0], params[1]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "* %s saca un poco de dinero (%d$) y se lo da a %s", GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "* %s pagó %d$ a %s", GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
                Log("logs/pagos.log", string);
            }else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        }else SendClientMessageEx(playerid, COLOR_GRAD2, "Esa ID es inválida.");
    }else SendClientMessageEx(playerid, COLOR_GRAD2, "* /pagar <jugador> <cantidad>");
    return 1;
}
zcmd(vehid, playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No has logueado!");
    if(IsPlayerInAnyVehicle(playerid))
	{
		new string[12];
        format(string, sizeof(string), "* Vehiculo ID: %d.", GetPlayerVehicleID(playerid));
        SendClientMessageEx(playerid, COLOR_GREY, string);
    } else SendClientMessageEx(playerid, COLOR_GREY, "* No estás en un vehiculo");
    return 1;
}
zcmd(desrentarbici, playerid, params[]){
    new idcar = GetPlayerVehicleID(playerid);
    if(IsaRent[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No has rentado ninguna bicicleta !");
	if(IsARentCar(idcar) && HireKey[playerid] == idcar)
	{
	    SetVehicleParamsEx(idcar,0,0,0,0,0,0,0);
		SetVehicleToRespawn(HireKey[playerid]);
		SendClientMessageEx(playerid, COLOR_GRAD2, "Gracias, así ayudas a mantener en orden la ciudad.");
		IsaRent[playerid] = 0;
		RentTime[playerid] = 0; HireKey[playerid] = 9999;
	}
    return 1;
}
zcmd(subirnivel, playerid, params[])
{
    if(Info[playerid][pLevel] >= 0)
	{
		new nxtlevel = Info[playerid][pLevel]+1;
		new expamount = nxtlevel*explevel;
		if(Info[playerid][pExp] < expamount)
		{
		    new infostring[128];
			format(infostring, 128, "Necesitas %i puntos de respeto más para subir de nivel, tienes %d.",expamount,Info[playerid][pExp]);
			SendClientMessageEx(playerid, COLOR_GRAD1, infostring);
			return 1;
		}
		else
		{
		    new infostring[64];
			format(infostring, sizeof(infostring), "~g~~h~Nivel %d!", nxtlevel);
			GameTextForPlayer(playerid, infostring, 5000, 1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			Info[playerid][pLevel]++;
			Info[playerid][pExp] = Info[playerid][pExp]-expamount;
			if(Info[playerid][pLevel] == 5) SendClientMessageEx(playerid, COLOR_GRAD1, "[LEVEL 5]: El canal de ayuda será deshabilitado automáticamente al ingresar al servidor");
		}
	}
    return 1;
}
zcmd(hits, playerid, params[])
{
    if(Hitman(playerid)) SearchingHit(playerid);
	else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
    return 1;
}
zcmd(quitar, playerid, params[])
{
	if(GetPVarInt(playerid, "Injured") == 1)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando mientras estás herido.");
		return 1;
	}
    if(!IsACop(playerid) && !Team_NG(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización para usar este comando.");
    new item[32], string[128], giveplayerid;
    if(!sscanf(params, "ds[32]",giveplayerid,item))
    {
        if(!IsPlayerConnectedEx(giveplayerid))               return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
		if(GetPlayerSpecialAction(giveplayerid) != SPECIAL_ACTION_HANDSUP && Info[giveplayerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes revisar a una persona si no tiene las manos arriba ((/rendirse)) o si está detenida.");
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
        if(strcmp(item,"lconduccion",true) == 0)
		{
		    Info[giveplayerid][pCarLic] = 0;
		    format(string, sizeof(string), "* Oficial %s quita la licencia de conducción a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"lvuelo",true) == 0)
		{
		    Info[giveplayerid][pFlyLic] = 0;
		    format(string, sizeof(string), "* Oficial %s quita la licencia de vuelo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"larma",true) == 0)
		{
		    Info[giveplayerid][pGunLic] = 0;
	        format(string, sizeof(string), "* Oficial %s quita la licencia de armas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"drogas",true) == 0)
		{
            Info[giveplayerid][pCrack] = 0;
            Info[giveplayerid][pPot] = 0;
		    format(string, sizeof(string), "* Oficial %s quita las drogas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"materiales",true) == 0)
		{
            Info[giveplayerid][pMats] = 0;
		    format(string, sizeof(string), "* Oficial %s quita los materiales a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"telefono",true) == 0)
		{
            Info[giveplayerid][pPnumber] = 0;
		    format(string, sizeof(string), "* Oficial %s quita el teléfono %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"pasaporte",true) == 0)
		{
            Info[giveplayerid][pPasaporte] = 0;
		    format(string, sizeof(string), "* Oficial %s quita el pasaporte a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else if(strcmp(item,"armas",true) == 0)
		{
		    ResetPlayerWeaponsEx(giveplayerid);
   			format(string, sizeof(string), "* Oficial %s le quita las armas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
   			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Item incorrecto.");
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "* /quitar <jugador> <item>");
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Items: lconduccion, lvuelo, larma, drogas, materiales, telefono, armas, pasaporte");
	}
    return 1;
}
zcmd(getip, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] < 2) return NoAutorizado
    if(!sscanf(params, "d", params[0]))
    {
        new ip[20], string[64];
        GetPlayerIp(params[0],ip,sizeof(ip));
        format(string, sizeof(string), "* La IP de %s es %s", GetPlayerNameEx(params[0]), ip);
        SendClientMessageEx(playerid, COLOR_GRAD2, string);
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /getip <jugador>");
    return 1;
}
CMD:unbanip(playerid, params[])
{
	if(Info[playerid][pBanAppealer] == 1)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /unbanip [ip]");
		if(IsValidIP(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa IP no es válida!");
		new string[128], year, month,day;
		getdate(year, month, day);
		RemoveBan(params);
		format(string, 128, "AdmCmd: %s desbaneó la IP %s", GetPlayerNameEx(playerid), params);
		ABroadCast(COLOR_GENERAL,string,2);
		format(string, sizeof(string), "AdmCmdExe: %s desbaneó la IP %s (%d-%d-%d)", GetPlayerNameEx(playerid), params, month, day, year);
		Log("logs/unbanip.log", string);
	}
	return 1;
}
CMD:unban(playerid, params[])
{
	if(Info[playerid][pBanAppealer] == 1)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /unban [Nombre_Apellido]");
		if(INI_Exist(params))
		{
			new PlayerFile[ 13 + MAX_PLAYER_NAME + 1], string[128]; //tmpunban[32], stringfile[32]
    		format( PlayerFile , sizeof PlayerFile, USERFILE, params);
    		new INI:File = INI_Open(PlayerFile);
    		INI_SetTag(File,"data");
    		INI_WriteInt(File,"Admin",0);
    		INI_WriteInt(File,"BanAppealer",0);
			INI_WriteInt(File,"FactionModerator",0);
			INI_WriteInt(File,"GangModerator",0);
			INI_WriteInt(File,"AdminNivel",0);
			INI_WriteInt(File,"Helper",0);
			INI_WriteInt(File,"Ban",0);
			INI_WriteInt(File,"ShopTech",0);
			INI_Close(File);
    		/*INI_String("IP", tmpunban, 32);
			RemoveBan(tmpunban);*/
			format(string, 128, "AdmCmdExe: %s fue desbaneado por %s.", params, GetPlayerNameEx(playerid));
			ABroadCast(COLOR_LIGHTRED, string, 2);
			new year, month,day;
			getdate(year, month, day);
			format(string, sizeof(string), "[LOG] %s fue desbaneado por %s. (%d-%d-%d)", params, GetPlayerNameEx(playerid),month,day,year);
			Log("logs/unban.log", string);
		}
		else SendClientMessageEx( playerid, COLOR_WHITE, "Esa cuenta no existe." );
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para usar este comando");
	return 1;
}
zcmd(kickstaff, playerid, params[])
{
	if(Info[playerid][pAdmin] < 5) return NoAutorizado
	new string[128];
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /kickstaff [playername]");
	if(INI_Exist(params))
	{
	    //OnPlayerOfflineLogin(params);
	    //if(Info[MAX_PLAYERS][pAdmin] >= 99999) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes limpiar cuentas de administradores de nivel mayor." );
		new PlayerFile[MAX_PLAYER_NAME + 32]; //tmpunban[32], stringfile[32]
    	format( PlayerFile , sizeof PlayerFile, USERFILE, params);
    	new INI:File = INI_Open(PlayerFile);
		INI_SetTag(File,"data");
    	INI_WriteInt(File,"Helper",0);
    	INI_WriteInt(File,"Admin",0);
    	INI_WriteInt(File,"AdminNivel",0);
		INI_WriteInt(File,"BanAppealer",0);
		INI_WriteInt(File,"FactionModerator",0);
		INI_WriteInt(File,"GangModerator",0);
		INI_WriteInt(File,"ShopTech",0);
		INI_Close(File);
		//OnPlayerOfflineSave(params);
       	format(string, sizeof(string), "AdmWarning: %s expulsó del staff a %s (CMD OFFLINE)", GetPlayerNameEx(playerid), params);
       	ABroadCast(COLOR_GENERAL,string,4);
       	Log("logs/admin.log", string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Está cuenta no existe.");
	return 1;
}
zcmd(obanear, playerid, params[])
{
  	if(Info[playerid][pAdmin] < 3) return NoAutorizado
	new string[128], playername[MAX_PLAYER_NAME], reason[64];
	if(sscanf(params, "ss", playername, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /obanear [Nombre_Apellido] [Razón]");
	if(INI_Exist(playername))
	{
		/*if( Info[MAX_PLAYERS][pBanned] == 0)
		{*/
			new PlayerFile[MAX_PLAYER_NAME + 32]; //tmpunban[32], stringfile[32]
    		format( PlayerFile , sizeof PlayerFile, USERFILE, playername);
    		new INI:File = INI_Open(PlayerFile);
    		
    		INI_SetTag(File,"data");
    		INI_WriteInt(File,"Admin",0);
    		INI_WriteInt(File,"Helper",0);
    		INI_WriteInt(File,"AdminNivel",0);
    		INI_WriteInt(File,"Ban",1);
    		INI_Close(File);
            //AddBan(Info[MAX_PLAYERS][pIP]);
			//OnPlayerOfflineSave(playername);
			new year, month,day;
			getdate(year, month, day);
			format(string, sizeof(string), "AdmCmd: %s fue baneado por %s, razón: %s (%d-%d-%d)", playername, GetPlayerNameEx(playerid), reason, month, day, year);
			Log("logs/offban.log", string);
			format(string, 128, "AdmCmd: %s fue baneado por %s, razón: %s [CMD OFFLINE]", playername, GetPlayerNameEx(playerid), reason);
			ABroadCast(COLOR_LIGHTRED,string,2);
		/*}
		else return SendClientMessageEx(playerid, COLOR_WHITE, "Esa cuenta ya está baneada." );*/
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Esa cuenta no existe." );
	return 1;
}
CMD:cambiarclave(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnectedEx(playerid))
	{
		ShowPlayerDialog(playerid, CPASS, DIALOG_STYLE_PASSWORD, "Cambiar Clave", "Por favor pon tu contraseña nueva:", "Cambiar", "Atrás" );
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Debes de estar conectado para usar este comando.");
	return 1;
}
/*CMD:ipod(playerid, params[])
{
    if(Info[playerid][pIpadMusic] == 1)
    {
        new string[128];
		ShowPlayerDialog(playerid, IPAD, DIALOG_STYLE_LIST, "Ipod", "Reggaeton 24/7 HD\nHot Jamz - HipHop\nRock & Metal\nElectronica & House\nLa Mega - Reggaeton\nReggae Hits\nPower Mix\nDefJay R&B\nRadio en Vivo\nApagar IpodMusic", "Play", "Guardar");
        format(string, sizeof(string), "* %s saca su Ipod del bolsillo.", GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un IpodMusic, puedes conseguirlo en un 24/7");
	return 1;
}*/
/*
CMD:stereo(playerid, params[])
{
	if(GetPVarType(playerid, "pDynamicBB")) return SendClientMessage(playerid, COLOR_WHITE, "Tu stereo ya esta prendido.");

	foreach(Player, i)
	{
 		if(GetPVarType(i, "pDynamicBB"))
   		{
  			if(IsPlayerInRangeOfPoint(playerid, 50.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
			{
   				SendClientMessage(playerid, COLOR_WHITE, "No puedes prender tu stereo aqui.");
			    return 1;
			}
		}
		new string[128];
		format(string, sizeof(string), "%s a prendido su stereo", SenderName(playerid));
		SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);

	    new Float:x, Float:y, Float:z;
	    GetPlayerPos(playerid, x, y, z);
	    SetPVarInt(playerid, "pDynamicBB", 1);
	    SetPVarFloat(playerid, "pDynamicBBX", x); SetPVarFloat(playerid, "pDynamicBBY", y); SetPVarFloat(playerid, "pDynamicBBZ", z);
		SetPVarInt(playerid, "pDynamicBBArea", CreateDynamicSphere(x, y, z, 50.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
		SetPVarInt(playerid, "pDynamicBBInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "pDynamicBBVW", GetPlayerVirtualWorld(playerid));
	}
	return 1;
}
*/
CMD:stereo(playerid, params[])
{
new Float: x, Float: y, Float: z;
if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
{
    new ownerid = Info[playerid][pVehicleKeysFrom];
    if(IsPlayerConnectedEx(ownerid))
	{
        new d = Info[playerid][pVehicleKeys];
        if(PlayerVehicleInfo[ownerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
            if(PlayerVehicleInfo[ownerid][d][pvStereo] > 0)
			{
			if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509) return SendClientMessageEx(playerid,COLOR_GREY,"Ese vehiculo no tiene maletero.");
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);
			if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessageEx(playerid, COLOR_GREY, "* Necesitas tener el maletero abierto! (/v maletero para abrirlo)");
			if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_WHITE, "* El motor del vehículo debe estar apagado, escribe /v motor o pulsa la tecla N para apagarlo.");
			foreach(Player, i)
			{
 				if(GetPVarInt(i, "pDynamicBB") == 1)
					{
  					if(IsPlayerInRangeOfPoint(playerid, 65.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
						{
   						SendClientMessage(playerid, COLOR_WHITE, "No puedes prender tu stereo aqui.");
   						return 1;
						}
					}
				SetPVarInt(playerid, "pDynamicBB", 1);
				SetPVarFloat(playerid, "pDynamicBBX", x); SetPVarFloat(playerid, "pDynamicBBY", y); SetPVarFloat(playerid, "pDynamicBBZ", z);
				SetPVarInt(playerid, "pDynamicBBArea", CreateDynamicSphere(GetPVarFloat(playerid,"pDynamicBBX"), GetPVarFloat(playerid,"pDynamicBBY"), GetPVarFloat(playerid,"pDynamicBBZ"), 45.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
				SetPVarInt(playerid, "pDynamicBBInt", GetPlayerInterior(playerid));
				SetPVarInt(playerid, "pDynamicBBVW", GetPlayerVirtualWorld(playerid));
			}
			new string[128];
			format(string, sizeof(string), "* %s ha prendido su stereo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, " Usted no tiene un stereo instalado en su vehiculo compra uno en el 24/7.");
                return 1;
            }
        }
    }
}
for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
{
    if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
    if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
	{
        if(PlayerVehicleInfo[playerid][d][pvStereo] > 0)
		{
			if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509) return SendClientMessageEx(playerid,COLOR_GREY,"Ese vehiculo no tiene maletero.");
			new engine, lights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);
			if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessageEx(playerid, COLOR_GREY, "* Necesitas tener el maletero abierto! (/v maletero para abrirlo)");
			if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_GREY, "* El motor del vehículo debe estar apagado, escribe /v motor o pulsa la tecla N para apagarlo.");
			foreach(Player, i)
			{
 				if(GetPVarType(i, "pDynamicBB"))
					{
  					if(IsPlayerInRangeOfPoint(playerid, 65.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
						{
   						SendClientMessage(playerid, COLOR_WHITE, "Usa /estacion para poner un stream [no funcionara si hay otro stereo encendido cerca].");
   						return 1;
						}
					}
				SetPVarInt(playerid, "pDynamicBB", 1);
				SetPVarFloat(playerid, "pDynamicBBX", x); SetPVarFloat(playerid, "pDynamicBBY", y); SetPVarFloat(playerid, "pDynamicBBZ", z);
				SetPVarInt(playerid, "pDynamicBBArea", CreateDynamicSphere(GetPVarFloat(playerid,"pDynamicBBX"), GetPVarFloat(playerid,"pDynamicBBY"), GetPVarFloat(playerid,"pDynamicBBZ"), 45.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
				SetPVarInt(playerid, "pDynamicBBInt", GetPlayerInterior(playerid));
				SetPVarInt(playerid, "pDynamicBBVW", GetPlayerVirtualWorld(playerid));
			}
			new string[128];
			format(string, sizeof(string), "* %s ha prendido su stereo.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
        }
        SendClientMessageEx(playerid, COLOR_GREY, " Usted no tiene un stereo instalado en su vehiculo compra uno en el 24/7.");
        return 1;
    }
}
SendClientMessageEx(playerid, COLOR_GREY, " Debes de estar cerca de un coche tuyo.");
return 1;
}

CMD:estacion(playerid, params[])
{
	if(GetPVarType(playerid, "pDynamicBB"))
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ")))
		{
			ShowPlayerDialog(playerid,DIALOG_BOOMBOX,DIALOG_STYLE_LIST,""COL_GENERAL"Stereo - Selecciona:",""COL_GENERAL"* "COL_WHITE"Jazz\n"COL_GENERAL"* "COL_WHITE"Pop\n"COL_GENERAL"* "COL_WHITE"Rap\n"COL_GENERAL"* "COL_WHITE"Clásica\n"COL_GENERAL"* "COL_WHITE"Rock & Metal\n"COL_GENERAL"* "COL_WHITE"Insertar URL\n"COL_GENERAL"* "COL_WHITE"Apagar Stereo","Seleccionar", "Cancelar");
		}
		else
		{
   			return SendClientMessage(playerid, COLOR_WHITE, "No estas cerca de tu auto.");
		}
    }
    else
    {
        SendClientMessage(playerid, COLOR_WHITE, " No has prendido tu stereo o hay otro auto con stereo encendido muy cerca.");
	}
	return 1;
}

CMD:apagarstereo(playerid, params[])
{
new Float: xc, Float: yc, Float: zc;
if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
{
    new ownerid = Info[playerid][pVehicleKeysFrom];
    if(IsPlayerConnectedEx(ownerid))
	{
        new d = Info[playerid][pVehicleKeys];
        if(PlayerVehicleInfo[ownerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], xc, yc, zc);
        if(IsPlayerInRangeOfPoint(playerid, 3.0, xc, yc, zc))
		{
            if(PlayerVehicleInfo[ownerid][d][pvStereo] > 0)
			{
				if(GetPVarType(playerid, "pDynamicBB"))
	{
	    DeletePVar(playerid, "pDynamicBB"); DeletePVar(playerid, "pDynamicBBStation"); DeletePVar(playerid, "pDynamicBBLabel");
	    DeletePVar(playerid, "pDynamicBBX"); DeletePVar(playerid, "pDynamicBBY"); DeletePVar(playerid, "pDynamicBBZ");
	    if(GetPVarType(playerid, "pDynamicBBArea"))
	    {
	        new string[128];
			format(string, sizeof(string), "* %s apago su stereo.", GetPlayerNameEx(playerid));
	        foreach(Player, i)
			{
	            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
	            {
	                StopAudioEx(i);
	                SendClientMessage(i, COLOR_PURPLE, string);
				}
			}
	        DeletePVar(playerid, "pDynamicBBArea");
		}
		SendClientMessage(playerid, COLOR_WHITE, "Apagaste tu stereo!");
	}
				else
	{
	    foreach(Player, i)
		{
	        if(GetPVarType(i, "pDynamicBB"))
	        {
				if(GetPVarInt(i, "pDynamicBBVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "pDynamicBBInt") == GetPlayerInterior(playerid) && IsPlayerInRangeOfPoint(playerid, 5.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
				{
				    DeletePVar(i, "pDynamicBB");
					DeletePVar(i, "pDynamicBBStation");
				    DeletePVar(i, "pDynamicBBX");
					DeletePVar(i, "pDynamicBBY");
					DeletePVar(i, "pDynamicBBZ");
					DeletePVar(i, "pDynamicBBInt");
					DeletePVar(i, "pDynamicBBVW");

				    new string[128];
				    if(GetPVarType(i, "pDynamicBBArea"))
				    {
				        for(new x=0; x<MAX_PLAYERS; x++)
						{
				            if(IsPlayerInDynamicArea(x, GetPVarInt(x, "pDynamicBBArea")))
				            {
				                StopAudioEx(x);
				                SendClientMessage(x, COLOR_PURPLE, string);
							}
						}
				        DeletePVar(i, "pDynamicBBArea");
					}
					return 1;
				}
			}
	    }
	    SendClientMessage(playerid, COLOR_WHITE, "No has prendido tu stereo o hay otro stereo encendido muy cerca.");
	}
	        	return 1;
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, " Usted no tiene un stereo instalado en su vehiculo compra uno en el 24/7.");
                return 1;
            }
        }
    }
}
for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
{
    if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], xc, yc, zc);
    if(IsPlayerInRangeOfPoint(playerid, 3.0, xc, yc, zc))
	{
        if(PlayerVehicleInfo[playerid][d][pvStereo] > 0)
		{
			if(GetPVarType(playerid, "pDynamicBB"))
	{
	    DeletePVar(playerid, "pDynamicBB"); DeletePVar(playerid, "pDynamicBBStation"); DeletePVar(playerid, "pDynamicBBLabel");
	    DeletePVar(playerid, "pDynamicBBX"); DeletePVar(playerid, "pDynamicBBY"); DeletePVar(playerid, "pDynamicBBZ");
	    if(GetPVarType(playerid, "pDynamicBBArea"))
	    {
	        new string[128];
			format(string, sizeof(string), "* %s apago su stereo.", SenderName(playerid));
	        foreach(Player, i)
			{
	            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
	            {
	                StopAudioEx(i);
	                SendClientMessage(i, COLOR_PURPLE, string);
				}
			}
	        DeletePVar(playerid, "pDynamicBBArea");
		}
		SendClientMessage(playerid, COLOR_WHITE, "Apagaste tu stereo!");
	}
			else
	{
	    foreach(Player, i)
		{
	        if(GetPVarType(i, "pDynamicBB"))
	        {
				if(GetPVarInt(i, "pDynamicBBVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "pDynamicBBInt") == GetPlayerInterior(playerid) && IsPlayerInRangeOfPoint(playerid, 5.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
				{
				    DeletePVar(i, "pDynamicBB");
					DeletePVar(i, "pDynamicBBStation");
				    DeletePVar(i, "pDynamicBBX");
					DeletePVar(i, "pDynamicBBY");
					DeletePVar(i, "pDynamicBBZ");
					DeletePVar(i, "pDynamicBBInt");
					DeletePVar(i, "pDynamicBBVW");

				    new string[128];
				    if(GetPVarType(i, "pDynamicBBArea"))
				    {
				        for(new x=0; x<MAX_PLAYERS; x++)
						{
				            if(IsPlayerInDynamicArea(x, GetPVarInt(x, "pDynamicBBArea")))
				            {
				                StopAudioEx(x);
				                SendClientMessage(x, COLOR_PURPLE, string);
							}
						}
				        DeletePVar(i, "pDynamicBBArea");
					}
					return 1;
				}
			}
	    }
	    SendClientMessage(playerid, COLOR_WHITE, "No has prendido tu stereo.");
	}
	    	return 1;
        }
        SendClientMessageEx(playerid, COLOR_GREY, " Usted no tiene un stereo instalado en su vehiculo compra uno en el 24/7.");
        return 1;
    }
}
SendClientMessageEx(playerid, COLOR_GREY, " Debes de estar cerca de un coche tuyo.");
return 1;
}
/*
CMD:apagarstereo(playerid, params[])
{
	if(GetPVarType(playerid, "pDynamicBB"))
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"))) return SendClientMessage(playerid, COLOR_WHITE, "No estas cerca de tu auto.");
	    DeletePVar(playerid, "pDynamicBB"); DeletePVar(playerid, "pDynamicBBStation"); DeletePVar(playerid, "pDynamicBBLabel");
	    DeletePVar(playerid, "pDynamicBBX"); DeletePVar(playerid, "pDynamicBBY"); DeletePVar(playerid, "pDynamicBBZ");
	    if(GetPVarType(playerid, "pDynamicBBArea"))
	    {
	        new string[128];
			format(string, sizeof(string), "* %s apago su stereo.", SenderName(playerid));
	        foreach(Player, i)
			{
	            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
	            {
	                StopAudioEx(i);
	                SendClientMessage(i, COLOR_PURPLE, string);
				}
			}
	        DeletePVar(playerid, "pDynamicBBArea");
		}
		SendClientMessage(playerid, COLOR_WHITE, "Apagaste tu stereo!");
	}
	else
	{
	    foreach(Player, i)
		{
	        if(GetPVarType(i, "pDynamicBB"))
	        {
				if(GetPVarInt(i, "pDynamicBBVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "pDynamicBBInt") == GetPlayerInterior(playerid) && IsPlayerInRangeOfPoint(playerid, 5.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
				{
				    if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "pDynamicBBX"), GetPVarFloat(playerid, "pDynamicBBY"), GetPVarFloat(playerid, "pDynamicBBZ"))) return SendClientMessage(playerid, COLOR_WHITE, "No estas cerca de tu stereo.");

				    DeletePVar(i, "pDynamicBB");
					DeletePVar(i, "pDynamicBBStation");
				    DeletePVar(i, "pDynamicBBX");
					DeletePVar(i, "pDynamicBBY");
					DeletePVar(i, "pDynamicBBZ");
					DeletePVar(i, "pDynamicBBInt");
					DeletePVar(i, "pDynamicBBVW");

				    new string[128];
				    if(GetPVarType(i, "pDynamicBBArea"))
				    {
				        for(new x=0; x<MAX_PLAYERS; x++)
						{
				            if(IsPlayerInDynamicArea(x, GetPVarInt(x, "pDynamicBBArea")))
				            {
				                StopAudioEx(x);
				                SendClientMessage(x, COLOR_PURPLE, string);
							}
						}
				        DeletePVar(i, "pDynamicBBArea");
					}
					return 1;
				}
			}
	    }
	    SendClientMessage(playerid, COLOR_WHITE, "No has prendido tu stereo o no estas cerca de el.");
	}
	return 1;
}
*/
zcmd(fly, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] >= 2)
	{
		new Float:px, Float:py, Float:pz, Float:pa;
		GetPlayerFacingAngle(playerid,pa);
		GetPlayerPos(playerid, px, py, pz);
		SetPlayerPos(playerid, px, py+30, pz);
	}
	else NoAutorizado
    return 1;
}

zcmd(cuenta, playerid, params[])
{
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pLevel] >= 1) ShowStats(playerid,playerid);
	return 1;
}
zcmd(gob, playerid, params[])
{
    new string[128];
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /gob [texto]");
		return 1;
	}
	if(Info[playerid][pLeader] == 1 || Gobierno(playerid) || Info[playerid][pLeader] == 3 || Info[playerid][pLeader] == 2)
	{
		if(Info[playerid][pLeader] == 1)
    	{
		    format(string, sizeof(string), "[SAPD] Comandante %s: %s", GetPlayerNameEx(playerid), params[0]);
			SendClientMessageToAllEx(COLOR_GOBALL, string);
    	}
		else if(Info[playerid][pLeader] == 2)
    	{
		    format(string, sizeof(string), "[FBI] Director %s: %s", GetPlayerNameEx(playerid), params[0]);
			SendClientMessageToAllEx(COLOR_GOBALL, string);
    	}
    	else if(Info[playerid][pLeader] == 3)
        {
		    format(string, sizeof(string), "[SAEM] Coronel %s: %s", GetPlayerNameEx(playerid), params[0]);
		    SendClientMessageToAllEx(COLOR_GOBALL, string);
        }
        else if(Presidente(playerid))
        {
		    format(string, sizeof(string), "[GOBIERNO] Presidente %s: %s", GetPlayerNameEx(playerid), params[0]);
		    SendClientMessageToAllEx(COLOR_GOBALL, string);
		}
		else if(Gobierno(playerid) && Info[playerid][pRank] == 5)
		{
		    format(string, sizeof(string), "[GOBIERNO] VicePresidente %s: %s", GetPlayerNameEx(playerid), params[0]);
		    SendClientMessageToAllEx(COLOR_GOBALL, string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización para usar este comando.");
	return 1;
}
zcmd(impuesto, playerid, params[])
{
    if(Presidente(playerid))
    {
        if(!sscanf(params, "i", params[0]))
        {
            if(params[0] < 0 || params[0] > 1000) return SendClientMessageEx(playerid, COLOR_GRAD2, "Valor entre 1 - 1000");

            new string[90];
            TaxValue = params[0];
			SaveStuff();
			format(string, sizeof(string), "* [GOBIERNO] "COL_WHITE"Nuevo pago por impuesto. (%d$)", TaxValue);
			SendClientMessageToAllEx(COLOR_GENERAL, string);
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "* /impuesto <cantidad>");
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes autorización para usar este comando.");
    return 1;
}
zcmd(altavoz, playerid, params[])
{
    if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Usted no tiene un telefono.");
    if(Mobile[playerid] == -1) return SendClientMessageEx(playerid, COLOR_GREY, "Usted no esta en una llamada telefonica.");
    if(IsPlayerConnectedEx(playerid))
    {
		if(Info[playerid][pSpeaker] == 0)
		{
			SendClientMessageEx(playerid, COLOR_YELLOW2, "* Beep * El altavoz esta conectado.");
			Info[playerid][pSpeaker] = 1;
			return 1;
		}
		if(Info[playerid][pSpeaker] == 1)
		{
			SendClientMessageEx(playerid, COLOR_YELLOW2, "* Beep * El altavoz se a desconectado.");
			Info[playerid][pSpeaker] = 0;
			return 1;
		}
	}
	return 1;
}
zcmd(miranda, playerid, params[])
{
    if(IsACop(playerid))
    {
        new string[128];
        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignará uno a costas del Estado.",GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por teléfono.",GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        format(string, sizeof(string),"%s dice: ¿De acuerdo señor?",GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
    }
    return 1;
}
zcmd(robar, playerid, params[])
{
	if(GetPVarInt(playerid, "Injured") == 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás herido.");
		return 1;
	}
    if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar esto aquí.");
    if(Info[playerid][pFMember] != 255)
	{
	    if(Info[playerid][pRob] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* ¡Ya robaste, espera al próximo PayDay!");
	    if(!sscanf(params, "s[32]", params[0]))
	    {
	        new string[128];
	        if(strcmp(params[0],"persona",true) == 0)
	        {
	            new victim = GetClosestPlayer(playerid);
	            if(ProxDetectorS(2.0,playerid, victim))
	            {
                    if(GetPlayerWeapon(victim) == 41)
	    			{
        				format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", GetPlayerNameEx(playerid), GetPlayerNameEx(victim));
						ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
   						format(string, sizeof(string), "* %s le rocía la cara con un spray anti-ladrones a %s.", GetPlayerNameEx(victim), GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Info[playerid][pRob] = 1;
						SendClientMessageEx(params[0], COLOR_YELLOW2, "-> ¡Evitaste que te robaran!");
				    }
				    new rob = random(2)+1;
				    if(rob == 1)
				    {
        				Info[params[0]][pPnumber] = 0;
				        format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y lo logra", GetPlayerNameEx(playerid) ,GetPlayerNameEx(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
   						format(string, sizeof(string), "* %s se acerca hacia %s y le roba su teléfono.", GetPlayerNameEx(playerid) ,GetPlayerNameEx(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessageEx(params[0], COLOR_YELLOW2, "-> ¡Te han robado el teléfono!");
						SendClientMessageEx(playerid, COLOR_YELLOW2, "-> ¡Has robado un teléfono! Véndelo en el mercado negro");
						Info[playerid][pRob] = 1;
						TelfRob[playerid] += 1;
					}
					else
					{
  						format(string, sizeof(string), "%s intenta robarle a %s sin que se de cuenta y falla", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
						ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
   						format(string, sizeof(string), "* %s se da cuenta y le da un golpe de puño a %s.", GetPlayerNameEx(params[0]), GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessageEx(params[0], COLOR_GREEN, "-> Has evitado que te roben!");
						SendClientMessageEx(playerid, COLOR_YELLOW, "Te han pillado! Menudo ostión te has llevado! Corre!");
						Info[playerid][pRob] = 1;
					}
	            }
	        }
	        else if(strcmp(params[0],"24-7",true) == 0)
	        {
	            if(!IsAt247(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No estás en el 24/7!");
	            else
	            {
	            	new robmoney = random(2000);
		            Earn(playerid, robmoney);
					ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 4000); // Rob
					Info[playerid][pRob] = 1;
					format(string, sizeof(string), "* %s amenaza con un arma al vendedor", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SendRadioMessage(1, 0x8D8DFFFF, "* Central: Unos de las tiendas del 24/7 está siendo robada.");
					format(string, sizeof(string), "* Sospechoso identificado como: %s.", GetPlayerNameEx(playerid));
	            }
	        }
	    }
	    else SendClientMessageEx(playerid, COLOR_GREY, "  Uso: /robar [24-7] ó [Persona]");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
    return 1;
}
CMD:ayuda(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnectedEx(playerid))
	{
    	new help[] = "Animaciones\nArmas\nBanco\nCasa\nChat\nCoche\nConcesionario\nFamilias\nLider\nMatrimonio\nPesca\nVip\nTeléfono\nTrabajo\nFacción\nGeneral\nNegocios\nStereo";
    	ShowPlayerDialog(playerid, HELP_MENU, DIALOG_STYLE_LIST, ""COL_GENERAL"ZC:RP - "COL_WHITE"Ayuda", help, ">", "Salir");
	}
	return 1;
}
zcmd(makeleader, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] >= 4 || Info[playerid][pFactionModerator] == 1)
	{
	    if(!sscanf(params, "ui", params[0], params[1]))
	    {
            new ftext[30];
	        if(params[1] < 0 || params[1] > MAX_FACTION) 			return SendClientMessageEx(playerid, COLOR_GREY, "* ID de facción incorrecta.");
	        if(!IsPlayerConnectedEx(params[0]))                   	return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
	        switch(params[1])
	        {
	            case 0:{Info[params[0]][pRank] = 0; ftext = "Ninguna"; }
	            case 1: ftext = "San Andreas Police Department";
	            case 2: ftext = "FBI";
	            case 3: ftext = "San Andreas Ejército Militar";
	            case 4: ftext = "San Andreas Medical Deparment";
	            case 5: ftext = "SA News";
	            case 6: ftext = "Mecanicos 24/7";
	            case 7: ftext = "Gobierno";
                case 8: ftext = "Hitman";
                case 9: ftext = "Banco de Los Santos";
	        }
	        pTazer[params[0]] = 0; 					Info[params[0]][pLeader] = params[1];
	        Info[params[0]][pMember] = params[1]; 	Info[params[0]][pRank] = 6;
	        format(szMessage, sizeof(szMessage), "Administrador %s te asignó el líder de la facción %s.", GetPlayerNameEx(playerid), ftext);
	        SendClientMessageEx(params[0], COLOR_GENERAL, szMessage);
	        format(szMessage, sizeof(szMessage), "AdmCmdExe: %s asigno lider de la facción %s a %s.", GetPlayerNameEx(playerid), ftext, GetPlayerNameEx(params[0]));
			ABroadCast(COLOR_GENERAL, szMessage, 3);
	    }
	    else SendClientMessageEx(playerid, COLOR_GREY, "USA: /makeleader [jugador] [facción]");
	}
	else NoAutorizado
    return 1;
}
zcmd(licencias, playerid, params[]){
    if(!sscanf(params, "d", params[0])){
        if(IsPlayerConnectedEx(params[0])){
			if(ProxDetectorS(5.0, playerid, params[0])){
				new string[84];
				format(string, sizeof(string), "Licencias de %s", GetPlayerNameEx(playerid));
				SendClientMessageEx(params[0], COLOR_WHITE, string);
				if(Info[playerid][pCarLic] > 0)   SendClientMessageEx(params[0], COLOR_GRAD2, " Licencia de conducción");
				if(Info[playerid][pFlyLic] > 0)   SendClientMessageEx(params[0], COLOR_GRAD2, " Licencia de vuelo");
				if(Info[playerid][pBoatLic] > 0)  SendClientMessageEx(params[0], COLOR_GRAD2, " Licencia de navegación");
				if(Info[playerid][pGunLic] == 1)
				{
					SendClientMessageEx(params[0], COLOR_GRAD2, " Licencia de armas");
				}
				else if(Info[playerid][pGunLic] == -1)
				{
					SendClientMessageEx(params[0], COLOR_GRAD2, " Licencia de armas (Suspendida)");
				}
				if(Info[playerid][pTaxiLicense] > 0)   SendClientMessageEx(params[0], COLOR_GRAD2, " Licencia de Taxista");
				format(string, sizeof(string), "* %s muestra sus licencias a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
				ProxDetector(30.0,playerid,string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    }else SendClientMessageEx(playerid, COLOR_GRAD2, "Muy lejos del jugador.");
		}else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
    }else SendClientMessageEx(playerid, COLOR_GRAD2, "* /licencias <jugador>");
    return 1;
}
CMD:reportarbug(playerid, params[])
{
    #pragma unused params
    if(Info[playerid][pBlockBug] == 0)
    {
   		ShowPlayerDialog(playerid,REBUG,DIALOG_STYLE_INPUT,"Reportar Bug","{FFFFFF}Escribe exactamente el bug que has encontrado, se quedará guardado en la Base de Datos\ncuando el equipo de desarrolladores lo revise, tratarán de solucionar el bug lo más rapido posible.\n\nGracias por reportar.", "Reportar", "Cancelar");
   	}
   	else SendClientMessageEx(playerid, COLOR_WHITE, "No puedes reportar bugs, estás bloqueado del comando. Razón: Abuso de Comando");
   	return 1;
}
CMD:tipduda(playerid, params[]){
    #pragma unused params
    if(Info[playerid][pAdmin] > 0){
        SendClientMessageEx(playerid, COLOR_WHITE, "Tips para responder una duda.");
        SendClientMessageEx(playerid, COLOR_GRAD2, "Sé claro y directo, simplemente una respuesta clara");
        SendClientMessageEx(playerid, COLOR_GRAD2, "No es necesaria una conversación con el usuario, esto es sencillo, responde lo necesario.");
        SendClientMessageEx(playerid, COLOR_GRAD2, "Termina una y atiende otra, no te apresures.");
        return 1;
    }
    else{
        SendClientMessageEx(playerid, COLOR_WHITE, "Tips para enviar una duda.");
        SendClientMessageEx(playerid, COLOR_GRAD2, "Sé claro y directo con el administrador, no necesitas conversar con él.");
        SendClientMessageEx(playerid, COLOR_GRAD2, "Si no te dieron una respuesta clara tienes todo el derecho de mandar otra.");
        SendClientMessageEx(playerid, COLOR_GRAD2, "No llames administradores y pregunta lo que buscas.");
    }
    return 1;
}
zcmd(money, playerid, params[])
{
	if(sscanf(params, "ui", params[0], params[1])) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /money [PlayerID] [$] - [Cualquier abuso sera motivo de BAN, hay logs.]");
	if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid,  COLOR_GREY, "* ID Inválida");
	if(Info[playerid][pAdmin] < 4) return NoAutorizado
 	GivePlayerCash(params[0], params[1]);
	format(szMessage, sizeof(szMessage), "AdmCmdExe: %s dio %d de dinero a %s.", GetPlayerNameEx(playerid), params[1], GetPlayerNameEx(params[0]));
	ABroadCast(COLOR_GENERAL, szMessage, 5);
	Log("logs/CMDmoney.log", szMessage);
	return 1;
}
zcmd(sethp, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(sscanf(params, "ui", params[0], params[1])) return SendClientMessageEx(playerid, COLOR_GREY, "Utiliza: /sethp [PlayerID] [HP]");
	if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid,  COLOR_GREY, "* ID Inválida");
	if(Info[playerid][pAdmin] < 2) return NoAutorizado
	SetHP(params[0],params[1]);
	format(szMessage, sizeof(szMessage), "AdmCmdExe: %s estableció la salud de %s a %dHP.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[1]);
	ABroadCast(COLOR_GENERAL, szMessage, 3);
	return 1;
}
zcmd(setarmor, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(sscanf(params, "ui", params[0], params[1])) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /setarmor [PlayerID] [armor]");
	if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid,  COLOR_GREY, "* ID Inválida");
	if(Info[playerid][pAdmin] < 2) return NoAutorizado
	SetPlayerArmour(params[0],params[1]);
	format(szMessage, sizeof(szMessage),"AdmCmdExe: %s estableció el chaleco de %s a %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[1]);
	ABroadCast(COLOR_GENERAL,szMessage,3);
    return 1;
}
zcmd(fullhunger, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(sscanf(params, "u", params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /fullhunger [PlayerID]");
	if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid,  COLOR_GREY, "* ID Inválida");
	if(Info[playerid][pAdmin] < 2) return NoAutorizado
	Info[params[0]][pHungry] = 100;
	HungryCheck(params[0], Info[params[0]][pHungry]);
	format(szMessage, sizeof(szMessage), "AdmCmdExe: %s llenó la barra de hambre de %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]));
	ABroadCast(COLOR_GENERAL, szMessage, 3);
	return 1;
}
zcmd(loteria, playerid, params[])
{
    if(Info[playerid][pAdmin] < 5) return NoAutorizado
    if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /loteria [Lanzar/Ver]");
    new string[128];
    if(strcmp(params,"lanzar",true) == 0)
    {
        if(Jackpot == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* EL pozo está en cero es imposible sortear la lotería aún.");
    	format(string, sizeof(string), ""COL_GENERAL"Noticias de la Loteria: "COL_WHITE"Hemos empesado la elección de la loteria.");
    	OOCNews(COLOR_WHITE, string);
    	new rand = random(250);
    	Lotto(rand);
	}
    else if(strcmp(params,"ver",true) == 0)
    {
        format(string, sizeof(string), "Pozo de lotería: %d",Jackpot);
    	SendClientMessageEx(playerid, COLOR_WHITE,string);
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "* Has ingresado una opción que no existe en este comando.");
    return 1;
}
zcmd(pstat, playerid, params[])
{
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] < 4) return NoAutorizado
	if(sscanf(params, "uii", params[0],params[1],params[2]))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "* /pstat [playerid/nombre] [Numero] [valor]");
		SendClientMessageEx(playerid, COLOR_GREY, "[Nivel 1] [Teléfono 2] [Puntos de respeto 3] [ID House 4] [Hierba 5] [Renta 6] [T. Lucha 7] [Materiales 8] [Drogas 9] [Edad 10] [Trabajo 11]");
		SendClientMessageEx(playerid, COLOR_GREY, "[DudaMute 12] [Warns 13] [Tiempo Conec 14] [JailsAdm 15] [SkillGun 16] [Paquetes 17] [PackDrugs 18] [Total ADMutes 19]");
        return 1;
	}
	if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida o el jugador no está correctamente conectado.");
	if(CommandSpamTimes[playerid] == 8)
	{
	  	format(szMessage, sizeof(szMessage), "ATENCIÓN: %s fue baneado automáticamente, razón: Flood Cmd´s", GetPlayerNameEx(playerid));
	    ABroadCast(COLOR_GENERAL,szMessage,1);
	    Log("logs/hackeraction.log", szMessage);
	    Info[playerid][pBanned] = 2;
	    SendClientMessageEx(playerid, COLOR_GENERAL,"ATENCIÓN: "COL_WHITE"Fuiste baneado automáticamente por seguridad, has usado el comando /pstat muchas veces.");
	    Expulsar(playerid);
		return 1;
	}
	switch(params[1])
	{
		case 1:
		{
            format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Nivel: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
            ABroadCast(COLOR_GENERAL, szMessage, 5);
            Log("logs/pstat.log", szMessage);
			Info[params[0]][pLevel] = params[2];
        }
		case 2:
		{
            format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Teléfono: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
			Info[params[0]][pPnumber] = params[2];
			//format(szMessage, sizeof(szMessage), "Teléfono: #%d", params[2]);
        }
		case 3:
		{
			Info[params[0]][pExp] = params[2];
			//format(szMessage, sizeof(szMessage), "Puntos Respeto: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - P. Respeto: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 4:
		{
			Info[params[0]][pPhousekey] = params[2];
			//format(szMessage, sizeof(szMessage), "Casa: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Casa: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 5:
		{
		    Info[params[0]][pPot] = params[2];
		    //format(szMessage, sizeof(szMessage), "Hierba: %d", params[2]);
		    format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Hierba: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 6:
		{
		    Info[params[0]][pRenting] = params[2];
		    //format(szMessage, sizeof(szMessage), "Renta: %d", params[2]);
		    format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Renta: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 7:
		{
		    Info[params[0]][pFStyle] = params[2];
		    //format(szMessage, sizeof(szMessage), "Tipo Lucha: %d", params[2]);
		    format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Tipo Lucha: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 8:
		{
		    Info[params[0]][pMats] = params[2];
		    //format(szMessage, sizeof(szMessage), "Materiales: %d", params[2]);
		    format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Materiales: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 9:
		{
		    Info[params[0]][pCrack] = params[2];
	    	//format(szMessage, sizeof(szMessage), "Drogas: %d", params[2]);
	    	format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Drogas: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 10:
		{
			Info[params[0]][pAge] = params[2];
			//format(szMessage, sizeof(szMessage), "Edad: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Edad: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 11:
		{
		    Info[params[0]][pJob] = params[2];
		    //format(szMessage, sizeof(szMessage), "Trabajo: %d", params[2]);
		    format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Trabajo: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
        }
		case 12:
		{
	        Info[params[0]][pDudaMute] = params[2];
	        //format(szMessage, sizeof(szMessage), "Tiempo de DudaMute: %d", params[2]);
	        format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - T. DudaMute: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
	    }
		case 13:
		{
	        Info[params[0]][pWarn] = params[2];
	        //format(szMessage, sizeof(szMessage), "Warns: %d", params[2]);
	        format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Warns: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
	    }
		case 14:
		{
			Info[params[0]][pConnectTime] = params[2];
			//format(szMessage, sizeof(szMessage), "Connect Time: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Connect Time: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 15:
		{
			Info[params[0]][pJailAdmin] = params[2];
			//format(szMessage, sizeof(szMessage), "Jails: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Jails: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 16:
		{
			Info[params[0]][pArmsSkill] = params[2];
			//format(szMessage, sizeof(szMessage), "Skill Guns: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Skill Guns: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 17:
		{
			SetPVarInt(params[0], "Packages",  params[2]);
			//format(szMessage, sizeof(szMessage), "Paquetes: %d", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Paquetes: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 18:
		{
		 	Info[params[0]][pCrates] = params[2];
		 	//format(szMessage, sizeof(szMessage), "Pack Drug: %d", params[2]);
		 	format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Pack Drug: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 19:
		{
		 	Info[params[0]][pADMuteTotal] = params[2];
		 	//format(szMessage, sizeof(szMessage), "Total Ad Mutes: %d.", params[2]);
		 	format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Total Ad Mutes: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 20:
		{
			Info[params[0]][pVIPDateD] = params[2];
			//format(szMessage, sizeof(szMessage), "Dia VIP: %d.", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Día VIP: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		case 21:
		{
			Info[params[0]][pVIPDateM] = params[2];
			//format(szMessage, sizeof(szMessage), "Mes VIP: %d.", params[2]);
			format(szMessage, sizeof(szMessage),"AdmCmdExe: %s usó el comando /pstat con %s - Mes VIP: %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(params[0]),params[2]);
			ABroadCast(COLOR_GENERAL, szMessage, 5);
			Log("logs/pstat.log", szMessage);
		}
		default: SendClientMessageEx(playerid, COLOR_GREY, "* Código inválido!");
	}
	CommandSpamTimes[playerid]++;
	CommandSpamUnmute[playerid] = 60;
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
	SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
	return 1;
}
zcmd(check, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 1) return NoAutorizado
	if(!sscanf(params, "d", params[0]))
	{
	    if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	    ShowStats(playerid,params[0]);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /check <ID>");
    return 1;
}
zcmd(setint, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
	if(!sscanf(params, "dd", params[0],params[1]))
	{
	    if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	    new string[64];
	    SetPlayerInterior(params[0], params[1]);
	    format(string, sizeof(string), "- Interior de %s es ahora %d", GetPlayerNameEx(params[0]), params[1]);  SendClientMessageEx(playerid, COLOR_GRAD1, string);
		return SendClientMessageEx(params[0], COLOR_GRAD1, string);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /setint <PlayerID> <Interior>");
    return 1;
}
zcmd(setvw, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
	if(!sscanf(params, "dd", params[0],params[1]))
	{
	    if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "Esa ID es inválida.");
	    new string[64];
	    SetPlayerVirtualWorld(params[0], params[1]);
	    format(string, sizeof(string), "- VirtualWorld de %s ahora es %d", GetPlayerNameEx(params[0]), params[1]);  SendClientMessageEx(playerid, COLOR_GRAD1, string);
		return SendClientMessageEx(params[0], COLOR_GRAD1, string);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /setvw <PlayerID> <VirtualWorld>");
    return 1;
}
zcmd(setcarvw, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] < 1) return NoAutorizado
	if(!sscanf(params, "dd", params[0],params[1]))
	{
	    if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "Esa ID es inválida.");
		SetVehicleVirtualWorld(params[0], params[1]);
	    format(szMessage, sizeof(szMessage), "- VirtualWorld del Auto ID %d, ahora es %d", params[0], params[1]);
		return SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /setcarvw <CarId> <VirtualWorld>");
	return 1;
}
zcmd(silenciar, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
	if(!sscanf(params, "d", params[0]))
	{
	    if(!IsPlayerConnectedEx(params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esa ID es inválida.");
	    if(Muted[params[0]] == 0)
		{
			Muted[params[0]] = 1;
		    format(szMessage, sizeof(szMessage), "Admin %s ha silenciado al jugador %s",GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
			SendClientMessageEx(params[0],COLOR_RED2,szMessage);
			return ABroadCast(COLOR_GENERAL,szMessage,2);
		}
		else
		{
			Muted[params[0]] = 0;
			format(szMessage, sizeof(szMessage), "Admin %s ha desilenciado al jugador %s",GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]));
			SendClientMessageEx(params[0],COLOR_RED2,szMessage);
			return ABroadCast(COLOR_GENERAL,szMessage,2);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /silenciar <PlayerID>");
    return 1;
}
zcmd(warn, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 3) return NoAutorizado
    new reason[32];
	if(!sscanf(params, "ds[32]", params[0], reason))
	{
		if(Info[params[0]][pAdmin] > Info[playerid][pAdmin]) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto a administradores de mayor rango.");
		if(Info[params[0]][pWarn] == 2)
		{
            new ip[32],month,day,year;
			getdate(year,month,day);
			GetPlayerIp(params[0],ip,sizeof(ip));
		    Info[params[0]][pBanned] = 2;
		    Info[params[0]][pWarn]= 0;
		    format(szMessage, sizeof(szMessage), "AdmCmd: %s fue baneado automaticamente, razón: Execesivas advertencias.", GetPlayerNameEx(params[0]));
			BroadCast(COLOR_LIGHTRED,szMessage);
			AddBan(ip);
   			Expulsar(params[0]);
		}
		Info[params[0]][pWarn]++;
		format(szMessage, sizeof(szMessage), "AdmCmdExe: %s dió una advertencia a %s, razón: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(params[0]), reason);
		ABroadCast(COLOR_GENERAL,szMessage,2);
		format(szMessage, sizeof(szMessage), "AdmCmdExe: %s te dió una advertencia [%d/3], razón: %s (TIP: A la 3ra serás baneado automaticamente)",GetPlayerNameEx(playerid), Info[params[0]][pWarn],reason);
		SendClientMessageEx(params[0], COLOR_LIGHTRED, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /warn <PlayerID>");
    return 1;
}

zcmd(admins, playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(Info[playerid][pAdmin] == 0)
    {
       	SendClientMessageEx(playerid, COLOR_GRAD1, "Si tienes preguntas acerca del juego o del servidor usa /duda [pregunta].");
	   	SendClientMessageEx(playerid, COLOR_GRAD1, "Si ves a jugadores sospechosos usando software no permitidos. (Hacks, Cheats, CLEO Mods, ect.) usa /reportar [id] [razón].");
    }
    else
    {
        new string[64];
        SendClientMessageEx(playerid, COLOR_GENERAL, "Admins Online:");
		foreach(Player, i)
		{
			if(Info[i][pAdmin] >= 1 && Info[i][pAdmin] <= 5)
			{
				switch(Info[i][pAdmin])
				{
    				case 1: format(string, sizeof(string), "* Admin Junior: %s", GetPlayerNameEx(i));
			        case 2: format(string, sizeof(string), "* Administrador: %s", GetPlayerNameEx(i));
			        case 3: format(string, sizeof(string), "* Admin Lider: %s", GetPlayerNameEx(i));
			        case 4: format(string, sizeof(string), "* Admin General: %s", GetPlayerNameEx(i));
			        case 5: format(string, sizeof(string), "* Admin Director: %s", GetPlayerNameEx(i));
			        case 6: format(string, sizeof(string), "* Executive Admin: %s", GetPlayerNameEx(i));
			        case 7: format(string, sizeof(string), "* Server Admin: %s", GetPlayerNameEx(i));
	   			}
			    SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
 		}
    }
	return 1;
}

zcmd(techs, playerid, params[])
{
	if(Info[playerid][pAdmin] < 5) return NoAutorizado
	SendClientMessageEx(playerid, COLOR_GRAD1, "Techs Online:");
	new string[84];
    foreach(Player, i)
    {
          if(Info[i][pShopTech] >= 1)
          {
              format(string, sizeof(string), "*Shop Tech: %s", GetPlayerNameEx(i));
              SendClientMessageEx(playerid, COLOR_GRAD2, string);
          }
    }
    return 1;
}
CMD:admintech(playerid, params[]){
if(Info[playerid][pAdmin] >= 6 || Info[playerid][pShopTech] == 1){
	SendClientMessageEx(playerid, COLOR_GREEN,"/shoplaser /shopcar /shopdoble /shopvest /ordenes /aorden /dorden /shopneon");
	SendClientMessageEx(playerid, COLOR_GREEN,"/finorden /setvip /shoptokens");
}
return 1;
}

zcmd(moderadores, playerid, params[])
{
        if(Info[playerid][pAdmin] < 1) return NoAutorizado
        SendClientMessageEx(playerid, COLOR_GRAD1, "Moderadores Online:");
        new string[84];
        foreach(Player, i)
           {
                if (Info[i][pHelper] == 1) format(string, sizeof(string), "*Moderador: %s",GetPlayerNameEx(i));
                else if (Info[i][pHelper] == 2) format(string, sizeof(string), "*Lider de mods: %s",GetPlayerNameEx(i));
           }
        return SendClientMessageEx(playerid, COLOR_GRAD2, string);
}
/*
zcmd(creveh, playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(Info[playerid][pAdmin] < 6) return NoAutorizado
    if(!sscanf(params, "iii", params[0], params[1], params[2]))
	{
        new Float:X,Float:Y,Float:Z;
        GetPlayerPos(playerid, X,Y,Z);
        new carid = CreateVehicle(params[0], X+5,Y,Z, 0.0, params[1], params[2], 600000);
        format(szMessage, sizeof(szMessage), "Vehículo %d creado .", carid);
		SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /veh <id> <color1> <color2>");
    return 1;
}
*/
CMD:ir(playerid,params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 1) return NoAutorizado
	if(sscanf(params, "u", params[0])) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /ir <PlayerID>");
	if(IsPlayerConnectedEx(params[0]))
	{
	   	new Float:p_x,Float:p_y,Float:p_z;
	   	GetPlayerPos(params[0], p_x,p_y,p_z);
	   	new interior = GetPlayerInterior(params[0]);
	   	new vw = GetPlayerVirtualWorld(params[0]);
    	SetPosEx(playerid, p_x,p_y,p_z,0,interior,vw);
    	return SendClientMessageEx(playerid, COLOR_GRAD2, "Teleportado!");
 	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
    return 1;
}
zcmd(traer, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 1) return NoAutorizado
    new giveplayerid;
    if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /traer <PlayerID>");
	if(IsPlayerConnectedEx(giveplayerid))
	{
	    if(Info[giveplayerid][pAdmin] == 6) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes traer a un jugador de alto rango administrativo.");
	    new Float:p_x,Float:p_y,Float:p_z;
	    GetPlayerPos(playerid, p_x,p_y,p_z);
	    new interior = GetPlayerInterior(playerid);
	    new vw = GetPlayerVirtualWorld(playerid);
    	SetPosEx(giveplayerid, p_x,p_y,p_z,0,interior,vw);
    	return SendClientMessageEx(giveplayerid, COLOR_WHITE, "Teleportado!");
  	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Esa ID es inválida.");
    return 1;
}
zcmd(checkwep, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
    new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /checkwep <PlayerID>");
	if(!IsPlayerConnectedEx(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	if(GetPVarInt(giveplayerid, "EventToken") != 0 || GetPVarInt(giveplayerid, "IsInArena") == 1) SendClientMessageEx(playerid, COLOR_GREY, "Estás armas son del paintball o un evento.");
	new x,xweapon, xbalas, string[80],NombreArma[24];
	format(string, sizeof(string), "Armas de %s:", GetPlayerNameEx(giveplayerid)); SendClientMessageEx(playerid, COLOR_GRAD1, string);
	for (new slot=0; slot<14; slot++)
	{
		GetPlayerWeaponData(giveplayerid, slot, xweapon, xbalas);
	    if(xweapon != 0)
		{
    	    GetWeaponName(xweapon,NombreArma,sizeof(NombreArma));
	        format(string, sizeof(string), "%s Balas: [%d]",NombreArma, xbalas);
	        x++;
	        SendClientMessageEx(playerid, COLOR_GRAD1, string);
	    }
	    if(x >= 5)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, string);
			x = 0;
			format(string, sizeof(string), "");
		}
		else format(string, sizeof(string), "%s,  ", string);
	}
    return 1;
}
zcmd(facciones, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] > 2)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "= ID'S de Facciones =");
		SendClientMessageEx(playerid, -1, "1. SAPD - 2. FBI - 3. SAEM");
		SendClientMessageEx(playerid, -1, "4. SAMD - 5. SA News - 6. Car Point");
		SendClientMessageEx(playerid, -1, "7. Gobierno - 8. Hitman - 9. Banco Central");
	}
	else NoAutorizado
	return 1;
}
zcmd(alimpiar, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] <= 1) return NoAutorizado
    CleanScreen();
	format(szMessage, sizeof(szMessage), "AdmCmdExe: Limpieza de chat por %s.", GetPlayerNameEx(playerid));
	return ABroadCast(COLOR_GENERAL,szMessage,1);
}
zcmd(bigears, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
    if (!BigEar[playerid])
	{
        BigEar[playerid] = 1;
		return SendClientMessageEx(playerid, COLOR_GRAD2, "BigEars Mode On");
	}
	else
	{
		BigEar[playerid] = 0;
		return SendClientMessageEx(playerid, COLOR_GRAD2, "BigEars Mode Off");
	}
}
zcmd(slap, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 1) return NoAutorizado
    new giveplayerid;
    if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /slap <PlayerID>");
	if(IsPlayerConnectedEx(giveplayerid))
	{
	    new Float:sl[3];
		GetPlayerPos(giveplayerid, sl[0], sl[1], sl[2]);
		SetPlayerPos(giveplayerid, sl[0], sl[1], sl[2]+5);
		PlayerPlaySound(giveplayerid, 1130, sl[0], sl[1], sl[2]+5);
		format(szMessage, sizeof(szMessage), "AdmCmdExe: %s golpeó a %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
		ABroadCast(COLOR_GENERAL,szMessage,2);
		return SendClientMessageEx(giveplayerid, COLOR_RED2, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
    return 1;
}
zcmd(setskin, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
	new giveplayerid, skin;
	if(!sscanf(params, "ui", giveplayerid, skin))
	{
	    if(IsPlayerConnectedEx(giveplayerid))
		{
		    if(skin > 299 || skin < 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Skin ID incorrecto (0-299)");
		    Info[giveplayerid][pChar] = skin;
		    SetPlayerSkin(giveplayerid, Info[giveplayerid][pChar]);
		    format(szMessage, sizeof(szMessage), "AdmCmdExe: %s te cambió el skin, ID SKIN: %d.", GetPlayerNameEx(playerid), skin);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, szMessage);
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s cambió el skin de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			return ABroadCast(COLOR_GENERAL,szMessage,2);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /setskin <PlayerID> <SkinID>");
    return 1;
}
zcmd(vehslap, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 3) return NoAutorizado
	new alt, giveplayerid;
	if(!sscanf(params, "di", giveplayerid, alt))
	{
	    if(IsPlayerConnectedEx(giveplayerid))
		{
		    new Float:slx, Float:sly, Float:slz;
		    GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
			SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+alt);
			PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+alt);
			format(szMessage, sizeof(szMessage), "AdmCmdExe:%s golpeó tu vehiculo.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_RED2, szMessage);
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s golpeó el vehiculo de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			return ABroadCast(COLOR_GENERAL,szMessage,3);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /vehslap <PlayerID> <Altitud>");
    return 1;
}
zcmd(getcar, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 3) return NoAutorizado
    new Float:plocx,Float:plocy,Float:plocz, vehicleid;
	if(!sscanf(params, "i", vehicleid))
	{
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		return SetVehiclePos(vehicleid,plocx,plocy+4, plocz);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* /getcar <VehicleID>");
	return 1;
}
zcmd(gotocar, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 3) return NoAutorizado
    new Float:cwx2,Float:cwy2,Float:cwz2,vehicleid;
    if(!sscanf(params, "i", vehicleid))
	{
		GetVehiclePos(vehicleid, cwx2, cwy2, cwz2);
		return SetPlayerPos(playerid, cwx2, cwy2, cwz2);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* /gotocar <VehicleID>");
	return 1;
}
zcmd(fixveh, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] < 2) return NoAutorizado
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en un vehículo.");
    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
	RepairVehicle(GetPlayerVehicleID(playerid));
	return SendClientMessageEx(playerid, COLOR_GRAD2, "* Vehículo reparado.");
}
zcmd(fixvid, playerid, params[]){
        if(Info[playerid][pAdmin] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización a usar este comando.");
		new vehicleid;
        if(!sscanf(params, "i", vehicleid)){
			SetVehicleHealth(vehicleid, 1000.0);
			SendClientMessageEx(playerid, COLOR_WHITE, "Vehículo reparado.");
			RepairVehicle(vehicleid);
		} else SendClientMessageEx(playerid, COLOR_GRAD2, "* /fixvid <VehicleID>");
		return 1;
    }

zcmd(mascara, playerid, params[])
{
    if(Info[playerid][pMask] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No tienes máscara!");
    if(Info[playerid][pMaskuse] == 0){
        foreach(Player, i){
	    	if(IsPlayerConnectedEx(i)){
	   			ShowPlayerNameTagForPlayer(i, playerid, 0);
			}
		}
		Info[playerid][pMaskuse] = 1;
  		format(szMessage, sizeof(szMessage), "* %s se pone una máscara.", GetPlayerNameEx(playerid));
  		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    else{
        foreach(Player, i){
	    	if(IsPlayerConnectedEx(i)){
	   			ShowPlayerNameTagForPlayer(i, playerid, 1);
			}
		}
		Info[playerid][pMaskuse] = 0;
  		format(szMessage, sizeof(szMessage), "* %s se quita la máscara de su rostro.", GetPlayerNameEx(playerid));
  		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    return 1;
}

CMD:ah(playerid, params[]) return cmd_ahelp(playerid, params);
CMD:ahelp(playerid, params[])
{
	#pragma unused params
		if(Info[playerid][pAdmin] >= 1)
		{
		 	SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {2ECCFA}Administrador Junior");
		 	SendClientMessageEx(playerid, COLOR_WHITE, "/adminduty /jail /congelar /descongelar /ir /traer /sendtols /a /aa /spec /check");
		 	SendClientMessageEx(playerid, COLOR_WHITE, "/ar (AReporte) /rr (RReporte) /nao (RevReporte) /darrol /leveluno /togmods /revive");
		 	
		}
		if(Info[playerid][pAdmin]>=2)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {01A9DB}Administrador");
			SendClientMessageEx(playerid, COLOR_WHITE, "/weaponr /bigears /slap /setskin /jail(cuenta) /liberar /jetpack /irapunto /enmascarados /dudamute");
            SendClientMessageEx(playerid, COLOR_WHITE, "/togac /silenciar /alimpiar /sethp /setarmor /banear /admute (unmute) /checkllaves");
			SendClientMessageEx(playerid, COLOR_WHITE, "/fixvid /fixveh /fly /setint /setvw /checkwep /kick /disarm /rtcar /recargarcochesd /fullhunger");
		if(Info[playerid][pAdmin]>=3)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {0040FF}Administrador lider");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/rtcar /iracochede /respawncars  /warn /rto(reset) /wepreset /recargarcochesd /racall /banip /entercar");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/getcar /gotocar /mark (gotomark) /ao /reportes /god /unlockveh /vehslap /setcarvw /fixvehall /obanear");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/fixvehall /forcedied /adarfichas /minombre /gotoco /ncambios /aname /dname");
		}
		if(Info[playerid][pAdmin]>=4)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {0B614B}Administrador General");
			SendClientMessageEx(playerid, COLOR_WHITE, "/unban /money /famchat /mole /pstat /listatoys /setadminname ");
			SendClientMessageEx(playerid, COLOR_WHITE, "/unbanip /facchat /cnnn /facmotd /fammotd /givegun /makeleader /adminfam");
			SendClientMessageEx(playerid, COLOR_WHITE, "/goinhouse /gotohouse /editar /hacermod /destruircar /darestilopelea");
		}
		if(Info[playerid][pAdmin]>=5)
		{
		    SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {688A08}Administrador Director");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/limpiarreportes /loteria /obanear /deletecp /forcep /makebanap /makefmod /makefammod ");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/ocambiarpassde /togpm /bloqbug (unbloq) /setadminlvl /kickstaff /cleanvarstaff /amotd");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/avecasa /mmotd /hacerlidermod /kickmod /setmoney /tod /weatherall /adminnegocio");
		}
		if(Info[playerid][pAdmin]>=6)
		{
  			SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {DBA901}Executive Admin");
		    SendClientMessageEx(playerid, COLOR_WHITE, "/update /crearregalo(OFF) /motd /nonewbie (desactiva canal dudas)");
			SendClientMessageEx(playerid, COLOR_WHITE, "/mps /admins /kickstaff /adminpuntos /ddedit /admincasa /darobjeto");
		}
        if(Info[playerid][pAdmin]>=7)
        {
  		    SendClientMessageEx(playerid, COLOR_WHITE, "Comandos - {FF0000}Server Admin");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/adminshop /noac /crearsalecar /borrarsalecar /editarcamara /crear(borrar)camara");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/Setfbanco (Nuevo Balance De Banco) /settax (Nuevo Balance De Estado)");
	 		SendClientMessageEx(playerid, COLOR_WHITE, "/crearatm /borraratm /editaratm");
	 	}
        
		SendClientMessageEx(playerid, COLOR_GENERAL, "--------------------------------------------------------------------------------------------------------------------------------");
		}
		else NoAutorizado
	return 1;
}
zcmd(modhelp, playerid, params[]){
    switch(Info[playerid][pHelper])
	{
        case 1: SendClientMessageEx(playerid, COLOR_GENERAL, "Comandos: {FFFFFF}/modduty - /aceptarayuda - /finalizarayuda /togmods /aduda");
       case 2: SendClientMessageEx(playerid, COLOR_GENERAL, "Comandos: {FFFFFF}/modduty - /aceptarayuda - /finalizarayuda - /kickmod - /hacermod - /mmotd /togmods");
        default: NoAutorizado
    }
	return 1;
}
zcmd(bloqbug, playerid, params[])
{
	if(Info[playerid][pAdmin] >= 5)
	{
		new giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /bloqbug [playerid]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s no podrá reportar nunca más un bug's, razón: Abuso de comando. Admin: %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
			BroadCast(COLOR_LIGHTRED, szMessage);
			Log("logs/reportbug.log", szMessage);
			Info[giveplayerid][pAdmin] = 0;
			Info[giveplayerid][pBlockBug] = 1;
			Kick(giveplayerid);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	}
	else NoAutorizado
	return 1;
}
zcmd(unbloqbug, playerid, params[])
{
	if(Info[playerid][pAdmin] >= 5)
	{
		new giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USE: /unbloqbug [playerid]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s desbloqueó del comando [/reportarbug] %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_LIGHTRED, szMessage,3);
 			Log("logs/reportbug.log", szMessage);
			Info[giveplayerid][pBlockBug] = 0;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	}
	else NoAutorizado
	return 1;
}
zcmd(cleanvarstaff, playerid, params[])
{
	new giveplayerid;
	if(Info[playerid][pAdmin] >= 5)
	{
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /cleanvarstaff [playerid]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
       		format(szMessage, sizeof(szMessage), "AdmWarning: %s limpió variables admin a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
       		ABroadCast(COLOR_GENERAL,szMessage,2);
			Log("logs/admin.log", szMessage);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, "Restearon tus variables de administrador a 0.");
			Info[giveplayerid][pAdmin] = 0;
			Info[giveplayerid][pHelper] = 0;
			Info[giveplayerid][pFactionModerator] = 0;
			Info[giveplayerid][pBanAppealer] = 0;
			Info[giveplayerid][pGangModerator] = 0;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
	}
	else NoAutorizado
	return 1;
}
zcmd(noduda, playerid, params[])
{
    if(Info[playerid][pAdmin] < 6) return NoAutorizado
    if (!nod)
	{
		nod = 1;
		SendClientMessageToAllEx(COLOR_GRAD2,"*** Canal de dudas ha sido desactivado.");
	}
	else
	{
		nod = 0;
		SendClientMessageToAllEx(COLOR_GRAD2,"*** Canal de dudas ha sido activado.");
	}
	return 1;
}
zcmd(removergps, playerid, params[])
{
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pMember] == 1||Info[playerid][pLeader] == 1){
		DisablePlayerCheckpoint(playerid);
	}
	else if(Info[playerid][pMember] == 4||Info[playerid][pLeader] == 4){
		DisablePlayerCheckpoint(playerid);
	}
	return 1;
}
zcmd(noac, playerid, params[])
{
    if(Info[playerid][pAdmin] < 7) return NoAutorizado
    if (!noac)
	{
		noac = 1;
		format(szMessage, sizeof(szMessage), "AdmWarning: [ADMIN CHAT BLOQUEADO Por %s]",GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL,szMessage,1);
	}
	else
	{
		noac = 0;
		format(szMessage, sizeof(szMessage), "AdmWarning: [ADMIN CHAT DESBLOQUEADO Por %s]",GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL,szMessage,1);
	}
	return 1;
}
zcmd(nofac, playerid, params[])
{
    if(Info[playerid][pLeader] < 1) return NoAutorizado
    new string[80];
    if (!nofac)
	{
		nofac = 1;
		format(string, sizeof(string), "Chat de Facción Bloqueado por %s ",GetPlayerNameEx(playerid));
		SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
	}
	else
	{
		nofac = 0;
		format(string, sizeof(string), "Chat de Facción desbloqueado por %s",GetPlayerNameEx(playerid));
		SendFamilyMessage(Info[playerid][pMember], 0x7BDDA5AA, string);
	}
	return 1;
}
zcmd(update, playerid, params[])
{
    if (Info[playerid][pAdmin] < 6) return NoAutorizado
    saveAccounts();
	SaveStuff();
    UpdatePoints();
	SaveDynamicDoors();
	atmSave();
	saveCarSale();
	saveCodes();
	saveFamilies();
	foreach(Player, i) { OnPlayerSavedStats(i); }
	ABroadCast(COLOR_GENERAL,"AdmCmdExe: Archivos y cuentas actualizadas.",1);
    return 1;
}
zcmd(stopanim, playerid, params[]){
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás herido.");
	if(Info[playerid][pEstado] == 0) return ClearAnimations(playerid);
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar esto ahora");
	return 1;
}
zcmd(setadminlvl, playerid, params[])
{
    if(Info[playerid][pAdmin] < 5) return NoAutorizado
    new iLevel, iTarget;
	if(sscanf(params, "ud", iTarget, iLevel)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /setadminlevel [playerid] [nivel]");
    if(IsPlayerConnectedEx(iTarget))
    {
		if(Info[playerid][pAdmin] < Info[iTarget][pAdmin]) return SendClientMessage(playerid, COLOR_GREY, "* No puedes modificar el nivel administrativo de un administrador de mayor rango.");
		//if(Info[playerid][pAdmin] < iLevel && iTarget == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes modificar el nivel administrativo tuyo a un rango mayor.");
		if(Info[playerid][pAdmin] < iLevel) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes modificar el nivel administrativo a un rango mayor.");
        if(iLevel > 7)
        {
			format(szMessage, sizeof(szMessage), "AdmWarning: %s ha intentado dar un rango no permitido a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget));
			ABroadCast(COLOR_GENERAL,szMessage,1);
			return 1;
        }
		if(Info[iTarget][pAdmin] < iLevel)
        {
		    format(szMessage, sizeof(szMessage), "Has sido ascendido a administrador nivel %d por %s.", iLevel, GetPlayerNameEx(playerid));
		    SendClientMessageEx(iTarget, COLOR_GENERAL, szMessage);

			format(szMessage, sizeof(szMessage), "Has ascendido a %s a administrador nivel %d.",GetPlayerNameEx(iTarget), iLevel);
		    SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		}
		else
		{
		    format(szMessage, sizeof(szMessage), "Has sido descendido a administrador nivel %d por %s.", iLevel, GetPlayerNameEx(playerid));
		    SendClientMessage(iTarget, COLOR_YELLOW, szMessage);
		    
		    format(szMessage, sizeof(szMessage), "Has descendido a %s a administrador nivel %d.",GetPlayerNameEx(iTarget), iLevel);
		    SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
        }
        Info[iTarget][pAdmin] = iLevel;
		format(szMessage, sizeof(szMessage), "* %s asignó a %s administrador nivel %d.", GetPlayerNameEx(playerid),GetPlayerNameEx(iTarget),iLevel);
		Log("logs/security.log", szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
	return 1;
}
zcmd(makefmod, playerid, params[])
{
    if(Info[playerid][pAdmin] < 5) return NoAutorizado
    new giveplayerid;
    if(!sscanf(params, "u", giveplayerid))
	{
        if(IsPlayerConnectedEx(giveplayerid))
		{
			Info[giveplayerid][pFactionModerator] = 1;
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s lo ha asignado moderador de facciones.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha asignado moderador de facciones a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,szMessage,2);
			Log("logs/security.log", szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /makefmod <ID> ");
    return 1;
}

zcmd(makeshop, playerid, params[])
{
    if(Info[playerid][pAdmin] < 7) return NoAutorizado
    new giveplayerid;
    if(!sscanf(params, "u", giveplayerid))
	{
        if(IsPlayerConnectedEx(giveplayerid))
		{
			Info[giveplayerid][pShopTech] = 1;
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s lo ha asignado Técnico de la Tienda Online.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha asignado Técnico de la Tienda Online a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,szMessage,2);
			Log("logs/security.log", szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /makeshop <ID> ");
    return 1;
}

zcmd(makefammod, playerid, params[])
{
    if(Info[playerid][pAdmin] < 5) return NoAutorizado
    new giveplayerid;
    if(!sscanf(params, "u", giveplayerid))
	{
        if(IsPlayerConnectedEx(giveplayerid))
		{
			Info[giveplayerid][pGangModerator] = 1;
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s lo ha asignado moderador de familias y bandas.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha asignado moderador de familias y bandas a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,szMessage,2);
			Log("logs/security.log", szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, " Esa ID es inválida.");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /makefammod <ID> ");
    return 1;
}
zcmd(makepaban, playerid, params[])
{
    if(Info[playerid][pAdmin] < 5) return NoAutorizado
    new giveplayerid;
    if(!sscanf(params, "u", giveplayerid))
	{
        if(IsPlayerConnectedEx(giveplayerid))
		{
			Info[giveplayerid][pBanAppealer] = 1;
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s lo ha asignado Apelador a Desbaneo.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
			format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha asignado Apelador de desbaneos a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,szMessage,2);
			Log("logs/security.log", szMessage);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /makepaban <ID>");
    return 1;
}
zcmd(disarm, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if (Info[playerid][pAdmin] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "* No autorizado!");
    new giveplayerid;
	if(!sscanf(params, "u", giveplayerid))
	{
		if(!IsPlayerConnectedEx(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esa ID es inválida.");
        new string[84];
        ResetPlayerWeaponsEx(giveplayerid);
        format(string, sizeof(string), "AdmCmdExe: %s limpio el inventario de armas de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
        ABroadCast(COLOR_GENERAL,string,2);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /disarm <PlayerID>");
	return 1;
}
CMD:jailcuenta(playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] >= 2)
	{
		new string[128], name[MAX_PLAYER_NAME], minutes;
		if(sscanf(params, "s[24]d", name, minutes)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /jailcuenta [Nombre_Apellido] [Minutos]");
		if(INI_Exist(name))
		{
			new PlayerFile[MAX_PLAYER_NAME + 32];
    		format( PlayerFile , sizeof PlayerFile, USERFILE, name);
    		new INI:File = INI_Open(PlayerFile);
    		INI_SetTag(File,"data");
    		INI_WriteInt(File,"Jailed",4);
    		INI_WriteInt(File,"JailTime",minutes*60);
    		INI_WriteFloat(File,"Pos_x",172.82);
    		INI_WriteFloat(File,"Pos_y",1951.59);
    		INI_WriteFloat(File,"Pos_z",3870.5);
    		INI_Close(File);
			new year, month,day;
			getdate(year, month, day);
			format(string, sizeof(string), "AdmCmd: %s fue jaileado por %s (%d-%d-%d) [CMD OFFLINE]", name, GetPlayerNameEx(playerid),month,day,year);
			Log("logs/admin.log", string);
			format(string, 128, "AdmCmdExe: %s fue jaileado por %s. [CMD OFFLINE]", name, GetPlayerNameEx(playerid));
			ABroadCast(COLOR_LIGHTRED,string,2);
		}
		else SendClientMessageEx( playerid, COLOR_GREY, "* Esa cuenta no existe." );
	}
	else NoAutorizado
	return 1;
}
zcmd(ls, playerid, params[]){
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(Info[playerid][pAdmin] >= 1){
    	if (GetPlayerState(playerid) == 2)
		{
			return SetVehiclePos(GetPlayerVehicleID(playerid), 1529.6,-1691.2,13.3);
		}
		else{
			SetPosEx(playerid, 1529.6,-1691.2,13.3, 0, 0 ,0);
		}
	}
	else NoAutorizado
	return 1;
}
zcmd(sf, playerid, params[]){
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if (Info[playerid][pAdmin] < 1) return NoAutorizado
    if (GetPlayerState(playerid) == 2){
		return SetVehiclePos(GetPlayerVehicleID(playerid), -1417.0,-295.8,14.1);
	}
	else{
		SetPosEx(playerid, -1417.0,-295.8,14.1, 0, 0 ,0);
		return 1;
	}
}
zcmd(lv, playerid, params[]){
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if (Info[playerid][pAdmin] < 1) return NoAutorizado
    if (GetPlayerState(playerid) == 2){
		return SetVehiclePos(GetPlayerVehicleID(playerid), 1694.6566,1453.4523,10.7632);
	}
	else{
		SetPosEx(playerid, 1694.6566,1453.4523,10.7632, 0, 0 ,0);
		return 1;
	}
}
zcmd(entercar, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    new vehicleid;
    if (Info[playerid][pAdmin] < 3) return NoAutorizado
    if (!sscanf(params, "i", vehicleid))
	{
        PutPlayerInVehicle(playerid, vehicleid, 1);
		return SendClientMessageEx(playerid, COLOR_GRAD1, "¡Teleportado!");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /entercar <VehicleID>");
    return 1;
}
zcmd(fuelcars, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if (Info[playerid][pAdmin] < 3) return NoAutorizado
    SendClientMessageToAllEx(COLOR_GREEN, "La gasolina de los vehículos fue llenada");
	for(new c=0;c<MAX_VEHICLES;c++) VehicleFuel[c] = 500;
    return 1;
}
zcmd(cnnn, playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    new text[64], type;
    if (Info[playerid][pAdmin] < 4) return NoAutorizado
    if (!sscanf(params, "is", type, text))
	{
        if(type == 2) return SendClientMessageEx(playerid, COLOR_GREY, "¡No puedes elegir el #2!");
		foreach(Player, i){ if(IsPlayerConnectedEx(i)){ GameTextForPlayer(i, text, 5000, type); } }
        new string[128];
        format(string, sizeof(string), "AdmCmdExe: %s usó el comando /cnnn.", GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL,string,4);
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /cnnn <Tipo> <Texto>");
    return 1;
}
zcmd(deposito, playerid, params[]){
   	if (PlayerToPoint(10, playerid,1619.69995117,-1852.59997559,12.50000000)){
		MoveDynamicObject(depgate,1626.00000000,-1852.19995117,12.50000000, 4.0);
  		PlayerPlaySound(playerid, 1153, 0,0,0);
  		SetTimer("depositogate", 7000, 0);
	}
	return 1;
}
zcmd(apgarage, playerid, params[]){
	if(IsAPolice(playerid)){
    	if (PlayerToPoint(10, playerid,1589.053344,-1638.123168,14.122960)){
  			MoveDynamicObject(pdgate1,1599.053344,-1638.123168,14.122960, 0.8);
  			PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
			return 1;
		}
		if (PlayerToPoint(15, playerid,1545.7398681641, -1627.7280273438, 15.206203460693)){
  			MoveDynamicObject(pdgate2,1545.7392578125, -1627.7275390625, 20.381204605103, 3.0);
  			SetTimer("GateClose5", 7000, 0);
  			return 1;
		}
        else SendClientMessageEx(playerid, COLOR_GREY,"  No hay señal!");
	}
	else if(Team_LSTV(playerid)){
  		if (PlayerToPoint(30, playerid,781.77209500,-1330.31884800,12.68660500)){
       		MoveDynamicObject(tvp, 773.89648400,-1330.31884800,12.68660500, 5.0);
       		SetTimer("GateCloseCNN", 7000, 0);
       		return 1;
   		}
        if (PlayerToPoint(30, playerid,774.11425781,-1384.98632812,12.92022705)){
       		MoveDynamicObject(tvp1, 765.11425781,-1384.98632812,12.92022705, 5.0);
       		SetTimer("GateCloseCNN1", 7000, 0);
       		return 1;
      	}
      	else SendClientMessageEx(playerid, COLOR_GREY,"  No hay señal!");
	}
	else if(Team_NG(playerid)) // By CreadorRejas Grove4l
	{
  		if (PlayerToPoint(30, playerid,135.332427,1941.738647,20.890346)){
  		    MoveDynamicObject(saem1, 135.332427,1941.738647,25.890346, 5.0);
       		SetTimer("OpenDoorNG", 7000, 0);
       		return 1;
       	}
  		if (PlayerToPoint(30, playerid,349.008087,1801.077392,20.078582)){
  		    MoveDynamicObject(saem2, 349.008087,1801.077392,25.078582, 5.0);
       		SetTimer("OpenDoorNG2", 7000, 0);
       		return 1;
       	}
      	else SendClientMessageEx(playerid, COLOR_GREY,"  No hay señal!");
	}
	else if(Team_SAMD(playerid)){
      	if (PlayerToPoint(30, playerid,1089.19568, -1383.82886, 15.23783)){
	       	MoveDynamicObject(hospitalgate, 1089.19568, -1383.82886, 9.68679, 1.5);
	       	SetTimer("GateClose4", 7000, 0);
	       	return 1;
	    }
    	else SendClientMessageEx(playerid, COLOR_GREY,"  No hay señal!");
	}
	else if(Gobierno(playerid)){
        if (PlayerToPoint(10, playerid,1386.099609375, -1647.8994140625, 14.10000038147)){
      		MoveDynamicObject(gobiernogate,1390.39074707,-1639.57287598,16.29999924, 5.0);
            SetTimer("GateCloseGob", 7000, 0);
            return 1;
		}
		if (PlayerToPoint(15, playerid,1391.29980469,-1629.89941406,12.52500343) || PlayerToPoint(15, playerid,1391.29980469,-1629.89941406,37.20010376)){
      		MoveDynamicObject(gobiernogate1,1391.29980469,-1629.89941406,37.20010376, 5.0);
      		SetTimer("GateCloseGob1", 7000, 0);
      		return 1;
		}
        else SendClientMessageEx(playerid, COLOR_GREY,"  No hay señal!");
    }
    else SendClientMessageEx(playerid, COLOR_GREY,"Usted no tiene un mando a distancia.");
    return 1;
}
zcmd(cpgarage, playerid, params[]) return CheckForCloseDoor(playerid);
zcmd(sacarsangre, playerid, params[]){
    new giveplayerid;
    if(!sscanf(params, "d", giveplayerid)){
        if(OnDuty[playerid] == 0)   return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No estás de servicio!");
        if(IsPlayerConnectedEx(giveplayerid)){
            if(Team_SAMD(playerid)){
                if (ProxDetectorS(5.0, playerid, giveplayerid)){
        		    new Float:HP, string[128]; GetPlayerHealth(giveplayerid, HP);
        		    if(HP < 100) return SendClientMessageEx(playerid, COLOR_GRAD2, "El paciente debe estar con el máximo de vida");
        		    SetHP(giveplayerid, HP-80);
					SetPlayerDrunkLevel(giveplayerid, 3000);
					Blood += 80;
					format(string, sizeof(string), "* El doctor %s realiza una extracción de sangre a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "Información: Hay %d ml de sangre disponible.", Blood);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					SaveStuff();
        		} else SendClientMessageEx(playerid, COLOR_GRAD2, "El jugador debe estar cerca de usted");
            } else SendClientMessageEx(playerid, COLOR_GRAD2, "¡No eres médico!");
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador no conectado");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /sacarsangre <jugador>");
    return 1;
}
zcmd(pcinfo, playerid, params[]){
    if(Team_SAMD(playerid)){
		new string[128];
    	ClearChatbox(playerid);
        SendClientMessageEx(playerid, 0x00D535FF, "PCU (Loading ... )");
        format(string, sizeof(string), "Sangre disponible: %d", Blood);
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        format(string, sizeof(string), "Radiación TAC: No disponible");
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        format(string, sizeof(string), "Fondos: No disponible");
        SendClientMessageEx(playerid, COLOR_WHITE, string);
        SendClientMessageEx(playerid, 0x00D535FF, "------------------------------");
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "¡No eres médico!");
	return 1;
}
zcmd(atar, playerid, params[]){
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando mientras estás herido.");
	if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Necesitas ser nivel 2 para arriba!");
    if(Rope[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No tienes una cuerda!");
    //if(Blinded[playerid] == 1 || Tied[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No puedes hacer esto estando atado/vendado!");
	new giveplayerid;
	if(!sscanf(params, "d", giveplayerid)){
        if(IsPlayerConnectedEx(giveplayerid)){
            if(ProxDetectorS(4.0,playerid,giveplayerid)){
                new string[128];
                if(Tied[giveplayerid] == 0){
                    Tied[giveplayerid] = 1;
					format(string, sizeof(string), "* %s agarra una cuerda y ata a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
                else{
                    Tied[giveplayerid] = 0;
					format(string, sizeof(string), "* %s agarra una cuerda y desata a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					TogglePlayerControllable(giveplayerid, 1);
                }
            } else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
        } else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "* /atar <ID>");
    return 1;
}
zcmd(vendar, playerid, params[]){
	if(GetPVarInt(playerid, "Injured") == 0){
        if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Necesitas ser nivel 2 para arriba!");
        if(Rope[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No tienes venda!");
        //if(Blinded[playerid] == 1 || Tied[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡No puedes hacer esto estando atado/vendado!");
        new giveplayerid;
		if(!sscanf(params, "d", giveplayerid)){
            if(IsPlayerConnectedEx(giveplayerid)){
                if(ProxDetectorS(4.0,playerid,giveplayerid)){
                    new string[90];
                    if(Blinded[giveplayerid] == 0){
                        Blinded[giveplayerid] = 1;
						format(string, sizeof(string), "* %s venda los ojos de %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerCameraPos(giveplayerid,0.0,0.0,1000);
						SetPlayerCameraLookAt(giveplayerid,0.0,0.0,5000);
						Info[playerid][pRob]++;
                    }
                    else{
                        Blinded[giveplayerid] = 0;
						format(string, sizeof(string), "* %s desvenda los ojos de %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(20.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetCameraBehindPlayer(giveplayerid);
                    }
                } else return SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador muy lejos.");
            } else return SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador desconectado.");
        } else return SendClientMessageEx(playerid, COLOR_GRAD2, "* /vendar <ID>");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando mientras estás herido.");
	return 1;
}

zcmd(bmbuy, playerid, params[]){

		if (PlayerToPoint(10, playerid,1294.4835,-988.4177,32.6953)){
			return ShowPlayerDialog(playerid, MERCADONEGRO, DIALOG_STYLE_LIST, "Mercado Negro","Puño Americano(15$)\nMáscara(50$)\nGanzúas(70$)\nSoga + Venda(120$)", "Comprar", "Salir");
		}
		return 1;
    }
zcmd(puente, playerid, params[]){
    if(Ganzuas[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "No tienes ganzúas!");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_GREY, "No eres el conductor.");
    if(IsPlayerInAnyVehicle(playerid)){
	    new string[128], vehicleid;
    	format(string, sizeof(string), "* %s utiliza unas ganzúas y cruza los cables.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetTimerEx("SetVehicleEngine", 2500, 0, "dd",  vehicleid, playerid);
		GameTextForPlayer(playerid, "~p~haciendo puente.",2500,3);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehículo!");
	return 1;
}
CMD:sms(playerid, params[]){
	if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
	new string[128], phonenumb, text[100];
	if(sscanf(params, "ds[100]", phonenumb, text)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: (/t)ext [numero teléfonico] [texto]");
	if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "  No tienes un teléfono...");
	if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"[ERROR]: No puedes usar este comando mientras estás en prisión.");
	foreach(Player, i){
		if(Info[i][pPnumber] == phonenumb && phonenumb != 0){
			new giveplayerid = i;
			if(Mobile[giveplayerid] != -1) return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador está en una llamada.");
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnectedEx(giveplayerid)){
				if(giveplayerid != -1){
					if(PhoneOnline[giveplayerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador tiene el teléfono apagado.");
					if(UnidentifedCall[playerid] == 1){
						format(string, sizeof(string), "SMS: %s, De: Numero Privado.", text,GetPlayerNameEx(playerid),Info[playerid][pPnumber]);
					}
					else{
						format(string, sizeof(string), "SMS: %s, De: %s (%d)", text,GetPlayerNameEx(playerid),Info[playerid][pPnumber]);
					}
					SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
					SendClientMessageEx(playerid, COLOR_YELLOW, string);
					SendClientMessageEx(playerid, COLOR_WHITE, "Mensaje de Texto Enviado.");
					GameTextForPlayer(playerid, "~r~$-25", 5000, 1);
					GivePlayerCash(playerid,-25);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					Mobile[playerid] = -1;
					if(strcmp(Info[giveplayerid][pAutoTextReply], "Nada", true) != 0){
						format(string, sizeof(string), "SMS: %s, Destinatario: %s [Auto Respuesta] (%d)", Info[giveplayerid][pAutoTextReply], GetPlayerNameEx(giveplayerid), Info[giveplayerid][pPnumber]);
						SendClientMessageEx(playerid, COLOR_YELLOW, string);
					}
					return 1;
				}
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "  Envio de mensaje falló...");
	return 1;
}
CMD:numero(playerid, params[])
{
	if(Info[playerid][pLevel] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo los usuarios nivel 2 para adelante pueden usar este comando");
	if(Info[playerid][pPhoneBook] == 1)
	{
		new iTarget;
		if(sscanf(params, "d", iTarget)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /numero [playerid]");
		if(!IsPlayerConnectedEx(iTarget)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
		if(Info[iTarget][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "* No figura. (No tiene número)");
        if(UnidentifedCall[iTarget] == 1) return SendClientMessageEx(playerid, COLOR_GRAD1, "* Número privado.");
		format(szMessage, sizeof(szMessage), "* %s (%i)", GetPlayerNameEx(iTarget), Info[iTarget][pPnumber]);
		SendClientMessageEx(playerid, COLOR_GRAD1, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un PhoneBook");
	return 1;
}
CMD:bebersprunk(playerid, params[])
{
    #pragma unused params
	if(Info[playerid][pSprunk] > 0)
	{
		if( Info[playerid][pEstado] >= 1 || GetPVarInt(playerid, "Injured") == 1 || GetPVarInt(playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar esto ahora.");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes beber aqui, estás conduciendo.");
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		format(szMessage, sizeof(szMessage), "* %s abre su sprunk para beberlo.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPVarInt(playerid, "UsingSprunk", 1);
		Info[playerid][pSprunk]--;
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un sprunk, compralo en el 24/7.");
	return 1;
}
CMD:llamar(playerid, params[])
{
	new string[128], phonenumb;
	if(sscanf(params, "d", phonenumb)) return SendClientMessageEx(playerid, COLOR_WHITE, "USO: /llamar [numero telefónico]");
	if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"[ERROR]: No puedes usar este comando mientras estás en prisión.");
	if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid,COLOR_GREY,"No puedes usar tu teléfono.");
	if(Info[playerid][pPnumber] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un teléfono.");
	if(PhoneOnline[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Tu celular está apagado.");
	if(Mobile[playerid] != -1) return SendClientMessageEx(playerid, COLOR_GRAD2, " Ya se encuentra en una llamada...");
	if(Info[playerid][pJailed] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Este numero no lo puedes usar en jail admin!");
	format(string, sizeof(string), "* %s coge su teléfono.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	PlayerPlaySound(playerid, 3600, 0, 0, 0);
	if(phonenumb == 911) return SendClientMessageEx(playerid, COLOR_GREY, "* Para llamar al 911 usa /911 o /servicios .");

	if(phonenumb == 757)
	{
        if(InLive == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "En este momento la línea está fuera de servicio o ocupada.");
		InLive = 0;
        Mobile[playerid] = 758;
		format(string,128,"Llamada entrante: Nombre: %s - Número: %d.", GetPlayerNameEx(playerid), Info[playerid][pPnumber]);
		SendFamilyMessage(5, COLOR_YELLOW, string);
        SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
        return SendClientMessageEx(playerid, COLOR_WHITE, "SA News: Hola. . . estás en línea, desde este momento puedes hablar.");
	}
	else if(phonenumb == 3900)
	{
	   	SendClientMessageEx(playerid, COLOR_WHITE, "Operador: Bienvenido. ¿ Tiene algúna noticia, quiere participar ?");
	   	SendClientMessageEx(playerid, COLOR_WHITE, "Operador: Déjenos un mensaje después de la señal, ¡hasta la vista!");
	  	SendClientMessageEx(playerid, COLOR_WHITE, "Biiip!");
	   	return Mobile[playerid] = 3901;
	}
	if(phonenumb == Info[playerid][pPnumber]) return SendClientMessageEx(playerid, COLOR_GRAD2, " Está ocupado...");
	foreach(Player, i){
		if(Info[i][pPnumber] == phonenumb && phonenumb != 0){
			new giveplayerid = i;
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnectedEx(giveplayerid)){
				if(giveplayerid != INVALID_PLAYER_ID){
					if(GetPVarInt(giveplayerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "El jugador está en el paintball arena no puede recibir llamadas.");
					if(PhoneOnline[giveplayerid] > 0){
						SendClientMessageEx(playerid, COLOR_GREY, "Tono a apagado.");
						Mobile[playerid] = -1;
						return 1;
					}
					if(Mobile[giveplayerid] != -1){
						SendClientMessageEx(playerid, COLOR_GRAD2, "Tono a ocupado...");
						Mobile[playerid] = -1;
						return 1;
					}
					if (Mobile[giveplayerid] == -1){
					    SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						format(string, sizeof(string), "Tu telefono está sonando - Usa /contestar para atender la llamada. [De: %s]", GetPlayerNameEx(playerid));
						SendClientMessageEx(giveplayerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "* Teléfono de %s suena.", GetPlayerNameEx(i));
						SendClientMessageEx(playerid, COLOR_WHITE, "Tip: Ahora usa T, y habla por el chat por teléfono.");
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						CellTime[playerid] = 1;
						return 1;
					}
				}
			}
		}
	}
	SendClientMessageEx(playerid, COLOR_GRAD2, "Su llamada no puede darse por el numero marcado, por favor, compruebe el número e inténtelo nuevamente.");
	return 1;
}
CMD:contestar(playerid, params[]){
    #pragma unused params
	new string[128];
	if(Mobile[playerid] != -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "  Ya estás en una llamada...");
	foreach(Player, i){
		if(Mobile[i] == playerid){
			Mobile[playerid] = i; //caller connecting
			SendClientMessageEx(i,  COLOR_GRAD2, "  Contestaron la llamada.");
			format(string, sizeof(string), "* %s contesta su teléfono.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetPlayerAttachedObject(playerid, 9, 330, 6); // 4 = attachment slot, 330 = cellphone model, 6 = right hand
			return SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		}
	}
	return 1;
}
CMD:colgar(playerid,params[]){
    #pragma unused params
	new string[128];
	if(Info[playerid][pEstado]!=0) return SendClientMessageEx (playerid, COLOR_GRAD2, "No puedes hacer esto ahora.");
	if(Mobile[playerid] == 758){
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 9);
		InLive = 1;
		SendClientMessageEx (playerid, COLOR_WHITE, "* SANews: Gracias por llamar a SA News.");
		return Mobile[playerid] = -1;
	}
	new caller = Mobile[playerid];
	if((IsPlayerConnectedEx(caller) && caller != -1)|| caller == 911 || caller == 3901){
		if(caller < 500){
			SendClientMessageEx(caller,  COLOR_GRAD2, "   Colgaron el teléfono.");
			format(string, sizeof(string), "* %s guarda su teléfono.", GetPlayerNameEx(caller));
			ProxDetector(30.0, caller, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			CellTime[caller] = 0;
			Mobile[caller] = -1;
		}
		CellTime[playerid] = 0;
		SendClientMessageEx(playerid,  COLOR_GRAD2, "   Colgaste.");
		format(string, sizeof(string), "* %s guarda su teléfono.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Mobile[playerid] = -1;
		SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(caller, 9);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 9);
		return 1;
	}
	SendClientMessageEx(playerid,  COLOR_GREY, "* Tu teléfono está en el bolsillo.");
	return 1;
}
zcmd(enmascarados, playerid, params[]){
    if(IsPlayerConnectedEx(playerid))
    if(Info[playerid][pAdmin] >= 2)
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Enmascarados:");
		foreach(Player, i)
		{
			if(IsPlayerConnectedEx(i))
			{
			    if(Info[i][pMaskuse] == 1)
				{
					new string[128];
					format(string, 256, "** ID: %d ** %s", i, GetPlayerNameEx(i));
					SendClientMessageEx(playerid, COLOR_GRAD2, string);
				}
			}
		}
	}
	else NoAutorizado
	return 1;
}
// zcmd:job ============================================================================================================================
zcmd(unirse, playerid, params[])
{
    #pragma unused params
	if(Info[playerid][pJob] != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ya tienes un trabajo. Primero usa /renunciar.");
	if(PlayerToPoint(2.0, playerid, 503.2709,-11.6231,1000.6797)){
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora eres Bartender! Puedes usar /ayuda para ver los comandos disponibles.");
		return Info[playerid][pJob] = 1;
	}
	else if (PlayerToPoint(3.0, playerid, 1289.1171,-1271.7650,13.5422)){
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora eres Vendedor de móviles! Puedes usar /ayuda para ver los comandos disponibles.");
		return Info[playerid][pJob] = 3;
	}
	else if (PlayerToPoint(3.0, playerid, 2104.8408,-1810.0991,13.5547)){
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora eres PizzaBoy, usa /vestidor para la ropa! Puedes usar /ayuda para ver los comandos disponibles.");
		return Info[playerid][pJob] = 5;
    }
    else if(IsPlayerInRangeOfPoint(playerid,3.0,2218.0525,-2662.2483,13.5536)){
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora eres Camionero! Puedes usar /ayuda para ver los comandos disponibles.");
        return Info[playerid][pJob] = 7;
	}
    else if (PlayerToPoint(3.0, playerid, 1752.7062,-1894.1708,13.5574)){
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora eres Taxista! Puedes usar /ayuda para ver los comandos disponibles.");
        return Info[playerid][pJob] = 9;
	}
    else if (PlayerToPoint(3.0, playerid, -104.2969,9.3283,3.1172)){
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora eres Cosechador! Puedes usar /ayuda para ver los comandos disponibles.");
        return Info[playerid][pJob] = 10;
	}
    else if (IsPlayerInRangeOfPoint(playerid,3.0,2226.1716,-1718.1792,13.5165)){
    	SendClientMessageEx(playerid, COLOR_GENERAL, "Ahora eres un Bodyguard! Puedes usar /ayuda para ver los comandos disponibles.");
        return Info[playerid][pJob] = 12;
    }
    else if (IsPlayerInRangeOfPoint(playerid,3.0,659.3577,-634.6320,16.3359)){
    	SendClientMessageEx(playerid, COLOR_GENERAL, "Ahora eres un Artesano! Puedes usar /ayuda para ver los comandos disponibles.");
        return Info[playerid][pJob] = 14;
    }
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado");
	return 1;
}
zcmd(renunciar, playerid, params[])
{
	if(Info[playerid][pJob] > 0)
	{
	    Info[playerid][pJob] = 0;
		return SendClientMessageEx(playerid, COLOR_GRAD2, "* Has renunciado a tu trabajo, ya puedes obtener uno nuevo.");
	}
	else if(Info[playerid][pJob] == 0){SendClientMessageEx(playerid, COLOR_GRAD2, "* Tu no tienes trabajo.");}
	return 1;
}
zcmd(vendertelefono, playerid, params[]){
    if(Info[playerid][pJob] != 3 && Info[playerid][pJob2] != 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres vendedor de móviles!");
	new giveplayerid, number, price;
	if(!sscanf(params, "ddd", giveplayerid, number, price)){
	    if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD1, "¡ No estás cerca del jugador !");
	    if(IsPlayerConnectedEx(giveplayerid)){
	        if(number > 999999 || number < 4000) return SendClientMessageEx(playerid, COLOR_GRAD2, "Número no puede ser mayor de 999999 y menor de 4000.");
	        if(price < 1 || price > 999999) return SendClientMessageEx(playerid, COLOR_GRAD2, "Precio entre 1 a 999999.");
            NumSeller[giveplayerid] = playerid;
			NumBuy[giveplayerid] = number;
			NumPrice[giveplayerid] = price;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ofreciste vender un telefono");
			format(szMessage, sizeof(szMessage), "* %s te ofrece venderte el número %d por %d$, utiliza /aceptar telefono", GetPlayerNameEx(playerid), number, price);
			return SendClientMessageEx(giveplayerid,COLOR_GENERAL, szMessage);
	    }
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "Utiliza: /vendertelefono <ID> <número> <precio>");
    return 1;
}
zcmd(cosechar, playerid, params[]){
    new idcar = GetPlayerVehicleID(playerid);
	if(Info[playerid][pJob] == 10 || Info[playerid][pJob2] == 10){
	    if(IsAHarvest(idcar)){
            if(DrugFarming[playerid] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ya estás cosechando!");
      	    DrugFarming[playerid] = 1;
			new randomize = random(sizeof(gDrugFarmVar));
      		SetPlayerCheckpoint(playerid, gDrugFarmVar[randomize][0], gDrugFarmVar[randomize][1], gDrugFarmVar[randomize][2], 5.0);
       	    SendClientMessageEx(playerid, COLOR_WHITE, "Dirígete a los Checkpoints y cosecha lo que necesites.");
       	    SendClientMessageEx(playerid, COLOR_WHITE, "Cuando quieras dejar de cosechar usa /dcosechar.");
       	} else return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en una cosechadora!");
    } else SendClientMessageEx(playerid, COLOR_GRAD2, "No eres cosechador!");
    return 1;
}
zcmd(dcosechar, playerid, params[]){
    new idcar = GetPlayerVehicleID(playerid);
    if(!IsAHarvest(idcar)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en una cosechadora!");
    if(DrugFarming[playerid] == 1){
  	    if(DrugFarming[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás cosechando!");
  	    DrugFarming[playerid] = 0;
  	    SetVehicleToRespawn(idcar);
  	    SendClientMessageEx(playerid, COLOR_GRAD2, "Dejaste de cosechar! Puedes ver los KG que hiciste. (/cuenta)");
  	    DisablePlayerCheckpoint(playerid);
    } else SendClientMessageEx(playerid, COLOR_GREY, "No estás cosechando!");
    return 1;
}
// zcmd: mecas ============================================================================================================================
zcmd(menu, playerid, params[]){
    #pragma unused params
    if(Team_Mecanicos(playerid)) {
 		if(OnDuty[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás de servicio!");
    	return ShowPlayerDialog(playerid, MECANICO_MENU, DIALOG_STYLE_LIST, "Menú", "Repararaciones\nGasolina\nTunning", ">>", "<<");
	} else SendClientMessageEx(playerid, COLOR_GRAD2, "No eres mecánico!");
	return 1;
}
/*
CMD:loroex(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid,COLOR_GREY,"USA: /loro [TEXTO]");
	format(szMessage, sizeof(szMessage), "* Loro dice: %s", params);
	NearMsg(playerid, COLOR_FADE1, szMessage, 15.0);
	return 1;
}
*/
CMD:me(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid,COLOR_GREY,"USA: /me [TEXTO]");
	format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s %s", GetPlayerNameEx(playerid), params);
	NearMsg(playerid, -1, szMessage, 15.0);
	return 1;
}
CMD:b(playerid,params[])
{
	if(isnull(params)) return SendClientMessage(playerid, COLOR_GREY,"USA: /b [TEXTO OOC]");
	format(szMessage, sizeof(szMessage), "(( %s dice: %s ))", GetPlayerNameEx(playerid), params);
	NearMsg(playerid, COLOR_FADE1, szMessage, 15.0);
	return 1;
}
CMD:aa(playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] == 0) return NoAutorizado
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /aa [texto]");
	if(Info[playerid][pAdmin] == 1) format(szMessage, sizeof(szMessage), "(( Admin Junior %s: %s ))", GetPlayerNameEx(playerid), params);
	else format(szMessage, sizeof(szMessage), "(( Admin %s: %s ))", GetPlayerNameEx(playerid), params);
	NearMsg(playerid, COLOR_REALRED, szMessage, 40.0);
	SetPlayerChatBubble(playerid,szMessage,COLOR_RED,60.0,5000);
	return 1;
}
zcmd(c, playerid, params[])
{
    if(Muted[playerid] == 1) return	SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "* No puedes hablar estás silenciado.");
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás logueado.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /c [ic chat]");
	format(szMessage, sizeof(szMessage), "[Acento %s] %s dice: %s", Info[playerid][pAcento],GetPlayerNameEx(playerid), params);
    NearMsg(playerid, COLOR_FADE1, szMessage, 15.0);
	return 1;
}
CMD:do(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid,COLOR_GREY,"USA: /do [TEXTO]");
	format(szMessage, sizeof(szMessage), "* %s (( %s ))", params, GetPlayerNameEx(playerid));
	NearMsg(playerid, COLOR_GREENDO, szMessage, 15.0);
	return 1;
}
zcmd(s, playerid, params[]){
    if(!isnull(params)){
        switch(Info[playerid][pMaskuse]){
			case 1: format(szMessage, sizeof(szMessage), "Desconocido susurra:  %s . . .", params);
			default: format(szMessage, sizeof(szMessage), "[Acento %s] %s susurra: %s . . .", Info[playerid][pAcento],GetPlayerNameEx(playerid), params);
		}
        ProxDetector(5.0, playerid, szMessage,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		format(szMessage, sizeof(szMessage), "susurro: %s", params);
		return SetPlayerChatBubble(playerid,szMessage,COLOR_WHITE,5.0,5000);
    }
	else SendClientMessageEx(playerid, COLOR_GRAD2, "* /s <Texto>");
    return 1;
}
zcmd(g, playerid, params[]){
    if(!isnull(params)){
        switch(Info[playerid][pMaskuse]){
			case 1: format(szMessage, sizeof(szMessage), "Desconocido grita: ¡¡ %s !!", params);
			default: format(szMessage, sizeof(szMessage), "[Acento %s] %s grita: %s!", Info[playerid][pAcento],GetPlayerNameEx(playerid), params);
		}
        ProxDetector(40.0, playerid, szMessage,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		format(szMessage, sizeof(szMessage), "grito: ¡¡ %s !!", params);
		return SetPlayerChatBubble(playerid,szMessage,COLOR_WHITE,60.0,5000);
    }
	else SendClientMessageEx(playerid, COLOR_GRAD2, "* /g <Texto>");
    return 1;
}
zcmd(ao, playerid, params[]){
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(Info[playerid][pAdmin] < 1) return NoAutorizado
    if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /ao [general chat]");
   	if(Info[playerid][pAdmin] == 1){
		new string[128];
		format(string, sizeof(string), "(( Admin Junior %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_WHITE,string);
	}
	else if(Info[playerid][pAdmin] == 6){
		new string[128];
		format(string, sizeof(string), "(( Executive Admin %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_WHITE,string);
	}
	else if(Info[playerid][pAdmin] >= 2){
		new string[128];
		format(string, sizeof(string), "(( Administrador %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_WHITE,string);
	}
	else if(Info[playerid][pAdmin] >= 7){
		new string[128];
		format(string, sizeof(string), "(( Server Admin %s: %s ))", GetPlayerNameEx(playerid), params);
		OOCOff(COLOR_WHITE,string);
	}
    return 1;
}

CMD:franciscoacostaputero(playerid, params[]) COLOR_FUCK

CMD:crearregalo(playerid, params[])  // By JunkBuster
{
    #pragma unused params
	if(Info[playerid][pAdmin] >= 6)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "[ERROR]: No puedes usar este comando mientras estás en un vehículo.");
		new string[128], Float:Position[4];
		if(dynamicgift == 0)
		{
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			dynamicgift = CreateDynamicObject(19054, Position[0], Position[1], Position[2]-0.4, 0.0, 0.0, Position[3], -1, -1, -1, 200.0);
			dynamicgift3DText = CreateDynamic3DTextLabel("/regalo\nPara llegar al interior.",COLOR_YELLOW,Position[0], Position[1], Position[2]+0.25,8.0);
			SetPlayerPos(playerid, Position[0], Position[1], Position[2]+3);
			format(string, sizeof(string), "AdmCmd: %s pusó un regalo temporal.", GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, string, 1337);
		}
		else
		{
			DestroyDynamicObject(dynamicgift);
			dynamicgift = 0;
			DestroyDynamic3DTextLabel( Text3D:dynamicgift3DText );
			format(string, sizeof(string), "AdmCmd: %s eliminó un regalo temporal.", GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, string, 1337);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado");
	return 1;
}

CMD:desbug(playerid, params[])
{
	if(Info[playerid][pJailed] >= 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás en prisión.");
	if(GetPVarInt(playerid, "IsInArena") > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando en el Paintball.");
	if(IsPlayerConnectedEx(playerid))
	{
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid, 0);
	    Info[playerid][pInt] = 0;
	    Info[playerid][pVW] = 0;
	    SendClientMessageEx(playerid, -1, "SERVER: Esperamos que su problema haya sido solucionado.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	return 1;
}
/*
CMD:vipgifts(playerid, params[])
{
	new string[128];
	if(Info[playerid][pAdmin] >= 6)
	{
	 	if(VIPGifts == 0)
	 	{
	       	VIPGifts = 1;
	       	new sString[128];
			format( sString, sizeof( sString ), "%s quiere que vengas al Club VIP hay regalos para ti! [20 minutos restantes]", GetPlayerNameEx(playerid));
			BroadCast(COLOR_LIGHTGREEN, sString);
			VIPGiftsTimeLeft = 20;
			format(VIPGiftsName, sizeof(VIPGiftsName), "%s", GetPlayerNameEx(playerid));
		}
		else
		{
		    VIPGifts = 0;
		    new sString[128];
	   		format( sString, sizeof( sString ), "AdmCmd: %s ha deshabilitado el comando /regalo", GetPlayerNameEx(playerid));
			ABroadCast( COLOR_GENERAL, sString, 1337 );
			format(string, sizeof(string), "Club VIP ya no está regalando obsequios. Gracias por venir!", VIPGiftsName, VIPGiftsTimeLeft);
			BroadCast(COLOR_LIGHTGREEN, string);
			VIPGiftsTimeLeft = 0;
		}
	}
	else NoAutorizado
	return 1;
}
*/
CMD:divorcio(playerid, params[])
{
	if(Info[playerid][pMarried] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "No estás casado!");
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /divorcio [ID]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			new dstring[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "%s", giveplayer);
			strmid(wstring, string, 0, strlen(string), 24);
			format(string, sizeof(string), "%s", Info[playerid][pMarriedTo]);
			strmid(dstring, string, 0, strlen(string), 24);
			if(strcmp(dstring ,wstring, true ) == 0 )
			{
				format(string, sizeof(string), "* Has propuesto divorcio a %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* %s te ha propuesto divorcio. (escribe /aceptar divorcio)", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				DivorceOffer[giveplayerid] = playerid;
				return 1;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está casado contigo!");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está cerca tuyo.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* Jugador especificado no está conectado.");
}
CMD:adivorcio(playerid, params[])
{
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /adivorcio [ID]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			ClearMarriage(giveplayerid);
			format(string, sizeof(string), "* Limpiaste el matrimonio de %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* Tu has sido divorciado por %s.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			DivorceOffer[giveplayerid] = playerid;
			return 1;

		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Jugador especificado no está conectado.");
	}
	else return NoAutorizado
}
CMD:proponer(playerid, params[])
{
	if(GetPlayerCash(playerid) < 4000) return SendClientMessageEx(playerid, COLOR_GREY, "   El matrimonio y recepción cuesta 4.000");
	if(Info[playerid][pMarried] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Tu ya estás casado");
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /proponer [ID]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
	    if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No te puedes proponer a tí mismo!");
		if(Info[giveplayerid][pMarried] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "   Ese jugador ya está casado!");
		else if(MarryWitness[playerid] == giveplayerid) return SendClientMessageEx(playerid, COLOR_GREY, "   No puedes casarte con el testigo!");
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			format(string, sizeof(string), "* Propusiste matrimonio a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* %s te propuso matrimonio. (Escribe /aceptar matrimonio)", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			ProposeOffer[giveplayerid] = playerid;
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado no está conectado.");
	return 1;
}
CMD:testigo(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /testigo [ID]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "No puedes proponerte a ti mismo."); return 1; }
			format(string, sizeof(string), "* Has solicitado a %s para ser tu testigo de matrimonio.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* %s te ha pedido que seas su testigo de matrimonio. (usa /aceptar testigo)", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			MarryWitnessOffer[giveplayerid] = playerid;
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado no está conectado.");
	return 1;
}

CMD:radargun(playerid, params[])
{
if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando mientras estás herido.");
if(IsAPolice(playerid))
{
	new string[128];
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás en un vehículo.");
		return 1;
	}
	if(Info[playerid][pJailed] > 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás prisión.");
		return 1;
	}
	if(GetPVarInt( playerid, "EventToken") != 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás en un evento.");
		return 1;
	}
	if(Info[playerid][pEstado] >= 1) {
		SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás tazeado.");
		return 1;
	}
	new SpeedRadar = GetPVarInt(playerid, "SpeedRadar");
	if(SpeedRadar == 0)
	{
		SetPVarInt(playerid, "RadarReplacement", Info[playerid][pWeapons][9]);
		if(Info[playerid][pWeapons][9] != 0) RemovePlayerWeapon(playerid, Info[playerid][pWeapons][9]);
		format(string, sizeof(string), "* %s coge la cámara de velocidad.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		GivePlayerValidWeapon(playerid, 43);
		SetPVarInt(playerid, "SpeedRadar", 1);
	}
	else
	{
		RemovePlayerWeapon(playerid, 43);
		GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"));
		format(string, sizeof(string), "* %s guarda la cámara de velocidad.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		DeletePVar(playerid, "SpeedRadar");
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No eres policía");
return 1;
}

CMD:givegun(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 4)
{
    new sstring[128], playa, gun;
    if(sscanf(params, "ud", playa, gun))
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /givegun [ID] [ID Arma]");
        SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
        SendClientMessageEx(playerid, COLOR_GRAD4, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
        SendClientMessageEx(playerid, COLOR_GRAD4, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flores 15: Cane 16: Frag Grenade");
        SendClientMessageEx(playerid, COLOR_GRAD3, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
        SendClientMessageEx(playerid, COLOR_GRAD4, "26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
        SendClientMessageEx(playerid, COLOR_GRAD4, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
        SendClientMessageEx(playerid, COLOR_GRAD4, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 46: Parachute");
        SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
        return 1;
    }

    format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado un arma [ID Arma: %d] a %s.", GetPlayerNameEx(playerid), gun, GetPlayerNameEx(playa));
	ABroadCast(COLOR_GENERAL, szMessage, 5);
	Log("logs/givegun.log", szMessage);
    format(sstring, sizeof(sstring), "Has dado un arma a %s [ID Arma: %d]",GetPlayerNameEx(playa),gun);
    if(gun < 1||gun > 47)
        { SendClientMessageEx(playerid, COLOR_GRAD1, "ID de Arma invalido!"); return 1; }
    if(IsPlayerConnectedEx(playa))
	{
        if((Info[playa][pConnectTime] < 2 || Info[playa][pWRestricted] > 0) && gun != 46 && gun != 43) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ese jugador tiene restricción de armas de momento.");
        if(playa != INVALID_PLAYER_ID && gun <= 20 || gun >= 22)
		{
            GivePlayerValidWeapon(playa, gun);
            SendClientMessageEx(playerid, COLOR_GRAD1, sstring);
        }
        else if(playa != INVALID_PLAYER_ID && gun == 21)
		{
            JetPack[playa] = 1;
            SetPlayerSpecialAction(playa, SPECIAL_ACTION_USEJETPACK);
            SendClientMessageEx(playerid, COLOR_GRAD1, sstring);
        }
    }
}
else NoAutorizado
return 1;
}

CMD:creararma(playerid, params[])
{
	if(IsPlayerConnectedEx(playerid))
	{
	    if(Info[playerid][pScrewdriver] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes desarmadores.");
		if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes crear armas en Jail!");
		if(Info[playerid][pEstado] == 0){
			if (GetPVarInt(playerid, "ArmsTimer") > 0){
			    new string[128];
	    		format(string, sizeof(string), "   Tienes que esperar %d segundos despues de haber creado algún arma.", GetPVarInt(playerid, "ArmsTimer"));
	    		SendClientMessageEx(playerid,COLOR_GREY,string);
	    		return 1;
			}
			else
			{
				switch(Info[playerid][pArmsSkill])
				{
					case 0 .. 49: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)","Ok", "Cancelar");
					case 50 .. 99: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\nColt 45 (250)","Ok", "Cancelar");
					case 100 .. 149: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)","Ok", "Cancelar");
					case 150 .. 199: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)\nShotgun (550)","Ok", "Cancelar");
					case 200 .. 249: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)\nShotgun (550)\nDesert Eagle (1000)","Ok", "Cancelar");
					case 250 .. 299: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)\nShotgun (550)\nDesert Eagle (1000)\nMP5 (1500)","Ok", "Cancelar");
					case 300 .. 349: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)\nShotgun (550)\nDesert Eagle (1000)\nMP5 (1500)\nMicro Uzi (900)","Ok", "Cancelar");
					case 350 .. 399: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)\nShotgun (550)\nDesert Eagle (1000)\nMP5 (1500)\nMicro Uzi (900)\nAK-47 (15500)","Ok", "Cancelar");
					default: ShowPlayerDialog(playerid, DIALOG_CREATEGUN, DIALOG_STYLE_LIST, "Seleccionar Arma", "Katana (30)\nCane (30)\nPool Cue (33)\nBaseball Bat (35)\nShovel (50)\n9mm Pistol (250)\nSilenced Pistol (300)\nShotgun (550)\nDesert Eagle (1000)\nMP5 (1500)\nMicro Uzi (900)\nAK-47 (15500)\nM4A1 (15500)\nSniper (30000)","Ok", "Cancelar");
				}
			}
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "* No puedes hacer esto mientras estas tazeado, congelado o esposado.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	return 1;
}

CMD:cancelar(playerid, params[])
{
new string[128], choice[32];
if(sscanf(params, "s[32]", choice))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Cancelar __________________|");
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /cancelar [Nombre]");
	SendClientMessageEx(playerid, COLOR_GREY, "bebida - materiales - matrimonio - arma - divorcio - testigo");
	SendClientMessageEx(playerid, COLOR_GREY, "telefono - taxi - multa - coche - mecanico - droga - casa - vip");
	return 1;
}
else if(strcmp(choice,"hierba",true) == 0) { PotOffer[playerid] = 999; PotPrice[playerid] = 0; PotGram[playerid] = 0; }
else if(strcmp(choice,"crack",true) == 0) { CrackOffer[playerid] = 999; CrackPrice[playerid] = 0; CrackGram[playerid] = 0; }
else if(strcmp(choice,"materiales",true) == 0) { MatsOffer[playerid] = 999; MatsPrice[playerid] = 0; MatsAmount[playerid] = 0; }
else if(strcmp(choice,"arma",true) == 0) { GunOffer[playerid] = 999; GunId[playerid] = 0; SetPVarInt(playerid,"Dandoarma",0); }
else if(strcmp(choice,"testigo",true) == 0) { MarryWitnessOffer[playerid] = 999; }
else if(strcmp(choice,"matrimonio",true) == 0) { ProposeOffer[playerid] = 999; }
else if(strcmp(choice,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
else if(strcmp(choice,"live",true) == 0) { LiveOffer[playerid] = 999; }
else if(strcmp(choice,"bebida",true) == 0) { DrinkOffer[playerid] = INVALID_PLAYER_ID; }
else if(strcmp(choice,"coche",true) == 0) { VehicleOffer[playerid] = 999; VehiclePrice[playerid] = 0; VehicleId[playerid] = -1; }
else if(strcmp(choice,"casa",true) == 0) { HouseOffer[playerid] = 999; HousePrice[playerid] = 0; House[playerid] = 0; }
else if(strcmp(choice,"bodyguard",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
else if(strcmp(choice,"camion",true) == 0)
{
	DestroyProgressBar(LoadTruckBar[playerid]);
	LoadTruckBar[playerid] = INVALID_BAR_ID;
	LoadTruckTime[playerid] = 0;
	DeletePVar(playerid, "TruckDeliver");
	TruckUsed[playerid] = INVALID_VEHICLE_ID;
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	DisablePlayerCheckpoint(playerid);
}
if(strcmp(choice,"telefono",true) == 0)
{
    if(NumBuy[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Nadie te ha ofrecido un número!");
    NumBuy[playerid] = 0;
    NumPrice[playerid] = 0;
    NumSeller[playerid] = 0;
    Facturing[playerid] = 0;
}
else if(strcmp(choice,"multa",true) == 0)
{
    if(TicketOffer[playerid] == 999) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Nadie te multado!");
    format(string, sizeof(string), " %s se niega a pagar una multa", GetPlayerNameEx(playerid));
    ProxDetector(30.0,playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
    format(string, sizeof(string), "* %s canceló el pago de una multa de %d$.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
    SendClientMessageEx(TicketOffer[playerid], -1, string);
    TicketOffer[playerid] = 999;
    TicketMoney[playerid] = 0;
    Facturing[playerid] = 0;
}
else if(strcmp(choice,"mecanico",true) == 0) { if(IsPlayerConnectedEx(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessageEx(playerid, COLOR_GREY, "   No has llamado a un mecanico!"); return 1; } } }
else if(strcmp(choice,"ayuda",true) == 0) { if(IsPlayerConnectedEx(AdvisorCall)) { if(AdvisorCall == playerid) { AdvisorCall = 999; } else { SendClientMessageEx(playerid, COLOR_GREY, "   No has pedido ese servicio!"); return 1; } } }
else if(strcmp(choice,"taxi",true) == 0)
{
	if(IsPlayerConnected(TaxiCall)){if(TaxiCall == playerid){TaxiCall = 999;}}
	foreach(Player, i)
	{
		if(TaxiCallReady[i] != -1)
		{
			if(TaxiCallReady[i] == playerid)
			{
				TaxiCallReady[i] = -1;
				GameTextForPlayer(i, "~w~Llamada de taxi~n~~w~Cancelada", 5000, 1);
				DisablePlayerCheckpoint(i);
			}
		}
	}
}
else { return 1; }
format(string, sizeof(string), "* Cancelaste: "COL_WHITE"%s.", choice);
SendClientMessageEx(playerid, COLOR_GENERAL, string);
return 1;
}

CMD:dararma(playerid, params[])
{
	new string[128],id,weapon;
	if(IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Eres de una fuerza de la ley, no puedes dar armas.");
	if(GetPVarInt(playerid, "IsInArena") != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes dar armas en el paintball!");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_GREY, "Uso: /dararma- [playerid]");
	else if(Info[playerid][pEstado]==0)
	{
		if(id == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes darte un arma a ti mismo!");
		if(Info[id][pConnectTime] < 2 || Info[id][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ese jugador tiene restricción de armas.");
		if(IsPlayerConnectedEx(id)){
	   	    if(ProxDetectorS(6.0, playerid, id) && !IsPlayerInAnyVehicle(playerid)){
	            if(IsPlayerInAnyVehicle(id)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes dar un arma si el jugador esta en un vehículos.");
				weapon = GetPlayerWeapon(playerid);
				switch(weapon)
				{
					case 16, 18, 35, 36, 37, 38, 39, 40, 44, 45, 46, 0: SendClientMessage(playerid, COLOR_GREY, "Arma Inválida.");
					default:
					{
						format(string, sizeof(string), "Ofreciste a %s tu %s.", GetPlayerNameEx(id), WeaponNames[weapon]);
						SendClientMessage(playerid, COLOR_GENERAL, string);
						format(string, sizeof(string), "%s te ha ofrecido su %s - Usa /aceptar arma para recibirla.", GetPlayerNameEx(playerid), WeaponNames[weapon]);
						SendClientMessage(id, COLOR_GENERAL, string);
						SetPVarInt(id,"gunID",playerid);
						SetPVarInt(playerid,"gun",weapon);
						SetPVarInt(playerid,"slot",GetWeaponSlot(weapon));
						SetPVarInt(playerid,"Dandoarma",1);
					}
				}
	    	}
	    	else SendClientMessage(playerid, COLOR_GREY, "* Tu estas lejos del jugador o en un vehículo.");
	    }
		else SendClientMessage(playerid, COLOR_GREY, "* La ID que has ingresado es inválida.");
	}
	else SendClientMessage(playerid, COLOR_GREY, "* No puedes hacer esto mientras estas tazeado, esposado o congelado.");
	return 1;
}


CMD:misarmas(playerid, params[]){
new string[128], myweapons[13][2], weaponname[50], name[MAX_PLAYER_NAME];
GetPlayerName(playerid, name, sizeof(name));
SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
format(string, sizeof(string), "Armas - %s:", name);
SendClientMessageEx(playerid, COLOR_WHITE, string);
for (new i = 0; i < 13; i++)	{
	GetPlayerWeaponData(playerid, i, myweapons[i][0], myweapons[i][1]);
	if(myweapons[i][0] > 0)		{
		if(Info[playerid][pWeapons][i] == myweapons[i][0])			{
			GetWeaponName(myweapons[i][0], weaponname, sizeof(weaponname));
			format(string, sizeof(string), "%s (%d)", weaponname, myweapons[i][0]);
			SendClientMessageEx(playerid, COLOR_GRAD1, string);
		}
	}
}
new year, month, day, hour, minute, second;
getdate(year, month, day);
gettime(hour, minute, second);
format(string, sizeof(string), "[%d/%d/%d %d:%d:%d]", month, day, year, hour, minute,second);
SendClientMessageEx(playerid, COLOR_GREEN, string);
SendClientMessageEx(playerid, COLOR_GREEN,"_______________________________________");
return 1;
}
CMD:tirar(playerid, params[])
{
if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
new string[124];
if(GetPlayerWeapon(playerid) == 0) format(string, sizeof(string),"Crack (%d)\nHierba (%d)\nMateriales (%d)\nTeléfono\nRadio",Info[playerid][pCrack],Info[playerid][pPot],Info[playerid][pMats]);
else format(string, sizeof(string),"Crack (%d)\nHierba (%d)\nMateriales (%d)\nTeléfono\nRadio\nArma actual (%s)",Info[playerid][pCrack],Info[playerid][pPot],Info[playerid][pMats], WeaponNames[GetPlayerWeapon(playerid)]);
ShowPlayerDialog(playerid, DIALOG_DROP, DIALOG_STYLE_LIST, "Inventario", string, "Seleccionar", "Cancelar");
return 1;
}

CMD:wepreset(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 3)
{
    new string[75 + (MAX_PLAYER_NAME * 2)], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /wepreset [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
	    if(Info[giveplayerid][pWRestricted] > 0)
	    {
	        Info[giveplayerid][pWRestricted] = 0;
	        if(Info[giveplayerid][pConnectTime] < 2) Info[giveplayerid][pConnectTime] += 2;
	        format(string, sizeof(string), "AdmWarning: %s reseteó la restricción de armas de %s's (ID:%d).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), giveplayerid);
	        ABroadCast(COLOR_GENERAL, string, 2);
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no tiene restricción de armas.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador está desconectado!");
}
return 1;
}

CMD:skill(playerid, params[])
{
if(isnull(params))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /skill [Número]");
	SendClientMessageEx(playerid, COLOR_GREY, "| 1: Vendedor de Armas(OFF) | 2: Traficante de Drogas(OFF)");
	SendClientMessageEx(playerid, COLOR_GREY, "| 2: Camionero         | 4: Vendedor de Drogas(OFF)");
	return SendClientMessageEx(playerid, COLOR_GREY, "| 5: Pesca");
}
new string[62];
switch(strval(params))
{
	case 1:
	{
		new level = Info[playerid][pArmsSkill];
		switch(level)
		{
		    case 0 .. 50: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de armas es 1."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 51 .. 100: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de armas es 2."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 101 .. 200: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de armas es 3."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 201 .. 400: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de armas es 4."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			default: SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de armas es 5.");
		}
	}
	case 2://Trucker
	{
	    new level = Info[playerid][pTruckSkill];
		switch(level)
		{
		    case 0 .. 50: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de camionero es 1."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 51 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 51 .. 100: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de camionero es 2."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 101 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 101 .. 200: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de camionero es 3."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 201 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 201 .. 400: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de camionero es 4."); format(string, sizeof(string), "Necesitas transportar %d veces para subir de nivel.", 401 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			default: SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de camionero es 5.");
		}
	}
	case 3://Drug Smuggling
	{
		new level = Info[playerid][pSmugSkill];
		switch(level)
		{
		    case 0 .. 50: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de Traficante es 1."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 20 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 51 .. 100: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de Traficante es 2."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 101 .. 200: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de Traficante es 3."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 201 .. 400: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de Traficante es 4."); format(string, sizeof(string), "Necesitas traficar %d veces para subir de nivel.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			default: SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de Traficante es 5.");
		}
	}
	case 4://Drugs Dealer
	{
		new level = Info[playerid][pDrugsSkill];
		switch(level)
		{
		    case 0 .. 50: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de drogas es 1."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 51 .. 100: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de drogas es 2."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 101 .. 200: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de drogas es 3."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 201 .. 400: { SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de drogas es 4."); format(string, sizeof(string), "Necesitas vender %d veces para subir de nivel.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			default: SendClientMessageEx(playerid, COLOR_YELLOW, "Tu nivel de vendedor de drogas es 5.");
		}
	}
	case 5://Fishing
	{
		new level = Info[playerid][pFishSkill];
		switch(level)
		{
		    case 0 .. 50: { SendClientMessageEx(playerid, COLOR_YELLOW, "Eres Nivel 1."); format(string, sizeof(string), "Necesitas pescar %d veces más para subir de nivel.", 50 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 51 .. 100: { SendClientMessageEx(playerid, COLOR_YELLOW, "Eres Nivel 2."); format(string, sizeof(string), "Necesitas pescar %d veces más para subir de nivel.", 100 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 101 .. 200: { SendClientMessageEx(playerid, COLOR_YELLOW, "Eres Nivel 3."); format(string, sizeof(string), "Necesitas pescar %d veces más para subir de nivel.", 200 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			case 201 .. 400: { SendClientMessageEx(playerid, COLOR_YELLOW, "Eres Nivel 4."); format(string, sizeof(string), "Necesitas pescar %d veces más para subir de nivel.", 400 - level); SendClientMessageEx(playerid, COLOR_YELLOW, string); }
			default: SendClientMessageEx(playerid, COLOR_YELLOW, "Eres Nivel 5.");
		}
	}
}
return 1;
}

CMD:arena(playerid, params[])
{
if(GetPVarInt(playerid, "IsInArena") == 0)
{
    if(Info[playerid][pConnectTime] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes entrar al Paintball ya que tienes restricción de armas.");
    if(IsPlayerInRangeOfPoint(playerid,5.0,305.3528,-141.9280,1004.0625))
    {
		PaintballMainMenu(playerid);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No estás en el Paintball!");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* Ya estás en el Paintball!");
return 1;
}

CMD:scores(playerid, params[])
{
if(GetPVarInt(playerid, "IsInArena") == 1) PaintballScoreboard(playerid);
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando si no estás en el paintball.");
return 1;
}

CMD:salirarena(playerid, params[])
{
if(GetPVarInt(playerid, "IsInArena") == 1)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando en este momento.");
    LeavePaintballArena(playerid);
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando si no estás en el paintball.");
return 1;
}

CMD:cequipo(playerid, params[])
{
if(GetPVarInt(playerid, "ArenaMode") == 2)
{
	PaintballSwitchTeam(playerid);
}
else
{
    SendClientMessageEx(playerid,COLOR_GREY,"* No puedes usar este comando si no estás en el paintball modo Team DeathMatch.");
}
return 1;
}

CMD:armas(playerid, params[])
{
if(GetPVarInt(playerid, "ArenaMode") > 0)
{
    ShowPlayerDialog(playerid, PB_ARMAS, DIALOG_STYLE_LIST, "{FFFFFF}Armas","9mm(1 Ficha)\nDesert Eagle(1 Ficha)\nMP5(1 Ficha)\nAK-47(1 Ficha)\nM4(2 Fichas)\nShotgun(1 Fichas)\nCombat Shotgun(2 Fichas)\nArmadura(1 Ficha)","OK","Atrás");
}
else
{
    SendClientMessageEx(playerid,COLOR_GREY,"* No puedes usar este comando si no estás en el paintball.");
}
return 1;
}

CMD:adarfichas(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 4) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
new string[128], giveplayerid, amount;
if(sscanf(params, "dd", giveplayerid, amount)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /adarfichas [playerid] [fichas]");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(Info[playerid][pAdmin] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para dar fichas.");
	Info[giveplayerid][pPaintTokens] += amount;
	format(string, sizeof(string), "Te han dado %d fichas de Paintball - Admin %s.", amount, GetPlayerNameEx(playerid));
	SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
	format(string, sizeof(string), "Has dado a %s, %d fichas de Paintball.", GetPlayerNameEx(giveplayerid), amount);
	SendClientMessageEx(playerid, COLOR_GENERAL, string);
	format(string, sizeof(string), "AdmWarning: %s dió %s, %d Fichas de Paintball.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),amount);
	ABroadCast(COLOR_GENERAL, string, 2);

}
return 1;
}

CMD:usarhierba(playerid, params[])
{
if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes drogarte en el paintball!");
if(UsedWeed[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Tienes que esperar 5 segundos para usar hierba.");
new string[128], Float:health, healthint;
GetPlayerHealth(playerid, health);
healthint = floatround(health, floatround_round);
if(healthint >= 100 ) return SendClientMessageEx(playerid, COLOR_GREY, "Tienes la vida llena.");
if(Info[playerid][pPot] > 1)
{
	if(PlayerStoned[playerid] > 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "Estás demasiado drogado para utilizar hierba.");
	PlayerStoned[playerid] += 1;
	if(PlayerStoned[playerid] == 3)
	{
		GameTextForPlayer(playerid, "~w~Estas ~b~...STONED", 5000, 3);
	}
	if(healthint > 80)
	{
		SetHP(playerid, 100);
	}
	else
	{
		SetHP(playerid, health + 20.0);
	}
	SendClientMessageEx(playerid, COLOR_GREY, " Usaste 2 gramos de hierba!");
	format(string, sizeof(string), "* %s se fuma algo de hierba.", GetPlayerNameEx(playerid));
	ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Info[playerid][pPot] -= 2;
	UsedWeed[playerid] = 1;
	Info[playerid][pAdiccion] += 2;
	SetPlayerDrunkLevel(playerid, Info[playerid][pAdiccion]*500);
	SetTimerEx("ClearDrugs", 5000, false, "d", playerid);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
}
else SendClientMessageEx(playerid, COLOR_GREY,"No tienes hierba!");
return 1;
}

CMD:usarcrack(playerid, params[])
{
new Float:armour;
GetPlayerArmour(playerid, armour);
if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "[ERROR]: No puedes usar este comando si estás en el paintball.");
if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando si estás herido.");
if(UsedCrack[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "[INFO]: Debe esperar 8 segundos antes de usar más drogas.");
if(armour >= 100) return SendClientMessageEx(playerid, COLOR_GREY, "[ERROR]: No puedes usar este comando, tienes demasiada armadura.");
if(Info[playerid][pCrack] > 1)
{
	if(PlayerStoned[playerid] > 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "[ERROR]: No puedes usar este comando si estás muy drogado.");
	PlayerStoned[playerid] += 1;
	if(PlayerStoned[playerid] == 3)
	{
		GameTextForPlayer(playerid, "~w~Estas ~b~Drogado", 5000, 3);
	}
	new string[128], Float:PlayersArmour;
	GetPlayerArmour(playerid, PlayersArmour);
	SendClientMessageEx(playerid, COLOR_GREY, " Usaste 2 gramos de crack!");
	format(string, sizeof(string), "* %s usa un poco de droga.", GetPlayerNameEx(playerid));
	ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Info[playerid][pCrack] -= 2;
	UsedCrack[playerid] = 1;
	Info[playerid][pAdiccion] += 2;
	SetPlayerDrunkLevel(playerid, Info[playerid][pAdiccion]*1000);
	SetTimerEx("ClearDrugs", 8000, false, "d", playerid);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
	if(PlayersArmour > 90) SetPlayerArmour(playerid, 100);
	else SetPlayerArmour(playerid, PlayersArmour + 10.0);
}
else SendClientMessageEx(playerid, COLOR_GREY, "[ERROR]: No puedes usar este comando si no tienes drogas.");
return 1;
}

CMD:venderspray(playerid, params[])
{
	if(!Team_Mecanicos(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "[ERROR]: No puedes usar este comando si no eres mecánico.");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando si estás herido.");
	new string[128], giveplayerid, spray, money;
	if(sscanf(params, "ddd", giveplayerid, spray, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /venderspray [playerid] [potes] [precio]");
	if(spray < 1 || spray > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   Los valores no pueden ser mayores a 30 potes."); return 1; }
	if(money < 1 || money > 99999) { SendClientMessageEx(playerid, COLOR_GREY, "   El precio no puede ser menor que 1 ni mayor que 99999!"); return 1; }
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "   El vendedor no está cerca tuyo!");
					return 1;
				}
				format(string, sizeof(string), "* Ofreciste a %s para que te compre %d potes de spray por $%d.", GetPlayerNameEx(giveplayerid), spray, money);
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* Mecánico %s quiere venderte %d potes de spray por $%d. (escribe /aceptar spray)", GetPlayerNameEx(playerid), spray, money);
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				SprayOffer[giveplayerid] = playerid;
				SprayPrice[giveplayerid] = money;
				SprayGram[giveplayerid] = spray;
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "   Ese jugador está desconectado.");
	return 1;
}

CMD:motd(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 6)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /motd [mensaje]");
		new string[128];
		format(string, sizeof(string), "AdmCmdExe: %s cambió el MOTD a: %s.", GetPlayerNameEx(playerid), params);
		ABroadCast( COLOR_GENERAL, string, 4);
		format(GlobalMOTD, sizeof(GlobalMOTD), "%s", params);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el MOTD.");
		SaveMOTDs();
	}
	return 1;
}

CMD:facmotd(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 4 || Info[playerid][pGangModerator] == 1)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /facmotd [mensaje]");
		new string[128];
		format(string, sizeof(string), "AdmCmdExe: %s cambió el FACMOTD a: %s.", GetPlayerNameEx(playerid), params);
		ABroadCast( COLOR_GENERAL, string, 4);
		format(FACMOTD, sizeof(FACMOTD), "%s", params);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el FACMOTD.");
		SaveMOTDs();
	}
	return 1;
}

CMD:fammotd(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 4 || Info[playerid][pGangModerator] == 1)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /fammotd [mensaje]");
		new string[128];
		format(string, sizeof(string), "AdmCmdExe: %s cambió el FACMOTD a: %s.", GetPlayerNameEx(playerid), params);
		ABroadCast( COLOR_GENERAL, string, 4);
		format(FAMMOTD, sizeof(FAMMOTD), "%s", params);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el FACMOTD.");
		SaveMOTDs();
	}
	return 1;
}

CMD:amotd(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 5)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /amotd [mensaje]");
		new string[128];
		format(AdminMOTD, sizeof(AdminMOTD), "%s", params);
		format(string, sizeof(string), "AdmCmdExe: %s cambió el admin MOTD a: %s.", GetPlayerNameEx(playerid), params);
		ABroadCast( COLOR_GENERAL, string, 4);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el Admin MOTD.");
		SaveMOTDs();
	}
	return 1;
}

CMD:mmotd(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 5 || Info[playerid][pHelper] >= 2)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /mmotd [mensaje]");
		new string[128];
		format(CAMOTD, sizeof(CAMOTD), "%s", params);
		if(Info[playerid][pAdmin] >= 5)
		{
			format(string, sizeof(string), "AdmCmd: %s cambió el motd para moderadores a: %s.", GetPlayerNameEx(playerid), params);
			ABroadCast( COLOR_GENERAL, string, 5);
		}
		else if(Info[playerid][pHelper] >= 2)
		{
		    format(string, sizeof(string), "CACmd: %s cambió el motd para moderadores a: %s.", GetPlayerNameEx(playerid), params);
			CBroadCast( TEAM_AZTECAS_COLOR, string, 2);
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el MOTD para moderadores.");
		SaveMOTDs();
	}
	else NoAutorizado
	return 1;
}

CMD:numeropriv(playerid, params[])
{
if(Info[playerid][pPnumber] != 0)
{
    if(UnidentifedCall[playerid] == 1)
	{
        UnidentifedCall[playerid] = 0;
        SendClientMessageEx(playerid, COLOR_WHITE, "Desabilitaste el numero privado.");
    }
    else
	{
        UnidentifedCall[playerid] = 1;
        SendClientMessageEx(playerid, COLOR_WHITE, "Activaste el numero privado.");
    }
}
else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes un teléfono.");
return 1;
}

CMD:god(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 3)
	{
	    SetHP(playerid, INFINITY_HEALTH);
	    SetPlayerArmour(playerid, 100000);
	}
	else NoAutorizado
	return 1;
}

CMD:ayudame(playerid, params[])
{
	if(Advisors < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* En este momento no hay moderadores, intenta en otro momento!");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ayudame [razón]");
	if(JustReported[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Espera 10 segundos para enviar otra solicitud!");
	JustReported[playerid] = 10;
	format(szMessage, sizeof(szMessage), "** %s solicita ayuda, razón: %s. (usa /aceptarayuda)", GetPlayerNameEx(playerid), params);
	SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, szMessage);
	SendClientMessageEx(playerid, COLOR_GENERAL, "* Has solicitado ayuda a nuestros moderadores, espera a una respuesta.");
	SetPVarInt( playerid, "COMMUNITY_ADVISOR_REQUEST", 1 );
	return 1;
}

CMD:aceptarayuda(playerid, params[])
{
foreach(Player, i)
{
	if( GetPVarInt( i, "COMMUNITY_ADVISOR_REQUEST" ) >= 1 )
	{
		AdvisorCall = i;
	}
}
if(AdvisorCall < 999)
{
	if(IsPlayerConnectedEx(AdvisorCall))
	{
		if(HelpingNewbie[playerid] != 999) return SendClientMessageEx(playerid, COLOR_GRAD2, "  Ya estás ayudando a alguien.");
		if(GetPVarInt(playerid, "AdvisorDuty") == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "  No está en servicio como moderador. /modduty");
		format(szMessage, sizeof(szMessage), "* %s ha aceptado la petición de ayuda de %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(AdvisorCall));
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, szMessage);
		format(szMessage, sizeof(szMessage), "* Has aceptado la solicitud de ayuda %s, una vez que hayas terminado usa /finalizarayuda para volver a su posición.",GetPlayerNameEx(AdvisorCall));
		SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		format(szMessage, sizeof(szMessage), "* Moderador %s ha aceptado tu solicitud de ayuda.",GetPlayerNameEx(playerid));
		SendClientMessageEx(AdvisorCall, COLOR_GENERAL, szMessage);
		SendClientMessageEx(AdvisorCall, COLOR_WHITE, "* Por favor espera en tu posición actual, muchas gracias.");
		//Info[playerid][pAcceptedHelp]++;
		new Float: x, Float: y, Float: z, Float: r, i, vw;
		vw = GetPlayerVirtualWorld(playerid);
		i = GetPlayerInterior(playerid);
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, r);
		SetPVarFloat(playerid, "AdvisorLastx", x);
		SetPVarFloat(playerid, "AdvisorLasty", y);
		SetPVarFloat(playerid, "AdvisorLastz", z);
		SetPVarFloat(playerid, "AdvisorLastr", r);
		SetPVarInt(playerid, "AdvisorLastInt", i);
		SetPVarInt(playerid, "AdvisorLastVW", vw);
		GetPlayerPos(AdvisorCall, x, y, z);
		vw = GetPlayerVirtualWorld(AdvisorCall);
		i = GetPlayerInterior(AdvisorCall);
		SetPlayerPos(playerid, x, y+2, z);
		SetPlayerVirtualWorld(playerid, vw);
		SetPlayerInterior(playerid, i);
		HelpingNewbie[playerid] = AdvisorCall;
		AdvisorCall = 999;
		//AddCAReportToken(playerid); // Advisor Tokens
		return 1;
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "   Todavía nadie ha solicitado ninguna ayuda o ya aceptaron a la que ibas!");
return 1;
}

CMD:finalizarayuda(playerid, params[])
{
	if(HelpingNewbie[playerid] < 999)
	{
		new string[128];
		format(string, sizeof(string), "* %s ha finalizado la solicitud de ayuda de %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(HelpingNewbie[playerid]));
		SendDutyAdvisorMessage(TEAM_AZTECAS_COLOR, string);
		SetPlayerPos(playerid, GetPVarFloat(playerid, "AdvisorLastx"), GetPVarFloat(playerid, "AdvisorLasty"), GetPVarFloat(playerid, "AdvisorLastz"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "AdvisorLastVW"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "AdvisorLastInt"));
		SetPVarInt(HelpingNewbie[playerid], "COMMUNITY_ADVISOR_REQUEST", 0 );
		HelpingNewbie[playerid] = 999;
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No estás ayudando a nadie!");
	return 1;
}

CMD:modduty(playerid, params[])
{
	if(Info[playerid][pHelper] >= 1)
	{
	    if(GetPVarInt(playerid, "AdvisorDuty") == 1)
		{
	        SendClientMessageEx(playerid, COLOR_GENERAL, "* Ahora estás fuera de servicio como moderador y no recibirás solicitudes de usuarios nuevos.");
	        DeletePVar(playerid, "AdvisorDuty");
	        Advisors -= 1;
	    }
	    else
		{
	        SendClientMessageEx(playerid, COLOR_GENERAL, "* Ahora te encuentras en servicio como moderador y recibirás llamadas de personas que te necesiten.");
	        SetPVarInt(playerid, "AdvisorDuty", 1);
	        Advisors += 1;
	    }
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "* No eres un moderador!");
	return 1;
}

CMD:hacermod(playerid, params[])
{
if (Info[playerid][pAdmin] >= 4 || Info[playerid][pHelper] >= 2)
{
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /hacermod [playerid]");

	if(IsPlayerConnectedEx(giveplayerid))
	{
		Info[giveplayerid][pHelper] = 1;
		format(szMessage, sizeof(szMessage), "Te han asignado moderador - Responsable: %s", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
		format(szMessage, sizeof(szMessage), "Asignaste moderador a %s.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		format(szMessage, sizeof(szMessage), "%s asignó moderador a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		Log("logs/makehelp.log", szMessage);
	}
}
else NoAutorizado
return 1;
}

CMD:hacerlidermod(playerid, params[])
{
if (Info[playerid][pAdmin] >= 5)
{
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /hacerlidermod [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		Info[giveplayerid][pHelper] = 2;
		format(szMessage, sizeof(szMessage), "Te han asignado lider de Moderadores - Responsable: %s", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, szMessage);
		format(szMessage, sizeof(szMessage), "Asignaste lider de Moderadores a %s.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
		format(szMessage, sizeof(szMessage), "%s asignó lider de Moderadores a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		Log("logs/makehelp.log", szMessage);
	}
}
else NoAutorizado
return 1;
}

CMD:kickmod(playerid, params[])
{
if (Info[playerid][pAdmin] >= 5 || Info[playerid][pHelper] >= 2)
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /kickmod [playerid]");
	if(IsPlayerConnectedEx(giveplayerid)){
		if(Info[giveplayerid][pHelper] != 0){
			if(GetPVarType(playerid, "AdvisorDuty"))
			{
				DeletePVar(playerid, "AdvisorDuty");
				Advisors -= 1;
			}
			Info[giveplayerid][pHelper] = 0;
			format(string, sizeof(string), "%s te ha expulsado del equipo de moderadores.", GetPlayerNameEx(playerid));
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "Has expulsado a %s del equipo de moderadores.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
		}

	}
}
else NoAutorizado
return 1;
}

CMD:v(playerid, params[])
{
if(isnull(params))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /v [nombre]");
	SendClientMessageEx(playerid, COLOR_GREY, "Nombres: estado, motor, luces, maletero, capo");
	return 1;
}
if(strcmp(params, "motor", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
{
	new engine,lights,alarm,doors,bonnet,boot,objective,vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(engine == VEHICLE_PARAMS_ON)
	{
		SetVehicleEngine(vehicleid, playerid);
	}
	else if((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
	{
	    if(GetPVarType(playerid, "pDynamicBB"))
	{
	    DeletePVar(playerid, "pDynamicBB"); DeletePVar(playerid, "pDynamicBBStation"); DeletePVar(playerid, "pDynamicBBLabel");
	    DeletePVar(playerid, "pDynamicBBX"); DeletePVar(playerid, "pDynamicBBY"); DeletePVar(playerid, "pDynamicBBZ");
	    if(GetPVarType(playerid, "pDynamicBBArea"))
	    {
	        new string[128];
			format(string, sizeof(string), "* %s apago su stereo.", SenderName(playerid));
	        foreach(Player, i)
			{
	            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
	            {
	                StopAudioEx(i);
	                SendClientMessage(i, COLOR_PURPLE, string);
				}
			}
	        DeletePVar(playerid, "pDynamicBBArea");
		}
		SendClientMessage(playerid, COLOR_WHITE, "Apagaste tu stereo!");
	}
		else
	{
	    foreach(Player, i)
		{
	        if(GetPVarType(i, "pDynamicBB"))
	        {
				if(GetPVarInt(i, "pDynamicBBVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "pDynamicBBInt") == GetPlayerInterior(playerid) && IsPlayerInRangeOfPoint(playerid, 5.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
				{
				    DeletePVar(i, "pDynamicBB");
					DeletePVar(i, "pDynamicBBStation");
				    DeletePVar(i, "pDynamicBBX");
					DeletePVar(i, "pDynamicBBY");
					DeletePVar(i, "pDynamicBBZ");
					DeletePVar(i, "pDynamicBBInt");
					DeletePVar(i, "pDynamicBBVW");

				    new string[128];
				    if(GetPVarType(i, "pDynamicBBArea"))
				    {
				        for(new x=0; x<MAX_PLAYERS; x++)
						{
				            if(IsPlayerInDynamicArea(x, GetPVarInt(x, "pDynamicBBArea")))
				            {
				                StopAudioEx(x);
				                SendClientMessage(x, COLOR_PURPLE, string);
							}
						}
				        DeletePVar(i, "pDynamicBBArea");
					}
					return 1;
				}
			}
	    }
	}
		SendClientMessageEx(playerid, COLOR_WHITE, "Motor del vehículo se está prendiendo, por favor espera ...");
		SetTimerEx("SetVehicleEngine", 1000, 0, "dd",  vehicleid, playerid);
	}
}
else if(strcmp(params, "luces", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
	SetVehicleLights(vehicleid, playerid);
}
else if(strcmp(params, "capo", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || IsAPlane(vehicleid) || IsABike(vehicleid))
		{
			return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
		}
		SetVehicleHood(vehicleid, playerid);
	}
	else if(!IsPlayerInAnyVehicle(playerid))
	{
		new closestcar = GetClosestCar(playerid);
		if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
		{
			if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510 || IsAPlane(closestcar) || IsABike(closestcar))
			{
				return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
			}
			SetVehicleHood(closestcar, playerid);
		}
	}
}
else if(strcmp(params, "maletero", true) == 0)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
		{
			return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
		}
		SetVehicleTrunk(vehicleid, playerid);
	}
	else if(!IsPlayerInAnyVehicle(playerid))
	{
		new closestcar = GetClosestCar(playerid);
		if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
		{
			if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510)
			{
				return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
			}
			SetVehicleTrunk(closestcar, playerid);
		}
	}
}
else if(strcmp(params, "estado", true) == 0)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new engine,lights,alarm,doors,bonnet,boot,objective,enginestatus[15],lightstatus[15], string[128];
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_RED,"Este vehiculo no necesita gasolina.");
		if(engine != VEHICLE_PARAMS_ON) format(enginestatus, sizeof(enginestatus), "Apagado");
		else format(enginestatus, sizeof(enginestatus), "Prendido");
		if(lights != VEHICLE_PARAMS_ON) format(lightstatus, sizeof(lightstatus), "Apagadas");
		else format(lightstatus, sizeof(lightstatus), "Prendidas");
		format(string, sizeof(string), "Motor: %s | Luces: %s | Gasolina: %d",enginestatus,lightstatus,VehicleFuel[vehicleid]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "* Opción no existe.");
return 1;
}


CMD:llenar(playerid, params[])
{
if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_GRAD2, "El motor del vehículo debe estar apagado, escribe /v motor o pulsa la tecla N para apagarlo.");
    if(!IsAtGasStation(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en la gasolineria.");
    if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_RED,"Este vehiculo no necesita gasolina.");
    if(VehicleFuel[vehicleid] >= 500) return SendClientMessageEx(playerid, COLOR_RED, "El tanque de gasolina de este vehiculo está lleno.");
    if(RefuelingVehicle[playerid] == 1) return SendClientMessageEx(playerid, COLOR_RED, "Se está recargando el tanque de tu vehículo.");
   	SendClientMessageEx(playerid, COLOR_WHITE, "Recargando tanque de tu vehiculo, no bajes del vehiculo y por favor espera.");
   	RefuelingVehicle[playerid] = 1;
   	RefuelingVehicleTimer[playerid] = SetTimerEx("ReFill", 1000, true, "i", playerid);
}
return 1;
}

CMD:shopcar(playerid, params[])
{
	new string[128], giveplayerid, modelid, color1, color2, invoicenum[32];
	if(sscanf(params, "dddds", giveplayerid, modelid, color1, color2, invoicenum)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /shopcar [playerid] [modelid] [color 1] [color 2] [Factura]");
	if (Info[playerid][pAdmin] < 6) return NoAutorizado
	if(color1 < 0 || color1 > 126) { SendClientMessageEx(playerid, COLOR_GREY, "   Numero de color no debe ser menor de 0 o mayor que 126 !"); return 1; }
	if(color2 < 0 || color2 > 126) { SendClientMessageEx(playerid, COLOR_GREY, "   Numero de color 2 no debe ser menor de 0 o mayor que 126 !"); return 1; }
	if(modelid < 400 || modelid > 611) { SendClientMessageEx(playerid, COLOR_GREY, "   Id del vehiculo debe ser del 400 al 611 !"); return 1; }
	new playervehicleid = GetPlayerFreeVehicleId(giveplayerid);
	if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_GREY, "[ERROR]: El jugador no puede tener más coches.");
	if(carsforplayer[giveplayerid] == 2) return SendClientMessageEx(playerid,COLOR_WHITE,"* El jugador sólo puede tener 2 coches spawneados y 6 guardados.");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(giveplayerid,X,Y,Z);
	new Float:Angle;
	GetPlayerFacingAngle(giveplayerid,Angle);
	new car = CreatePlayerVehicle(giveplayerid, playervehicleid, modelid, X, Y, Z, Angle, color1, color2, 0);
	if(car == INVALID_PLAYER_VEHICLE_ID)
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "ERROR: Algo salió mal y el coche no se creó.");
	}
	else
	{
	    format(string, sizeof(string), "[SHOPCAR] %s creó [M-%d C1-%d C2-%d] - Factura por %s a %s", GetPlayerNameEx(playerid), modelid, color1, color2, invoicenum, GetPlayerNameEx(giveplayerid));
	    SendClientMessageEx(playerid, COLOR_GRAD1, string);
	    Log("logs/shoplog.log", string);
	}
	return 1;
}

CMD:estacionar(playerid, params[])
{
if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
{
	new ownerid = Info[playerid][pVehicleKeysFrom];
	if(IsPlayerConnectedEx(ownerid))
	{
		new d = Info[playerid][pVehicleKeys];
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[ownerid][d][pvId]))
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_GREY, "Tu debes ser el conductor.");
			new Float:x, Float:y, Float:z, Float:angle, Float:health;
			GetVehicleHealth(PlayerVehicleInfo[ownerid][d][pvId], health);
			PlayerVehicleInfo[ownerid][d][pvHealth] = health;
			//if(health < 800) return SendClientMessageEx(playerid, COLOR_GREY, " Tu vehículo está demasiado dañado para estacionarlo.");
			if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
			GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
			GetVehicleZAngle(PlayerVehicleInfo[ownerid][d][pvId], angle);
			SurfingCheck(GetPlayerVehicleID(playerid));
			UpdatePlayerVehicleParkPosition(ownerid, d, x, y, z, angle, health);
			PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
		 	SetPlayerArmedWeapon(playerid, 0);

			new string[29 + (MAX_PLAYER_NAME * 2)];
			format(string, sizeof(string), "* %s ha estacionado el vehiculo de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(ownerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            fVehSpeed[playerid] = 0.0;
			return 1;
		}
	}
}
for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
{
	if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessageEx(playerid, COLOR_GREY, "Tu debes ser el conductor.");
		new Float:x, Float:y, Float:z, Float:angle, Float:health;
		GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
		PlayerVehicleInfo[playerid][d][pvHealth] = health;
		//if(health < 800) return SendClientMessageEx(playerid, COLOR_GREY, " Tu vehiculo está muy dañado para estacionarlo.");
		if(Info[playerid][pLockCar] == GetPlayerVehicleID(playerid)) Info[playerid][pLockCar] = INVALID_VEHICLE_ID;
		GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
		GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], angle);
		SurfingCheck(GetPlayerVehicleID(playerid));
		UpdatePlayerVehicleParkPosition(playerid, d, x, y, z, angle, health);
		PutPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], 0);
		SetPlayerArmedWeapon(playerid, 0);

		new string[30 + (MAX_PLAYER_NAME * 2)];
		format(string, sizeof(string), "* %s ha estacionado su vehiculo.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        fVehSpeed[playerid] = 0.0;
		return 1;
	}
}
SendClientMessageEx(playerid, COLOR_GREY, "Tu necesitas estar dentro de tu vehiculo para hacer esto.");
return 1;
}

CMD:borrarcoche(playerid, params[])
{
if(GetPVarInt(playerid, "dcConfirm") == 0)
{
	SetPVarInt(playerid, "dcConfirm", 1);
	SendClientMessageEx(playerid, COLOR_WHITE, "El uso de este comando borrará completamente el vehículo y no habrá reembolso");
	SendClientMessageEx(playerid, COLOR_WHITE, "Si estás seguro de que deseas eliminar tu vehículo, por favor re-escriba el comando /borrarcoche");
}
else
{
	DeletePVar(playerid, "dcConfirm");
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
		    carsforplayer[playerid]--;
			DestroyVehicle(PlayerVehicleInfo[playerid][d][pvId]);
			PlayerVehicleInfo[playerid][d][pvId] = 0;
            PlayerVehicleInfo[playerid][d][pvModelId] = 0;
			PlayerVehicleInfo[playerid][d][pvPosX] = 0.0;
			PlayerVehicleInfo[playerid][d][pvPosY] = 0.0;
			PlayerVehicleInfo[playerid][d][pvPosZ] = 0.0;
			PlayerVehicleInfo[playerid][d][pvPosAngle] = 0.0;
			PlayerVehicleInfo[playerid][d][pvLock] = 0;
			PlayerVehicleInfo[playerid][d][pvLocked] = 0;
			PlayerVehicleInfo[playerid][d][pvPaintJob] = -1;
			PlayerVehicleInfo[playerid][d][pvColor1] = 0;
			PlayerVehicleInfo[playerid][d][pvColor2] = 0;
			PlayerVehicleInfo[playerid][d][pvPrice] = 0;
			PlayerVehicleInfo[playerid][d][pvImpounded] = 0;
			strcpy(PlayerVehicleInfo[playerid][d][pvAllowPlayer], "Nadie", MAX_PLAYER_NAME);
			PlayerVehicleInfo[playerid][d][pvPark] = 0;
			PlayerVehicleInfo[playerid][d][pvAllowedPlayerId] = INVALID_PLAYER_ID;
			for(new m = 0; m < MAX_MODS; m++)
			{
				PlayerVehicleInfo[playerid][d][pvMods][m] = 0;
			}
			PlayerVehicleInfo[playerid][d][pvStereo] = 0;
			PlayerCars--;
			SendClientMessageEx(playerid, COLOR_WHITE, "Su vehículo ha sido borrado.");
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, " Tienes que estar dentro de tu vehiculo.");
}

return 1;
}


CMD:verllaves(playerid, params[])
{
if(IsACop(playerid))
{
    new string[128], giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /verllaves [jugador]");

	if(IsPlayerConnectedEx(giveplayerid))
	{
        SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
		format(string, sizeof(string), "*** Coches de %s  ***", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GRAD2, string);
        for(new i=0; i<MAX_PLAYERVEHICLES; i++)
     	{
		    if(PlayerVehicleInfo[giveplayerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
			{
				format(string, sizeof(string), "Registro del Coche: %d | Modelo: %s | Multa: $%d.",PlayerVehicleInfo[giveplayerid][i][pvId],GetVehicleName(PlayerVehicleInfo[giveplayerid][i][pvId]),PlayerVehicleInfo[giveplayerid][i][pvTicket]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
    		}
			else if(PlayerVehicleInfo[giveplayerid][i][pvImpounded])
			{
				format(string, sizeof(string), "Registro del Coche: Anulado (No Disponible) | Modelo: %s | Multa: $%d.",VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400],PlayerVehicleInfo[giveplayerid][i][pvTicket]);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
    		}
    	}
    	SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
	}
}
return 1;
}

CMD:vcoche(playerid, params[])
{
if(IsACop(playerid))
{
    new carid = GetPlayerVehicleID(playerid);
    new closestcar = GetClosestCar(playerid, carid);
    if(IsTrailerAttachedToVehicle(carid))
	{
        new carbeingtowed = GetVehicleTrailer(carid);
        foreach(Player, i)
		{
            new v = GetPlayerVehicle(i, carbeingtowed);
            if(v != -1)
			{
				new string[78 + MAX_PLAYER_NAME];
                format(string, sizeof(string), "Registro Vehicular: %d | Modelo: %s | Dueño: %s | Multa: $%d.",carbeingtowed,GetVehicleName(PlayerVehicleInfo[i][v][pvId]),GetPlayerNameEx(i),PlayerVehicleInfo[i][v][pvTicket]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
                return 1;
            }
        }
        SendClientMessageEx(playerid, COLOR_GRAD2, "Este vehículo no pertenece a nadie!");
    }
    else if(IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0) && !IsTrailerAttachedToVehicle(carid))
	{
        foreach(Player, i)
		{
            new v = GetPlayerVehicle(i, closestcar);
            if(v != -1)
			{
				new string[78 + MAX_PLAYER_NAME];
                format(string, sizeof(string), "Registro Vehicular: %d | Modelo: %s | Dueño: %s | Multa: $%d.",closestcar,GetVehicleName(PlayerVehicleInfo[i][v][pvId]),GetPlayerNameEx(i),PlayerVehicleInfo[i][v][pvTicket]);
                SendClientMessageEx(playerid, COLOR_WHITE, string);
                return 1;
            }
        }
        SendClientMessageEx(playerid, COLOR_GRAD2, "Este vehículo no pertenece a nadie!");
    }
    else return SendClientMessageEx(playerid, COLOR_GRAD1, "ERROR: No estás cerca de un vehículo.");
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para usar este comando.");
return 1;
}

CMD:embargar(playerid, params[])
{
switch(Info[playerid][pMember])
{
	case 1:
	{
		if(!IsAtImpoundingPoint(playerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "No estás cerca del punto de incautación, no puedes confiscar!");
			return 1;
		}
		if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		{

			new
				iVehType,
				iVehIndex,
				iTargetOwner,
				iVehTowed = GetVehicleTrailer(GetPlayerVehicleID(playerid));

			if(!GetVehicleModel(iVehTowed))
			{
				return SendClientMessageEx(playerid, COLOR_GREY, "El vehículo en el remolque se ha desenganchado y por lo tanto no puede ser confiscado.");
			}
			foreach(Player, i)
			{
				iVehIndex = GetPlayerVehicle(i, iVehTowed);
				if(iVehIndex != -1)
				{
					iVehType = 1;
					iTargetOwner = i;
					break;
				}
			}
			if(!iVehType)
			{
				iVehType = 2;
			}
			switch(iVehType)
			{
				case 0, 2:
				{
					SendClientMessageEx(playerid, COLOR_GRAD1, "No se pudo encontrar ningún tipo de registro en el vehículo y se ha devuelto.");
					DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
					SetVehicleToRespawn(iVehTowed);
				}
				case 1:
				{
				    if(PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket] <= 1000) return SendClientMessageEx(playerid, COLOR_GREY, "Para embargar un vehiculo es necesario que este mismo tenga mínimo $1000 en multas!");
					PlayerVehicleInfo[iTargetOwner][iVehIndex][pvImpounded] = 1;
					PlayerVehicleInfo[iTargetOwner][iVehIndex][pvId] = INVALID_PLAYER_VEHICLE_ID;
					DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
					DestroyVehicle(iVehTowed);
					format(szMessage, sizeof(szMessage),"* Has confiscado el vehiculo de %s - Modelo %s.",GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
					SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);

					format(szMessage, sizeof(szMessage), "Su %s ha sido confiscado. Es posible que lo pueda sacar pagando la multa en SAPD.", VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
					SendClientMessageEx(iTargetOwner, COLOR_GENERAL, szMessage);

					format(szMessage, sizeof(szMessage), "HQ: %s ha confiscado el vehiculo de %s - Modelo %s (No pagó $%i de multa).", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400], PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket]);
					SendRadioMessage(Info[playerid][pMember], TEAM_RADIO_COLOR, szMessage);
					carsforplayer[iTargetOwner]--;
					--PlayerCars;
				}
			}
			arr_Towing[playerid] = INVALID_VEHICLE_ID;
		}
	}
	default: SendClientMessageEx(playerid, COLOR_GRAD2, "No estás autorizado para usar este comando.");
}
return 1;
}

CMD:pagarm(playerid, params[])
{
if(IsPlayerInRangeOfPoint(playerid, 3.0, 1475.4143,-1752.8630,3285.2859))
{

    if(Info[playerid][pCarLic] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Una licencia de conducir válida es necesaria para liberar su vehículo del depósito municipal.");
	new vstring[1024],iCount;
	for(new i; i < MAX_PLAYERVEHICLES; i++)
	{
	    if(PlayerVehicleInfo[playerid][i][pvPrice] < 1) PlayerVehicleInfo[playerid][i][pvPrice] = 15000;

		if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
		{
			if(PlayerVehicleInfo[playerid][i][pvTicket])
			{
				format(vstring, sizeof(vstring), "%s\n%s (Multa - $%i)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvTicket]);
				++iCount;
			}
			else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
		}
		else if(PlayerVehicleInfo[playerid][i][pvImpounded])
		{
		    new iCost = (PlayerVehicleInfo[playerid][i][pvPrice] / 20) + PlayerVehicleInfo[playerid][i][pvTicket] + (Info[playerid][pLevel] * 2);
			format(vstring, sizeof(vstring), "%s\n%s (Multa - $%i) (Embargado - $%i Liberación)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvTicket],iCost);
			++iCount;
		}
		else format(vstring, sizeof(vstring), "%s\nNada", vstring);
	}
	if(iCount)
	{
		ShowPlayerDialog(playerid, MPSPAYTICKETS, DIALOG_STYLE_LIST, "Vehiculos", vstring, "Liberar", "Cancelar");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes multas para pagar o vehículos para ser liberados.");
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en la central de SAPD.");
return 1;
}

CMD:enganchar(playerid, params[])
{
if(IsACop(playerid))
 {
	if(IsPlayerInAnyVehicle(playerid))
 	{
		new
			carid = GetPlayerVehicleID(playerid);

		if(IsATowTruck(carid))
		{
			new
				closestcar = GetClosestCar(playerid, carid);

   			if(GetDistancePlayerVeh(playerid,closestcar) <= 8 && !IsTrailerAttachedToVehicle(carid))
			   {
				foreach(Player, i)
				{
					if(GetPlayerVehicle(i, closestcar) != -1)
					{
					    if(ProxDetectorS(30.0,playerid,i))
							SendClientMessageEx(i, COLOR_GENERAL, "Alguien está tratando de remolcar tu vehículo!");

						arr_Towing[playerid] = closestcar;
					    SendClientMessageEx(playerid, COLOR_GRAD2, "Este coche está disponible para embargar.");
  						return AttachTrailerToVehicle(closestcar,carid);
					}
				}
				SendClientMessageEx(playerid, COLOR_GRAD2, "Este vehiculo no tiene ningún registro, está disponible para embargar");
				AttachTrailerToVehicle(closestcar,carid);
				arr_Towing[playerid] = closestcar;
				return 1;
 			}
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes remolcar en este tipo de vehículo.");
	}
 	else SendClientMessageEx(playerid, COLOR_GREY, "* Tienes que estar en un coche.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes autorización a usar este comando.");
return 1;
}

CMD:desnganchar(playerid, params[])
{
if(IsACop(playerid))
{
	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
 	{
  		SendClientMessageEx(playerid, COLOR_GRAD1,"Has desenganchado el vehículo que traías.");
		arr_Towing[playerid] = INVALID_VEHICLE_ID;
		DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
 	}
  	else{SendClientMessageEx(playerid, COLOR_GRAD1,"Aún no has enganchado nada.");}
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización a usar este comando.");
return 1;
}

CMD:dejarmulta(playerid, params[])
{
if(IsACop(playerid))
{
    if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /dejarmulta [Registro Vehicular]");

	if(Info[playerid][pRank] < 2) return SendClientMessageEx(playerid, COLOR_GREY, "   Sólo rangos 2 y superiores pueden dejar multas!");
    new Float: x, Float: y, Float: z, vehicleid = strval(params);
    GetVehiclePos(vehicleid, x, y, z);
    if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
	{
        if(vehicleid != INVALID_VEHICLE_ID)
		{
            foreach(Player, i)
			{
                new v = GetPlayerVehicle(i, vehicleid);
                if(v != -1)
				{
                    if(PlayerVehicleInfo[i][v][pvTicket] >= 3000) return SendClientMessageEx(playerid, COLOR_GREY, "Este vehiculo ya excedio el máximo de multas, se debe embargar!");
					new string[62 + MAX_PLAYER_NAME];
                    PlayerVehicleInfo[i][v][pvTicket] += 1000;
                    //Info[playerid][pTicketTime] = 60;
                    format(string, sizeof(string), "Dejaste una multa de $1000 en el coche de %s, modelo %s.",GetPlayerNameEx(i),GetVehicleName(PlayerVehicleInfo[i][v][pvId]));
                    SendClientMessageEx(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            SendClientMessageEx(playerid, COLOR_GRAD2, "Este vehículo no tiene ningún registro!");
        }
    }
    else return SendClientMessageEx(playerid, COLOR_GRAD2, "Necesitas estar cerca de dicho vehículo.");
}
return 1;
}
CMD:lock(playerid, params[])
{
if(Info[playerid][pLock] == 1)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(Info[playerid][pLockCar] != GetPlayerVehicleID(playerid) && Info[playerid][pLockCar] != INVALID_VEHICLE_ID) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un bloqueo para este vehículo, compralo en el 24/7!");
		if(GetPlayerVehicleSeat(playerid) != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No es posible cerrar los vehículos con pasajeros!");
		//if(GetCarDealershipVehicleId(GetPlayerVehicleID(playerid)) != -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "No se puede bloquear los vehículos de Concesionario!");
		//new v = -1;
		/*foreach(Player, i)
		{
    		v = GetPlayerVehicle(i, GetPlayerVehicleID(playerid));
	    	if(v != -1) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes cerrar vehiculos de otras personas.");
		}*/
		if(Info[playerid][pLockCar] == INVALID_VEHICLE_ID) Info[playerid][pLockCar] = GetPlayerVehicleID(playerid);
  		if(LockStatus[GetPlayerVehicleID(playerid)] == 0)
    	{
			LockStatus[GetPlayerVehicleID(playerid)] = 1;
			GameTextForPlayer(playerid, "~r~cerrado", 1000, 6);
   			PlayerPlaySoundEx(1145, 0.0, 0.0, 0.0);
      		vehicle_lock_doors(Info[playerid][pLockCar]);
  		}
    	else
        {
			LockStatus[GetPlayerVehicleID(playerid)] = 0;
			vehicle_unlock_doors(Info[playerid][pLockCar]);
  			GameTextForPlayer(playerid, "~g~abierto", 1000, 6);
    		PlayerPlaySoundEx(1145, 0.0, 0.0, 0.0);
        }
	}
    else
    {
 		new Float: x, Float: y, Float: z;
   		GetVehiclePos(Info[playerid][pLockCar], x, y, z);
    	if(IsPlayerInRangeOfPoint(playerid, 4.0, x, y, z))
    	{
     		if(LockStatus[Info[playerid][pLockCar]] == 0)
       		{
				LockStatus[Info[playerid][pLockCar]] = 1;
        		vehicle_lock_doors(Info[playerid][pLockCar]);
        		GameTextForPlayer(playerid, "~r~cerrado", 1000, 6);
            	PlayerPlaySoundEx(1145, x, y, z);
            }
            else
            {
				LockStatus[Info[playerid][pLockCar]] = 0;
            	vehicle_unlock_doors(Info[playerid][pLockCar]);
            	GameTextForPlayer(playerid, "~g~abierto", 1000, 6);
            	PlayerPlaySoundEx(1145, x, y, z);
      		}
        }
        else
        {
        	SendClientMessageEx(playerid, COLOR_GRAD2, "Primero echale seguro desde adentro del vehiculo!");
            return 1;
        }
   	}
}
else
{
	SendClientMessageEx(playerid, COLOR_GRAD2, " Usted no ha comprado seguridad para su auto!");
	return 1;
}
return 1;
}

CMD:seguro(playerid, params[])
{
new Float: x, Float: y, Float: z;
if(Info[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
{
    new ownerid = Info[playerid][pVehicleKeysFrom];
    if(IsPlayerConnectedEx(ownerid))
	{
        new d = Info[playerid][pVehicleKeys];
        if(PlayerVehicleInfo[ownerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
            if(PlayerVehicleInfo[ownerid][d][pvLock] > 0)
			{
                if(PlayerVehicleInfo[ownerid][d][pvLocked] == 0)
				{
                    GameTextForPlayer(playerid,"~r~Vehiculo bloqueado!",5000,6);
                    PlayerPlaySoundEx(1145, x, y, z);
                    PlayerVehicleInfo[ownerid][d][pvLocked] = 1;
                    LockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId], PlayerVehicleInfo[ownerid][d][pvLock]);
                    return 1;
                }
                else
				{
                    GameTextForPlayer(playerid,"~g~Vehiculo desbloqueado!",5000,6);
                    PlayerPlaySoundEx(1145, x, y, z);
                    PlayerVehicleInfo[ownerid][d][pvLocked] = 0;
                    UnLockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId], PlayerVehicleInfo[ownerid][d][pvLock]);
					return 1;
                }
            }
            else
			{
                SendClientMessageEx(playerid, COLOR_GREY, " Usted no tiene un sistema de bloqueo instalado en el vehículo.");
                return 1;
            }
        }
    }
}
for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
{
    if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
    if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
	{
        if(PlayerVehicleInfo[playerid][d][pvLock] > 0 && PlayerVehicleInfo[playerid][d][pvLocked] == 0)
		{
            GameTextForPlayer(playerid,"~r~Vehiculo bloqueado!",5000,6);
            PlayerPlaySoundEx(1145, x, y, z);
            PlayerVehicleInfo[playerid][d][pvLocked] = 1;
            LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerVehicleInfo[playerid][d][pvLock]);
            return 1;
        }
        else if(PlayerVehicleInfo[playerid][d][pvLock] > 0 && PlayerVehicleInfo[playerid][d][pvLocked] == 1)
		{
            GameTextForPlayer(playerid,"~g~Vehiculo desbloqueado!",5000,6);
            PlayerPlaySoundEx(1145, x, y, z);
            PlayerVehicleInfo[playerid][d][pvLocked] = 0;
            UnLockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerVehicleInfo[playerid][d][pvLock]);
            return 1;

        }
        SendClientMessageEx(playerid, COLOR_GREY, " Usted no tiene un sistema de bloqueo instalado en el vehículo.");
        return 1;
    }
}
SendClientMessageEx(playerid, COLOR_GREY, " Debes de estar cerca de un coche tuyo.");
return 1;
}

CMD:recargarcochesd(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] < 3) return NoAutorizado
new string[128], giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /recargarcochesd [playerid]");
UnloadPlayerVehicles(giveplayerid);
LoadPlayerVehicles(giveplayerid);
format(string, sizeof(string), "Recargaste los vehiculos de %s.", GetPlayerNameEx(giveplayerid));
SendClientMessageEx(playerid, COLOR_GREY, string);
return 1;
}

CMD:deletecp(playerid, params[])
{
new string[128], giveplayerid, vehicleid;
if(sscanf(params, "dd", giveplayerid, vehicleid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /deletecp [playerid] [vehicleid]");
if (Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, " No puedes utilizar este comando.");
format(string, sizeof(string), "%s ha destruido el auto %s de %s.", GetPlayerNameEx(playerid), GetVehicleName(vehicleid), GetPlayerNameEx(giveplayerid));
Log("logs/playervehicle.log", string);
new playervehicleid = GetPlayerVehicle(giveplayerid, vehicleid);
if(playervehicleid == -1) return SendClientMessageEx(playerid, COLOR_GREY, "ERROR: El jugador no tiene ese vehículo.");
DestroyPlayerVehicle(giveplayerid, playervehicleid);
return 1;
}

CMD:quitarllave(playerid, params[])
{
new vstring[512], iValidVehicles;
for(new i=0; i<MAX_PLAYERVEHICLES; i++)
{
    if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
		format(vstring, sizeof(vstring), "%s\n%s (ID: %d)", vstring, GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]), GetPlayerNameEx(PlayerVehicleInfo[playerid][i][pvAllowedPlayerId])), ++iValidVehicles;

    else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
        format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

    else
		format(vstring, sizeof(vstring), "%s\nVacío", vstring);
}
if(iValidVehicles != 0)
{
	ShowPlayerDialog(playerid, REMOVEKEYS, DIALOG_STYLE_LIST, "Por favor selecciona un vehiculo.", vstring, "Quitar", "Cancelar");
}
else
{
    SendClientMessageEx(playerid, COLOR_GRAD2, "Usted no tiene ninguna llave para quitar.");
}
return 1;
}

CMD:gps(playerid, params[])
{
if(carsforplayer[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Recuerda antes de usar tu GPS tienes que tener al menos un coche spawneado. (/llaves)");
new vstring[1024];
for(new i; i < MAX_PLAYERVEHICLES; i++)
{
	if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
	{
		format(vstring, sizeof(vstring), "%s\n%s (ID: %d)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvId]);
	}
	else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
	{
		format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
	}
	else
	{
		format(vstring, sizeof(vstring), "%s\nVacío", vstring);
	}
}
ShowPlayerDialog(playerid, TRACKCAR, DIALOG_STYLE_LIST, "GPS - Llaves", vstring, "Buscar", "Salir");
return 1;
}

/*CMD:oplaca(playerid, params[]) To Fix
{
new
	giveplayerid;

if(!Team_Mecanicos(playerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres mecánico");
if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /placa [id]");
if(IsPlayerConnectedEx(giveplayerid))
{
	//if(playerid == giveplayerid) return 1;
	if (ProxDetectorS(8.0, playerid, giveplayerid))
	{
    	ShowPlayerDialog(playerid, DIALOG_NUMBER_PLATE, DIALOG_STYLE_INPUT, "Establecer Matrícula", "Por favor ingresa la matrícula que deseas obtener\n{FFFFFF}TIP:Recuerda que sólo son de 0 a 8 carácteres.", "Siguiente", "Cancelar");
    }
    return 1;
}
return 1;
}*/

CMD:darllave(playerid, params[])
{
new
	giveplayerid;

if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darllave [id]");
if(IsPlayerConnectedEx(giveplayerid))
{
    if(playerid == giveplayerid) return 1;
    if (ProxDetectorS(8.0, playerid, giveplayerid))
	{
        new
			iValidVehicles,
			vstring[512];

		for(new i; i < MAX_PLAYERVEHICLES; i++)
		{
			if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
				format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]), ++iValidVehicles;

			else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
				format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

			else
				format(vstring, sizeof(vstring), "%s\nVacío", vstring);
		}
        if(iValidVehicles != 0)
		{
            GiveKeysTo[playerid] = giveplayerid;
            ShowPlayerDialog(playerid, GIVEKEYS, DIALOG_STYLE_LIST, "Por favor, selecciona un vehículo.", vstring, "Dar llaves", "Cancelar");
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes ningún vehículo para que puedas dar llaves.");
        }
    }
    else
	{
        SendClientMessageEx(playerid, COLOR_GRAD1, "No estás lo suficientemente cerca de ese jugador.");
    }
}
return 1;
}

CMD:vendermicoche(playerid, params[])
{
new string[128], giveplayerid, price;
for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
{
    if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
	{
        new Float:health;
        GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
        if(Info[playerid][pLevel] == 1)
		{
            SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser nivel 2 o más para poder vender vehículos.");
            return 1;
        }
        if(health < 500) return SendClientMessageEx(playerid, COLOR_GREY, " El vehiculo está muy dañado para ser vendido.");

		if(sscanf(params, "dd", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vendermicoche [id] [precio]");

        if(price < 1) return SendClientMessageEx(playerid, COLOR_GREY, "Precio debe ser mayor a 0.");
        if(Info[giveplayerid][pLevel] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "El jugador tiene que ser nivel 2 o más para que puedas venderle vehiculos.");
        if(playerid == giveplayerid)
		{
            SendClientMessageEx(playerid, COLOR_GREY, "No puedes venderte el auto a ti mismo.");
            return 1;
        }
        if(!IsPlayerConnectedEx(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Jugador no está conectado al servidor.");
        if (ProxDetectorS(8.0, playerid, giveplayerid))
	 	{
            VehicleOffer[giveplayerid] = playerid;
            VehicleId[giveplayerid] = d;
            VehiclePrice[giveplayerid] = price;
            format(string, sizeof(string), "* Ofreciste a %s para comprar este %s por $%d.", GetPlayerNameEx(giveplayerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), price);
            SendClientMessageEx(playerid, COLOR_GENERAL, string);
            format(string, sizeof(string), "* %s te ha ofrecidor su %s por $%d, (usa /aceptar coche).", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), price);
            SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
            return 1;
        }
        else
		{
            SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
            return 1;
        }
    }
}
SendClientMessageEx(playerid, COLOR_GREY, " Tu necesitas estar dentro de un vehiculo que te pertenece.");
return 1;
}

CMD:checkllaves(playerid, params[])
{
if(Info[playerid][pAdmin] >= 2)
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    new vstring[1024],giveplayerid,stext[11];
    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Usa: /checkllaves [Jugador]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		for(new i; i < MAX_PLAYERVEHICLES; i++)
		{
    		switch(PlayerVehicleInfo[giveplayerid][i][pvSpawned])
    		{
        		case 0: stext = "Despawned";
        		case 1: stext = "Spawned";
    		}
			if(PlayerVehicleInfo[giveplayerid][i][pvModelId] != 0)
				format(vstring, sizeof(vstring), "%s\n%s - (%s)", vstring, VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400], stext);
			else if(PlayerVehicleInfo[giveplayerid][i][pvImpounded] == 1)
				format(vstring, sizeof(vstring), "%s\n%s (Embargado) (%s)", vstring, VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400], stext);
			else
				format(vstring, sizeof(vstring), "%s\nVacío", vstring);
		}
	    ShowPlayerDialog(playerid, GOTOPLAYERCAR, DIALOG_STYLE_LIST, "Teleportar a Coche", vstring, "Ir", "Cancelar");
   		SetPVarInt(playerid, "playeraffectedcarTP", giveplayerid);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Id no válida!");
}
else NoAutorizado
return 1;
}

CMD:respawncars(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 3)
{
	new string[128], radius;
	if(sscanf(params, "d", radius)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /respawncars [Radio]");
	if(radius < 1 || radius > 40) return SendClientMessageEx(playerid, COLOR_GREY, "El radio debe ser de 1 a 40!");
	RespawnNearbyVehicles(playerid, radius);
	format(string, sizeof(string), "Usted ha respawneado los vehículos dentro del radio de %d.", radius);
	SendClientMessageEx(playerid, COLOR_GREY, string);
}
else NoAutorizado
return 1;
}

CMD:rtcar(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 2)
{
	new string[128], carid;
	if(sscanf(params, "d", carid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /rtcar [carid]");

	SetVehicleToRespawn(carid);
	format(string, sizeof(string), "Coche ID %d - Respawned.", carid);
	SendClientMessageEx(playerid, COLOR_GREY, string);
}
else NoAutorizado
return 1;
}

/*CMD:comprarcoche(playerid, params[])
{
if(PlayerToPoint(5.0,playerid,545.2712,-1293.3248,17.2422) || PlayerToPoint(5.0,playerid,2131.9119,-1150.1757,24.1872))
{
	return ShowPlayerDialog(playerid, CARS, DIALOG_STYLE_LIST, "Selecciona un Vehiculo", "Clásicos\nDeportivos\nLowriders\nMotocicletas y Bicicletas\nOff Road\nTrabajo\nAutos Especiales", ">", "Cancelar");
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en el Concesionario.");
return 1;
}*/

CMD:colorcoche(playerid, params[])
{
if(!IsPlayerInAnyVehicle(playerid))
{
	return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehiculo.");
}

else if(Info[playerid][pSpraycan] == 0)
{
	return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un spray.");
}

new
	iVeh = GetPlayerVehicleID(playerid);

if(LSPD_IsACopCar(iVeh)||Taxi_Vehicle(iVeh)||Bus_Vehicle(iVeh)||SAMD_Vehicle(iVeh)||Mecanico_Vehicle(iVeh)||FBI_Vehicle(iVeh)||CNN_Vehicle(iVeh)|| IsAPizzabike(iVeh)||GobierAuto(iVeh)||IsAnNGCar(iVeh)) {
	return SendClientMessageEx(playerid, COLOR_GREY, "No puedes pintar vehículos facciónes.");
}
new
	iColors[2],
	iPlayerVeh;
if(sscanf(params, "ii", iColors[0], iColors[1]))
{
	return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /colorcoche [ID 1] [ID 2]. Color debe ser una ID.");
}
else if(!(0 <= iColors[0] <= 255 && 0 <= iColors[1] <= 255))
{
	return SendClientMessageEx(playerid, COLOR_GRAD2, "Color Inválido (ID comienza en 0, y el final es 255)");
}
foreach(Player, i)
{
	iPlayerVeh = GetPlayerVehicle(i, iVeh);
	if(iPlayerVeh != -1)
	{
		if(i == playerid) PlayerVehicleInfo[playerid][iPlayerVeh][pvColor1] = iColors[0], PlayerVehicleInfo[playerid][iPlayerVeh][pvColor2] = iColors[1];
		else return SendClientMessageEx(playerid,COLOR_GREY,"No se puede pintar los vehículos de otras personas.");
	}
}
format(szMessage, sizeof(szMessage), "Cambiaste el color del vehiculo. - ID %d, %d.", iColors[0], iColors[1]);
SendClientMessageEx(playerid, COLOR_GRAD2, szMessage);
return ChangeVehicleColor(iVeh, iColors[0], iColors[1]);
}

CMD:paintcoche(playerid, params[])
{
if(isnull(params))
{
	return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /paintcoche [0-6] (3 para remover la pintura)");
}
else if(!IsPlayerInAnyVehicle(playerid))
{
	return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehiculo.");
}
else if(Info[playerid][pSpraycan] == 0)
{
	return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un spray.");
}

new
	iVeh = GetPlayerVehicleID(playerid),
	iPaintID = strval(params),
	iPlayerVeh;

if(LSPD_IsACopCar(iVeh)||Taxi_Vehicle(iVeh)||Bus_Vehicle(iVeh)||SAMD_Vehicle(iVeh)||Mecanico_Vehicle(iVeh)||FBI_Vehicle(iVeh)||CNN_Vehicle(iVeh)|| IsAPizzabike(iVeh)||GobierAuto(iVeh)||IsAnNGCar(iVeh)) {
	return SendClientMessageEx(playerid, COLOR_GREY, "No puedes pintar vehículos facción.");
}
else if(!(0 <= iPaintID <= 6)){
	return SendClientMessageEx(playerid, COLOR_GRAD2, "Pintura debe ser del ID 0 al 6.");
}
foreach(Player, i) {
	iPlayerVeh = GetPlayerVehicle(i, iVeh);
	if(iPlayerVeh != -1) {
		if(i == playerid) PlayerVehicleInfo[playerid][iPlayerVeh][pvPaintJob] = iPaintID;
		else return SendClientMessageEx(playerid,COLOR_GREY,"No puedes pintar coches de otras personas.");
	}
}

ChangeVehiclePaintjob(iVeh, iPaintID);
return SendClientMessageEx(playerid, COLOR_GRAD2, "Cambiaste la pintura de tu vehiculo..");
}
CMD:remolcar(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
    	new Float:vX,Float:vY,Float:vZ,Found=0,vid=0,idcar = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(idcar) == 525)
		{
			new Float:pX,Float:pY,Float:pZ;
			GetPlayerPos(playerid,pX,pY,pZ);
			while((vid<MAX_VEHICLES)&&(!Found))
			{
				vid++;
				GetVehiclePos(vid,vX,vY,vZ);
				if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
				{
					Found=1;
					if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
					{
	   					DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
					}
		   			else
		   			{
	   					AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
					}
				}
			}
			if(!Found)
			{
				SendClientMessageEx(playerid,COLOR_GRAD2,"No hay ningún vehículo cerca!");
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes remolcar con este vehículo!");
	}
	return 1;
}

CMD:nos(playerid, params[])
{
if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en el taller de mecanica!");
if(Team_Mecanicos(playerid))
{
    if(IsPlayerInAnyVehicle(playerid))
	{
        if( ! IsPlayerInInvalidNosVehicle( playerid ) )
		{
            new string[128];
            AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
			//NOS
			new Float: soPos[3];
			GetVehiclePos(GetPlayerVehicleID(playerid), soPos[0], soPos[1], soPos[2]);
			PlayerPlaySoundEx(1133, soPos[0], soPos[1], soPos[2]);
            format(string, sizeof(string), "* %s instala óxido de nitrógeno al vehiculo.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
			{
				UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
			}
        }
        else {
            SendClientMessageEx(playerid, COLOR_WHITE, "Óxido de nitrógeno no se puede instalar en este vehículo.");
        }
    }
    else {
        SendClientMessageEx(playerid, COLOR_WHITE, "No estás en un vehiculo.");
    }
}
else {
    SendClientMessageEx(playerid, COLOR_WHITE, "No eres un mecanicos!" );
}
return 1;
}

CMD:unmodcoche(playerid, params[])
{
new modList[512], string[128];
new count = 0;
for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
{
	if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
	{
		for(new f = 0 ; f < MAX_MODS; f++)
		{
			if (GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f) != 0)
			{
				if (f != 9 && f != 7 && f != 8)
				{
					format(modList, sizeof(modList), "%s\n%s - %s", modList, partType(f), partName(GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f)));
				}
				else
				{
				    format(modList, sizeof(modList), "%s\n%s", modList, partType(f));
				}
 				format(string, sizeof(string), "partList%d", count);
				SetPVarInt(playerid, string, GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
				count++;
			}
		}
		if (count == 0)
		{
		    SendClientMessageEx(playerid, COLOR_GREY, " Este vehiculo no tiene ninguna modificación.");
		    return 1;
		}
	    format(modList, sizeof(modList), "%s\nTodo", modList);
	    format(string, sizeof(string), "partList%d", count);
	    SetPVarInt(playerid, string, 999);
	    count++;
	    SetPVarInt(playerid, "modCount", count);
	    ShowPlayerDialog(playerid, UNMODCARMENU, DIALOG_STYLE_LIST, "Partes", modList, "Ok", "Cancelar");
	    return 1;
	}
}
SendClientMessageEx(playerid, COLOR_GREY, " Necesitas estar en un vehiculo tuyo.");
return 1;
}

CMD:hyd(playerid, params[])
{
	if(!IsAtTaller(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en el taller de mecanica!");
	if(Team_Mecanicos(playerid))
	{
	    if(IsPlayerInAnyVehicle(playerid))
		{
	        if( ! IsPlayerInInvalidNosVehicle( playerid ) )
			{
	            new string[128],
					Float: soPos[3];
				GetVehiclePos(GetPlayerVehicleID(playerid), soPos[0], soPos[1], soPos[2]);
				PlayerPlaySoundEx(1133, soPos[0], soPos[1], soPos[2]);
	            AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
			    if(GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)) > -1)
				{
					UpdatePlayerVehicleMods(playerid, GetPlayerVehicle(playerid, GetPlayerVehicleID(playerid)));
				}
	            format(string, sizeof(string), "* %s añade suspensión hidráulica al vehiculo.", GetPlayerNameEx(playerid));
	            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        }
	        else return SendClientMessageEx(playerid, COLOR_GREY, "* Suspensión Hidráulica no se puede instalar en este vehículo." );
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en un vehiculo.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No eres un mecánico." );
	return 1;
}

CMD:tarifa(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pJob] == 9 ||  Info[playerid][pJob2] == 9)
    {
        new fare;
        if(sscanf(params, "d", fare)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /tarifa [precio]");
		if(TaxiOnDuty[playerid] == 1)
		{
		    TaxiDrivers -= 1;
		    TaxiOnDuty[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ahora estás fuera de servicio.");
			SetPlayerToTeamColor(playerid);
			return 1;
		}
		new newcar = GetPlayerVehicleID(playerid);
		if(IsAnTaxi(newcar) || IsAnBus(newcar))
		{
			if(GetPlayerState(playerid) != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* No eres el conductor.");
			if(fare < 1 || fare > 10) return SendClientMessageEx(playerid, COLOR_GREY, "* Precio de la tarifa debe ser de $ 1 a $ 10.");
            if(Info[playerid][pTaxiLicense] == 0) SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes una licencia de servicio de taxi, recuerda que puedes ser multado por trabajar sin ella.");
			TaxiDrivers += 1;
            TaxiOnDuty[playerid] = 1;
            TaxiTarifa[playerid] = fare;
			format(szMessage, sizeof(szMessage), "Ahora estas en servicio como taxista. Tarifa: $%d.", TaxiTarifa[playerid]);
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			SetPlayerToTeamColor(playerid);
			return 1;
		}
		else if (Info[playerid][pTaxiLicense] == 1)
		{
			if(GetPlayerState(playerid) != 2) return SendClientMessageEx(playerid, COLOR_GREY, "* No eres el conductor.");
			if(fare < 1 || fare > 10) return SendClientMessageEx(playerid, COLOR_GREY, "* Precio de la tarifa debe ser de $ 1 a $ 10.");
            TaxiDrivers += 1;
            TaxiOnDuty[playerid] = 1;
            TaxiTarifa[playerid] = fare;
			format(szMessage, sizeof(szMessage), "Ahora estas en servicio como taxista. Tarifa: $%d.", TaxiTarifa[playerid]);
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			SetPlayerToTeamColor(playerid);
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No eres taxista.");
	return 1;
}

CMD:servicios(playerid, params[])
{
	if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar esto en prisión.");
	if(Info[playerid][pServiceTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Necesitas esperar 30 segundos para usar este comando.");
	ShowPlayerDialog(playerid,D_SERVICES,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona","{F81414}Ambulancia [Emergencia]\n"COL_BLUE"Policía [Emergencia]\nMédico\n{FFFF00}Compañia de Taxi\n{00CED1}Mecánicos","Llamar","Cancelar");
	return 1;
}
CMD:mduty(playerid, params[])
{
	if(Team_Mecanicos(playerid))
	{
	    if(OnDuty[playerid] == 1)
		{
		    SendClientMessageEx(playerid, COLOR_GENERAL, "* Ahora estás fuera servicio, ya no recibirás llamadas.");
	        OnDuty[playerid] = 0;
	        Mechanics -= 1;
	    }
	    else
		{
			SendClientMessageEx(playerid, COLOR_GENERAL, "* Ahora estás en servicio, recibirás llamadas de la gente que te necesite.");
	        OnDuty[playerid] = 1;
	        ++Mechanics;
	    }
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "[ERROR]: No puedes usar este comando porque no eres mecánico.");
	return 1;
}

CMD:irpt(playerid, params[])
{
	if(Team_SAMD(playerid))
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /irpt(patient) [Jugador/ID]");

		if(IsPlayerConnectedEx(giveplayerid))
		{
		    if (giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras tu seas la persona que llamó.");

		    if(GetPVarInt(giveplayerid, "EMSAttempt") == 8) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando porque ya aceptaron la llamada.");

			if(GetPVarInt(giveplayerid,"MedicCall") == 1)
			{
				if(Info[giveplayerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando mientras el usuario este en prisión.");
				format(string, sizeof(string), "Paramédico %s aceptó la llamada de la centra de emergencia Nrº %d, Paciente: %s.",GetPlayerNameEx(playerid),giveplayerid,GetPlayerNameEx(giveplayerid));
				SendRadioMessage(4, TEAM_MED_COLOR, string);
				format(string, sizeof(string), "* Has aceptado la llamada de emergencia de %s, podrás ver un marcador en el mapa.",GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* Paramédico %s aceptó tu llamada; por favor espera en tu posición actual.",GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				GameTextForPlayer(playerid, "~r~Ve~n~al marcador rojo.", 5000, 1);
				EMSCallTime[playerid] = 1;
				EMSAccepted[playerid] = giveplayerid;
				SetPVarInt(giveplayerid, "EMSAttempt", 8);
				//Info[playerid][pCallsAccepted]++;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no necesita asistencia médica!");
		}
	}
	return 1;
}

CMD:subirpt(playerid, params[])
{
	if(Team_SAMD(playerid) || (Info[playerid][pMember] == 1 && Info[playerid][pDivision] == 2) || Team_NG(playerid) && Info[playerid][pDivision] == 3)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estes en un coche.");

	    new string[128], giveplayerid, seat;
	    if(sscanf(params, "dd", giveplayerid, seat)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /subirpt [playerid] [Asiento]");

	    if(IsPlayerConnectedEx(giveplayerid))
		{
	        if(giveplayerid != INVALID_PLAYER_ID)
			{
	            if(seat < 2 || seat > 3) return SendClientMessageEx(playerid, COLOR_GREY, "* El ID del asiento no puede estar por encima o por debajo de 3 o 2.");

	            if(GetPVarInt(giveplayerid, "Injured") != 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras el paciente no este herido.");

	            if(IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando porque el paciente ya está en el coche.");

	            if (ProxDetectorS(8.0, playerid, giveplayerid))
				{
	                if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "* No puedes subirte a tu mismo."); return 1; }
	                if(Info[giveplayerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras el paciente este en prisión.");
	                new carid = gLastCar[playerid];
	                if(GetVehicleModel(carid) == 416)
					{
	                    new Float:pos[6];
	                    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	                    GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
	                    GetVehiclePos( carid, pos[0], pos[1], pos[2]);
	                    if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
	                        floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
	                        floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
	                    format(string, sizeof(string), "* Fuiste cargado por el paramédico %s.", GetPlayerNameEx(playerid));
	                    SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
	                    format(string, sizeof(string), "* Cargaste al auto a %s.", GetPlayerNameEx(giveplayerid));
	                    SendClientMessageEx(playerid, COLOR_GENERAL, string);
	                    format(string, sizeof(string), "* %s sube a %s en la ambulancia.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                    SetPVarInt(giveplayerid, "EMSAttempt", 3);
	                    ClearAnimations(giveplayerid);
	                    PutPlayerInVehicle(giveplayerid,carid,seat);
	                    TogglePlayerControllable(giveplayerid, false);
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "* El último coche que has manejado debe ser una ambulancia.");
	            }
	            else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás lo suficientemente cerca del jugador o de tu coche.");
	        }
	    }
	    else return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando porque esa ID no está disponible.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No eres parte de SAMD o de la unidad de emergencia de SAPD");
	return 1;
}

CMD:oldcar(playerid, params[])
{
	new string[128];
	format(string, sizeof(string), "Tu último vehiculo manejado fue el ID %d.",gLastCar[playerid]);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}

CMD:dejarpt(playerid, params[])
{
	if(Team_SAMD(playerid) || (Info[playerid][pMember] == 1 && Info[playerid][pDivision] == 2) || Team_NG(playerid) && Info[playerid][pDivision] == 3)
	{
	    if(IsPlayerInAnyVehicle(playerid))
		{
			new string[128], giveplayerid;
		    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /dejarpt [playerid]");

	        new carid = GetPlayerVehicleID(playerid);
	        new caridex = GetPlayerVehicleID(giveplayerid);
	        if(IsAnAmbulance(carid))
			{
	            if(carid == caridex){
	                if(IsAtDeliverPatientPoint(playerid)){
	                    if(playerid == giveplayerid)
						{
	                        SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes dejarte a ti mismo en el hospital!");
	                        return 1;
	                    }
	                    if(GetPVarInt(giveplayerid, "Injured") == 0)
						{
	                        return SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador no está herido!");
	                    }
	                    SetHP(giveplayerid, 100);
	                    /*if(STDPlayer[giveplayerid] > 0)
						{
	                        STDPlayer[giveplayerid] = 0;
	                        SendClientMessageEx(giveplayerid, COLOR_GENERAL, "* You are no longer infected with a STD anymore because of the hospital's help!");
	                    }*/
	                    GivePlayerCash(giveplayerid, -350);
	                    Tax += 100;
	                    GivePlayerCash(playerid,250);
	                    KillEMSQueue(giveplayerid);
	                    SetPVarInt(giveplayerid, "MedicBill", 0);
	                    SendClientMessageEx(giveplayerid, TEAM_CYAN_COLOR, "Dr: Los gastos médicos son de $350. Que tengas buen día!");
	                    SendClientMessageEx(playerid, TEAM_CYAN_COLOR, "Ganaste $250 por dejar sano y salvo un paciente!");
	                    SetPlayerInterior(giveplayerid, 0); Info[giveplayerid][pInt] = 0;
	                    LoadObjects(giveplayerid);
	                    SetPVarInt(giveplayerid, "PlayerCuffed", 0);
	                    //Info[playerid][pPatientsDelivered]++;
	                    if(Team_SAMD(playerid))
	                    {
	                    	format(string, sizeof(string), "Paramédico %s ha dejado satisfactoriamente a %s en el hospital.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendRadioMessage(4, TEAM_MED_COLOR, string);
						}
						else if(Team_NG(playerid))
	                    {
	                    	format(string, sizeof(string), "%s ha dejado satisfactoriamente a %s en el hospital de SAEM.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendRadioMessage(4, TEAM_MED_COLOR, string);
						}
	                    //new Float:X, Float:Y, Float:Z;
	                    //GetObjectPos(Carrier[0], X, Y, Z);
	                    if(IsPlayerInRangeOfPoint(playerid, 5.0,1120.7758,-1292.4806,13.5688))
						{
	                    	SetPlayerPos(giveplayerid, 817.2863,-1209.1100,1195.8129);
	                        SetPlayerVirtualWorld(giveplayerid, 5);
	                        Info[giveplayerid][pVW] = 5;
	                    }
	                    else if(IsPlayerInRangeOfPoint(playerid, 5.0,225.0963,1980.7179,17.6406))
						{
						    SetPlayerPos(giveplayerid, 1233.5699,321.7521,-11.7422);
	                        SetPlayerVirtualWorld(giveplayerid, 0);
	                        Info[giveplayerid][pVW] = 0;
	                    }
	                }
	                else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en el punto para dejar a los pacientes.");
	            }
	            else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese paciente no está en la ambulancia.");
	        }
	        else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una ambulancia");
	    }
	}
	return 1;
}

CMD:curar(playerid, params[])
{
	if(Team_SAMD(playerid) || Team_NG(playerid) && Info[playerid][pDivision] == 3)//model
	{
		if(Info[playerid][pTriageTime] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes esperar 2 minutos para hacer esto de nuevo.");
	    new string[128], giveplayerid;
	    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /curar [playerid]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
		    if(playerid == giveplayerid) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando contigo mismo.");
		    if(ProxDetectorS(5.0, playerid, giveplayerid))
			{
	    	    new Float: health;
	    	    GetPlayerHealth(giveplayerid, health);
	    	    if(health >= 85) SetHP(giveplayerid, 100);
				else SetHP(giveplayerid, health+15.0);
				Blood -= 15;
	    	    format(string, sizeof(string), "* %s da a %s 15ml de sangre.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				Info[playerid][pTriageTime] = 120;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* El jugador no está cerca tuyo.");
		}
	}
	return 1;
}

CMD:sendtols(playerid, params[])
{
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if (Info[playerid][pAdmin] >= 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /sendtols [ID/Jugador]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if (Info[giveplayerid][pAdmin] >= 1337) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando para este jugador!");
			format(string, sizeof(string), " Enviaste a Los Santos a %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			SendClientMessageEx(giveplayerid, COLOR_GRAD1, "   Fuiste teleportado!");
			SetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
			SetPlayerVirtualWorld(giveplayerid, 0);
			SetPlayerInterior(giveplayerid, 0);
			Info[giveplayerid][pInt] = 0;
			Info[giveplayerid][pVW] = 0;
		}
	}
	else NoAutorizado
	return 1;
}
CMD:ajustar(playerid, params[])
{
	if(Info[playerid][pFMember] == 255)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "No estás en una familia.");
		return 1;
	}
	new string[128];
	new family = Info[playerid][pFMember];
	if(Info[playerid][pRank] >= 5)
	{
		new choice[32], opstring[100];
		if(sscanf(params, "s[32]S[100]", choice, opstring))
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ajustar [name]");
			SendClientMessageEx(playerid, COLOR_WHITE, "Available Names: Nombre, MOTD, Seguro[Caja Fuerte], Invitar, Despedir");
			return 1;
		}

		if(strcmp(choice,"nombre",true) == 0)
		{
			if(Info[playerid][pRank] == 6)
			{
				if(!opstring[0])
				{
					SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ajustar nombre [Nombre de la familia]");
					return 1;
				}
				if(strfind(opstring, "|", true) != -1)
				{
					SendClientMessageEx(playerid, COLOR_GRAD2,  "No puedes usar '|' en el nombre de la familia.");
					return 1;
				}
				if(strlen(opstring) >= 40 )
				{
					SendClientMessageEx( playerid, COLOR_GRAD1, "Ese nombre de la familia es demasiado largo, por favor utilices más de 40 caracteres." );
					return 1;
				}
				strmid(fINFO[family][FamilyName], opstring, 0, strlen(opstring), 100);
				saveFamilies();
				SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el nombre de la familia.");
				format(string, sizeof(string), "%s adjusted family %d's name to %s", GetPlayerNameEx(playerid), family+1, opstring);
				Log("logs/family.log", string);
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "Sólo rangos 6 (lideres) pueden usar este comando.");
		}
		else if(strcmp(choice,"motd",true) == 0)
		{
			if(!opstring[0])
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ajustar MOTD [Mensaje]");
				return 1;
			}
			if(strfind(opstring, "|", true) != -1)
			{
					SendClientMessageEx(playerid, COLOR_GRAD2,  "No puedes usar '|' en el mensaje.");
					return 1;
			}
			if(strlen(opstring) >= 60 )
			{
				SendClientMessageEx( playerid, COLOR_GRAD1, "El mensaje es muy largo, por favor no uses más de 60 carácteres." );
				return 1;
			}
			strmid(fINFO[family][FamilyMOTD], opstring, 0, strlen(opstring), 100);
			saveFamilies();
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el mensaje de la familia.");
			format(string, sizeof(string), "%s adjusted family %d's MOTD to %s", GetPlayerNameEx(playerid), family+1, opstring);
			Log("logs/family.log", string);
		}
		else if(strcmp(choice,"seguro",true) == 0)
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "Ajustar seguridad de su familia restablecerá todas las estadísticas de su caja fuerte.");
			SendClientMessageEx(playerid, COLOR_GRAD1, "Si desea ajustar su caja fuerte, usa /ajustar confirmar.");
			SendClientMessageEx(playerid, COLOR_GRAD1, "Mejora de la seguridad de su de la familia tendrá un costo de 10.000 dólares.");
			return 1;
		}
		else if(strcmp(choice,"confirmar",true) == 0)
		{
			if(GetPlayerCash(playerid) < 10000)
			{
				SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes 10.000 para hacer esto");
				return 1;
			}
			GivePlayerCash(playerid, -10000);
			GetPlayerPos(playerid, fINFO[family][FamilySafe][0],fINFO[family][FamilySafe][1],fINFO[family][FamilySafe][2]);
			fINFO[family][FamilyCash] = 0;
			fINFO[family][FamilyMats] = 0;
			fINFO[family][FamilyPot] = 0;
			fINFO[family][FamilyCrack] = 0;
			if(fINFO[family][FamilyUSafe]) DestroyDynamicPickup(fINFO[family][FamilyPickup]);
			fINFO[family][FamilyUSafe] = 1;
			fINFO[family][FamilyPickup] = CreateDynamicPickup(1239, 23, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2]);
			saveFamilies();
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste la caja fuerte de tu familia.");
			format(string, sizeof(string), "%s adjusted family %d's safe", GetPlayerNameEx(playerid), family+1);
			Log("logs/family.log", string);
		}
		else if(strcmp(choice,"invitar",true) == 0)
		{
			if(!strlen(opstring))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ajustar invitar [Player/ID]");
				return 1;
			}
			new giveplayerid = ReturnUser(opstring);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (Info[giveplayerid][pFMember] == 255)
					{
						// No more of this shit, our system is not designed for this
						/*if(Info[giveplayerid][pLeader] == 2 || Info[giveplayerid][pMember] == 2 && Info[giveplayerid][pDivision] == 2)
						{
							if(Info[giveplayerid][pGangWarn] >= 3)
							{
								SendClientMessageEx(playerid, COLOR_WHITE, "That player can not be invited. They are banned from being in a gang.");
								return 1;
							}
							format(string, sizeof(string), "* You've invited %s to join '%s'.",GetPlayerNameEx(giveplayerid), fINFO[family][FamilyName]);
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s has invited you to join '%s'. (type /accept family)",GetPlayerNameEx(playerid), fINFO[family][FamilyName]);
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							InviteFaction[giveplayerid] = 0;
							InviteOffer[giveplayerid] = playerid;
							InviteFamily[giveplayerid] = family;
						}*/
						if(Info[giveplayerid][pLeader] == 0 && Info[giveplayerid][pMember] == 0)
						{
							format(string, sizeof(string), "* Invitaste a %s para que se una a '%s'.",GetPlayerNameEx(giveplayerid), fINFO[family][FamilyName]);
							SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s te ha invitado para que te unes a '%s'. (usa /aceptar familia)",GetPlayerNameEx(playerid), fINFO[family][FamilyName]);
							SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
							InviteFaction[giveplayerid] = 0;
							InviteOffer[giveplayerid] = playerid;
							InviteFamily[giveplayerid] = family;
							format(string, sizeof(string), "%s invited %s to family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
							Log("logs/family.log", string);
						}
						else
						{
							SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya se encuentra en una familia o facción.");
						}
					}
					else
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya se encuentra en una familia o facción.");
					}
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "ID o Nombre de jugador inválido.");
				return 1;
			}
		}
		else if(strcmp(choice,"despedir",true) == 0)
		{
			if(!strlen(opstring))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ajustar despedir [ID/PLAYER]");
				return 1;
			}
			new giveplayerid = ReturnUser(opstring);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(Info[giveplayerid][pFMember] != family)
					{
						SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está en tu familia.");
						return 1;
					}
					if(Info[giveplayerid][pRank] > Info[playerid][pRank])
					{
						SendClientMessageEx(playerid, COLOR_GREY, "No puedes despedir a rangos mayores.");
						return 1;
					}
					format(string, sizeof(string), "* Despediste a %s de tu familia.",GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Lider %s te ha despedido de la familia en la que estabas.",GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_LIGHTBLUE, string);
					Info[giveplayerid][pFMember] = 255;
					Info[giveplayerid][pRank] = 0;
					fINFO[family][FamilyMembers] --;
					saveFamilies();
					format(string, sizeof(string), "%s uninvited %s from family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
					Log("logs/family.log", string);
					return 1;
				}
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Nombre inválido.");
				return 1;
			}
		}
		else if(strcmp(choice,"rango",true) == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Error! Porfavor usa /ajustarrango en lugar de /ajustar rango.");
		}
		else if(strcmp(choice,"nombrerango",true) == 0)
		{
			SendClientMessageEx(playerid, COLOR_WHITE, "Error! Please use /ajustarnrango en lugar de /ajustar nombrerango.");
		}
	}
	return 1;
}


CMD:fedit(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 4 || Info[playerid][pGangModerator] == 1)
{
	new family, x_job[64], x_hq[64], ammount, string[128];
	if(sscanf(params, "is[64]s[64]", family, x_job, x_hq))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /fedit [family] [name] [amount]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "OPCIONES: lider, MaxSkins, Skin1, Skin2, Skin3, Skin4, Skin5, Skin6, Skin7, Skin8");
		return 1;
	}
    ammount = strval(x_hq);
	if(family < 1 || family > MAX_FAMILY) return SendClientMessageEx(playerid, COLOR_GREY, "* El número de familias va de 1 al 10!");
	family -= 1;
	if (strcmp(x_job,"lider",true) == 0)
	{
		if(strlen(x_hq) >= 20 ) return SendClientMessageEx( playerid, COLOR_GREY, "* El nombre del lider es muy largo, usa menos de 20 carácteres." );
		strcpy(fINFO[family][FamilyLeader], x_hq, MAX_PLAYER_NAME);
		format(string, sizeof(string), "Cambiaste el lider de '%s' a %s.", fINFO[family][FamilyName], x_hq);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		saveFamilies();
		return 1;
	}
	else if(strcmp(x_job,"maxskins",true) == 0)
	{
		if(ammount > 4) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer el maxskins a más de 3.");
		if(ammount == 3)
		{
			fINFO[family][FamilySkins][3] = 0;
		}
		if(ammount == 2)
		{
			fINFO[family][FamilySkins][3] = 0;
			fINFO[family][FamilySkins][2] = 0;
		}
		if(ammount == 1)
		{
			fINFO[family][FamilySkins][3] = 0;
			fINFO[family][FamilySkins][2] = 0;
			fINFO[family][FamilySkins][1] = 0;
		}
		fINFO[family][FamilyMaxSkins] = ammount;
		format(string, sizeof(string), "Cambiaste max skins de '%s' a %d.", fINFO[family][FamilyName], ammount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		saveFamilies();
	}
	else if(strcmp(x_job,"skin1",true) == 0)
	{
		fINFO[family][FamilySkins][0] = ammount;
		format(string, sizeof(string), "Cambiaste el skin1 de '%s' a %d.", fINFO[family][FamilyName], ammount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		saveFamilies();
	}
	else if(strcmp(x_job,"skin2",true) == 0)
	{
		fINFO[family][FamilySkins][1] = ammount;
		format(string, sizeof(string), "Cambiaste el skin2 de '%s' a %d.", fINFO[family][FamilyName], ammount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		saveFamilies();
	}
	else if(strcmp(x_job,"skin3",true) == 0)
	{
		fINFO[family][FamilySkins][2] = ammount;
		format(string, sizeof(string), "Cambiaste el skin3 de '%s' a %d.", fINFO[family][FamilyName], ammount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		saveFamilies();
	}
	else if(strcmp(x_job,"skin4",true) == 0)
	{
		fINFO[family][FamilySkins][3] = ammount;
		format(string, sizeof(string), "Cambiaste el skin4 de '%s' a %d.", fINFO[family][FamilyName], ammount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		saveFamilies();
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* Nombre no válido.");
}
else NoAutorizado
return 1;
}
CMD:fropa(playerid, params[])
{
	if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una familia.");
	new family = Info[playerid][pFMember];
	if(fINFO[family][FamilyUSafe] != 1) return SendClientMessageEx(playerid, COLOR_GREY, "* La caja fuerte de tu familia no ha sido configurada.");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2])) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en la caja fuerte de tu familia.");
	switch(fINFO[family][FamilyMaxSkins])
	{
	    case 1: format(szDialog, sizeof(szDialog), "Skin 1 - (%d)",fINFO[family][FamilySkins][0]);
	    case 2: format(szDialog, sizeof(szDialog), "Skin 1 - (%d)\nSkin 2 - (%d)",fINFO[family][FamilySkins][0],fINFO[family][FamilySkins][1]);
		case 3: format(szDialog, sizeof(szDialog), "Skin 1 - (%d)\nSkin 2 - (%d)\nSkin 3 - (%d)",fINFO[family][FamilySkins][0],fINFO[family][FamilySkins][1],fINFO[family][FamilySkins][2]);
		case 4: format(szDialog, sizeof(szDialog), "Skin 1 - (%d)\nSkin 2 - (%d)\nSkin 3 - (%d)\nSkin 4 - (%d)",fINFO[family][FamilySkins][0],fINFO[family][FamilySkins][1],fINFO[family][FamilySkins][2],fINFO[family][FamilySkins][3]);
		default: SendClientMessageEx(playerid, COLOR_GREY, "* Ocurrió un error! Contacta a un administrador para ajustar el MaxSkin de tu familia.");
	}
	ShowPlayerDialog(playerid,FAMILY_SKIN,DIALOG_STYLE_LIST,""COL_GENERAL"Familia - "COL_WHITE"Skins",szDialog,"Cambiar","Salir");
	return 1;
}
CMD:flist(playerid, params[])
{
	new member = Info[playerid][pMember];
	new leader = Info[playerid][pLeader];
	new teamnumber;
	if (Info[playerid][pLeader] != 0) teamnumber = Info[playerid][pLeader];
	else if (Info[playerid][pMember] != 0) teamnumber = Info[playerid][pMember];
	if(member > 0 || leader > 0)
	{
	    SendClientMessageEx(playerid, COLOR_GENERAL, "Miembros Conectados:");
		foreach(Player, i)
		{
		    new string[32];
			if (IsPlayerConnectedEx(i))
			{
				if (Info[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (Líder)",GetPlayerNameEx(i));
				else if (Info[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rango: %d.",GetPlayerNameEx(i), Info[i][pRank]);
				if(strlen(string) > 0) SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No perteneces a ninguna facción.");
	return 1;
}

CMD:familias(playerid, params[])
{
new string[128], familyid;
if(sscanf(params, "d", familyid))
{
	new number = 0;
	for(new i = 0; i < sizeof(fINFO); i++)
	{
		number ++;
		format(string, sizeof(string), "Familia %d | Nombre: %s | Lider: %s | Miembros: %d.",number,fINFO[i][FamilyName],fINFO[i][FamilyLeader],fINFO[i][FamilyMembers]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	}
	return 1;
}

if(familyid < 1 || familyid > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_GREY, "Familias: 1 - 10"); return 1; }
familyid -= 1;
if(fINFO[familyid][FamilyTaken] != 1)
{
	SendClientMessageEx(playerid, COLOR_GREY, "Ese Slot está vacío.");
	return 1;
}
foreach(Player, i)
{
	if(Info[i][pFMember] == familyid && Info[i][pFMember] != 255)
	{
		if(Info[i][pRank] == 1 && Info[i][pFMember] == familyid)
		{
			format(string, sizeof(string), "* %s: %s | Rango: %s (1).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank1]);
		}
		else if(Info[i][pRank] == 2 && Info[i][pFMember] == familyid)
		{
			format(string, sizeof(string), "* %s: %s | Rango: %s (2).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank2]);
		}
		else if(Info[i][pRank] == 3 && Info[i][pFMember] == familyid)
		{
			format(string, sizeof(string), "* %s: %s | Rango: %s (3).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank3]);
		}
		else if(Info[i][pRank] == 4 && Info[i][pFMember] == familyid)
		{
			format(string, sizeof(string), "* %s: %s | Rango: %s (4).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank4]);
		}
		else if(Info[i][pRank] == 5 && Info[i][pFMember] == familyid)
		{
			format(string, sizeof(string), "* %s: %s | Rango: %s (5).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank5]);
		}
		else if(Info[i][pRank] == 6 && Info[i][pFMember] == familyid)
		{
			format(string, sizeof(string), "* %s: %s | Rango: %s (6).",fINFO[familyid][FamilyName],GetPlayerNameEx(i),fINFO[familyid][FamilyRank6]);
		}
		SendClientMessageEx(playerid, COLOR_GREY, string);
	}
}
return 1;
}
CMD:fopciones(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(Info[playerid][pFMember] < 255)
    {
            if(Info[playerid][pRank] <= 4) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu rango no permite usar este comando.");
            new family = Info[playerid][pFMember];
        	format(szDialog, sizeof(szDialog), ""COL_YELLOW"Familia: "COL_WHITE"%s\nDinero: "COL_WHITE"$%d\nHierba: "COL_WHITE"%d\nCrack: "COL_WHITE"%d\nMateriales: "COL_WHITE"%d", fINFO[family][FamilyName], fINFO[family][FamilyCash], fINFO[family][FamilyPot], fINFO[family][FamilyCrack], fINFO[family][FamilyMats]);
			ShowPlayerDialog(playerid, DIALOG_FAMILIA, DIALOG_STYLE_LIST,""COL_YELLOW"Tu familia:",szDialog,"Seleccionar","Salir");
	}
    else SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces una familia.");
	return 1;
}
CMD:finvitar(playerid,params[])
{ 
if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una familia.");
new string[128], giveplayerid;
if(sscanf(params, "u",giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /finvitar [ID de Usuario]");
if(Info[playerid][pRank] != 6) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu rango no permite usar este comando.");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
		if (Info[giveplayerid][pFMember] == 255)
		{
			if(Info[giveplayerid][pLeader] == 0 && Info[giveplayerid][pMember] == 0)
			{
			    new family = Info[playerid][pFMember];
				format(string, sizeof(string), "* Invitaste a %s para que se una a '%s'.",GetPlayerNameEx(giveplayerid), fINFO[family][FamilyName]);
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* %s te ha invitado para que te unes a '%s'. (usa /aceptar familia)",GetPlayerNameEx(playerid), fINFO[family][FamilyName]);
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				InviteFaction[giveplayerid] = 0;
				InviteOffer[giveplayerid] = playerid;
				InviteFamily[giveplayerid] = family;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya se encuentra en una familia o facción.");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya se encuentra en una familia o facción.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* ID o Nombre de jugador inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
return 1;
}
CMD:fdespedir(playerid,params[])
{ 
if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una familia.");
new string[128], giveplayerid;
if(sscanf(params, "u",giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /fdespedir [ID de Usuario]");
if(Info[playerid][pRank] != 6) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu rango no permite usar este comando.");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
	    new family = Info[playerid][pFMember];
		if(Info[giveplayerid][pFMember] != family) return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está en tu familia.");
		if(Info[giveplayerid][pRank] > Info[playerid][pRank]) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes despedir a rangos mayores.");
		format(string, sizeof(string), "* Despediste a %s de tu familia.",GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		format(string, sizeof(string), "* Lider %s te ha despedido de la familia que estabas.",GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
		Info[giveplayerid][pFMember] = 255;
		Info[giveplayerid][pRank] = 0;
		fINFO[family][FamilyMembers] --;
		saveFamilies();
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* ID o Nombre de jugador inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
return 1;
}
CMD:fcajafuerte(playerid,params[])
{ 
	if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una familia.");
	if(Info[playerid][pRank] == 6) // 5 & 6 Rank
	{
	    SetPVarInt(playerid,"CreateBox",1);
		SendClientMessageEx(playerid, COLOR_GRAD1, "Si desea ajustar su caja fuerte presiona la letra `Y´ para confirmar y para cancelar presiona la letra `N´");
		return SendClientMessageEx(playerid, COLOR_GRAD1, "crear o resetear la caja fuerte de su familia tendrá un costo de 5.000 dólares.");
	}
	return 1;
}
CMD:fmensaje(playerid, params[])
{
if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una familia.");
if(Info[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu rango no permite usar este comando.");
if(!isnull(params))
{
	if(strlen(params) >= 60 ) return SendClientMessageEx( playerid, COLOR_GRAD1, "El mensaje es muy largo, por favor no uses más de 60 carácteres." );
    new family = Info[playerid][pFMember];
	strmid(fINFO[family][FamilyMOTD], params, 0, strlen(params), 60);
	saveFamilies();
	SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el mensaje de la familia.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No has escrito ningún nada! /fmensaje [Texto]");
return 1;
} 
CMD:nombrefamilia(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 4)
{
    new family, familyname[32];
	if(sscanf(params, "ds[32]", family,familyname)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nombrefamilia [ID de Familia] [Nombre de Familia]");
	if(strlen(familyname) >= 32 ) return SendClientMessageEx( playerid, COLOR_GREY, "* El nombre de rango es demasiado largo, por favor no utilizes más de 32 caracteres." );
    if(isnull(familyname)) return SendClientMessageEx( playerid, COLOR_GREY, "* No has ingresado nada ingresa un nombre." );
	if(family < 1 || family > MAX_FAMILY) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo son 10 familias máximas.");
	family -= 1;
	strmid(fINFO[family][FamilyName], familyname, 0, strlen(familyname), 100);
	SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el nombre de la familia.");
	saveFamilies();
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando!");
return 1;
} 
CMD:anombrerango(playerid, params[])
{
new string[128], family,rank, rankname[32];
if(sscanf(params, "dds[19]", family,rank, rankname)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /anombrerango [Familia ID] [Rango Nº 1-6] [Nombre de Rango]");
if(Info[playerid][pAdmin] >= 4)
{
	if(rank < 1 || rank > 6) return SendClientMessageEx(playerid, COLOR_GREY, "* Rangos : 1 - 6.");
	if(strfind(rankname, "|", true) != -1) return SendClientMessageEx(playerid, COLOR_GREY,  "* No puedes usar esto en los nombres de los rangos.");
	if(strlen(rankname) >= 19 ) return SendClientMessageEx( playerid, COLOR_GREY, "* El nombre de rango es demasiado largo, por favor no utilizes más de 19 caracteres." );
	if(family < 1 || family > MAX_FAMILY) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo son 10 familias máximas.");
	family -= 1;
	if(rank == 1)
	{
		strmid(fINFO[family][FamilyRank1], rankname, 0, strlen(rankname), 32);
		saveFamilies();
		format(string, sizeof(string), "* Cambiaste rango 1 a %s.",rankname);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
	}
	if(rank == 2)
	{
		strmid(fINFO[family][FamilyRank2], rankname, 0, strlen(rankname), 32);
		saveFamilies();
		format(string, sizeof(string), "* Cambiaste rango 2 a %s.",rankname);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
	}
	if(rank == 3)
	{
		strmid(fINFO[family][FamilyRank3], rankname, 0, strlen(rankname), 32);
		saveFamilies();
		format(string, sizeof(string), "* Cambiaste rango 3 a %s.",rankname);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
	}
	if(rank == 4)
	{
		strmid(fINFO[family][FamilyRank4], rankname, 0, strlen(rankname), 32);
		saveFamilies();
		format(string, sizeof(string), "* Cambiaste rango 4 a %s.",rankname);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
	}
	if(rank == 5)
	{
		strmid(fINFO[family][FamilyRank5], rankname, 0, strlen(rankname), 32);
		saveFamilies();
		format(string, sizeof(string), "* Cambiaste rango 5 a %s.",rankname);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
	}
	if(rank == 6)
	{
		strmid(fINFO[family][FamilyRank6], rankname, 0, strlen(rankname), 32);
		saveFamilies();
		format(string, sizeof(string), "* Cambiaste rango 6 a %s.",rankname);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
	}
	format(string, sizeof(string), "%s adjusted family %d's rank %d to %s", GetPlayerNameEx(playerid), family+1, rank, rankname);
	Log("logs/family.log", string);
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando!");
return 1;
} 
CMD:rango(playerid, params[])
{
if(Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una familia");
new family = Info[playerid][pFMember];
new string[128], rank, giveplayerid;
if(sscanf(params, "dd", rank, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /rango [Nº Rango] [playerid]");

if(Info[playerid][pRank] == 6)
{
	if(rank < 1 || rank > 6) { SendClientMessageEx(playerid, COLOR_GREY, "* Rangos: 1 - 6"); return 1; }
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(Info[giveplayerid][pFMember] != family)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está en tu familia.");
				return 1;
			}
			if(Info[giveplayerid][pRank] > Info[playerid][pRank])
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* No puedes ajustar rangos de jugadores de mayor rango.");
				return 1;
			}
			format(string, sizeof(string), "* Has dado a %s el rango %d.",GetPlayerNameEx(giveplayerid),rank);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* Lider %s te dió rango %d.",GetPlayerNameEx(playerid),rank);
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			Info[giveplayerid][pRank] = rank;
			format(string, sizeof(string), "%s set %s rank to %d in family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), rank, family+1);
			Log("logs/family.log", string);
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Nombre o ID de jugador inválido.");
	return 1;
}
else if(Info[playerid][pRank] == 5)
{
	if(rank < 1 || rank > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   Rango no puede ser inferior a 1 o superior a 5!"); return 1; }
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(Info[giveplayerid][pFMember] != family)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está en tu familia!");
				return 1;
			}
			format(string, sizeof(string), "* Has dado a %s el rango %d.",GetPlayerNameEx(giveplayerid),rank);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* SubLider %s te dió rango %d.",GetPlayerNameEx(playerid),rank);
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			Info[giveplayerid][pRank] = rank;
			format(string, sizeof(string), "%s set %s rank to %d in family %d ", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), rank, family+1);
			Log("logs/family.log", string);
			return 1;
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* Jugador Inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando!");
return 1;
}
CMD:crearf(playerid, params[])
{
if(Info[playerid][pAdmin] >= 4 || Info[playerid][pGangModerator] == 1)
{
	new string[128], family, giveplayerid;
	if(sscanf(params, "dd", family, giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /crearf [Slot Fam] [PlayerID]");
	if(family < 1 || family > MAX_FAMILY) return SendClientMessageEx(playerid, COLOR_GREY, "* Slot de la familia no puede ser inferior a 1 o superior a 10!");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(fINFO[family-1][FamilyTaken] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Slot que la familia ya está en uso!" );
		format(string, sizeof(string), "* Hiciste a %s el lider de la familia número %d.",GetPlayerNameEx(giveplayerid),family);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		format(string, sizeof(string), "* Admin %s te hizo lider de una familia.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
		strcpy(fINFO[family-1][FamilyLeader], Info[giveplayerid][pNormalName], MAX_PLAYER_NAME);
		fINFO[family-1][FamilyMembers] ++;
		fINFO[family-1][FamilyTaken] = 1;
		Info[giveplayerid][pFMember] = family-1;
		Info[giveplayerid][pRank] = 6;
		saveFamilies();

	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado es inválido.");
}
return 1;
}
CMD:salirfamilia(playerid, params[])
{
if(Info[playerid][pFMember] != 255)
{
	SendClientMessageEx(playerid, COLOR_GENERAL, "* Saliste de tu familia o banda, ahora eres un civil.");
    fINFO[Info[playerid][pFMember]][FamilyMembers] --;
	Info[playerid][pFMember] = 255;
	Info[playerid][pRank] = 0;
	Info[playerid][pChar] = 299;
	SetPlayerSkin(playerid,299);
	saveFamilies();
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás en una familia.");
return 1;
}
CMD:salirfaccion(playerid, params[])
{
	if(Info[playerid][pMember] != 0)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL, "* Saliste de tu facción, ahora eres un civil.");
		Info[playerid][pFMember] = 255;
		Info[playerid][pRank] = 0;
		Info[playerid][pChar] = 299;
		Info[playerid][pMember] = 0;
		Info[playerid][pLeader] = 0;
		OnDuty[playerid] = 0; //  Reset Duty!
		SetPlayerSkin(playerid,299);
		for(new iToyIter; iToyIter < MAX_PLAYER_ATTACHED_OBJECTS; ++iToyIter)
		{
			for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsCop); ++LoopRapist)
			{
				if(HoldingObjectsCop[LoopRapist][holdingmodelid] == PlayerToyInfo[playerid][iToyIter][ptModelID])
				{
					PlayerToyInfo[playerid][iToyIter][ptModelID] = 0;
					PlayerToyInfo[playerid][iToyIter][ptBone] = 0;
					PlayerToyInfo[playerid][iToyIter][ptPosX] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ptPosY] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ptPosX] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ptPosY] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ptPosZ] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ftscaleX] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ftscaleY] = 0.0;
					PlayerToyInfo[playerid][iToyIter][ftscaleZ] = 0.0;
				}
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "No estás en una facción.");
	return 1;
}

CMD:borrarfam(playerid, params[]){
if(Info[playerid][pAdmin] > 4 || Info[playerid][pGangModerator] == 1)	{
	new family;
	if(sscanf(params, "d", family)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /borrarfam [familiaid]");

	if(family < 1 || family > MAX_FAMILY) { SendClientMessageEx(playerid, COLOR_GREY, "   Familias: 1 - 10."); return 1; }
	if(fINFO[family-1][FamilyTaken] != 1)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "   Esa familia está desocupada!");
		return 1;
	}
	ClearFamily(family-1);
	saveFamilies();
}
return 1;
}

CMD:darfam(playerid, params[])
{
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] >= 4 || Info[playerid][pGangModerator] >= 1)
	{
		new string[128], familyid;
		if(sscanf(params, "d", familyid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darfam [FAM ID]");

		if(familyid < 1 || familyid > MAX_FAMILY) return SendClientMessageEx(playerid, COLOR_WHITE, "Número de familia inválida (1-10).");
		format(string, sizeof(string), "Entraste a la familia ID %d (%s).", familyid, fINFO[familyid-1][FamilyName]);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		Info[playerid][pRank] = 6;
		Info[playerid][pFMember] = familyid-1;
	}
	return 1;
}

CMD:comprarcasa(playerid, params[])
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	new Float:oldposx, Float:oldposy, Float:oldposz;
	GetPlayerName(playerid, playername, sizeof(playername));
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) )
		{
	        if( HouseInfo[h][hOwned] == 0 )
			{
	            if(Info[playerid][pLevel] < HouseInfo[h][hLevel])
				{
	                format(string, sizeof(string), "   Tú necesitas ser nivel %d para comprar está casa.", HouseInfo[h][hLevel]);
	                SendClientMessageEx(playerid, COLOR_GRAD5, string);
	                return 1;
	            }
	            if(Info[playerid][pPhousekey] == INVALID_HOUSE_ID)
				{

					if(GetPlayerCash(playerid) > HouseInfo[h][hValue])
					{
						Info[playerid][pPhousekey] = h;
						HouseInfo[h][hOwned] = 1;
						strcpy(HouseInfo[h][hOwner], Info[playerid][pNormalName], MAX_PLAYER_NAME);
						GivePlayerCash(playerid,-HouseInfo[h][hValue]);
						Tax += (HouseInfo[h][hValue] * 40 ) / ( 100 );
						SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
					    LoadObjects(playerid);
						SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
						GameTextForPlayer(playerid, "~w~Bienvenido~n~Puedes salir en cualquier momento, usando /salir en este mismo lugar.", 5000, 3);
						Info[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
						SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones por tu nueva compra!");
						SendClientMessageEx(playerid, COLOR_WHITE, "Escribe /ayuda casa para ver los comandos disponibles!");
						saveHouse(h);
						OnPlayerUpdate(playerid);
						Info[playerid][pVW] = h+6000;
						SetPlayerVirtualWorld(playerid, h+6000);
						DestroyDynamicPickup(HouseInfo[h][hPickupID]);
						HouseInfo[h][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]);
						format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
						UpdateDynamic3DTextLabelText(HouseInfo[h][hTextID], -1, string);
						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						format(string,sizeof(string),"%s (IP: %s) has bought house ID %d for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hValue]);
						Log("logs/house.log", string);
						return 1;
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero para comprar esta casa!");
				}
	        }
	        else return SendClientMessageEx( playerid, COLOR_GREY, "* Esta casa ya tiene dueño." );
	    }
	}
	return 1;
}

CMD:rentar(playerid, params[])
{
	new string[128];
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) && HouseInfo[h][hRentFee] >= 1)
		{
	        if( ! strcmp( HouseInfo[h][hOwner], "Nobody", true ) ) { SendClientMessageEx( playerid, COLOR_WHITE, "No se puede alquilar una casa sin dueño." ); }
	        else
			{
	            if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
				{
	                SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes una casa, escribe /vendercasa si quieres alquilar esta.");
	                return 1;
	            }
	            if(Info[playerid][pRenting] != INVALID_HOUSE_ID)
	            {
	                SendClientMessageEx(playerid, COLOR_WHITE, "Ya tienes una casa en renta, escribe /desrentar si quieres dejar de rentar en la actual.");
	                return 1;
	            }
	            if(GetPlayerCash(playerid) > HouseInfo[h][hRentFee])
				{
	                if( HouseInfo[h][hRentable] == 0 )
					{
	                    SendClientMessageEx(playerid, COLOR_WHITE, "Está casa no está en renta, lo sentimos.");
	                    return 1;
	                }
	                else
					{
	                    Info[playerid][pRenting] = h;
	                    GivePlayerCash(playerid,-HouseInfo[h][hRentFee]);
	                    HouseInfo[h][hSafeMoney] = HouseInfo[h][hSafeMoney]+HouseInfo[h][hRentFee];
	                    SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
					    LoadObjects(playerid);
	                    SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
	                    GameTextForPlayer(playerid, "~w~Bienvenido a Casa", 5000, 3);
	                    Info[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
	                    Info[playerid][pVW] = 6000+h;
	                    SetPlayerVirtualWorld(playerid, h+6000);
	                    SendClientMessageEx(playerid, COLOR_WHITE, "Felicitaciones. Puedes salir en cualquier momento por este mismo lugar, escribiendo /salir.");
	                    SendClientMessageEx(playerid, COLOR_WHITE, "Usa /ayuda casa para ver los comandos disponibles.");
	                    OnPlayerUpdate(playerid);
	                    new ip[32];
	                    GetPlayerIp(playerid,ip,sizeof(ip));
	                    format(string,sizeof(string),"%s (IP: %s) has rented house ID %d (owned by %s) for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hOwner],HouseInfo[h][hRentFee]);
	                    Log("logs/house.log", string);
	                    return 1;
	                }
	            }
	            else return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes dinero para comprar esta casa!");
	        }
	    }
	}
	return 1;
}

CMD:desrentar(playerid, params[])
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "Es usted el propietario esta casa!");
	    return 1;
	}
	if( Info[playerid][pRenting] != INVALID_HOUSE_ID )
	{
	    Info[playerid][pRenting] = INVALID_HOUSE_ID;
	    SendClientMessageEx(playerid, COLOR_WHITE, "Quedaste sin casa.");
	}
	return 1;
}

CMD:timbre(playerid, params[])
{
for(new h; h < sizeof(HouseInfo); h++) if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]))
{
	new string[128];
	foreach(Player, i) if(GetPlayerVirtualWorld(i) == h + 6000 && GetPlayerInterior(i) == HouseInfo[h][hHInteriorWorld])
	{
		format(string,sizeof(string),"Timbre de %s suena.", HouseInfo[h][hOwner]);
		SendClientMessageEx(i,COLOR_PURPLE,string);
		GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Timbre...", 4000,3);
	}
	format(string,sizeof(string),"* %s presiona un botón al lado de la puerta y toca el timbre de la casa de %s.",GetPlayerNameEx(playerid), HouseInfo[h][hOwner]);
	ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
return 1;
}

CMD:vendermicasa(playerid, params[])
{
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
if((Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0))
{
    new string[128], giveplayerid, price;
    if(sscanf(params, "dd", giveplayerid, price)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vendermicasa [player] [precio]");
    if(price < 1) return SendClientMessageEx(playerid, COLOR_GREY, "Precio debe ser mayor a 0.");
    if(!IsPlayerConnectedEx(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado no está conectado en el servidor.");
    if(Info[giveplayerid][pPhousekey] != INVALID_HOUSE_ID)
	{
        SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya tiene una casa.");
        return 1;
    }
    if(Info[giveplayerid][pLevel] >= HouseInfo[Info[playerid][pPhousekey]][hLevel])
	{
        if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[Info[playerid][pPhousekey]][hExteriorX],HouseInfo[Info[playerid][pPhousekey]][hExteriorY],HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]))
		{
            if (ProxDetectorS(8.0, playerid, giveplayerid))
			{
                HouseOffer[giveplayerid] = playerid;
                HousePrice[giveplayerid] = price;
                House[giveplayerid] = 1;
                format(string, sizeof(string), "* Ofreciste a tu casa a %s por $%d.", GetPlayerNameEx(giveplayerid), price);
                SendClientMessageEx(playerid, COLOR_GENERAL, string);
                format(string, sizeof(string), "* %s te ha ofrecido su casa por $%d. (usa /aceptar casa para comprarla)", GetPlayerNameEx(playerid), price);
                SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
                return 1;
            }
            else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
        }
        else SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar cerca de casa.");
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no tiene el nivel requerido para tener esta casa.");
}
return 1;
}

CMD:micasa(playerid, params[])
{
if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID)
{
    if(GetPlayerVirtualWorld(playerid) == Info[playerid][pPhousekey]+6000)
    {
    	ShowPlayerDialog(playerid,HOUSE_OPTIONS,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona:","* Retirar dinero\n* Depositar dinero\n* Tus Items\n* Tus objetos","Seleccionar","Atrás");
	}
    else return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en ninguna casa.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes una casa.");
return 1;
}
CMD:garma(playerid, params[])
{
new slot = strval(params), houseID = Info[playerid][pPhousekey];
if(GetPVarInt(playerid,"Dandoarma") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora");
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /garma [slot de casa 1-5]");
if(houseID != -1)
{
    if(GetPlayerVirtualWorld(playerid) == houseID + 6000)
	{
		if(slot >= 1 && slot <= 5)
		{
			if(HouseInfo[houseID][hWeapons][slot - 1] == 0)
			{
				new string[84],weapon;
				weapon = GetPlayerWeapon(playerid);
				switch(weapon)
				{
					case 16, 18, 35, 36, 37, 38, 39, 40, 44, 45, 46, 0: SendClientMessageEx(playerid, COLOR_GREY, "* No puedes guardar esta arma.");
					default:
					{
						HouseInfo[houseID][hWeapons][slot - 1] = weapon;
						RemovePlayerWeapon(playerid, weapon);
						format(string, sizeof(string), ""COL_YELLOW"* "COL_PURPLE"%s guarda un %s en su baúl.", GetPlayerNameEx(playerid), WeaponNames[weapon]);
						NearMsg(playerid, -1, string,10.0);
						format(string, sizeof(string), "Has guardado tu %s en el slot %d.", WeaponNames[weapon], slot);
						SendClientMessageEx(playerid, COLOR_WHITE, string);
      					saveHouse(houseID);
					}
				}
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* Ese slot de tu casa está siendo usado por otra arma.");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* El slot que elegiste no es válido.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No estás dentro de tu casa.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes una casa.");
return 1;
}
CMD:sarma(playerid, params[])
{
new slot = strval(params), houseID = Info[playerid][pPhousekey];
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /sarma [slot de casa 1-5]");
if(houseID != -1)
{
    if(GetPlayerVirtualWorld(playerid) == houseID + 6000)
	{
		if(slot >= 1 && slot <= 5)
		{
			if(HouseInfo[houseID][hWeapons][slot - 1] != 0)
			{
			    if(Info[playerid][pWeapons][GetWeaponSlot(HouseInfo[houseID][hWeapons][slot - 1])] == 0)
				{
					new string[84];
					GivePlayerValidWeapon(playerid, HouseInfo[houseID][hWeapons][slot-1]);
					format(string, sizeof(string), ""COL_YELLOW"* "COL_PURPLE"%s retira un %s de su baúl.", GetPlayerNameEx(playerid), WeaponNames[HouseInfo[houseID][hWeapons][slot-1]]);
					NearMsg(playerid, -1, string,10.0);
					format(string, sizeof(string), "Has sacado tu %s del slot %d.", WeaponNames[HouseInfo[houseID][hWeapons][slot-1]], slot);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					HouseInfo[houseID][hWeapons][slot - 1] = 0;
     				saveHouse(houseID);
				}
				else SendClientMessageEx(playerid, COLOR_GREY, "* En tu casa tienes un arma igual a la que tienes en la mano.");
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* En ese slot de tu casa no hay un arma.");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* El slot que elegiste no es válido.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No estás dentro de tu casa.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes una casa.");
return 1;
}
CMD:avecasa(playerid, params[])
{
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if (Info[playerid][pAdmin] >= 5)
	{
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));

		new string[128], house;
		if(sscanf(params, "d", house)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /avecasa [houseid]");

		HouseInfo[house][hLock] = 1;
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"Administrator %s (IP: %s) has admin-sold house ID %d (was owned by %s).",GetPlayerNameEx(playerid),ip,house,HouseInfo[house][hOwner]);
		Log("logs/house.log", string);
		ClearHouse(house);
		format( HouseInfo[house][hOwner], 128, "Nobody" );
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Vendiste la Casa Numero %d.", house);
		GameTextForPlayer(playerid, string, 10000, 3);
		saveHouse(house);
		DestroyDynamicPickup(HouseInfo[house][hPickupID]);
		HouseInfo[house][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
		DestroyDynamic3DTextLabel(HouseInfo[house][hTextID]);
		format(string, sizeof(string), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[house][hValue],HouseInfo[house][hLevel],house);
		HouseInfo[house][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 10.0);
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando");
	return 1;
}

CMD:vendercasa(playerid, params[])
{
	new string[128];
	new house = Info[playerid][pPhousekey];
	if(house == INVALID_HOUSE_ID) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres dueño de una casa.");
	if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ]))
	{
		ClearHouse(house);
		HouseInfo[house][hLock] = 1;
		format( HouseInfo[house][hOwner], 128, "Nobody" );
		new cost = (HouseInfo[house][hValue] * 40 ) / ( 100 );
		GivePlayerCash(playerid,cost);
		Tax -= cost;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Felicitaciones~n~ Vendiste tu casa por ~n~~g~$%d", cost);
		GameTextForPlayer(playerid, string, 4000, 3);
		Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
		if(Info[playerid][pVW] == house+6000)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ]);
			Info[playerid][pInt] = 0;
			Info[playerid][pPhousekey] = INVALID_HOUSE_ID;
		}
		//Info[playerid][pInsurance] = 0;
		saveHouse(house);
		OnPlayerUpdate(playerid);
		DestroyDynamicPickup(HouseInfo[house][hPickupID]);
		HouseInfo[house][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]);
		DestroyDynamic3DTextLabel(HouseInfo[house][hTextID]);
		format(string, sizeof(string), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[house][hValue],HouseInfo[house][hLevel],house);
		HouseInfo[house][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 10.0);
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) has sold their house (ID %d) for $%d.",GetPlayerNameEx(playerid),ip,house,HouseInfo[house][hValue]);
		Log("logs/house.log", string);
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Necesitas estar cerca su casa (exterior) para venderla.");
	return 1;
}

CMD:goinhouse(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 4)
{
	new housenum;
	if(sscanf(params, "d", housenum)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /goinhouse [housenumber]");

	SetPlayerInterior(playerid,HouseInfo[housenum][hHInteriorWorld]);
	if(HouseInfo[housenum][hCustomInterior] == 1)
	{
	    LoadObjects(playerid);
	}
	SetPlayerPos(playerid,HouseInfo[housenum][hInteriorX],HouseInfo[housenum][hInteriorY],HouseInfo[housenum][hInteriorZ]);
	GameTextForPlayer(playerid, "~w~Teletransportado", 5000, 1);
	Info[playerid][pInt] = HouseInfo[housenum][hHInteriorWorld];
}
return 1;
}

CMD:gotohouse(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 4)
{
	new housenum;
	if(sscanf(params, "d", housenum)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /gotohouse [housenumber]");

	SetPlayerPos(playerid,HouseInfo[housenum][hExteriorX],HouseInfo[housenum][hExteriorY],HouseInfo[housenum][hExteriorZ]);
	GameTextForPlayer(playerid, "~w~Teletransportado", 5000, 1);
	SetPlayerInterior(playerid, 0);
	Info[playerid][pInt] = 0;
}
return 1;
}

CMD:preciorenta(playerid, params[])
{
new string[128], fee;
if(sscanf(params, "d", fee)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /preciorenta [precio]");

if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hExteriorX], HouseInfo[Info[playerid][pPhousekey]][hExteriorY], HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ])))
{
	if(!(1 <= fee <= 10000))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Renta minima es $1, maxima es $10,000.");
	}
	else
	{

		HouseInfo[Info[playerid][pPhousekey]][hRentFee] = fee;
		format(string, sizeof(string), "Rentaste tu casa a $%i.", HouseInfo[Info[playerid][pPhousekey]][hRentFee]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		if(HouseInfo[Info[playerid][pPhousekey]][hRentable]) format(string, sizeof(string), "Dueño:\n%s\nRenta: $%d\nNivel: %d\nID: %d\nUsa /rentar para rentar aquí",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hRentFee],HouseInfo[Info[playerid][pPhousekey]][hLevel],Info[playerid][pPhousekey]);
		else format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hLevel],Info[playerid][pPhousekey]);
		UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey]][hTextID], -1, string);
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "Usted no es dueño de una casa o no estás en ella.");
return 1;
}

CMD:ponerrenta(playerid, params[])
{
if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hExteriorX], HouseInfo[Info[playerid][pPhousekey]][hExteriorY], HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ]))) {

	if(!HouseInfo[Info[playerid][pPhousekey]][hRentable])
	{
		HouseInfo[Info[playerid][pPhousekey]][hRentable] = 1;
		format(szMessage, sizeof(szMessage), ""COL_HOUSET"Dueño\n%s\nRenta: $%d\nNivel: %d\nID: %d\n"COL_WHITE"Escribe /rentar para rentar aquí",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hRentFee],HouseInfo[Info[playerid][pPhousekey]][hLevel],Info[playerid][pPhousekey]);
		UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey]][hTextID], -1, szMessage);
		SendClientMessageEx(playerid, COLOR_WHITE, "Está casa ahora está en renta.");
	}
	else {
		HouseInfo[Info[playerid][pPhousekey]][hRentable] = 0;
		format(szMessage, sizeof(szMessage), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[Info[playerid][pPhousekey]][hOwner],HouseInfo[Info[playerid][pPhousekey]][hLevel],Info[playerid][pPhousekey]);
		UpdateDynamic3DTextLabelText(HouseInfo[Info[playerid][pPhousekey]][hTextID], COLOR_GREEN2, szMessage);
		SendClientMessageEx(playerid, COLOR_WHITE, "Está casa ya no está en renta." );
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "No estas dueño de una casa, o no está en uno de ellas.");
return 1;
}

CMD:editar(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] < 4) return NoAutorizado
new string[128], choice[32], amount;
if(sscanf(params, "s[32]d", choice, amount))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /edit [name] [amount]");
	SendClientMessageEx(playerid, COLOR_GREY,  "Nombres: Nivel, Precio");
	return 1;
}

for(new i = 0; i < sizeof(HouseInfo); i++)
{
	if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
	{
		format(string, sizeof(string), "Casa: %d", i);
		SendClientMessageEx(playerid, COLOR_GRAD2, string);
		if(amount > 0)
		{
			if(strcmp(choice,"Nivel",true) == 0)
			{
				HouseInfo[i][hLevel] = amount;
			}
			else if(strcmp(choice,"Precio",true) == 0)
			{
				HouseInfo[i][hValue] = amount;
			}
		}
		if(HouseInfo[i][hOwned] ==0)
		{
			format(string, sizeof(string), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[i][hValue],HouseInfo[i][hLevel],i);
			UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_GREEN2, string);
		}
		else
		{
			if(HouseInfo[i][hRentable] == 0)
			{
				format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[i][hOwner],HouseInfo[i][hLevel],i);
				UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_GREEN2, string);
			}
			else
			{
				format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nRenta: $%d\nNivel: %d\nID: %d\n"COL_WHITE"Usa /rentroom para rentar aquí",HouseInfo[i][hOwner],HouseInfo[i][hRentFee],HouseInfo[i][hLevel],i);
				UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_GREEN2, string);
			}
		}
	}
}
return 1;
}

CMD:hnext(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 6)
{
	SendClientMessageEx(playerid, COLOR_RED, "* Lista casas disponible siguiente...");
	for(new x;x<MAX_HOUSES;x++)
	{
	    if(HouseInfo[x][hExteriorX] == 0.0)
	    {
	        new string[128];
	        format(string, sizeof(string), "%d está casa está disponible para usarla", x);
	        SendClientMessageEx(playerid, COLOR_WHITE, string);
	        break;
		}
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás autorizado!");
return 1;
}

CMD:hname(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] < 6) NoAutorizado
new string[128], houseid, ownername[24];
if(sscanf(params, "ds[24]", houseid, ownername)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /hname [houseid] [Nombre]");

format(HouseInfo[houseid][hOwner], 24, "%s", ownername);
format(string, sizeof(string), "Estableciste el nombre del dueño de la casa a: %s", ownername);
HouseInfo[houseid][hOwned] = 1;
SendClientMessageEx(playerid, COLOR_WHITE, string);
DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
format(string, sizeof(string), ""COL_HOUSET"Dueño:\n %s\nNivel: %d\nID: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid);
UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
format(string, sizeof(string), "%s has edited HouseID %d's Owner to %s.", GetPlayerNameEx(playerid), houseid, ownername);
Log("logs/hedit.log", string);
return 1;
}

CMD:editarh(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] < 6) return NoAutorizado
new string[128], choice[32], houseid, amount;
if(sscanf(params, "s[32]dD", choice, houseid, amount))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarh [Nombre] [houseid] [(Optional)Codigo]");
	SendClientMessageEx(playerid, COLOR_GREY, "Available names: Exterior, Interior, CustomInterior, Clase (1-3), Nivel, Precio");
	return 1;
}

if(strcmp(choice, "interior", true) == 0)
{
	GetPlayerPos(playerid, HouseInfo[houseid][hInteriorX], HouseInfo[houseid][hInteriorY], HouseInfo[houseid][hInteriorZ]);
	GetPlayerFacingAngle(playerid, HouseInfo[houseid][hInteriorA]);
	HouseInfo[houseid][hHInteriorWorld] = GetPlayerInterior( playerid );
	SendClientMessageEx( playerid, COLOR_WHITE, "Cambiaste el interior de la casa!" );
 	saveHouse(houseid);

	format(string, sizeof(string), "%s has edited HouseID %d's Interior.", GetPlayerNameEx(playerid), houseid);
	Log("logs/hedit.log", string);
	return 1;
}
else if(strcmp(choice, "custominterior", true) == 0)
{
	if(HouseInfo[houseid][hCustomInterior] == 0)
	{
		HouseInfo[houseid][hCustomInterior] = 1;
		SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Interior Personalizado! (1)" );
	}
	else
	{
		HouseInfo[houseid][hCustomInterior] = 0;
		SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Interior Normal! (0)" );
	}
	saveHouse(houseid);

	format(string, sizeof(string), "%s has edited HouseID %d's Custom Interior.", GetPlayerNameEx(playerid), houseid);
	Log("logs/hedit.log", string);
	return 1;
}
else if(strcmp(choice, "customexterior", true) == 0)
{
	if(HouseInfo[houseid][hCustomExterior] == 0)
	{
		HouseInfo[houseid][hCustomExterior] = 1;
		SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Exterior Personalizado! (1)" );
	}
	else
	{
		HouseInfo[houseid][hCustomExterior] = 0;
		SendClientMessageEx( playerid, COLOR_WHITE, "Casa establecida a un Exterior Normal! (0)" );
	}
	saveHouse(houseid);

	format(string, sizeof(string), "%s has edited HouseID %d's Custom Exterior.", GetPlayerNameEx(playerid), houseid);
	Log("logs/hedit.log", string);
	return 1;
}
else if(strcmp(choice, "exterior", true) == 0)
{
	GetPlayerPos(playerid, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
	GetPlayerFacingAngle(playerid, HouseInfo[houseid][hExteriorA]);
	SendClientMessageEx( playerid, COLOR_WHITE, "Cambiaste el exterior de la casa!" );
	DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
	saveHouse(houseid);

	format(string, sizeof(string), "%s has edited HouseID %d's Exterior.", GetPlayerNameEx(playerid), houseid);
	Log("logs/hedit.log", string);
	if(HouseInfo[houseid][hOwned] ==0)
	{
		DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
		DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
		format(string, sizeof(string), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel],houseid);
		HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel( string, COLOR_GREEN2, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,10.0);
		HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
	}
	else
	{
		if(HouseInfo[houseid][hRentable] == 0)
		{
			DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
			DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
			format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid);
			HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string,COLOR_GREEN2,HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,10.0);
			HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
		}
		else
		{
			DestroyDynamicPickup(HouseInfo[houseid][hPickupID]);
			DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
			format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nRenta: $%d\nNivel: %d\nID: %d\n"COL_WHITE"Usa /rentar para rentar aquí",HouseInfo[houseid][hOwner],HouseInfo[houseid][hRentFee],HouseInfo[houseid][hLevel],houseid);
			HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string,COLOR_GREEN2,HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,10.0);
			HouseInfo[houseid][hPickupID] = CreateDynamicPickup(1272, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
		}
	}
}
else if(strcmp(choice, "nivel", true) == 0)
{
	HouseInfo[houseid][hLevel] = amount;
	format(string, sizeof(string), "Editaste el nivel a %d.", amount);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	if(HouseInfo[houseid][hOwned] ==0)
	{
		format(string, sizeof(string), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel],houseid);
		UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
	}
	else
	{
		if(HouseInfo[houseid][hRentable] == 0)
		{
			format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nNivel: %d\nID: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
		}
		else
		{
			format(string, sizeof(string), ""COL_HOUSET"Dueño:\n%s\nRenta: $%d\nNivel: %d\nID: %d\n"COL_WHITE"Usa /rentar para rentar aquí",HouseInfo[houseid][hOwner],HouseInfo[houseid][hRentFee],HouseInfo[houseid][hLevel],houseid);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
		}
	}
	format(string, sizeof(string), "%s has edited HouseID %d's Level to %d.", GetPlayerNameEx(playerid), houseid, amount);
	Log("logs/hedit.log", string);
}
else if(strcmp(choice, "precio", true) == 0)
{
	HouseInfo[houseid][hValue] = amount;
	format(string, sizeof(string), "Editaste el precio a $%d.", amount );
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	if(HouseInfo[houseid][hOwned] ==0)
	{
		format(string, sizeof(string), ""COL_HOUSET"Casa en Venta!\nCosto: $%d\n Nivel: %d\nID: %d\n"COL_WHITE"Para comprar usa: /comprarcasa",HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel],houseid);
		UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_GREEN2, string);
	}
	format(string, sizeof(string), "%s has edited HouseID %d's Price to $%d.", GetPlayerNameEx(playerid), amount);
	Log("logs/hedit.log", string);
}
saveHouse(houseid);
return 1;
}

CMD:cseguro(playerid, params[])
{
if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hExteriorX], HouseInfo[Info[playerid][pPhousekey]][hExteriorY], HouseInfo[Info[playerid][pPhousekey]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[Info[playerid][pPhousekey]][hInteriorX], HouseInfo[Info[playerid][pPhousekey]][hInteriorY], HouseInfo[Info[playerid][pPhousekey]][hInteriorZ])))
{
	if(HouseInfo[Info[playerid][pPhousekey]][hLock] == 1)
	{
		HouseInfo[Info[playerid][pPhousekey]][hLock] = 0;
		format(szMessage, sizeof(szMessage), "* %s ha abierto su casa.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else
	{
		HouseInfo[Info[playerid][pPhousekey]][hLock] = 1;
		format(szMessage, sizeof(szMessage), "* %s ha cerrado su casa.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
    SaveVarHouses(1,Info[playerid][pPhousekey], "Seguro",HouseInfo[Info[playerid][pPhousekey]][hLock] );
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes una casa o no estás cerca de la puerta para hacer esto.");
return 1;
}

CMD:licenciataxi(playerid, params[])
{
	if(Info[playerid][pJob] != 9 && Info[playerid][pJob2] != 9) return SendClientMessageEx(playerid, COLOR_WHITE, "No eres taxista.");

	if(Info[playerid][pTaxiLicense] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Para que necesitas otra? - Ya tienes una.");

	if(!PlayerToPoint(10.0,playerid,1752.5104,-1903.1664,13.5631)) return SendClientMessageEx(playerid, COLOR_WHITE, "No estás en el lugar adecuado.");

	if(GetPlayerCash(playerid) < 1300) return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes para pagar está licencia.");
	
	GivePlayerCash(playerid,-1300);
	Info[playerid][pTaxiLicense] = 1;
	SendClientMessageEx(playerid, COLOR_WHITE, "Adquiriste la licencia de hacer servicios de taxi ahora puedes trabajar con tu coche.");
	SendClientMessageEx(playerid, COLOR_WHITE, "Ya no es necesario usar coches de Unity.");
	return 1;
}

CMD:tomarpizza(playerid, params[])
{
	if (Info[playerid][pJob] != 5 && Info[playerid][pJob2] != 5) return SendClientMessageEx(playerid,COLOR_GREY,"No eres repartidor de Pizza!");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!(IsAPizzabike(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)) return SendClientMessageEx(playerid,COLOR_GREY,"Tu necesitas estar en una motocicleta de repartidor de pizza!");
	if(Info[playerid][pChar] == 155)
		{
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
	
		if (!IsPlayerInRangeOfPoint(playerid, 3.0, 2098.6919,-1789.5027,13.5547)) return SendClientMessageEx(playerid,COLOR_GREY,"* No estás en el lugar adecuado!");
		if(GetPVarInt(playerid, "Pizza") > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya estás entregando pizzas!");

		new rand = random(40);
		if(rand == 40) { rand = 1; }
		SetPVarInt(playerid, "tpPizzaTimer", floatround((GetPizzaDistance(rand) / 100), floatround_round));
		SetPVarInt(playerid, "pizzaTotal", floatround((GetPizzaDistance(rand) / 10), floatround_round));
		SetPVarInt(playerid, "pizzaTimer", GetPVarInt(playerid, "pizzaTotal"));
 		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
 		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);
		format(szMessage, sizeof(szMessage), "Has cogido una pizza. Tienes %d segundos para entregarla!", /*HouseInfo[rand][hOwner],*/ GetPVarInt(playerid, "pizzaTotal"));
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		SetPVarInt(playerid, "Pizza", rand);
 		PizzaBar[playerid] = CreateProgressBar(501.00, 119.00, 106.50, 1.50, -169954390, 100.0);
		SetProgressBarValue(PizzaBar[playerid], 100.0);
		ShowProgressBarForPlayer(playerid, PizzaBar[playerid]);
		SetPlayerCheckpoint(playerid, HouseInfo[rand][hExteriorX], HouseInfo[rand][hExteriorY], HouseInfo[rand][hExteriorZ], 5);
		}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, " No tienes el traje de Pizzero, usa /vestidor.");
	}
	return 1;
}
CMD:saem(playerid, params[])
{
	if(Team_NG(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,10.0,298.0089,-106.0455,985.5322) && GetPlayerVirtualWorld(playerid) == 8)// NG Duty
		{
			ShowPlayerDialog(playerid, NGMENU, DIALOG_STYLE_LIST, "Equipo","Duty\nUniformes\nArmas\nEncubierto\nKevlar Vest\nFirst Aid Kit\nAccessorios\nParacaídas", "Select", "Cancel");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes acceder a los casilleros de SAEM.");
	}
	return 1;
}

zcmd(racall, playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, NoConectado);
if(Info[playerid][pAdmin] >= 3)
{
	new bool:unwanted[MAX_VEHICLES];
	foreach(Player, player)
	{
		if(IsPlayerInAnyVehicle(player))
		{
			unwanted[GetPlayerVehicleID(player)]=true;
		}
	}
	for(new car = 0; car < MAX_VEHICLES; car++)
	{
		if(!unwanted[car]) SetVehicleToRespawn(car);
		SetVehicleParamsEx(car,0,0,0,0,0,0,0);
		arr_Engine{car} = 0;
	}
	format(szMessage, sizeof(szMessage), "AdmCmdExe: Respawn Total realizado por %s.",GetPlayerNameEx(playerid));
	return ABroadCast(COLOR_GENERAL, szMessage, 3);
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "¡No estás autorizado para usar este comando!");
return 1;
}

CMD:fixvehall(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(IsPlayerConnectedEx(playerid)) {
    if(Info[playerid][pAdmin] < 3) {
        SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando!");
        return 1;
    }
    for(new v = 0; v < MAX_VEHICLES; v++)
	{
        RepairVehicle(v);
    	SetVehicleHealth(v, 1000.0);
    }
    SendClientMessageEx(playerid, COLOR_GREY, "   Todos los vehiculos reparados!");
}
return 1;
}

CMD:forcedied(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 3)
{
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /forcedied [playerid]");

	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(GetPVarInt(giveplayerid, "Injured") == 1)
		{
			format(szMessage, sizeof(szMessage), " Forzaste la muerte de %s.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, " Un administrador forzó tu muerte.");
			KillEMSQueue(giveplayerid);
			ResetPlayerWeaponsEx(giveplayerid);
			SpawnPlayer(giveplayerid);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está herido!");
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando!");
return 1;
}

CMD:vendercosecha(playerid, params[])
{
if(!IsAt247(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en el 24/7.");
if(Info[playerid][pJob] == 10 || Info[playerid][pJob2] == 10)
{
    if(Info[playerid][pCosecha] > 1)
    {
		if(Tax < 50000) return SendClientMessageEx(playerid, COLOR_GREY, "* En este momento no tenemos fondos suficientes para pagarte por tu cosecha.");
		
		new string[48], pay = Info[playerid][pCosecha]*6;
		Tax -= pay;
		SaveStuff();
		format(string, sizeof(string), "Vendiste %d Kg de cosecha y ganaste $%i.", Info[playerid][pCosecha], pay);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		Info[playerid][pCosecha] = 0;
		GivePlayerCash(playerid, pay);
		return 1;
    }
    else return SendClientMessageEx(playerid, COLOR_GREY, "Lo mínimo para vender es 1 KG.");
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "No eres cosechador.");
return 1;
}

CMD:limpiarcamion(playerid, params[])
{
if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No eres policía!");
new carid = GetPlayerVehicleID(playerid);
new closestcar = GetClosestCar(playerid, carid);
if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && IsATruckerCar(closestcar))
{
	new truckcontents = TruckContents[closestcar];
	if(truckcontents < 11) return SendClientMessageEx(playerid, COLOR_WHITE, "No hay artículos ilegales en el camión.");
	new string[128];
	new truckcontentname[50];
	switch(truckcontents)
	{
	    case 11 .. 15: format(truckcontentname, sizeof(truckcontentname), ""COL_GENERAL"Armas Ilegales");
	    case 16 .. 20: format(truckcontentname, sizeof(truckcontentname), ""COL_GENERAL"Drogas Ilegales");
	    case 21 .. 25: format(truckcontentname, sizeof(truckcontentname), ""COL_GENERAL"Materiales Ilegales");
	}
	foreach(Player, i)
	{
		if(TruckUsed[i] == closestcar)
 		{
			DestroyProgressBar(LoadTruckBar[i]);
			LoadTruckBar[i] = INVALID_BAR_ID;
			LoadTruckTime[i] = 0;
			DeletePVar(i, "TruckDeliver");
			TruckUsed[i] = INVALID_VEHICLE_ID;
			TruckContents[closestcar] = 0;
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			SendClientMessageEx(i, COLOR_WHITE, "Tu entrega no ha podido ser completada. Las autoridades han confiscado los productos ilegales.");
   		}
	}
	format(string, sizeof(string), "Removiste las %s del camión.", truckcontentname);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "* %s ha tomado los puntos ilegales de los camiones.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No está cerca de un camión.");
return 1;
}

CMD:robarcamion(playerid, params[])
{
if(Info[playerid][pJob] == 7 || Info[playerid][pJob2] == 7)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsATruckerCar(vehicleid))
    {
        if(Info[playerid][p_Pr_Time] == 10) return SendClientMessageEx(playerid, COLOR_GREY, "Ya hiciste 10 viajes en está hora de pago, espera al proximo payday.");
 		if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_NONE || GetPVarInt(playerid, "Packages") == 0 || EMSAccepted[playerid] == 999 || MedicAccepted[playerid] == 999 || MechanicCallTime[playerid] == 0)
        {
     		if(GetProgressBarValue(LoadTruckBar[playerid]) > 10)
            {
                SendClientMessageEx(playerid, COLOR_WHITE, "En este momento está cargando tu camión!");
				return 1;
            }
            if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
            {
                SendClientMessageEx(playerid, COLOR_WHITE, "Estás en otra entrega, usa /cancelar camion para cancelar la entrega.");
				return 1;
            }
			if(TruckContents[vehicleid] == 0)
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "Este camión no tiene nada de mercancía.!");
			    return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 65, -1572.767822, 81.137527, 3.554687))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "No puedes robar camiones estando cerca de Ocean Docks.");
				return 1;
			}
			SendClientMessageEx(playerid, COLOR_GENERAL,"* Estás tratando de robar el camión, por favor espere ....");

			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);

			LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
			SetProgressBarValue(LoadTruckBar[playerid], 100.0);
			ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
			SetTimerEx("HijackTruck", 1000, 0, "dd", playerid);
        }
        else return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor asegúrate de que los otros checkpoints que están activados.");
    }
    else return SendClientMessageEx(playerid, COLOR_GREY, "No estás manejando un camión.");
}
else return SendClientMessageEx(playerid, COLOR_GREY, "No eres camionero!");
return 1;
}

function HijackTruck(playerid)
{
new vehicleid = GetPlayerVehicleID(playerid);
LoadTruckTime[playerid]--;
SetProgressBarValue(LoadTruckBar[playerid], GetProgressBarValue(LoadTruckBar[playerid])-10.0);
UpdateProgressBar(LoadTruckBar[playerid], playerid);
if(GetProgressBarValue(LoadTruckBar[playerid]) > 10) SetTimerEx("HijackTruck", 1000, 0, "d", playerid);

if(GetProgressBarValue(LoadTruckBar[playerid]) == 50.0)
{
	SetProgressBarColor(LoadTruckBar[playerid], COLOR_YELLOW);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
}
else if(GetProgressBarValue(LoadTruckBar[playerid]) == 20.0)
{
	SetProgressBarColor(LoadTruckBar[playerid], COLOR_RED);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
}
else if(GetProgressBarValue(LoadTruckBar[playerid]) <= 10.0)
{
	DeletePVar(playerid, "IsFrozen");
	TogglePlayerControllable(playerid, 1);
	DestroyProgressBar(LoadTruckBar[playerid]);
	LoadTruckBar[playerid] = INVALID_BAR_ID;

    if(!IsPlayerInVehicle(playerid, vehicleid))
    {
   		DestroyProgressBar(LoadTruckBar[playerid]);
		LoadTruckBar[playerid] = INVALID_BAR_ID;
		LoadTruckTime[playerid] = 0;
		DeletePVar(playerid, "TruckDeliver");
		TruckUsed[playerid] = INVALID_VEHICLE_ID;
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		DisablePlayerCheckpoint(playerid);
        SendClientMessageEx(playerid, COLOR_GENERAL,"* No pudiste robar el camión.");
		return 1;
    }


	foreach(Player, i)
	{
		if(TruckUsed[i] == vehicleid)
		{
			DestroyProgressBar(LoadTruckBar[i]);
			LoadTruckBar[i] = INVALID_BAR_ID;
			LoadTruckTime[i] = 0;
			DeletePVar(i, "TruckDeliver");
			TruckUsed[i] = INVALID_VEHICLE_ID;
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			SendClientMessageEx(i, COLOR_WHITE, "Su entrega de camionero ha fallado, le han robado el camión.");
		}
	}

	new truckdeliver = TruckContents[vehicleid];
	SetPVarInt(playerid, "TruckDeliver", truckdeliver);
	TruckUsed[playerid] = vehicleid;

	if(truckdeliver == 1)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de comida y bebidas.");
		SetPlayerCheckpoint(playerid, 1025.6554,-1362.6024,13.5649, 5);
	}
	else if(truckdeliver == 2)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de comida y bebidas.");
		SetPlayerCheckpoint(playerid, 793.0801,-1625.8910,13.3906, 5);
	}
	else if(truckdeliver == 3)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de comida y bebidas.");
		SetPlayerCheckpoint(playerid, 1197.6417,-887.7512,43.0229, 5);
	}
	else if(truckdeliver == 4)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de ropa.");
		SetPlayerCheckpoint(playerid, 2247.2351,-1661.2406,15.6749, 5);
	}
	else if(truckdeliver == 5)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de ropa.");
		SetPlayerCheckpoint(playerid, 455.2845,-1501.5569,31.0434, 5);
	}
	else if(truckdeliver == 6)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de ropa.");
		SetPlayerCheckpoint(playerid, 2112.7766,-1216.1750,23.8047, 5);
	}
	else if(truckdeliver == 7)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de materiales.");
		SetPlayerCheckpoint(playerid, 1474.4786,-1140.6188,24.0781, 5);
	}
	else if(truckdeliver == 8)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de productos del 24/7.");
		SetPlayerCheckpoint(playerid, 1331.2570,-885.2997,39.9401, 5);
	}
	else if(truckdeliver == 9)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de productos del 24/7.");
		SetPlayerCheckpoint(playerid, 1347.0487,-1752.1692,13.7886, 5);
	}
	else if(truckdeliver == 10)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de productos del 24/7.");
		SetPlayerCheckpoint(playerid, 1925.5968,-1789.5017,13.1459, 5);
	}
	else if(truckdeliver >= 11 && truckdeliver <= 15)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de armas ilegales.");
		SetPlayerCheckpoint(playerid, -64.5445,-1120.5356,1.0781, 5);

		new level = Info[playerid][pTruckSkill];
		if(level >= 0 && level <= 50)
		{ SetPVarInt(playerid, "TruckDeliver", 11); }
		else if(level >= 51 && level <= 100)
		{ SetPVarInt(playerid, "TruckDeliver", 12); }
		else if(level >= 101 && level <= 200)
		{ SetPVarInt(playerid, "TruckDeliver", 13); }
		else if(level >= 201 && level <= 400)
		{ SetPVarInt(playerid, "TruckDeliver", 14); }
		else if(level >= 401)
		{ SetPVarInt(playerid, "TruckDeliver", 15); }
	}
	else if(truckdeliver >= 16 && truckdeliver <= 20)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de drogas.");
		SetPlayerCheckpoint(playerid, -86.3670,-1195.7297,2.1664, 5);

		new level = Info[playerid][pTruckSkill];
		if(level >= 0 && level <= 50)
		{ SetPVarInt(playerid, "TruckDeliver", 16); }
		else if(level >= 51 && level <= 100)
		{ SetPVarInt(playerid, "TruckDeliver", 17); }
		else if(level >= 101 && level <= 200)
		{ SetPVarInt(playerid, "TruckDeliver", 18); }
		else if(level >= 201 && level <= 400)
		{ SetPVarInt(playerid, "TruckDeliver", 19); }
		else if(level >= 401)
		{ SetPVarInt(playerid, "TruckDeliver", 20); }
	}
	else if(truckdeliver >= 21 && truckdeliver <= 25)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Tu camión robado está lleno de materiales ilegales.");
		SetPlayerCheckpoint(playerid, -70.8884,-1549.4922,2.6172, 5);

		new level = Info[playerid][pTruckSkill];
		if(level >= 0 && level <= 50)
		{ SetPVarInt(playerid, "TruckDeliver", 21); }
		else if(level >= 51 && level <= 100)
		{ SetPVarInt(playerid, "TruckDeliver", 22); }
		else if(level >= 101 && level <= 200)
		{ SetPVarInt(playerid, "TruckDeliver", 23); }
		else if(level >= 201 && level <= 400)
		{ SetPVarInt(playerid, "TruckDeliver", 24); }
		else if(level >= 401)
		{ SetPVarInt(playerid, "TruckDeliver", 25); }
	}

	SendClientMessageEx(playerid, COLOR_WHITE, "TIP: Entregar la mercancía a la ubicación especificada (Ir a Checkpoint).");
	SendClientMessageEx(playerid, COLOR_REALRED, "Advertencia: Cuidado con los que roban camiones, pueden robarte y quedarse con tu mercancía.");
	if(truckdeliver >= 9)
	{
		SendClientMessageEx(playerid, COLOR_REALRED, "Advertencia #2: El camión está lleno de mercancía ilegal cuidado con los policías que te pueden quitar tu mercancía.");
	}
	// If hijacked near delivery point it would send an inaccurate warning.
	/*SetPVarInt(playerid, "tpTruckRunTimer", 10);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);*/
}
return 1;
}

CMD:cargarcamion(playerid, params[])
{
if(Info[playerid][pJob] == 7 || Info[playerid][pJob2] == 7)
{
    if(Info[playerid][p_Pr_Time] == 10) return SendClientMessageEx(playerid, COLOR_GREY, "Ya hiciste 10 viajes en está hora de pago, espera al proximo payday.");
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_NONE || GetPVarInt(playerid, "Packages") == 0 || EMSAccepted[playerid] == 999 || MedicAccepted[playerid] == 999 || MechanicCallTime[playerid] == 0)
		{
            if(GetProgressBarValue(LoadTruckBar[playerid]) > 10)
            {
                SendClientMessageEx(playerid, COLOR_WHITE, "En este momento está cargando su camión!");
				return 1;
            }
            if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
            {
                SendClientMessageEx(playerid, COLOR_WHITE, "Ya estás en otra entrega, usa /cancelar camión para cancelar la entrega.");
				return 1;
            }
            gPlayerCheckpointStatus[playerid] = CHECKPOINT_LOADTRUCK;
            SetPlayerCheckpoint(playerid,2198.1377,-2660.1250,13.5469, 4);
            GameTextForPlayer(playerid, "~w~Ve al checkpoint", 5000, 1);
            SendClientMessageEx(playerid, COLOR_GENERAL, "* Recoge mercancía en el lugar especificado. (Ve al CheckPoint)");
            SendClientMessageEx(playerid, COLOR_GENERAL, "* Recuerda que sólo podrás hacer 10 viajes por payday, también recuerda manejar por el carril correcto o puedes ser sancionado.");
        }
        else return SendClientMessageEx(playerid, COLOR_WHITE, "Por favor, asegúrese de que su checkpoint actual esté destruido.");
    }
    else return SendClientMessageEx(playerid, COLOR_GREY, "No estás manejando un camión");
}
else return SendClientMessageEx(playerid, COLOR_GREY, "No eres camionero!");
return 1;
}

CMD:eliminarcheckpoint(playerid, params[])
{
DeletePVar(playerid, "TrackCar");
DisablePlayerCheckpoint(playerid);
gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
EMSAccepted[playerid] = 999;
MedicAccepted[playerid] = 999;
TaxiCallReady[playerid] = -1;
MechanicCallTime[playerid] = 0;
MedicCallTime[playerid] = 0;
SetPVarInt(playerid, "Pizza", 0);
SendClientMessageEx(playerid,COLOR_WHITE,"Todos los checkpoints fueron eliminados.");
return 1;
}

function LoadTruck(playerid)
{
LoadTruckTime[playerid]--;
SetProgressBarValue(LoadTruckBar[playerid], GetProgressBarValue(LoadTruckBar[playerid])-10.0);
UpdateProgressBar(LoadTruckBar[playerid], playerid);
if(GetProgressBarValue(LoadTruckBar[playerid]) > 10) SetTimerEx("LoadTruck", 1000, 0, "d", playerid);

if(GetProgressBarValue(LoadTruckBar[playerid]) == 50.0)
{
	SetProgressBarColor(LoadTruckBar[playerid], COLOR_YELLOW);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
}
else if(GetProgressBarValue(LoadTruckBar[playerid]) == 20.0)
{
	SetProgressBarColor(LoadTruckBar[playerid], COLOR_RED);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
}
else if(GetProgressBarValue(LoadTruckBar[playerid]) <= 10.0)
{
	DeletePVar(playerid, "IsFrozen");
	TogglePlayerControllable(playerid, 1);
	DestroyProgressBar(LoadTruckBar[playerid]);
	LoadTruckBar[playerid] = INVALID_BAR_ID;

	new vehicleid = GetPlayerVehicleID(playerid);
	new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
	TruckContents[vehicleid] = truckdeliver;
	TruckUsed[playerid] = vehicleid;

	if(truckdeliver == 1)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se lleno de alimentos y bebidas.");
		SetPlayerCheckpoint(playerid, 1025.6554,-1362.6024,13.5649, 5);
	}
	else if(truckdeliver == 2)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se lleno de alimentos y bebidas.");
		SetPlayerCheckpoint(playerid, 793.0801,-1625.8910,13.3906, 5);
	}
	else if(truckdeliver == 3)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se lleno de alimentos y bebidas.");
		SetPlayerCheckpoint(playerid, 1197.6417,-887.7512,43.0229, 5);
	}
	else if(truckdeliver == 4)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su Camión se lleno de ropa.");
		SetPlayerCheckpoint(playerid, 2247.2351,-1661.2406,15.6749, 5);
	}
	else if(truckdeliver == 5)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su Camión se lleno de ropa.");
		SetPlayerCheckpoint(playerid, 455.2845,-1501.5569,31.0434, 5);
	}
	else if(truckdeliver == 6)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su Camión se lleno de ropa.");
		SetPlayerCheckpoint(playerid, 2112.7766,-1216.1750,23.8047, 5);
	}
	else if(truckdeliver == 7)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su Camión se lleno de Materiales.");
		SetPlayerCheckpoint(playerid, 1474.4786,-1140.6188,24.0781, 5);
	}
	else if(truckdeliver == 8)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se llenó con artículos 24/7.");
		SetPlayerCheckpoint(playerid, 1331.2570,-885.2997,39.9401, 5);
	}
	else if(truckdeliver == 9)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se llenó con artículos 24/7.");
		SetPlayerCheckpoint(playerid, 1347.0487,-1752.1692,13.7886, 5);
	}
	else if(truckdeliver == 10)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se llenó con artículos 24/7.");
		SetPlayerCheckpoint(playerid, 1925.5968,-1789.5017,13.1459, 5);
	}
	else if(truckdeliver >= 11 && truckdeliver <= 15)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se llenó de armas.");
		SetPlayerCheckpoint(playerid, -64.5445,-1120.5356,1.0781, 5);
	}
	else if(truckdeliver >= 16 && truckdeliver <= 20)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se llenó de drogas.");
		SetPlayerCheckpoint(playerid, -86.3670,-1195.7297,2.1664, 5);
	}
	else if(truckdeliver >= 21 && truckdeliver <= 25)
	{
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Su camión se llenó de materiales ilegales.");
		SetPlayerCheckpoint(playerid, -70.8884,-1549.4922,2.6172, 5);
	}

	SendClientMessageEx(playerid, COLOR_WHITE, "Objetivo: Entregar la mercancía a la ubicación especificada (ve al checkpoint).");
	SendClientMessageEx(playerid, COLOR_REALRED, "Advertencia: Tenga cuidado con los secuestradores de camiones, que puede robar su vehículo y salirse con la mercancía.");
	if(truckdeliver >= 11)
	{
		SendClientMessageEx(playerid, COLOR_REALRED, "Advertencia #2: Estás transportando mercancía ilegal recuerda que los policías pueden capturarte y quitarte la mercancía.");
	}
	SetPVarInt(playerid, "tpTruckRunTimer", 30);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
}
return 1;
}

CMD:serverstreamer(playerid, params[])
{
if(Info[playerid][pAdmin] < 4) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás autorizado para usar este comando!");
new string[128], rate;
if(sscanf(params, "d", rate)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /serverstreamer [rate] (1: Low) (2: Medium) (3: High)");
if(rate > 3 || rate < 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /serverstreamer [rate] (1: Low) (2: Medium) (3: High)");
switch(rate)
{
	case 	1:
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el streamer rate a (LOW), es recomendable usarlo cuando el contador de players está bajo 100.");
		format(string, sizeof(string), "AdmWarning: %s ha cambiado el streamer rate. (Bajo 100 Players).",GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL, string, 2);
		SendRconCommand("onfoot_rate 40");
		SendRconCommand("incar_rate 40");
		SendRconCommand("weapon_rate 40");
		SendRconCommand("stream_distance 300.0");
		SendRconCommand("stream_rate 1000");
		Streamer_TickRate(50);
	}
	case 	2:
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el streamer rate a (MEDIUM), es recomendable usarlo cuando el contador de players está bajo 200.");
		format(string, sizeof(string), "AdmWarning: %s ha cambiado el streamer rate. (Bajo 200 Players).",GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL, string, 2);
		SendRconCommand("onfoot_rate 40");
		SendRconCommand("incar_rate 40");
		SendRconCommand("weapon_rate 40");
		SendRconCommand("stream_distance 250.0");
		SendRconCommand("stream_rate 1000");
		Streamer_TickRate(75);
	}
	case 	3:
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el streamer rate a (MEDIUM), es recomendable usarlo cuando el contador de players está sobre 200.");
		format(string, sizeof(string), "AdmWarning: %s ha cambiado el streamer rate. (sobre 200 Players).",GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL, string, 2);
		SendRconCommand("onfoot_rate 50");
		SendRconCommand("incar_rate 50");
		SendRconCommand("weapon_rate 50");
		SendRconCommand("stream_distance 200.0");
		SendRconCommand("stream_rate 2000");
		Streamer_TickRate(100);
	}
}
return 1;
}

CMD:ta(playerid, params[])
{
if(IsACop(playerid))
{
	new string[128];
	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar este comando, tienes restricción de armas!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto en un vehiculo.");
	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando en un evento.");
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes usar este comando en la Arena!");
	if(PlayerCuffedTime[playerid] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
	if(Info[playerid][pJailed] > 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en prisión.");
	if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto mientras estás tazeado o arrestado.");
	if(pTazer[playerid] == 0)
	{
	    pTazer[playerid] = 1;
		pTazerReplace[playerid] = Info[playerid][pWeapons][2];
		if(Info[playerid][pWeapons][2] != 0) RemovePlayerWeapon(playerid, Info[playerid][pWeapons][2]);
		format(string, sizeof(string), "* %s carga su tazer.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		GivePlayerValidWeapon(playerid, 23);
	}
	else
	{
	    pTazer[playerid] = 0;
		RemovePlayerWeapon(playerid, 23);
		GivePlayerValidWeapon(playerid, pTazerReplace[playerid]);
		format(string, sizeof(string), "* %s apaga y guarda su tazer.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un tazer para hacer esto.");
return 1;
}

CMD:vmaletero(playerid, params[]){
new string[128];
if (!IsACop(playerid)){
    SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces a las fuerzas de la ley!");
    return 1;
}
new carid = GetPlayerVehicleID(playerid);
new closestcar = GetClosestCar(playerid,carid);
if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0)){
    SendClientMessageEx(playerid,COLOR_GREY,"No estás cerca de ningún vehiculo.");
    return 1;
}
foreach(Player, i){
    new v = GetPlayerVehicle(i, closestcar);
    if(v != -1){
        string[0] = 0;
        for(new x = 0; x < 3; x++){
            if(PlayerVehicleInfo[i][v][pvWeapons][x] != 0){
                new
                    szWep[20];

                GetWeaponName(PlayerVehicleInfo[i][v][pvWeapons][x], szWep, sizeof(szWep));
                if(isnull(string)) format(string, sizeof(string), "* Contenido: %s", szWep);
                else format(string, sizeof(string), "%s, %s", string, szWep);
            }
        }
        if(!isnull(string)) SendClientMessageEx(playerid, COLOR_WHITE, string);
        else SendClientMessageEx(playerid, COLOR_WHITE, "* Contenido: Nada.");
    }
}
return 1;
}

CMD:tgunmaletero(playerid, params[]){
if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No perteneces a las fuerzas de la ley!");
new carid = GetPlayerVehicleID(playerid);
new closestcar = GetClosestCar(playerid,carid);
if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0)){
    SendClientMessageEx(playerid,COLOR_GREY,"No estás cerca de ningún vehiculo.");
    return 1;
}
foreach(Player, i){
	new
		engine, lights, alarm, doors, bonnet, boot, objective, v = GetPlayerVehicle(i, closestcar);

	GetVehicleParamsEx(PlayerVehicleInfo[i][v][pvId], engine, lights, alarm, doors, bonnet, boot, objective);
	if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET){
		return SendClientMessageEx(playerid, COLOR_GRAD3, "No puedes tomar armas del maletero, si está cerrado! /v maletero para abrirlo.");
	}
    else if(v != -1){
        PlayerVehicleInfo[i][v][pvWeapons][0] = 0;
        PlayerVehicleInfo[i][v][pvWeapons][1] = 0;
        PlayerVehicleInfo[i][v][pvWeapons][2] = 0;
    }
    SendClientMessageEx(playerid, COLOR_WHITE,  "Removiste todas las armas del maletero.");
}
return 1;
}

CMD:revive(playerid, params[])
{
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] >= 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /revive [playerid]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if(GetPVarInt(giveplayerid, "Injured") == 1)
			{
				format(string, sizeof(string), " Has revivido a %s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, "Fuiste revivido por un administrador y se te devolvio las armas.");
				KillEMSQueue(giveplayerid);
				ClearAnimations(giveplayerid);
				SetPlayerWeapons(giveplayerid);
				SetHP(giveplayerid, 100);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está herido!");
		}
	}
	else NoAutorizado
	return 1;
}
CMD:licencia(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,2.0,1470.1620,-1755.8926,3285.2859)) { return 1; }
	if(Info[playerid][pWantedLevel] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Tienes órden de arresto, te prohibieron la adquisición de licencias.");
	ShowPlayerDialog(playerid, DIALOG_LICENSE_BUY, DIALOG_STYLE_LIST, "Selecciona el tipo de licencia que deseas.", "Licencia de conducir ($1,000)\r\nLicencia de Navegación ($3,000)\r\nLicencia de Vuelo ($3,000)\r\nLicencia de Taxista ($2,000)\r\nLicencia de Armas ($4,000)", "Comprar", "Cancelar");
	return 1;
}

CMD:spec(playerid, params[])
{
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(Info[playerid][pAdmin] >= 1)
	{
	    new userID;
		if(sscanf(params, "u", userID)) return SendClientMessage(playerid, COLOR_GREY, "USA: /spec [playerid]");
		else if(!IsPlayerConnectedEx(userID)) return SendClientMessage(playerid, COLOR_GREY, "* El jugador especificado no está conectado.");
		else
		{
			if(Info[playerid][pSpectating] == -1)
			{ // Will only save pos/etc if they're NOT spectating. This will stop the annoying death/pos/int/VW/crash bugs everyone's experiencing...
				GetPlayerPos(playerid, Info[playerid][pPos_x], Info[playerid][pPos_y], Info[playerid][pPos_z]);
				Info[playerid][pInt] = GetPlayerInterior(playerid);
				Info[playerid][pVW] = GetPlayerVirtualWorld(playerid);
				Info[playerid][pChar] = GetPlayerSkin(playerid);
		    }
		    Info[playerid][pSpectating] = userID;
		    TogglePlayerSpectating(playerid, true);
			SetPlayerInterior(playerid, GetPlayerInterior(userID));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(userID));
		    if(IsPlayerInAnyVehicle(userID)) { PlayerSpectateVehicle(playerid, GetPlayerVehicleID(userID)); }
		    else { PlayerSpectatePlayer(playerid, userID); }
			if(TutStep[userID] >= 1) SendClientMessageEx(playerid, COLOR_WHITE, "NOTA: Este jugador está en el tutorial, no considerar que usa Teleport Hack.");
		}
	}
	else NoAutorizado
	return 1;
}
CMD:specoff(playerid, params[])
{
	if(Info[playerid][pSpectating] != -1)
	{
		Info[playerid][pSpectating] = -1;
		TogglePlayerSpectating(playerid, false);
		SetCameraBehindPlayer(playerid);
		SetPlayerPos(playerid, Info[playerid][pPos_x], Info[playerid][pPos_y], Info[playerid][pPos_z]);
		SetPlayerInterior(playerid, Info[playerid][pInt]);
		SetPlayerVirtualWorld(playerid, Info[playerid][pVW]);
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No estás spectando a nadie.");
	return 1;
}
CMD:liberar(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 2)
{
	new string[128], giveplayerid, reason[64];
	if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /liberar [playerid] [razón]");

	if(IsPlayerConnectedEx(giveplayerid))
	{
		new year, month,day;
		getdate(year, month, day);
		format(string, sizeof(string), "AdmCmd: %s fue liberado de prisión por %s, razón: %s(%d-%d-%d)", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason, month, day, year);
		Log("logs/admin.log", string);
		format(string, sizeof(string), "AdmCmd: %s fue liberado de prisión por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
		BroadCast(COLOR_LIGHTRED, string);
		Info[giveplayerid][pJailed] = 0;
		Info[giveplayerid][pWantedLevel] = 0;
		SetPlayerToTeamColor(giveplayerid);
		SetPlayerWantedLevel(giveplayerid, 0);
		Info[giveplayerid][pJailTime] = 0;
		Info[giveplayerid][pJailAdmin] -= 1;
		SetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
		SetPlayerInterior(giveplayerid,0);
		Info[giveplayerid][pInt] = 0;
		SetPlayerVirtualWorld(giveplayerid, 0);
		Info[giveplayerid][pVW] = 0;
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "Jugador no conectado!");
}
else NoAutorizado
return 1;
}

CMD:activarlinea(playerid, params[])
{
    if(!Team_LSTV(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No formas parte de SA News.");
    if(InLive == 0){
        SendClientMessageEx(playerid, COLOR_GREEN, "* Activaste el número 757, ahora la línea está abierta, ahora la gente puede llamar.");
        return InLive = 1;
	}
	else{
        InLive = 0;
        SendClientMessageEx(playerid, COLOR_GREEN, "* Desactivaste el número 757, ahora la línea está cerrada.");
	}
	return 1;
}
CMD:entrevista(playerid, params[])
{
	if(Team_LSTV(playerid))
	{
	    //if(shutdown == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Es sistema de CNN está caido." );
		if(TalkingLive[playerid] != INVALID_PLAYER_ID)
		{
			SendClientMessageEx(playerid, COLOR_GENERAL, "* Entrevista terminada.");
			SendClientMessageEx(TalkingLive[playerid], COLOR_GENERAL, "* Entrevista terminada.");
			//TogglePlayerControllable(playerid, 1);
			//TogglePlayerControllable(TalkingLive[playerid], 1);
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /entrevista [playerid]");
		if (IsPlayerConnectedEx(giveplayerid))
		{
			if (ProxDetectorS(5.0, playerid, giveplayerid))
			{
				if(Info[giveplayerid][pEstado] >= 1 || Info[playerid][pEstado] >= 1)
				{
					SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora.");
				}
				else
				{
					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer una entrevista a ti mismo!"); return 1; }
					format(string, sizeof(string), "* Ofreciste a %s una entrevista.", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_GENERAL, string);
					format(string, sizeof(string), "* %s te ha ofrecido una entrevista, usa /aceptar entrevista para aceptar.", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
					LiveOffer[giveplayerid] = playerid;
				}
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está cerca tuyo.");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Jugador especificado no inválido.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No eres un reportero!");
	return 1;
}

CMD:nr(playerid, params[])
{
	if(Team_LSTV(playerid))
	{
		new string[128];
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /nr [Texto]");
		new newcar = GetPlayerVehicleID(playerid);
		if(IsANewsCar(newcar) || IsPlayerInRangeOfPoint(playerid,7.0,-2774.4280,260.1192,24.1063))
		{
			if(Info[playerid][pRank] < 1)
			{
				SendClientMessageEx(playerid, COLOR_GRAD2, "Usted debe ser al menos rango 1");
			}
			else
			{
				format(string, sizeof(string), "[News Live] %s: %s", GetPlayerNameEx(playerid), params);
				OOCNews(COLOR_SANEWS,string);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* No eres en una camioneta de noticias o helicóptero o en el estudio.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No formas parte de SA News!");
	return 1;
}

CMD:buscarjob(playerid,params[]) return ShowPlayerDialog(playerid, JOBFINDMENU, DIALOG_STYLE_LIST, ""COL_GENERAL"Buscar - {FFFFFF}Trabajos Legales","Bartender\nPizza Boy\nCamionero\nVendedor de Moviles\nTaxista\nCosechador\nBodyguard\nArtesano", "Ok", "Cancelar");
CMD:cambiarnombre(playerid, params[])
{
if(IsAtNameChange(playerid))
{
	if(Info[playerid][pMember] == 2 || Info[playerid][pMember] == 8 && Info[playerid][pRank] >= 3)
	{
		ShowPlayerDialog( playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Cambiar Nombre","Por favor ingresa el nuevo nombre!\n\nNota: Lo cambios de nombre son libres para Hitman y FBI.", "Cambiar", "Cancelar" );
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto!");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No estas en el lugar de cambio de nombre!");
return 1;
}

CMD:mihq(playerid, params[])
{
if(Info[playerid][pMember] == 8)
{
    SetPlayerCheckpoint(playerid, 2795.4851,-1619.0795,10.9219, 2);
    SetPVarInt(playerid, "FINDHQ", 1);
}
else SendClientMessageEx(playerid, COLOR_WHITE, "SERVER: Comando desconocido. Por favor usa /ayuda para ver los comandos disponibles.");
return 1;
}

CMD:destruircar(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
new string[128];
if(Info[playerid][pAdmin] < 4)
{
	SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado para usar este comando!");
	return 1;
}
new bool:breakingloop = false, newid = INVALID_VEHICLE_ID;
if(IsPlayerInAnyVehicle(playerid))
{
	for(new i=0;i<sizeof(CreatedCars);i++)
	{
		if(!breakingloop)
		{
			if(CreatedCars[i] == GetPlayerVehicleID(playerid)) // Checking for next available ID.
			{
				breakingloop = true;
				newid = i;
			}
		}
	}
	if(newid != INVALID_VEHICLE_ID)
	{
		new carid = GetPlayerVehicleID(playerid);
		DestroyVehicle(carid);
		CreatedCars[newid] = INVALID_VEHICLE_ID;
		format(string, sizeof(string), " Coche %d destruido.", carid);
		SendClientMessageEx(playerid, COLOR_GREY, string);
	}
}
return 1;
}

CMD:setmoney(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] > 5)
{
	new string[128], giveplayerid, money;
	if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /setmoney [playerid] [dinero]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		ResetPlayerCash(giveplayerid);
		GivePlayerCash(giveplayerid, money);
		format(string, sizeof(string), "Estableciste el dinero de %s a $%d !",GetPlayerNameEx(giveplayerid),money);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s estableción el dinero de %s a $%d (/setmoney)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid),money);
		Log("logs/stats.log", string);

	}
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando!");
return 1;
}

CMD:darestilopelea(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 4)
{
	new string[128], giveplayerid, fightstyle;
	if(sscanf(params, "dd", giveplayerid, fightstyle))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darestilopelea [playerid] [fightstyle]");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Fighting styles: 4, 5, 6, 7, 15, 26.");
		return 1;
	}

	if(fightstyle > 3 && fightstyle < 8 || fightstyle == 15 || fightstyle == 26)
	{
		format(string, sizeof(string), " Tu estilo de pelea ha sido cambiado al ID %d.", fightstyle);
		SendClientMessageEx(giveplayerid,COLOR_YELLOW,string);
		format(string, sizeof(string), " Cambiaste el estilo de pelea de %s a %d.", GetPlayerNameEx(giveplayerid), fightstyle);
		SendClientMessageEx(playerid,COLOR_YELLOW,string);
		SetPlayerFightingStyle(giveplayerid, fightstyle);
		Info[playerid][pFStyle] = fightstyle;
		return 1;
	}
}
else NoAutorizado
return 1;
}

CMD:id(playerid, params[])
{
new string[128], giveplayerid;
if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /id [Nombre/ID]");
if(IsPlayerConnectedEx(giveplayerid))
{
	format(string, sizeof(string), "(ID: %d) - (Nombre: %s) - (Nivel: %d) - (Ping: %d)", giveplayerid, GetPlayerNameEx(giveplayerid),  Info[giveplayerid][pLevel], GetPlayerPing(giveplayerid));
	SendClientMessageEx(playerid, COLOR_WHITE, string);
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "ID No válida.");
return 1;
}

CMD:shoplaser(playerid, params[])
{
if (Info[playerid][pAdmin] != 6) return SendClientMessageEx(playerid, COLOR_GREY, " No puedes usar este comando.");
new string[128], giveplayerid, slot, color[32], invoice[64];
if(sscanf(params, "ddss[64]", giveplayerid, slot, color, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /shoplaser [playerid] [slot(0-9)] [red/green/orange/yellow/pink/blue] [factura #]");

if(strcmp(color,"red",true) == 0)
{
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18643;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
}
else if(strcmp(color,"green",true) == 0)
{
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19083;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
}
else if(strcmp(color,"orange",true) == 0)
{
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19082;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
}
else if(strcmp(color,"yellow",true) == 0)
{
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19084;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
}
else if(strcmp(color,"pink",true) == 0)
{
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19081;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
}
else if(strcmp(color,"blue",true) == 0)
{
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19080;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
}
format(string, sizeof(string), "Recibiste un laser de color %s en el slot %d, usa /toys para verlo.", color, slot);
SendClientMessageEx(giveplayerid, COLOR_LIGHTGREEN, string);
format(string, sizeof(string), "Le diste a %s laser de color %s en el slot %d", GetPlayerNameEx(giveplayerid), color, slot);
SendClientMessageEx(playerid, COLOR_LIGHTGREEN, string);
format(string, sizeof(string), "[SHOPLASER] %s dió %s un laser toy - Pagó fue de %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
Log("logs/shoplog.log", string);
return 1;
}


CMD:congelar(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 1)
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /congelar [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(Info[giveplayerid][pAdmin] > Info[playerid][pAdmin]) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes congelar a un administrador de mayor nivel.");
		TogglePlayerControllable(giveplayerid, 0);
		SetPVarInt(giveplayerid, "IsFrozen", 1);
		format(string, sizeof(string), "AdmCmdExe: %s fue congelado por %s",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
		return ABroadCast(COLOR_GENERAL,string,1);
	}
}
else NoAutorizado
return 1;
}

CMD:descongelar(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if (Info[playerid][pAdmin] >= 1)
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /descongelar [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		DeletePVar(giveplayerid, "IsFrozen");
		TogglePlayerControllable(giveplayerid, 1);
		format(string, sizeof(string), "AdmCmdExe: %s fue descongelado por %s.",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
		ABroadCast(COLOR_GENERAL,string,1);
	}
	else return SendClientMessageEx(playerid, COLOR_WHITE, "Jugador especificado ínvalido.");
}
else NoAutorizado
return 1;
}

CMD:a(playerid, params[])
{
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: (/a)dmin [Admin Chat]");
	switch(Info[playerid][pAdmin])
	{
	   	case 1: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Admin Junior %s: %s", GetPlayerNameEx(playerid), params);
	   	case 2: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Administrador %s: %s", GetPlayerNameEx(playerid), params);
		case 3: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Admin Lider %s: %s", GetPlayerNameEx(playerid), params);
		case 4: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Admin General %s: %s", GetPlayerNameEx(playerid), params);
		case 5: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Admin Director %s: %s", GetPlayerNameEx(playerid), params);
		case 6: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Executive Admin %s: %s", GetPlayerNameEx(playerid), params);
		case 7: format(szMessage, sizeof(szMessage), ""COL_YELLOW"* {58ACFA}Server Admin %s: %s", GetPlayerNameEx(playerid), params);
		default: return NoAutorizado
	}
	SendAdminMessage(-1, szMessage);
	return 1;
}

CMD:j(playerid, params[])
{
if((Info[playerid][pHelper] >= 1 || Info[playerid][pAdmin] >= 1 || Info[playerid][pVIP] == 3) && advisorchat[playerid])
{
	if(!isnull(params))
	{
		if(Info[playerid][pAdmin] == 1) format(szMessage, sizeof(szMessage), "** Administrador Junior %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pAdmin] == 2) format(szMessage, sizeof(szMessage), "** Administrador %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pAdmin] == 3) format(szMessage, sizeof(szMessage), "** Admin Lider %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pAdmin] == 4) format(szMessage, sizeof(szMessage), "** Admin General %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pAdmin] == 5) format(szMessage, sizeof(szMessage), "** Admin Director %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pAdmin] == 6) format(szMessage, sizeof(szMessage), "** Executive Admin %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pAdmin] == 7) format(szMessage, sizeof(szMessage), "** Server Admin %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pHelper] == 1) format(szMessage, sizeof(szMessage), "** Moderador %s: %s", GetPlayerNameEx(playerid), params);
		else if(Info[playerid][pHelper] == 2) format(szMessage, sizeof(szMessage), "** Lider Moderador %s: %s", GetPlayerNameEx(playerid), params);
		//else if(Info[playerid][pVIP] == 3) format(szMessage, sizeof(szMessage), "** VIP Moderador %s: %s", GetPlayerNameEx(playerid), params);
		else format(szMessage, sizeof(szMessage), "** Undefined Admin (%d) %s: %s", Info[playerid][pAdmin], GetPlayerNameEx(playerid), params);
		SendAdvisorMessage(COLOR_COMBINEDCHAT, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: (/j) [mod chat]");
}
return 1;
}

CMD:togmods(playerid, params[])
{
if(Info[playerid][pAdmin] >= 1)
{
	if (!advisorchat[playerid])
	{
		advisorchat[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ahora puede escuchar la conversación el chat de Moderadores. Usa: (/j)");
	}
	else
	{
		advisorchat[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Ahora dejaste de ver el chat de Moderadores!");
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando!");
return 1;
}

CMD:tod(playerid, params[])
{
if (Info[playerid][pAdmin] >= 5)
{
	new string[84], time;
	if(sscanf(params, "d", time)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /tod [time] (0-23)");
	SetWorldTime(time);
	gTime = time;
	format(string, 256, "AdmCdmExe: %s cambió la hora a %d", GetPlayerNameEx(playerid), gTime);
	ABroadCast(COLOR_GENERAL,string,5);
}
else NoAutorizado
return 1;
}

CMD:weather(playerid, params[])
{
if(Info[playerid][pAdmin] < 5) return NoAutorizado
new weather;
if(sscanf(params, "d", weather)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /weather [weatherid]");
if(weather < 0||weather > 45) { SendClientMessageEx(playerid, COLOR_GREY, "* Nota: ID de 0 a 45!"); return 1; }
SetPlayerWeather(playerid, weather);
return 1;
}

CMD:weatherall(playerid, params[])
{
if(Info[playerid][pAdmin] < 5) return NoAutorizado
new weather, string[84];
if(sscanf(params, "d", weather)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /weatherall [weatherid]");
if(weather < 0||weather > 45) { SendClientMessageEx(playerid, COLOR_GREY, "Nota: 0 a 45!"); return 1; }
SetWeather(weather);
gWeather = weather;
format(string, 256, "AdmCdmExe: %s cambió el clima al ID %d", GetPlayerNameEx(playerid), gWeather);
ABroadCast(COLOR_GENERAL,string,4);
return 1;
}

CMD:gotoco(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] >= 3)
{
	new Float: pos[3], int;
	if(sscanf(params, "fffd", pos[0], pos[1], pos[2], int)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /gotoco [coordenada x] [coordenada y] [coordenada z] [interior]");
	SendClientMessageEx(playerid, COLOR_GRAD2, "SERVER: Fuiste teletransportado a las coordenadas establecidas.");
	SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	SetPlayerInterior(playerid, int);
}
return 1;
}

CMD:bar(playerid, params[]){
if(IsACop(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
		return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
	}
	if(Info[playerid][pRank] < 3){
		return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
	}
	new string[128], Float:Position[4];
	for(new i; i<MAX_BARRICADES; i++){
		if(Barricade[i] == 0){
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			Barricade[i] = CreateDynamicObject(981, Position[0], Position[1], Position[2], 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
			SetPlayerPos(playerid, Position[0], Position[1], Position[2]+5);
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x){
				if(IsACop(x)){
					SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					if (Info[x][pRank] >= 3){
						SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
					}
				}
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:bar2(playerid, params[]){
if(IsACop(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
		return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
	}
	if(Info[playerid][pRank] < 3){
		return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
	}
	new string[128], Float:Position[4];
	for(new i; i<MAX_BARRICADES; i++){
		if(Barricade[i] == 0){
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			Barricade[i] = CreateDynamicObject(1459, Position[0], Position[1], Position[2], 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
			SetPlayerPos(playerid, Position[0], Position[1], Position[2]+5);
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x){
				if(IsACop(x)){
					SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					if (Info[x][pRank] >= 3){
						SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
					}
				}
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:bar3(playerid, params[]){
if(IsACop(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
		return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
	}
	if(Info[playerid][pRank] < 3){
		return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
	}
	new string[128], Float:Position[4];
	for(new i; i<MAX_BARRICADES; i++){
		if(Barricade[i] == 0){
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			Barricade[i] = CreateDynamicObject(978, Position[0], Position[1], Position[2]+0.6, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
			SetPlayerPos(playerid, Position[0], Position[1], Position[2]+5);
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x){
				if(IsACop(x)){
					SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					if (Info[x][pRank] >= 3){
						SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
					}
				}
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:bengala(playerid, params[]){
if(IsACop(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
		return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
	}
	if(Info[playerid][pRank] < 3){
		return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
	}
	new string[128], Float:Position[4];
	for(new i; i<MAX_BARRICADES; i++){
		if(Barricade[i] == 0){
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			Barricade[i] = CreateDynamicObject(18728, Position[0], Position[1], Position[2]-2.8, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Una bengala ha sido puesta por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x){
				if(IsACop(x)){
					SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					if (Info[x][pRank] >= 3){
						SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
					}
				}
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:cono(playerid, params[]){
if(IsACop(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
		SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
		return 1;
	}
	if(Info[playerid][pRank] < 3){
		SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
		return 1;
	}
	new string[128], Float:Position[4];
	for(new i; i<MAX_BARRICADES; i++){
		if(Barricade[i] == 0){
			GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
			GetPlayerFacingAngle(playerid, Position[3]);
			Barricade[i] = CreateDynamicObject(1238, Position[0], Position[1], Position[2]-0.7, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Un cono ha sido puesto por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x){
				if(IsACop(x)){
					SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					if (Info[x][pRank] >= 3){
						SendClientMessageEx(x, COLOR_YELLOW, "Puedes eliminar una barricada escribiendo /qb.");
					}
				}
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:qb(playerid, params[]){
if(IsACop(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
		return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
	}
	if(Info[playerid][pRank] < 3){
		return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
	}
	new string[128], Float:Position[3];
	for(new i; i<MAX_BARRICADES; i++){
		GetDynamicObjectPos(Barricade[i], Position[0], Position[1], Position[2]);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2])){
			DestroyDynamicObject(Barricade[i]);
			Barricade[i] = 0;
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Un bloqueo a sido destruido por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x){
				if(IsACop(x)){
					SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
				}
			}
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "No estás cerca de las barricadas.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:spikes(playerid, params[])
{
if(IsACop(playerid))
{
	if(Info[playerid][pRank] >= 3)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Spikes Actuales:");
		for(new i, string[58 + MAX_PLAYER_NAME]; i < sizeof(SpikeStrips); i++)
		{
			if(SpikeStrips[i][sX] != 0) // Checking for next available ID.
			{
				format(string, sizeof(string), "HQ: Spike ID: %d | Localización: %s | Puesto por: %s", i, SpikeStrips[i][sDeployedAt], SpikeStrips[i][sDeployedBy]);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, " Debes ser rango mayor a 3!");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:pspikes(playerid, params[])
{
if(IsACop(playerid))
{
	if(Info[playerid][pRank] >= 3)
	{
		for(new i; i < sizeof(SpikeStrips); i++)
		{
			if(SpikeStrips[i][sX] == 0)
			{
				new
					Float: f_TempAngle,
					string[128];

				GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
				GetPlayerFacingAngle(playerid, f_TempAngle);
				SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]-0.8, 0.0, 0.0, f_TempAngle);
				GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
				SpikeStrips[i][sDeployedBy] = GetPlayerNameEx(playerid);
				format(string,sizeof(string),"Spike ID: %d fue creado exitosamente.", i);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "HQ: Un spike fue puesto por %s en %s.", GetPlayerNameEx(playerid), SpikeStrips[i][sDeployedAt]);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (Info[x][pRank] >= 3)
						{
							SendClientMessageEx(x, COLOR_YELLOW, "Puedes remover el spike usando /qspikes.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_WHITE, "No es posible generar más spikes, límite es de 5." );
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, " Debes ser rango mayor a 3!");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:qspikes(playerid, params[])
{
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /qspike [spikeid]");

if(IsACop(playerid))
{
	if(Info[playerid][pRank] >= 3)
	{
		new id = strval(params);
		if(!(0 <= id <= sizeof(SpikeStrips)) || SpikeStrips[id][sX] == 0) {
			return SendClientMessageEx(playerid, COLOR_WHITE, "Spike ID Inválido.");
		}
		else
		{
			new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
			DestroyDynamicObject(SpikeStrips[id][sObjectID]);
			SpikeStrips[id][sX] = 0; SpikeStrips[id][sY] = 0; SpikeStrips[id][sZ] = 0;
			SpikeStrips[id][sObjectID] = INVALID_OBJECT_ID;
			format(string,sizeof(string),"Spike ID: %d borrado.", id);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			new zone[MAX_ZONE_NAME];
			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "HQ: Un spike a sido borrado por %s en %s.", GetPlayerNameEx(playerid), zone);
			foreach(Player, x)
			{
				if(IsACop(x)){ SendClientMessageEx(x, TEAM_BLUE_COLOR, string); }
			}
			return 1;
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, " Debes ser rango mayor a 3!");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
return 1;
}

CMD:leveluno(playerid, params[])
{
if(Info[playerid][pAdmin] >= 1)
{
	SendClientMessageEx(playerid,COLOR_WHITE,"Lista de todos los niveles 1...");
	new szNoobs[14 + MAX_PLAYER_NAME];
	foreach(Player, i) if(Info[i][pLevel] == 1)
	{
		format(szNoobs, sizeof(szNoobs), "* %s (ID %i)", GetPlayerNameEx(i), i);
		SendClientMessageEx(playerid, COLOR_WHITE, szNoobs);
	}
}
return 1;
}


CMD:dar(playerid, params[])
{
new string[128], giveplayerid, choice[32], amount;
if(sscanf(params, "ds[32]d", giveplayerid, choice, amount))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /dar [playerid] [nombre] [monto]");
	SendClientMessageEx(playerid, COLOR_GREY,  "* Crack, Materiales, Fichas, Chaleco, Hierba");
	return 1;
}

if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
		if(amount < 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes la cantidad que pusiste.");
		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "El jugador no está cerca tuyo.");
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando contigo mismo!");
		if (strcmp(choice, "materiales", true) == 0)
		{
			if(Info[playerid][pMats] >= amount)
			{
				format(string, sizeof(string), "Recibiste %d materiales de %s.", amount, GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
				Info[giveplayerid][pMats] += amount;
				Info[playerid][pMats] -= amount;
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d materials.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
				Log("logs/pay.log", string);
				if(Info[playerid][pAdmin] >= 2)
				{
					format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) %d materials.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/admingive.log", string);
				}
				format(string, sizeof(string), "Le diste a %s, %d materiales.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "* %s le da a %s algo de materiales.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "No tienes tanto!");
		}
		if (strcmp(choice, "hierba", true) == 0)
		{
			if(Info[playerid][pPot] >= amount)
			{
				if(amount + Info[giveplayerid][pPot] >= 51 )
				{
					SendClientMessageEx( playerid, COLOR_GREY, "Este jugador no puede tener más de 50 gramos de hierba!" );
					return 1;
				}
				new level = Info[playerid][pDrugsSkill];
				if(level >= 0 && level <= 50)
				{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 10 con tu nivel de skill!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 20 con tu nivel de skill!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 30 con tu nivel de skill!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 40 con tu nivel de skill!"); return 1; } }
				else if(level >= 401)
				{ if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 50 con tu nivel de skill!"); return 1; } }
				format(string, sizeof(string), "Recibiste %d de hierba de parte de %s.", amount, GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
				Info[giveplayerid][pPot] += amount;
				Info[playerid][pPot] -= amount;
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d pot.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
				Log("logs/pay.log", string);
				if(Info[playerid][pAdmin] >= 2)
				{
					format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) %d pot.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/admingive.log", string);
				}
				format(string, sizeof(string), "Le diste a %s, %d de hierba.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "* %s le dá a %s algo de hierba.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "No tienes tanto hierba!");
		}
		if (strcmp(choice, "fichas", true) == 0)
		{
			if(Info[playerid][pPaintTokens] >= amount)
			{
				format(string, sizeof(string), "Recibiste %d fichas de paintball de %s.", amount, GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
				Info[giveplayerid][pPaintTokens] += amount;
				Info[playerid][pPaintTokens] -= amount;
				format(string, sizeof(string), "Le diste a %s, %d fichas de paintbal.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "* %s le da a %s unas fichas de paintball.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "No tienes tantas fichas!");
		}
		if (strcmp(choice, "chaleco", true) == 0)
		{
            new Float:xC,Float:xD;
			GetPlayerArmour(playerid, xC);
	    	GetPlayerArmour(giveplayerid, xD);
			if(xC > 0)
			{
   				if(xC > xD)
		        {
       				format(string, sizeof(string), "* %s le da su chaleco antibalas a %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	        		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        	SetPlayerArmour(playerid, 0);
		        	SetPlayerArmour(giveplayerid, xC);
		        }
		        else return SendClientMessageEx(playerid, COLOR_GRAD2, "¡El jugador tiene una cantidad de chaleco antibalas superior al tuyo!");
		    }
		    else return SendClientMessageEx(playerid, COLOR_GRAD2, "No tienes un chaleco antibalas para dar.");
		}
		if (strcmp(choice, "crack", true) == 0)
		{
			if(Info[playerid][pCrack] >= amount)
			{
				if(amount + Info[giveplayerid][pCrack] >= 26 )
				{
					SendClientMessageEx( playerid, COLOR_GREY, "Este jugador no puede llevar más de 25 de crack!" );
					return 1;
				}
				new level = Info[playerid][pDrugsSkill];
				if(level >= 0 && level <= 50)
				{ if(amount < 1 || amount > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes dar más de 5 con tu nivel de skill!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "  No puedes dar más de 10 con tu nivel de skill!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ if(amount < 1 || amount > 15) { SendClientMessageEx(playerid, COLOR_GREY, "  No puedes dar más de 15 con tu nivel de skill!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "  No puedes dar más de 20 con tu nivel de skill!"); return 1; } }
				else if(level >= 401)
				{ if(amount < 1 || amount > 25) { SendClientMessageEx(playerid, COLOR_GREY, "  Sólo se puede dar 25 máximo!"); return 1; } }
				format(string, sizeof(string), "Recibiste %d gramos de crack de %s.", amount, GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);
				Info[giveplayerid][pCrack] += amount;
				Info[playerid][pCrack] -= amount;
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d crack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
				Log("logs/pay.log", string);
				if(Info[playerid][pAdmin] >= 2)
				{
					format(string, sizeof(string), "[Admin] %s(IP:%s) has given %s(IP:%s) %d crack.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/admingive.log", string);
				}
				format(string, sizeof(string), "Le diste a %s, %d gramos de Crack.", GetPlayerNameEx(giveplayerid), amount);
				SendClientMessageEx(playerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "* %s le da a %s algo de crack.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "No tienes tanto!");
			return 1;
		}
	}
}
return 1;
}

CMD:recargar(playerid, params[])
{
if(Team_Mecanicos(playerid))
{
	new string[128];
	if(Info[playerid][pTriageTime] >= 1)
	{
		format(string, sizeof(string), "Debes esperar %d segundos!", Info[playerid][pTriageTime]);
		return SendClientMessageEx(playerid, COLOR_GRAD1,string);
	}
	new giveplayerid, money;
	if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /recargar [playerid] [precio]");
	if(!(money >= 1 && money < 100000))
	{
		return SendClientMessageEx(playerid, COLOR_GREY, "* Precio determinado inválido - no puede ser inferior a 1 o superior a $ 99.999.");
	}
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid) && IsPlayerInAnyVehicle(giveplayerid))
		{
			if(giveplayerid != playerid)
			{
				format(string, sizeof(string), "* Ofreciste %s llenar el tanque de tu coche por $%d.",GetPlayerNameEx(giveplayerid),money);
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* %s te ha ofrecido llenar tu coche por $%d, usa /aceptar recarga para aceptar.",GetPlayerNameEx(playerid),money);
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				Info[playerid][pTriageTime] = 60;
				RefillOffer[giveplayerid] = playerid;
				RefillPrice[giveplayerid] = money;
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando contigo mismo!"); return 1;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está cerca de ti, o no está en un coche.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Jugador especificado no está conectado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No eres mecánico.");
return 1;
}

CMD:fix(playerid, params[])
{
	if(Team_Mecanicos(playerid))
	{
		new string[32 + MAX_PLAYER_NAME];
	    if(IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando en un vehículo.");
		    return 1;
		}
		if( Info[playerid][pTriageTime] > 0 )
		{
			format(string, sizeof(string), "Debes esperar %d segundos!", Info[playerid][pTriageTime]);
	 		SendClientMessageEx(playerid, COLOR_GRAD1,string);
	 	}
		else if(GetPVarInt(playerid, "EventToken"))
		{
			SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando en un evento.");
		}
		else
		{
			new closestcar = GetClosestCar(playerid);
			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 10.0))
			{
				if(!IsABike(closestcar) && !IsAPlane(closestcar))
				{
					new engine,lights,alarm,doors,bonnet,boot,objective;
					GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
					if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
					{
						SendClientMessageEx(playerid, COLOR_GRAD1, "Este vehículo necesita tener el capó abierto para repararlo.");
						return 1;
					}
				}
				Info[playerid][pTriageTime] = 60;
				SetVehicleHealth(closestcar, 1000.0);
				format(string, sizeof(string), "* %s ha reparado el vehículo.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD1, "No estás cerca de un vehículo.");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_WHITE, "No eres un mecánico!" );
	return 1;
}

CMD:goto(playerid, params[])
{
if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 6)
{
	if(isnull(params))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /goto [location]");
		SendClientMessageEx(playerid, COLOR_GRAD1, "Locations 1: LS,SF,LV");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Locations 2: stadium1,stadium2,stadium3,stadium4,int1,mall");
		SendClientMessageEx(playerid, COLOR_GRAD3, "Locations 3: bank,allsaints,countygen,gym,fbi,prison,rc,vip,mark");
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes hacer esto mientras estan espectando.");
		return 1;
	}
	if(strcmp(params,"ls",true) == 0)
	{
		if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"sf",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, -1417.0,-295.8,14.1);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"lv",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"bank",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1487.91, -1030.60, 23.66);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1487.91, -1030.60, 23.66);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"allsaints",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1192.78, -1292.68, 13.38);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1192.78, -1292.68, 13.38);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"countygen",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 2000.05, -1409.36, 16.99);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 2000.05, -1409.36, 16.99);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"gym",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 2227.60, -1674.89, 14.62);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 2227.60, -1674.89, 14.62);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"fbi",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 344.77,-1526.08,33.28);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 344.77,-1526.08,33.28);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"rc",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1253.70, 343.73, 19.41);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1253.70, 343.73, 19.41);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
 	else if(strcmp(params,"vip",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1814.42, -1575.05, 13.54);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1814.42, -1575.05, 13.54);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"prison",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 112.67, 1917.55, 18.72);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 112.67, 1917.55, 18.72);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"stadium1",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, -1424.93, -664.59, 1059.86);
			LinkVehicleToInterior(tmpcar, 4);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, -1424.93, -664.59, 1059.86);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,4);
		Info[playerid][pInt] = 4;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"stadium2",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, -1395.96, -208.20, 1051.28);
			LinkVehicleToInterior(tmpcar, 7);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, -1395.96, -208.20, 1051.28);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,7);
		Info[playerid][pInt] = 7;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"stadium3",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, -1410.72, 1591.16, 1052.53);
			LinkVehicleToInterior(tmpcar, 14);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, -1410.72, 1591.16, 1052.53);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,14);
		Info[playerid][pInt] = 14;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"stadium4",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, -1394.20, 987.62, 1023.96);
			LinkVehicleToInterior(tmpcar, 15);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, -1394.20, 987.62, 1023.96);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,15);
		Info[playerid][pInt] = 15;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"int1",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
			LinkVehicleToInterior(tmpcar, 1);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,1);
		Info[playerid][pInt] = 1;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
	else if(strcmp(params,"mark",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			LinkVehicleToInterior(tmpcar, TeleportDestInt[playerid]);
		}
		else
		{
			SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		SetPlayerInterior(playerid,TeleportDestInt[playerid]);
		Info[playerid][pInt] = TeleportDestInt[playerid];
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
	}
	else if(strcmp(params,"mark2",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
			LinkVehicleToInterior(tmpcar, TeleportDestInt2[playerid]);
		}
		else
		{
			SetPlayerPos(playerid, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
		}
		SetPlayerInterior(playerid,TeleportDestInt2[playerid]);
		Info[playerid][pInt] = TeleportDestInt2[playerid];
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
	}
	else if(strcmp(params,"mall",true) == 0)
	{
	 	if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1133.71,-1464.52,15.77);
			LinkVehicleToInterior(tmpcar, 0);
			SetVehicleVirtualWorld(tmpcar, 0);
			TelePos[playerid][0] = 0.0;TelePos[playerid][0] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, 1133.71,-1464.52,15.77);
		}
		SendClientMessageEx(playerid, COLOR_GRAD1, "   You have been teleported!");
		SetPlayerInterior(playerid,0);
		Info[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		Info[playerid][pVW] = 0;
	}
}
else
{
	SendClientMessageEx(playerid, COLOR_GRAD1, "You are not authorized to use that command!");
}
return 1;
}
/*
CMD:adminevento(playerid, params[])
{
if (InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 6)
{
    SendClientMessageEx(playerid, COLOR_GENERAL,"_______________________________________");
	SendClientMessageEx(playerid, COLOR_GRAD4,"*** EVENTO *** Escribe uno de estos comandos para más información");
	SendClientMessageEx(playerid, COLOR_WHITE,"*** EVENTO *** /eventopos /infoevento /empezarevento /lockevento /finevento /anunciar /goevento /salirevento");
	SendClientMessageEx(playerid, COLOR_GENERAL,"_______________________________________");
}
return 1;
}

CMD:eventostaff(playerid, params[]){
if( Info[ playerid ][ pAdmin ] >= 1 || Info[playerid][pHelper] >= 2 ){
    if(InfoEvento[EventJoinStaff] == 1){
        new bool:breakingloop = false, newid = 999;
        for(new i=0;i<5;i++){
            if(!breakingloop){
                if(InfoEvento[EventStaff][i] == 999){
                    breakingloop = true;
                    newid = i;
                }
            }
        }
        if(newid != 999){
            SetPVarInt( playerid, "EventToken", 1 );
            GetPlayerHealth(playerid, EventFloats[playerid][4]);
            GetPlayerArmour(playerid, EventFloats[playerid][5]);
            EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
            EventLastInt[playerid] = GetPlayerInterior(playerid);
            GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
            GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
            SetPlayerPos( playerid, InfoEvento[ EventPositionX ], InfoEvento[ EventPositionY ], InfoEvento[ EventPositionZ ] );
            SetPlayerInterior( playerid, InfoEvento[ EventInterior ] );
            SetHP( playerid, 999999 );
            SetPlayerVirtualWorld( playerid, InfoEvento[ EventWorld ] );
            GivePlayerValidWeapon(playerid, 38);
            InfoEvento[EventStaff][newid] = playerid;
            SendClientMessageEx( playerid, COLOR_WHITE, "Te has unido al staff del evento." );
        }
        else SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes unirte, el max es 5.");
    }
}
return 1;
}

CMD:salirevento(playerid, params[])
{
if( GetPVarInt( playerid, "EventToken" ) == 1 ) {
    if( InfoEvento[ EventStatus ] == 1 || InfoEvento[ EventStatus ] == 2 ) {
        SendClientMessageEx( playerid, COLOR_WHITE, "No se puede dejar el evento en esta etapa del acontecimiento." );
        return 1;
    }
    ResetPlayerWeapons( playerid );
    SetPVarInt(playerid, "EventToken", 0);
    SetPlayerWeapons(playerid);
    SetPlayerToTeamColor(playerid);
    SetPlayerSkin(playerid, Info[playerid][pChar]);
    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
    SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
    SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
    SetPlayerInterior(playerid,EventLastInt[playerid]);
    SetHP(playerid, EventFloats[playerid][4]);
    SetPlayerArmour(playerid, EventFloats[playerid][5]);
    for(new i = 0; i < 6; i++) {
        EventFloats[playerid][i] = 0.0;
    }
    EventLastVW[playerid] = 0;
    EventLastInt[playerid] = 0;
    SendClientMessageEx( playerid, COLOR_GENERAL, "* Saliste del evento." );
}
return 1;
}

CMD:eventopos(playerid, params[]){
if(Info[playerid][pAdmin] >= 6){
	if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 4){
		new string[128];
		GetPlayerPos(playerid, InfoEvento[EventPositionX], InfoEvento[EventPositionY], InfoEvento[EventPositionZ]);
		InfoEvento[EventInterior] = GetPlayerInterior(playerid);
		InfoEvento[EventWorld] = GetPlayerVirtualWorld(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ha ajustado la posición del evento, escriba /infoevento para cambiar las propiedades del evento.");
		InfoEvento[EventJoinStaff] = 1;
		format(string, sizeof( string ), "AdmWarning: %s ha empezado el evento, usá /eventostaff si quieres ser del staff del evento.", GetPlayerNameEx(playerid) );
		ABroadCast(COLOR_YELLOW, string, 2);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "No estás haciendo un evento o no eres el nivel administrativo correcto.");
}
return 1;
}

CMD:tipoevento(playerid, params[]){
if(Info[playerid][pAdmin] >= 6){
	if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 4){
		if(isnull(params)){
			SendClientMessageEx(playerid, COLOR_WHITE, "USA: /tipoevento [tipo]");
			SendClientMessageEx(playerid, COLOR_GREY,  "Nombres: DM, TDM, Race");
			return 1;
		}
		if(strcmp(params,"dm",true) == 0){
			InfoEvento[ EventType ] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a DM.");
		}
		else if(strcmp(params,"tdm",true) == 0){
			InfoEvento[ EventType ] = 2;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a TDM.");
		}
		else if(strcmp(params,"race",true) == 0){
			InfoEvento[ EventType ] = 3;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a Race.");
		}
		else if(strcmp(params,"ninguno",true) == 0){
			InfoEvento[ EventType ] = 3;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el tipo de evento a Ninguno.");
		}
	}
}
return 1;
}

CMD:editarevento(playerid, params[]){
if(Info[playerid][pAdmin] >= 6){
	if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 4){
		new choice[32], opstring[64];
		if(sscanf(params, "s[32]S[64]", choice, opstring)){
			if(InfoEvento[EventType] == 1){
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento [nombre]");
				SendClientMessageEx(playerid, COLOR_GREY, "Available names: text, limite, vida, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
				return 1;
			}
			else if(InfoEvento[EventType] == 2){
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento [nombre]");
				SendClientMessageEx(playerid, COLOR_GREY, "Available names: text, limite, Team1Skin, Team2Skin, Team1Color, Team2Color");
				SendClientMessageEx(playerid, COLOR_GREY, "Team1Spawn, Team2Spawn, vida, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
				return 1;
			}
			else if(InfoEvento[EventType] == 3){
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento [name]");
				SendClientMessageEx(playerid, COLOR_GREY, "Available names: text, limite, vida");
 				return 1;
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Es necesario primero establecer el tipo de evento!");
		}
		if(strcmp(choice, "text",true) == 0)
		{
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento jointext [text]");
			strmid(InfoEvento[EventoInfo], opstring, 0, strlen(opstring), 64);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el TEXTO de información del evento.");
		}
		else if(strcmp(choice, "vida", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1 && InfoEvento[EventType] != 3) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento health [health]");
			new Float: health;
			health = floatstr(opstring);
			InfoEvento[EventHealth] = health;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el spawn health del evento.");
		}
		else if(strcmp(choice, "armor", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento armor [armor]");
			new Float: armor;
			armor = floatstr(opstring);
			InfoEvento[EventArmor] = armor;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste la armadura del evento.");
		}
		else if(strcmp(choice, "team1skin", true) == 0)
		{
			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Esta opción no puedes usarla para este evento.");
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento team1skin [skinid]");
			new skin;
			skin = strval(opstring);
			InfoEvento[EventTeamSkin][0] = skin;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el skin del equipo 1.");
		}
		else if(strcmp(choice, "team2skin", true) == 0)
		{
			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento team2skin [skinid]");
			new skin;
			skin = strval(opstring);
			InfoEvento[EventTeamSkin][1] = skin;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el skin del equipo 2.");
		}
		else if(strcmp(choice, "team1color", true) == 0)
		{
			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			if(!strlen(opstring))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento team1color [color]");
				SendClientMessageEx(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
				SendClientMessageEx(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
				return 1;
			}
			InfoEvento[EventTeamColor][0] = GetColorCode(opstring);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el color del equipo 1.");
		}
		else if(strcmp(choice, "team2color", true) == 0)
		{
			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			if(!strlen(opstring))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento team2color [color]");
				SendClientMessageEx(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
				SendClientMessageEx(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
				return 1;
			}
			InfoEvento[EventTeamColor][1] = GetColorCode(opstring);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el color del equipo 2.");
		}
		else if(strcmp(choice, "team1spawn", true) == 0)
		{
			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			GetPlayerPos(playerid, InfoEvento[ EventTeamPosX1 ], InfoEvento[ EventTeamPosY1 ], InfoEvento[ EventTeamPosZ1 ] );
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el spawn del equipo 1.");
		}
		else if(strcmp(choice, "team2spawn", true) == 0)
		{
			if(InfoEvento[EventType] != 2) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			GetPlayerPos(playerid, InfoEvento[ EventTeamPosX2 ], InfoEvento[ EventTeamPosY2 ], InfoEvento[ EventTeamPosZ2 ]);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el spawn del equipo 2.");
		}
		else if(strcmp(choice, "limite", true) == 0)
		{
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento limite [limite 0-60]");
			new limit;
			limit = strval(opstring);
			if(limit < 0 || limit > 90) return SendClientMessageEx(playerid, COLOR_RED, "No se puede ajustar el límite de eventos superiores a 60 o por debajo de 0.");
			InfoEvento[EventLimit] = limit;
			SendClientMessageEx(playerid, COLOR_WHITE, "Usted ha ajustado el límite de los jugadores en el evento.");
		}
		else if(strcmp(choice, "gun1", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Este nombre no está disponible para este tipo de evento.");
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento gun1 [weaponid]");
			new weapon;
			weapon = strval(opstring);
			if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
			InfoEvento[EventWeapons][0] = weapon;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el arma del evento [1]");
		}
		else if(strcmp(choice, "gun2", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");
			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento gun1 [weaponid]");
			new weapon;
			weapon = strval(opstring);
			if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
			InfoEvento[EventWeapons][1] = weapon;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el arma del evento [2]");
		}
		else if(strcmp(choice, "gun3", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");

			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento gun1 [weaponid]");

			new weapon;
			weapon = strval(opstring);
			if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
			InfoEvento[EventWeapons][2] = weapon;
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el arma del evento [3]");
		}
		else if(strcmp(choice, "gun4", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no puedes usarla para este evento.");

			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento gun1 [weaponid]");

			new weapon;
			weapon = strval(opstring);
			if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer esta arma para este evento.");
			InfoEvento[EventWeapons][3] = weapon;
			SendClientMessageEx(playerid, COLOR_WHITE, "Modificaste el arma 4 del evento.");
		}
		else if(strcmp(choice, "gun5", true) == 0)
		{
			if(InfoEvento[EventType] != 2 && InfoEvento[EventType] != 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta opción no es posible para este evento.");

			if(!opstring[0]) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento gun1 [weaponid]");

			new weapon;
			weapon = strval(opstring);
			if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes establecer está arma para este evento.");
			InfoEvento[EventWeapons][4] = weapon;
			SendClientMessageEx(playerid, COLOR_WHITE, "Modificaste el gun 5 del evento.");
		}
	}
}
return 1;
}

CMD:esolovip(playerid, params[])
{
if(Info[playerid][pAdmin] >= 6)
{
	if(InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 4)
	{
		if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /esolovip [0/1]");

		if(Info[playerid][pVIP] == 3 && Info[playerid][pAdmin] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "Error: Usted no está autorizado a modificar esta opción!");

		if(strcmp(params,"0",true) == 0){
			InfoEvento[ VipOnly ] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Has ajustado el tipo de evento no sólo para VIP´s.");
		}
		else if(strcmp(params,"1",true) == 0){
			InfoEvento[ VipOnly ] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Has ajustado el tipo de evento sólo para VIP´s.");
		}

	}
}
return 1;
}

CMD:infoevento(playerid, params[])
{
if( Info[ playerid ][ pAdmin ] >= 6)
{
	if( InfoEvento[EventCreator] == playerid || Info[playerid][pAdmin] >= 4 )
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /editarevento /tipoevento /esolovip (una vez listo, usa /empezarevento y después /lockevento)");
		return 1;
	}
}
return 1;
}

CMD:finevento(playerid, params[])
{
if(Info[playerid][pAdmin] >= 6 || InfoEvento[EventCreator] == playerid)
{
	if(InfoEvento[EventStatus] != 0)
	{
		foreach(Player, i)
		{
			if( GetPVarInt( i, "EventToken" ) == 1 )
			{
				ResetPlayerWeapons( i );
				SetPlayerWeapons(i);
				SetPlayerToTeamColor(i);
				SetPlayerSkin(i, Info[i][pChar]);
				SetPlayerPos(i,EventFloats[i][1],EventFloats[i][2],EventFloats[i][3]);
				SetPlayerVirtualWorld(i, EventLastVW[i]);
				SetPlayerFacingAngle(i, EventFloats[i][0]);
				SetPlayerInterior(i,EventLastInt[i]);
				SetHP(i, EventFloats[i][4]);
				SetPlayerArmour(i, EventFloats[i][5]);
				for(new d = 0; d < 6; d++)
				{
					EventFloats[i][d] = 0.0;
				}
				EventLastVW[i] = 0;
				EventLastInt[i] = 0;
				SetPVarInt(i, "EventToken", 0);
				SendClientMessageEx( i, COLOR_YELLOW, "Has sido expulsado del evento ya que un administrador lo termino." );
			}
		}
		InfoEvento[ EventPositionX ] = 0;
		InfoEvento[ EventPositionY ] = 0;
		InfoEvento[ EventPositionZ ] = 0;
		InfoEvento[ EventTeamPosX1 ] = 0;
		InfoEvento[ EventTeamPosY1 ] = 0;
		InfoEvento[ EventTeamPosZ1 ] = 0;
		InfoEvento[ EventTeamPosX2 ] = 0;
		InfoEvento[ EventTeamPosY2 ] = 0;
		InfoEvento[ EventTeamPosZ2 ] = 0;
		InfoEvento[ EventStatus ] = 0;
		InfoEvento[ EventType ] = 0;
		InfoEvento[ EventHealth ] = 0;
		InfoEvento[ EventLimit ] = 0;
		InfoEvento[ EventPlayers ] = 0;
		InfoEvento[ EventWeapons ][0] = 0;
		InfoEvento[ EventWeapons ][1] = 0;
		InfoEvento[ EventWeapons ][2] = 0;
		InfoEvento[ EventWeapons ][3] = 0;
		InfoEvento[ EventWeapons ][4] = 0;
		InfoEvento[EventCreator] = 999;
		InfoEvento[VipOnly] = 0;
		InfoEvento[EventJoinStaff] = 0;
		BroadCast(COLOR_GENERAL, "* El evento ha sido terminado por un administrador." );
	}
	else SendClientMessageEx( playerid, COLOR_GREY, "* En este momento no hay un evento activo." );
}
return 1;
}

CMD:empezarevento(playerid, params[])
{
if( Info[ playerid ][ pAdmin ] >= 6)
{
	new string[128];

	if( InfoEvento[ EventStatus ] == 0)
	{
		if(Info[playerid][pAdmin] >= 4)
		{
			if(InfoEvento[ EventHealth ] == 0)
			{
				SendClientMessageEx( playerid, COLOR_GRAD2, "No se ha definido la salud del evento!" );
				return 1;
			}
			if(InfoEvento[ EventPositionX ] == 0 || InfoEvento[ EventPositionY ] == 0 || InfoEvento[ EventPositionZ ] == 0)
			{
				SendClientMessageEx( playerid, COLOR_GRAD2, "No se ha definido la posición de evento!" );
				return 1;
			}
			if( (InfoEvento[ EventTeamPosX1 ] == 0 || InfoEvento[ EventTeamPosY1 ] == 0 || InfoEvento[ EventTeamPosZ1 ] == 0) && InfoEvento[ EventType ] == 2)
			{
				SendClientMessageEx( playerid, COLOR_GRAD2, "No ha establecido la posición del equipo 1." );
				return 1;
			}
			if( (InfoEvento[ EventTeamPosX2 ] == 0 || InfoEvento[ EventTeamPosY2 ] == 0 || InfoEvento[ EventTeamPosZ2 ] == 0) && InfoEvento[ EventType ] == 2)
			{
				SendClientMessageEx( playerid, COLOR_GRAD2, "No ha establecido la posición del equipo 2." );
				return 1;
			}
			if(InfoEvento[ EventLimit ] == 0)
			{
				InfoEvento[ EventLimit ] = 90;
			}
			InfoEvento[ EventStatus ] = 1;
			SendClientMessageEx( playerid, COLOR_GRAD2, "Ha iniciado un evento, utilice /anunciar para anunciar el evento a todo el servidor." );
			foreach(Player, i)
			{
				if(Info[i][pVIP] >= 3)
				{
					SendClientMessageEx(i, COLOR_YELLOW, "*VIP: Un evento a comenzado! /unirseevento para unirte!");
				}
			}

			return 1;
		}
		else if( InfoEvento[EventCreator] == playerid)
		{
			if(InfoEvento[ EventHealth ] == 0)
			{
				SendClientMessageEx( playerid, COLOR_GRAD2, "No se ha definido la salud evento!" );
				return 1;
			}
			if(InfoEvento[ EventPositionX ] == 0 || InfoEvento[ EventPositionY ] == 0 || InfoEvento[ EventPositionZ ] == 0)
			{
				SendClientMessageEx( playerid, COLOR_GRAD2, "No se ha definido la posición de evento!" );
				return 1;
			}
			if(InfoEvento[ EventLimit ] == 0)
			{
				InfoEvento[ EventLimit ] = 90;
			}
			InfoEvento[ EventStartRequest ] = 1;
			SendClientMessageEx( playerid, COLOR_GRAD2, "Ha solicitado para comenzar un evento, por favor espere hasta que un administrado lo apruebe." );
			format( string, sizeof( string ), "Event Position: x:%f y:%f z:%f.", InfoEvento[EventPositionX], InfoEvento[EventPositionY], InfoEvento[EventPositionZ] );
			ABroadCast( COLOR_GRAD2, string, 4 );
			format( string, sizeof( string ), "Event Info: %s EventLimite: %d.", InfoEvento[EventoInfo], InfoEvento[EventLimit] );
			ABroadCast( COLOR_GRAD2, string, 4 );
			format( string, sizeof( string ), "Event Health: %f Event Armor: %f.", InfoEvento[EventHealth], InfoEvento[EventArmor] );
			ABroadCast( COLOR_GRAD2, string, 4 );
			if(InfoEvento[EventWeapons][0] != 0)
			{
				format( string, sizeof( string ), "Event Gun1: %d.", InfoEvento[EventWeapons][0] );
				ABroadCast( COLOR_GRAD2, string, 4 );
			}
			if(InfoEvento[EventWeapons][1] != 0)
			{
				format( string, sizeof( string ), "Event Gun2: %d.", InfoEvento[EventWeapons][1] );
				ABroadCast( COLOR_GRAD2, string, 4 );
			}
			if(InfoEvento[EventWeapons][2] != 0)
			{
				format( string, sizeof( string ), "Event Gun3: %d.", InfoEvento[EventWeapons][2] );
				ABroadCast( COLOR_GRAD2, string, 4 );
			}
			if(InfoEvento[EventWeapons][3] != 0)
			{
				format( string, sizeof( string ), "Event Gun4: %d.", InfoEvento[EventWeapons][3] );
				ABroadCast( COLOR_GRAD2, string, 4 );
			}
			if(InfoEvento[EventWeapons][4] != 0)
			{
				format( string, sizeof( string ), "Event Gun5: %d.", InfoEvento[EventWeapons][4] );
				ABroadCast( COLOR_GRAD2, string, 4 );
			}
			if(InfoEvento[EventType] == 2)
			{
				format( string, sizeof( string ), "Event Team 1 Color: %d Event Team 1 Skin: %d.", InfoEvento[EventTeamColor][0], InfoEvento[EventTeamSkin][0] );
				ABroadCast( COLOR_GRAD2, string, 4 );
				format( string, sizeof( string ), "Event Team 2 Color: %d Event Team 2 Skin: %d.", InfoEvento[EventTeamColor][1], InfoEvento[EventTeamSkin][1] );
				ABroadCast( COLOR_GRAD2, string, 4 );
			}
			else if(InfoEvento[EventType] == 3)
			{
			}
			format( string, sizeof( string ), "AdmWarning: %s quiere comenzar el evento, ¿lo apruebas? /approveevent o /denyevent.", GetPlayerNameEx(playerid) );
			ABroadCast( COLOR_GENERAL, string, 4 );
		}
	}
	else SendClientMessageEx( playerid, COLOR_WHITE, "Ya hay un evento activo (usa /finevento)." );
}
return 1;
}

CMD:goevento(playerid, params[])
{
if( Info[ playerid ][ pAdmin ] >= 6 || InfoEvento[EventCreator] == playerid)
{
	if( InfoEvento[ EventStatus ] == 3 )
	{
		InfoEvento[ EventStatus ] = 4;
		foreach(Player, i)
		{
			if( GetPVarInt( i, "EventToken" ) == 1 )
			{
				if( InfoEvento[ EventType ] == 1 )
				{
					//GivePlayerEventWeapons( i );
					SendClientMessageEx( i, COLOR_GENERAL, "* !Vamos! "COL_WHITE"El evento ha empezado." );
					SetHP( i, InfoEvento[ EventHealth ] );
					SetPlayerArmour( i, InfoEvento[ EventArmor ] );
					for(new d = 0; d < 4; d++)
					{
						if(i == InfoEvento[EventStaff][d])
						{
							SetHP(i, 999999);
						}
					}
					GivePlayerEventWeapons( i );
				}
				else if( InfoEvento[ EventType ] == 2 )
				{
					//GivePlayerEventWeapons( i );
					SendClientMessageEx( i, COLOR_GENERAL, "* !Vamos! "COL_WHITE"El evento ha empezado." );
					SetHP( i, InfoEvento[ EventHealth ] );
					SetPlayerArmour( i, InfoEvento[ EventArmor ] );
					for(new d = 0; d < 5; d++)
					{
						if(i == InfoEvento[EventStaff][d])
						{
							SetHP(i, 999999);
						}
					}
					GivePlayerEventWeapons( i );
				}
			}
			else SendClientMessageEx( i, COLOR_GREY, "* El evento ha comenzado. Si la próxima vez deseas unirte usa /unirseevento." );
		}

	}
	else SendClientMessageEx( playerid, COLOR_GREY, "Ya hay un evento activo (usar /finevento)." );
}
return 1;
}

CMD:anunciar(playerid, params[])
{
if(Info[playerid][pAdmin] >= 6 || InfoEvento[EventCreator] == playerid)
{
	if( InfoEvento[ EventStatus ] == 1)
	{
		InfoEvento[ EventStatus ] = 2;
		SendClientMessageEx(playerid, COLOR_GRAD2, "Para bloquear el evento usa /lockevento");
		if(InfoEvento[VipOnly] == 1) BroadCast( COLOR_LIGHTBLUE, "* Un evento VIP ha sido iniciado por un administrador, usuarios VIP usar /unirseevento para participar." );
		else BroadCast( COLOR_GENERAL, "* Un evento ha sido iniciado por un administrador, usa "COL_WHITE"/unirseevento "COL_GENERAL"para participar.");
	}
	else SendClientMessageEx( playerid, COLOR_GREY, "* Ya hay un evento activo (usa /finevento)." );
}
return 1;
}

CMD:lockevento(playerid, params[])
{
if(Info[playerid][pAdmin] >= 6 || InfoEvento[EventCreator] == playerid)
{
	if( InfoEvento[ EventStatus ] == 2 )
	{
		InfoEvento[ EventStatus ] = 3;
		SendClientMessageEx( playerid, COLOR_GRAD2, "Has bloqueado el evento, utiliza /goevento para iniciar oficialmente el evento." );
		BroadCast( COLOR_GENERAL, "* El evento ha sido bloqueado por un administrador." );
	}
	else SendClientMessageEx( playerid, COLOR_GREY, "* Ya hay un evento activo (usa /finevento)." );
}
return 1;
}

CMD:unirseevento(playerid, params[])
{
if( InfoEvento[ EventStatus ] == 0 )
{
	SendClientMessageEx( playerid, COLOR_GREY, "* En este momento no hay un evento activo." );
}
else if( GetPVarInt( playerid, "EventToken" ) == 1 )
{
	SendClientMessageEx( playerid, COLOR_GREY, "* Ya estás en el evento." );
}
else if(GetPVarInt(playerid, "IsInArena") == 1)
{
	SendClientMessageEx(playerid, COLOR_GREY, "* No puedes unirte estando en el paintball!");
}
else if( Info[playerid][pEstado] >= 1 || Info[ playerid ][ pJailTime ] > 0 || GetPVarInt(playerid, "injured") == 1 )
{
	SendClientMessageEx( playerid, COLOR_GREY, "* No puedes hacer esto ahora mismo." );
}
else if(InfoEvento[VipOnly] == 1 && Info[playerid][pVIP] < 1)
{
	SendClientMessageEx(playerid, COLOR_GREY, "* Este evento está restringido sólo para VIP´s.");
}
else if(InfoEvento[EventPlayers] >= InfoEvento[EventLimit]) {
	SendClientMessageEx(playerid, COLOR_GREY, "* Este evento ha alcanzado el límite máximo de jugadores.");
}
else if( InfoEvento[ EventStatus ] == 2 || (InfoEvento[ EventStatus ] == 1 && Info[playerid][pVIP] >= 3))
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No se puedes unirte estando en un vehículo.");
	SetPVarInt( playerid, "EventToken", 1 );
	ResetPlayerWeapons( playerid );
	pTazer[playerid] = 0;
	GetPlayerHealth(playerid, EventFloats[playerid][4]);
	GetPlayerArmour(playerid, EventFloats[playerid][5]);
	EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
	EventLastInt[playerid] = GetPlayerInterior(playerid);
	GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
	GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
	if(InfoEvento[EventType] != 2)
	{
		SetPlayerPos( playerid, InfoEvento[ EventPositionX ], InfoEvento[ EventPositionY ], InfoEvento[ EventPositionZ ] );
	}
	SetPlayerInterior( playerid, InfoEvento[ EventInterior ] );
	SetPlayerVirtualWorld( playerid, InfoEvento[ EventWorld ] );
	SendClientMessageEx( playerid, COLOR_WHITE, InfoEvento[ EventoInfo ] );
	SetHP( playerid, InfoEvento[ EventHealth ] );
	SetPlayerArmour( playerid, InfoEvento[ EventArmor ] );
	SetPlayerVirtualWorld( playerid, 0 );

	if(InfoEvento[EventType] == 2)
	{
		SetPlayerSkin(playerid, InfoEvento[EventTeamSkin][nextteam]);
		new color = InfoEvento[EventTeamColor][nextteam];
		if (color==0) SetPlayerColor(playerid, 0x00000000);
		if (color==1) SetPlayerColor(playerid, 0xFFFFFF00);
		if (color==2) SetPlayerColor(playerid, 0x2641FE00);
		if (color==3) SetPlayerColor(playerid, 0xAA333300);
		if (color==16) SetPlayerColor(playerid, 0x33AA3300);
		if (color==5) SetPlayerColor(playerid, 0xC2A2DA00);
		if (color==6) SetPlayerColor(playerid, 0xFFFF0000);
		if (color==7) SetPlayerColor(playerid, 0x33CCFF00);
		//if (strcmp(clr, "navy", true)==0) color=94;
		//if (strcmp(clr, "beige", true)==0) color=102;
		if (color==51) SetPlayerColor(playerid, 0x2D6F0000);
		if (color==103) SetPlayerColor(playerid, 0x0B006F00);
		if (color==13) SetPlayerColor(playerid, 0x52525200);
		if (color==55) SetPlayerColor(playerid, 0xB46F0000);
		if (color==84) SetPlayerColor(playerid, 0x814F0000);
		if (color==74) SetPlayerColor(playerid, 0x750A0000);
		//if (strcmp(clr, "maroon", true)==0) color=115;
		if (color==126) SetPlayerColor(playerid, 0xFF51F100);
		if(nextteam == 0)
		{
			SetPlayerPos(playerid, InfoEvento[EventTeamPosX1], InfoEvento[EventTeamPosY1], InfoEvento[EventTeamPosZ1]);
		}
		else
		{
			SetPlayerPos(playerid, InfoEvento[EventTeamPosX2], InfoEvento[EventTeamPosY2], InfoEvento[EventTeamPosZ2]);
		}
		if(nextteam == 0) nextteam++;
		else if(nextteam == 1) nextteam--;
	}

	InfoEvento[EventPlayers] ++;
	if(InfoEvento[EventPlayers] == InfoEvento[EventLimit])
	{
		ABroadCast(COLOR_GENERAL, "AdmAnuncio: El evento ha alcanzado el límite máximo de jugadores.", 2);
	}
}

else if( InfoEvento[ EventStatus ] == 3 )
{
	SendClientMessageEx( playerid, COLOR_GREY, "* El evento está bloqueado, no puedes entrar al evento" );
}
else if( InfoEvento[ EventStatus ] == 4 )
{
	SendClientMessageEx( playerid, COLOR_GREY, "* El evento ya se ha iniciado, no puedes entrar al evento." );
}

return 1;
}
*/
CMD:ram(playerid, params[]){
if(IsACop(playerid)){
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto en la Arena!");
	if( Info[playerid][pEstado] >= 1 ) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto ahora.");
	new string[128];
	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
		{
			format(string, sizeof(string), "* %s rompe la puerta, y entra.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
			LoadObjects(playerid);
			SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
			GameTextForPlayer(playerid, "~r~Rompiste la puerta", 5000, 1);
			Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
			Info[playerid][pVW] = i+6000;
			SetPlayerVirtualWorld(playerid, i+6000);
			//SetPVarInt( playerid, "InHouse", i );
		}
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "   No eres policía!");
return 1;
}

CMD:toy(playerid, params[])
{
if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando en este momento.");
new toyslot,string[128];
if(sscanf(params, "d", toyslot)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /toy [slot (0-9)]");
if(toyslot < 0 || toyslot > MAX_PLAYERTOYS) return SendClientMessageEx(playerid, COLOR_GRAD1, "Los Slots de los toys son del número 0 al 9!");
switch(toyslot)
{
    case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, toyslot)){
		    new name[24];
		    format(name, sizeof(name), "None");
			for(new i;i<sizeof(HoldingObjectsAll);i++){
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][toyslot][ptModelID]){
					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
		    format(string, sizeof(string), "Te quitaste el toy correctamente. (%s) (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][toyslot][ptBone]], toyslot);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		    RemovePlayerAttachedObject(playerid, toyslot);
		    return 1;
		}
		else
		{
  			if(PlayerToyInfo[playerid][toyslot][ptModelID] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes ningún toy en ese slot.");
			SetPlayerAttachedObject(playerid, toyslot, PlayerToyInfo[playerid][toyslot][ptModelID], PlayerToyInfo[playerid][toyslot][ptBone], PlayerToyInfo[playerid][toyslot][ptPosX], PlayerToyInfo[playerid][toyslot][ptPosY], PlayerToyInfo[playerid][toyslot][ptPosZ], PlayerToyInfo[playerid][toyslot][ptRotX], PlayerToyInfo[playerid][toyslot][ptRotY], PlayerToyInfo[playerid][toyslot][ptRotZ], PlayerToyInfo[playerid][toyslot][ftscaleX],
			PlayerToyInfo[playerid][toyslot][ftscaleY], PlayerToyInfo[playerid][toyslot][ftscaleZ]);
			new name[24];
			format(name, sizeof(name), "Nada");
			for(new i;i<sizeof(HoldingObjectsAll);i++){
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][toyslot][ptModelID]){
					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}
			format(string, sizeof(string), "Te pusiste el toy correctamente. (%s) (Parte: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][toyslot][ptBone]], toyslot);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
		}
	}
}
return 1;
}
CMD:esposar(playerid, params[])
{
if(IsACop(playerid))
{
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora.");
	new string[128],Float:Pos[3],giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /esposar [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto contigo mismo!");
			if(Info[giveplayerid][pEstado] == 1 || GetPlayerSpecialAction(giveplayerid) == SPECIAL_ACTION_HANDSUP)
			{
				format(string, sizeof(string), "* Fuiste esposado por "COL_WHITE"%s.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* Esposaste a "COL_WHITE"%s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* %s esposa a %s, las esposas estan seguras.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(giveplayerid, "~r~Esposado", 2500, 3);
				GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
				ClearAnimations(giveplayerid);
				Info[giveplayerid][pEstado] = 2;
				SetPVarInt(giveplayerid, "PlayerCuffed", 2);
				SetPVarInt(giveplayerid, "IsFrozen", 1);
				PlayerCuffedTime[giveplayerid] = 300;
				PlayerPlaySoundEx(1145, Pos[0], Pos[1], Pos[2]);
				SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
				//ApplyAnimation(giveplayerid,"ped","cower",1,1,0,0,0,0,1);
				TogglePlayerControllable(giveplayerid, 1);
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "El jugador tiene que estar tazeado o con las manos arriba!");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando.");
return 1;
}
CMD:qesposas(playerid, params[])
{
if(IsACop(playerid))
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /qesposas [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			//if(Info[giveplayerid][pJailed] >= 1) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto con un jugador esposado.");
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes quitarte las esposas tu mismo.");
			if(Info[giveplayerid][pEstado] == 2)
			{
				DeletePVar(giveplayerid, "IsFrozen");
				format(string, sizeof(string), "* "COL_WHITE"%s "COL_GENERAL"Te quito las esposas.", GetPlayerNameEx(playerid));
				SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* Le quitaste las esposas "COL_WHITE"%s.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_GENERAL, string);
				format(string, sizeof(string), "* %s quitó las esposas a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(giveplayerid, "~g~Te quitaron ~n~las esposas", 2500, 3);
				TogglePlayerControllable(giveplayerid, 1);
				ClearAnimations(giveplayerid);
				SetPlayerSpecialAction(giveplayerid, 0);
				ApplyAnimation(giveplayerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
				Info[giveplayerid][pEstado] = 0;
                PlayerCuffedTime[giveplayerid] = 0;
				DeletePVar(giveplayerid, "PlayerCuffed");
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya no está arrestado.");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando.");
return 1;
}

CMD:detener(playerid, params[])
{
if(IsACop(playerid))
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto en un vehiculo.");
	new string[128], giveplayerid, seat;
	if(sscanf(params, "dd", giveplayerid, seat)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /detener [playerid] [Asiento 1-3]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(seat < 1 || seat > 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "Asientos: 1 al 3.");
		if(IsACop(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes detener a esta persona (LSPD/FBI/SAEM).");
		if(IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "Esa persona está en un vehiculo.");
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto contigo mismo!"); return 1; }
			if(Info[giveplayerid][pEstado] == 2)
			{
				new carid = gLastCar[playerid];
				if(IsSeatAvailable(carid, seat))
				{
					new Float:pos[6];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
					GetVehiclePos( carid, pos[0], pos[1], pos[2]);
					if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
							floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
							floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
					format(string, sizeof(string), "* Fuiste detenido por %s .", GetPlayerNameEx(playerid));
					SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
					format(string, sizeof(string), "* Detuviste a %s .", GetPlayerNameEx(giveplayerid));
					SendClientMessageEx(playerid, COLOR_GENERAL, string);
					format(string, sizeof(string), "* %s sube a %s al vehiculo.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~r~Detenido", 2500, 3);
					ClearAnimations(giveplayerid);
					TogglePlayerControllable(giveplayerid, false);
					PutPlayerInVehicle(giveplayerid, carid, seat);
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "Ese asiento no está disponible!");
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "Esa persona no está esposada");
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, " Usted no está lo suficientemente cerca del jugador o de su coche!");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado inválido.");
}
else SendClientMessageEx(playerid, COLOR_GRAD2, "  No eres policía!");
return 1;
}

CMD:fbi(playerid, params[]){
if(Team_FBI(playerid))	{
	if(PlayerToPoint(5, playerid, 310.6649,-1537.4591,-45.1338) || PlayerToPoint(5, playerid, 310.6895,-1543.0925,-45.1338))		{
		ShowPlayerDialog(playerid, FDUTYMENU, DIALOG_STYLE_LIST, "FBI Menu","Duty\nEquipo\nUniforme SWAT\nUniformes\nEncubierto", "Ok", "Cancelar");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en los casilleros del FBI.");
}
return 1;
}

CMD:sapd(playerid, params[]){
if(Team_SAPD(playerid))	{
	if(PlayerToPoint(5, playerid, 1457.2192,-1761.9324,3285.2859) || PlayerToPoint(5, playerid,327.2326,307.2340,999.1484) ){
		ShowPlayerDialog(playerid, DUTYMENU, DIALOG_STYLE_LIST, "SAPD Menu","Duty\nEquipo\nSWAT\nUniformes\nEncubierto", "Ok", "Cancelar");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "No estás en los casilleros de SAPD.");
}
return 1;
}

CMD:darrol(playerid, params[]){
if(Info[playerid][pAdmin] >= 1)	{
	new giveplayerid, string[128];
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /darrol [playerid]");
    if(Info[giveplayerid][pAdmin] > Info[playerid][pAdmin]) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer eso con administradores de mayor rango.");
	if(IsPlayerConnectedEx(giveplayerid))		{
	    if(Info[giveplayerid][pAdmin] >= 2) return SendClientMessageEx(playerid, COLOR_WHITE, "No puedes hacer esto con administradores." );
		if(ShowRules[giveplayerid] == 1) return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador ya está leyendo las reglas de rol.");
		new Float:roldX, Float:roldY, Float:roldZ;
		GetPlayerPos(giveplayerid, roldX, roldY, roldZ);
		SetPVarFloat(giveplayerid, "rOldX", roldX);
		SetPVarFloat(giveplayerid, "rOldY", roldY);
		SetPVarFloat(giveplayerid, "rOldZ", roldZ);
		SetPVarInt(giveplayerid, "rOldInt", GetPlayerInterior(giveplayerid));
		SetPVarInt(giveplayerid, "rOldVW", GetPlayerVirtualWorld(giveplayerid));
	    ShowRules[giveplayerid] = 1;
	    RulesTime[giveplayerid] = 1;
	    ShowRol(giveplayerid);
		format( string, sizeof( string ), "AdmWarning: %s (ID %d) fue enviado a leer las reglas de rol por %s.", GetPlayerNameEx(giveplayerid), giveplayerid, GetPlayerNameEx(playerid));
		ABroadCast( COLOR_GENERAL, string, 2 );
		return 1;
	}
}
else NoAutorizado
return 1;
}

CMD:paquete(playerid, params[])
{
new mypoint = -1, playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
for (new i=0; i<MAX_POINTS; i++)
{
	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Lab Drug", true) == 0)
	{
		mypoint = i;
	}
}
if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, " No estás en el punto específico!");
if(Info[playerid][pCrates]) return SendClientMessageEx(playerid, COLOR_GREY, "No se puede sostener más paquetes de drogas!");
ShowPlayerDialog(playerid,TRAFICDRUGS,DIALOG_STYLE_MSGBOX, ""COL_GENERAL"Selecciona", "¿Que deseas transportar?", "Hierba", "Crack");
SetPVarInt(playerid, "ChoosingDrugs", 1);
return 1;
}

CMD:comprarhierba(playerid, params[])
{
new string[128], amount;
if(sscanf(params, "d", amount)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /comprarhierba [amount]");
new tel;
new price;
new level = Info[playerid][pDrugsSkill];
if(level >= 0 && level <= 50)
{ tel = 100; if(amount < 1 || amount > 10) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar mas de 10 con este nivel de skill!"); return 1; } }
else if(level >= 51 && level <= 100)
{ tel = 100; if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar mas de 20 con este nivel de skill!"); return 1; } }
else if(level >= 101 && level <= 200)
{ tel = 100; if(amount < 1 || amount > 30) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar mas de 30 con este nivel de skill!"); return 1; } }
else if(level >= 201 && level <= 400)
{ tel = 100; if(amount < 1 || amount > 40) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar mas de 40 con este nivel de skill!"); return 1; } }
else if(level >= 401)
{ tel = 100; if(amount < 1 || amount > 50) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes sacar mas de 50 con este nivel de skill!"); return 1; } }
new mypoint = -1;
for (new i=0; i<MAX_POINTS; i++)
{
	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
	{
		mypoint = i;
	}
}
if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en la casa de crack!");
if ( Info[playerid][pPot] >= 25) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu ya tienes 25 gramos de hierba, no puedes cargar más.");
if (Info[playerid][pFMember] < 255)
{
	price = amount * tel;
	if(Points[mypoint][Stock] < amount && Info[playerid][pVIP] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Esta casa de drogas no tiene más hierba!");
	if(GetPlayerCash(playerid) > price)
	{
		format(string, sizeof(string), "* Compraste %d gramos por $%d.", amount, price);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		GivePlayerCash(playerid, -price);
		Info[playerid][pPot] += amount;
		if(Info[playerid][pVIP] < 1)
		{
			Points[mypoint][Stock] -= amount;
			format(string, sizeof(string), " HIERBA DISPONIBLE: %d", Points[mypoint][Stock]);
			UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
		}
		for(new i = 0; i < sizeof(fINFO); i++)
		{
			if(strcmp(Points[mypoint][Owner], fINFO[i][FamilyName], true) == 0)
			{
				fINFO[i][FamilyCash] = fINFO[i][FamilyCash]+price;
			}
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero para pagar estas drogas.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* Debes pertenecer a una familia/banda para vender drogas.");
return 1;
}

CMD:comprarcrack(playerid, params[])
{
new string[128], amount;
if(sscanf(params, "d", amount)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /comprarcrack [monto]");
new tel;
new price;
new level = Info[playerid][pDrugsSkill];
if(level >= 0 && level <= 50)
{tel = 500;if(amount < 1 || amount > 5){SendClientMessageEx(playerid, COLOR_GREY, "   Sólo puedes cojer 5 o menos con ese skil!");return 1;}}
else if(level >= 51 && level <= 100)
{ tel = 500; if(amount < 1 || amount > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   Sólo puedes cojer 10 o menos con ese skil!"); return 1; } }
else if(level >= 101 && level <= 200)
{ tel = 500; if(amount < 1 || amount > 15) { SendClientMessageEx(playerid, COLOR_GREY, "   Sólo puedes cojer 15 o menos con ese skil!"); return 1; } }
else if(level >= 201 && level <= 400)
{ tel = 500; if(amount < 1 || amount > 20) { SendClientMessageEx(playerid, COLOR_GREY, "   Sólo puedes cojer 20 o menos con ese skil!"); return 1; } }
else if(level >= 401)
{ tel = 500; if(amount < 1 || amount > 25) { SendClientMessageEx(playerid, COLOR_GREY, "   Sólo puedes cojer 25!"); return 1; } }
new mypoint = -1;
for (new i=0; i<MAX_POINTS; i++)
{
	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 4)
	{
		mypoint = i;
	}
}
if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en la casa de crack!");
if ( Info[playerid][pCrack] >= 25) return SendClientMessageEx(playerid, COLOR_GREY, "* Tu ya tienes 25 gramos de crack, no puedes cargar más.");
if (Info[playerid][pFMember] < 255)
{
	price = amount * tel;
	if(Points[mypoint][Stock] < amount && Info[playerid][pVIP] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Esta casa de crack no tiene más crack!");
	if(GetPlayerCash(playerid) > price)
	{
		format(string, sizeof(string), "* Compraste %d gramos por $%d.", amount, price);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		GivePlayerCash(playerid, -price);
		Info[playerid][pCrack] += amount;
		if(Info[playerid][pVIP] < 1) Points[mypoint][Stock] = Points[mypoint][Stock]-amount;
		format(string, sizeof(string), " CRACK DISPONIBLE: %d", Points[mypoint][Stock]);
		UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
		for(new i = 0; i < sizeof(fINFO); i++)
		{
			if(strcmp(Points[mypoint][Owner], fINFO[i][FamilyName], true) == 0)
			{
				fINFO[i][FamilyCash] = fINFO[i][FamilyCash]+price;
			}
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes dinero para pagar estas drogas.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* Debes pertenecer a una familia/banda para vender drogas.");
return 1;
}

CMD:venderhierba(playerid, params[])
{
if (Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes pertenecer a una familia/banda para vender drogas.");
new string[128], giveplayerid, needed, money;
if(sscanf(params, "ddd", giveplayerid, needed, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /venderhierba [playerid] [monto] [precio]");

if(needed < 1 || needed > 99) { SendClientMessageEx(playerid, COLOR_GREY, "   Gramos no pueden ser menor que 1, ni mayor que 99!"); return 1; }
if(money < 1 || money > 99999) { SendClientMessageEx(playerid, COLOR_GREY, "   Precio: Mínimo 1 - Máximo: 99999!"); return 1; }
if(needed > Info[playerid][pPot]) { SendClientMessageEx(playerid, COLOR_GREY, "	No tienes tanta hierba para vender."); return 1; }
if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "   No puedes venderte a ti mismo!");
				return 1;
			}
			format(string, sizeof(string), "* Ofreciste a %s comprar %d gramos de hierba por $%d.", GetPlayerNameEx(giveplayerid), needed, money);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* Vendedor %s quiere venderte %d gramos de hierba por $%d. (Usa /aceptar hierba)", GetPlayerNameEx(playerid), needed, money);
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			PotOffer[giveplayerid] = playerid;
			PotPrice[giveplayerid] = money;
			PotGram[giveplayerid] = needed;
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "   Ese jugador está desconectado.");
return 1;
}

CMD:vendercrack(playerid, params[])
{
if (Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes pertenecer a una familia/banda para vender drogas.");
new string[128], giveplayerid, needed, money;
if(sscanf(params, "ddd", giveplayerid, needed, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vendercrack [playerid] [gramos] [precio]");
if(needed < 1 || needed > 99) { SendClientMessageEx(playerid, COLOR_GREY, "   Los valores no pueden ser mayores a 99 gramos."); return 1; }
if(money < 1 || money > 99999) { SendClientMessageEx(playerid, COLOR_GREY, "   El precio no puede ser menor que 1 ni mayor que 99999!"); return 1; }
if(needed > Info[playerid][pCrack]) { SendClientMessageEx(playerid, COLOR_GREY, "  No tienes suficiente droga para venderla!"); return 1; }
if(IsPlayerConnectedEx(giveplayerid))	{
	if(giveplayerid != INVALID_PLAYER_ID){
		if (ProxDetectorS(8.0, playerid, giveplayerid)){
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes venderte a ti mismo!");
			format(string, sizeof(string), "* Ofreciste a %s para que te compre %d gramos de crack por $%d.", GetPlayerNameEx(giveplayerid), needed, money);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* Vendedor de drogas %s quiere venderte %d gramos de crack por $%d. (escribe /aceptar crack)", GetPlayerNameEx(playerid), needed, money);
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			CrackOffer[giveplayerid] = playerid;
			CrackPrice[giveplayerid] = money;
			CrackGram[giveplayerid] = needed;
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "   Ese jugador está desconectado.");
return 1;
}

CMD:semillas(playerid, params[])
{
if(Info[playerid][pWSeeds] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Ya tienes semillas usalas primero");
if(GetPlayerCash(playerid) < 1500) return SendClientMessageEx(playerid, COLOR_GREY, " No tienes $1,500 para pagar por esto");
new mypoint = -1;
for (new i=0; i<MAX_POINTS; i++)
{
   	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
   	{
		mypoint = i;
	}
}
if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, " No estás en la casa de drogas!");
if(Points[mypoint][Stock] < 1 && Info[playerid][pVIP] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "   Esta casa de drogas no tiene más hierba.");
if(Info[playerid][pVIP] < 1)
{
	new string[32];
	Points[mypoint][Stock] -= 1;
	format(string, sizeof(string), " HIERBA DISPONIBLE: %d", Points[mypoint][Stock]);
	UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
}
Info[playerid][pWSeeds] += 3;
SendClientMessageEx(playerid, COLOR_GENERAL, " Acabas de comprar una bolsa de semillas de hierba de la Casa de Drogas. ");
GivePlayerCash(playerid, -1500);
GameTextForPlayer(playerid, "~r~-$1500", 3000, 1 );
for(new i = 0; i < sizeof(fINFO); i++){
	if(strcmp(Points[mypoint][Owner], fINFO[i][FamilyName], true) == 0){
		fINFO[i][FamilyCash] += 1500;
	}
}
return 1;
}

CMD:capturar(playerid, params[])
{
new string[128];
new mypoint = -1;
if(GetPVarInt(playerid,"Injured") == 1)
{
	SendClientMessageEx(playerid, COLOR_GRAD1, " No puedes hacer esto ahora!");
	return 1;
}
if (Info[playerid][pFMember] == 255 || Info[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_GRAD1, " No eres el rango suficiente para capturar! (5)");
for (new i=0; i<MAX_POINTS; i++)
{
	if (IsPlayerInRangeOfPoint(playerid, 1.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz])) mypoint = i;
}
if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GRAD1, " Usted no está en el lugar de captura!");
if (Points[mypoint][Vulnerable] > 0) return SendClientMessageEx(playerid, COLOR_GRAD1, " Este punto no está listo para la toma de posesión.");
if (Points[mypoint][TimeToClaim]) return SendClientMessageEx(playerid, COLOR_GRAD1, " Este punto ya está capturado!");
if(GetPlayerPing(playerid) > 600){
	format(string,sizeof(string), " No puedes hacer esto mientras tienes más de %d de ping!", 600);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	return 1;
}
Points[mypoint][PointBarID] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
SetProgressBarValue(Points[mypoint][PointBarID], 100.0);
ShowProgressBarForPlayer(playerid, Points[mypoint][PointBarID]);
format(string,sizeof(string), " %s está tratando de apoderarse del punto.", GetPlayerNameEx(playerid));
ProxDetector(70.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
GetPlayerPos(playerid, Points[mypoint][Capturex], Points[mypoint][Capturey], Points[mypoint][Capturez]);
Points[mypoint][ClaimerId] = playerid;
Points[mypoint][TimeToClaim] = 1;
Points[mypoint][TimeLeft] = 10;
SetTimerEx("ProgressTimer", 1000, 0, "d", mypoint);
return 1;
}
CMD:puntos(playerid, params[])
{
new string[2000];
for(new i; i < MAX_POINTS; i++)
{
	if (Points[i][Type] >= 0)
	{
		format(string, sizeof(string), "%sNombre: %s | Dueño: %s | Capturado por: %s | Horas: %d",string,Points[i][Name],Points[i][Owner],Points[i][CapperName],Points[i][Vulnerable]);
        format(string, sizeof(string), "%s\n", string);
	}
}
format(string, sizeof(string), "%s\n", string);
ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"Puntos",string,"Volver","");
return 1;
}
CMD:pedit(playerid, params[]){
if(Info[playerid][pAdmin] > 4 || Info[playerid][pGangModerator] == 1){
	new string[128], hours;
	if(sscanf(params, "d", hours)){
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /pedit [HORAS]");
		SendClientMessageEx(playerid, COLOR_GREY, "HINT: Párese cerca de un punto para ajustar las horas.");
		return 1;
	}
	for(new h = 0; h < sizeof(Points); h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
		{
			if(hours < 1|| hours > 24) SendClientMessageEx(playerid, COLOR_GREY, "Tip: 1 - 24");
			else if(hours >= 1|| hours <= 24)
			{
				format(string, sizeof(string), "Estableciste el tiempo de vulnerabilidad a %d horas !", hours);
				Points[h][Vulnerable] = hours;
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				UpdatePoints();
			}
		}
	}
}
return 1;
}

CMD:dedit(playerid, params[])
{
if(Info[playerid][pAdmin] < 6) NoAutorizado
new string[128], choice[32], amount;
if(sscanf(params, "s[32]d", choice, amount))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /dedit [nombre] [monto]");
	SendClientMessageEx(playerid, COLOR_GREY, "Nombres: hierba, Crack");
	return 1;
}
if(strcmp(choice,"hierba",true) == 0)
{
	for(new h = 0; h < sizeof(Points); h++)
	{
		if(Points[h][Type] == 3)
		{
			Points[h][Stock] = amount;
			format(string, sizeof(string), " HIERBA DISPONIBLE: %d", Points[h][Stock]);
			UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
			SendClientMessageEx(playerid, COLOR_WHITE, " Estableciste la cantidad de hierba en la casa de drogas.");
		}
	}
}
else if(strcmp(choice,"crack",true) == 0)
{
	for(new h = 0; h < sizeof(Points); h++)
	{
		if(Points[h][Type] == 4)
		{
			Points[h][Stock] = amount;
			format(string, sizeof(string), " CRACK DISPONIBLE: %d", Points[h][Stock]);
			UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
			SendClientMessageEx(playerid, COLOR_WHITE, " Estableciste la cantidad de crack en la casa de drogas.");
		}
	}
}
else SendClientMessageEx(playerid, COLOR_GREY, "	Nombre no válido.");
return 1;
}

CMD:adminpuntos(playerid, params[]){
if(Info[playerid][pAdmin] > 6 || Info[playerid][pGangModerator] == 1){
	SendClientMessageEx(playerid, COLOR_GENERAL,"Ayuda - Comandos Administrativos System Points");
	SendClientMessageEx(playerid, COLOR_WHITE, "/dedit [Editar drogas de cada punto] - /pedit [Tiempo de vulnerabilidad]");
	SendClientMessageEx(playerid, COLOR_WHITE, "/puntos /irapunto");
}
return 1;
}

CMD:plantar(playerid, params[])
{
if(Info[playerid][pWSeeds] > 0)
{
	if(Info[playerid][pWExists] == 1)
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Ya plantaste semillas tienes que esperar." );
	    return 1;
	}
	GetPlayerPos(playerid, Info[playerid][pWX], Info[playerid][pWY], Info[playerid][pWZ]);
	Info[playerid][pWZ] -= 1.5;
    ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
	SendClientMessageEx(playerid, COLOR_GREEN, "Has plantado un poco de hierba. El trayecto dura unos 20-45 minutos en crecer.");

	Info[playerid][pWInt] = GetPlayerInterior(playerid);
	Info[playerid][pWVW] = GetPlayerVirtualWorld(playerid);
	Info[playerid][pWExists] = 1;
	Info[playerid][pWValue] = -1;
	Info[playerid][pWSeeds]--;
	Info[playerid][pWObject] = CreateDynamicObject(19473, Info[playerid][pWX], Info[playerid][pWY], Info[playerid][pWZ], 0.0, 0.0, 0.0, Info[playerid][pWVW], Info[playerid][pWInt]);
	Info[playerid][pWTimer] = SetTimerEx("WeedGrowth", 60000, 1, "i", playerid);
	format(szMessage, sizeof(szMessage), " * %s planta unas semillas de hierba", GetPlayerNameEx(playerid));
	ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}
else SendClientMessageEx(playerid, COLOR_GREY, "No tienes suficientes semillas para sembrar, ve a la casa de drogas y recoge más. (/semillas)");
return 1;
}

CMD:aborrarplanta(playerid, params[]) {
if(Info[playerid][pAdmin] >= 4) {
	new
		iTargetID;
	if(sscanf(params, "d", iTargetID)) {
		SendClientMessageEx(playerid, COLOR_GREY, "USA: /aborrarplanta [playerid]");
	}
	else if(IsPlayerConnectedEx(iTargetID))
	{
		format(szMessage, sizeof(szMessage), "Destruiste la planta de %s (%i gramos).", GetPlayerNameEx(iTargetID), Info[iTargetID][pWValue]);
		SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		format(szMessage, sizeof(szMessage), "Administrador %s destruyó tu planta sembarada (%i gramos).", GetPlayerNameEx(playerid), Info[iTargetID][pWValue]);
		SendClientMessageEx(iTargetID, COLOR_GREY, szMessage);
		ClearWeed(iTargetID);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
return 1;
}

CMD:destruirplanta(playerid, params[])
{
if(IsACop(playerid)) {
	foreach(Player, i) if(IsPlayerInRangeOfPoint(playerid, 2.5, Info[i][pWX], Info[i][pWY], Info[i][pWZ])) {
		if(GetPlayerVirtualWorld(playerid) == Info[i][pWVW] && GetPlayerInterior(playerid) == Info[i][pWInt])
		{
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
			format(szMessage, sizeof(szMessage), "* Destruye la plata, pesa %d gramos.", Info[i][pWValue]);
			SendClientMessageEx(playerid, COLOR_GREY, szMessage);
			format(szMessage, sizeof(szMessage), " * %s destruye la hierba plantada.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
			ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ClearWeed(i);
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una planta.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No eres policía.");
return 1;
}

CMD:checkplanta(playerid, params[]) {
foreach(Player, i) if(IsPlayerInRangeOfPoint(playerid, 2.5, Info[i][pWX], Info[i][pWY], Info[i][pWZ])) {
    if(GetPlayerVirtualWorld(playerid) == Info[i][pWVW] && GetPlayerInterior(playerid) == Info[i][pWInt])
	{
		if(Info[i][pWValue] > 0)
		{
			format(szMessage, sizeof(szMessage), "Plantador: %s, peso: %i gramos. /sacarplanta para sacarla!", GetPlayerNameEx(i), Info[i][pWValue]);
			SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		}
		else
		{
			format(szMessage, sizeof(szMessage), "Plantador: %s. Esto no está listo para ser sacada.", GetPlayerNameEx(i));
			SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
		}
		return 1;
	}
}
return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una planta.");
}

CMD:sacarplanta(playerid, params[])
{
foreach(Player, i) if(IsPlayerInRangeOfPoint(playerid, 2.5, Info[i][pWX], Info[i][pWY], Info[i][pWZ]))
{
    if(GetPlayerVirtualWorld(playerid) == Info[i][pWVW] && GetPlayerInterior(playerid) == Info[i][pWInt])
	{
		if(Info[i][pWValue] > 0)
		{
			if(Info[i][pWValue] + Info[playerid][pPot] < 99)
			{
				ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
				Info[playerid][pPot] += Info[i][pWValue];
				format(szMessage, sizeof(szMessage), "Recogiste la hierba y te dió %d gramos de hierba.", Info[i][pWValue]);
				SendClientMessageEx(playerid, COLOR_GREY, szMessage);
				format(szMessage, sizeof(szMessage), " * %s recoge la planta.", GetPlayerNameEx(playerid));
				ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ClearWeed(i);
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "* No se puede llevar a más de 99 gramos de hierba.");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esta planta no está lista para ser recogida todavía.");
		return 1;
	}
}
return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una planta.");
}

CMD:materiales(playerid, params[])
{
if (Info[playerid][pFMember] == 255) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes pertenecer a una familia/banda para recoger paquetes de materiales.");
if(GetPVarInt(playerid, "Packages") >= 1 || EMSAccepted[playerid] != 999 || MedicAccepted[playerid] != 999 || MechanicCallTime[playerid] >= 1)
{
	SendClientMessageEx(playerid, COLOR_WHITE, "Por favor primero asegurate de estar sin un checkpoint activo (Tal vez tengas materiales por entregar).");
	return 1;
}
if(IsPlayerInRangeOfPoint(playerid, 10.0, 2613.3691,-1065.9915,69.9656)) // Matrun 3
{
	if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "Debes entregar tus paquetes primero.");
	if(Info[playerid][pVIP] == 1)
	{
	    if(GetPlayerCash(playerid) < 1125) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $1125!");
		GivePlayerCash(playerid, -1125);
		SetPVarInt(playerid, "Packages", 23);
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 23 Paquetes de Materiales por $1125.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Silver: Has recibido los paquetes pero por 1.5x más, y lo que te permite es recibir 1.5x materiales más.");
	}
	else if(Info[playerid][pVIP] == 2)
	{
		if(GetPlayerCash(playerid) < 1500) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $1500!");
		GivePlayerCash(playerid, -1500);
		SetPVarInt(playerid, "Packages", 30);
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 30 Paquetes de Materiales por $1500.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Gold: Has recibido los paquetes pero por 2x más, y lo que te permite es recibir 2x materiales más.");
	}
	else
	{
		if(GetPlayerCash(playerid) < 1000) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $1000!");
		GivePlayerCash(playerid, -1000);
		SetPVarInt(playerid, "Packages", 15);
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 15 Paquetes de Materiales por $1000.");
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "TIP: Sigue tu camino hacia el checkpoint y entrega tus paquetes de materiales.");
	SetPVarInt(playerid, "MatDeliver", 333);
	SetPVarInt(playerid, "tpMatRunTimer", 15);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
	SetPlayerCheckpoint(playerid, 1083.0131,-1226.7869,15.8203, 5);
	return 1;
}
if (IsPlayerInRangeOfPoint(playerid, 4.0, 2388.4568,-2008.2374,13.5537)) // Matrun 4
{
	if(GetPVarInt(playerid, "Packages") >= 10) return SendClientMessageEx(playerid, COLOR_GRAD2, "Debes entregar tus paquetes primero. (( Usar el comando /tirar parquetesM ))");
	if(Info[playerid][pVIP] == 1)
	{
		if(GetPlayerCash(playerid) < 900) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $900!");
		GivePlayerCash(playerid, -900);
		SetPVarInt(playerid, "Packages", 18);
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 18 Paquetes de Materiales por $900.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Silver: Has recibido los paquetes pero por 1.5x más, y lo que te permite es recibir 1.5x materiales más.");
	}
	else if(Info[playerid][pVIP] == 2)
	{
		if(GetPlayerCash(playerid) < 1200) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $1200!");
		GivePlayerCash(playerid, -1200);
		SetPVarInt(playerid, "Packages", 24);
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 24 Paquetes de Materiales por $1200.");
		SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Gold: Has recibido los paquetes pero por 2x más, y lo que te permite es recibir 2x materiales más.");
	}
	else
	{
		if(GetPlayerCash(playerid) < 600) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $600!");
		SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 18 Paquetes de Materiales por $600.");
		GivePlayerCash(playerid, -600);
		SetPVarInt(playerid, "Packages", 18);
	}

	SetPVarInt(playerid, "MatDeliver", 444);
	SetPVarInt(playerid, "tpMatRunTimer", 12);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
	SetPlayerCheckpoint(playerid, 2288.2263,-1104.6658,38.5870, 5);
	return 1;
}
new mypoint = -1;
new mypointex = -1;
for (new i=0; i<MAX_POINTS; i++)
{
	if (IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 1)
	{
		mypoint = i;
		mypointex = i;
	}
}
if (mypoint == -1) return SendClientMessageEx(playerid, COLOR_GREY, " No estás en el Punto donde se recogen materiales!");
new payment;
if(Info[playerid][pVIP] == 1)
{
	if(GetPlayerCash(playerid) < 750) return SendClientMessageEx(playerid, COLOR_GREY," No puedes pagar $750!");
    payment = 750;
	SetPVarInt(playerid, "Packages", 15);
	SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste $750 por 15 materiales.");
	SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Silver: Tu recibes 1.5x paquetes más, que te dará 1.5x más materiales.");
}
else if(Info[playerid][pVIP] == 2)
{
	if(GetPlayerCash(playerid) < 1000) return SendClientMessageEx(playerid, COLOR_GREY," You can't afford the $1000!");
    payment = 1000;
	SetPVarInt(playerid, "Packages", 20);
	SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste $1000 por 20 materiales.");
	SendClientMessageEx(playerid, COLOR_YELLOW,"VIP Gold: Tu recibes 2x paquetes más, que te dará 2x más materiales.");
}
else
{
	if(GetPlayerCash(playerid) < 500) return SendClientMessageEx(playerid, COLOR_GREY," No tienes $500!");
    payment = 500;
	
	SetPVarInt(playerid, "Packages", 10);
	SendClientMessageEx(playerid, COLOR_GENERAL,"* Pagaste 10 paquetes de materiales por $500.");
}
GivePlayerCash(playerid, -payment);
SetPVarInt(playerid, "MatDeliver", 555);
SetPVarInt(playerid, "tpMatRunTimer", 10);
SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
for(new i = 0; i < sizeof(fINFO); i++)
{
	if(strcmp(Points[mypointex][Owner], fINFO[i][FamilyName], true) == 0)
	{
		fINFO[i][FamilyCash] += payment;
		SendClientMessageEx(playerid, COLOR_YELLOW, "* Familia dueña del punto recibe tu dinero por la compra de materiales.");
	}
}
SetPlayerCheckpoint(playerid, 2317.739990,-2303.850830,13.545999, 5);
return 1;
}

CMD:settax(playerid, params[])
{
if(Info[playerid][pAdmin] != 7) return NoAutorizado
if(!isnull(params))
{
    Tax = strval(params);
    format(szMessage, sizeof(szMessage), "admexe: NUEVO BALANCE FONDO DE GOBIERNO: "COL_WHITE"$%d.", Tax);
    SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
    SaveStuff();
}
return 1;
}
CMD:sfondos(playerid, params[])
{
if(!Presidente(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No eres el lider del gobierno.");
new string[128], amount, reason[64];
if(sscanf(params, "ds[64]", amount, reason))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /sfondos [monto] [razón]");
	format(string, sizeof(string), "* BALANCE: "COL_WHITE"$%d.", Tax);
	SendClientMessageEx(playerid, COLOR_GENERAL, string);
	return 1;
}
if(amount < 0) return SendClientMessageEx(playerid, COLOR_GREY, "* El monto es inválido.");
if(Tax >= amount)
{
	Tax -= amount;
	SaveStuff();
	GivePlayerCash( playerid, amount );
	format( string, sizeof( string ), "Retiraste $%d de los fondos del gobierno.", amount );
	SendClientMessageEx( playerid, COLOR_WHITE, string );
	format(string,sizeof(string),"AdmWarning: %s retiro $%d de los fondos del gobierno, razón: %s.",GetPlayerNameEx(playerid),amount,reason);
	ABroadCast( COLOR_YELLOW, string, 2);
	Log("logs/especial.log", string);
}
else SendClientMessageEx(playerid, COLOR_GREY, "No hay fondos suficientes.");
return 1;
}

CMD:dfondos(playerid, params[])
{
if(!Presidente(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No eres el lider del gobierno.");
new string[128], amount;
if(sscanf(params, "d", amount))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /dfondos [monto]");
	format(string, sizeof(string), "* BALANCE: "COL_WHITE"$%d.", Tax);
	SendClientMessageEx(playerid, COLOR_GENERAL, string);
	return 1;
}
if(amount < 0) return SendClientMessageEx(playerid, COLOR_GREY, "* El monto es inválido.");
Tax += amount;
SaveStuff();
GivePlayerCash(playerid, -amount);
format( string, sizeof( string ), "Depositaste $%d en los fondos del gobierno.", amount );
SendClientMessageEx( playerid, COLOR_WHITE, string );
return 1;
}

CMD:placaex(playerid, params[]){
if(IsACop(playerid) || Info[playerid][pMember] == 4 || Info[playerid][pLeader] == 4 && GetPVarInt(playerid, "IsInArena") == 0 && !GetPVarInt(playerid, "EventToken") && Info[playerid][pJailed] == 0){
	if(OnDuty[playerid] == 1){
		OnDuty[playerid] = 0;
		SetPlayerToTeamColor(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora serás visto como fuera de servicio.");
	}
	else{
		OnDuty[playerid] = 1;
		SetPlayerToTeamColor(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Ahora serás visto como en servicio.");
	}
}
return 1;
}

CMD:arrestar(playerid, params[]){
if(IsACop(playerid)){
	if(!IsAtArrestPoint(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás en el punto de arresto.");
	new string[128], moneys, time, bail, bailprice;
	if(sscanf(params, "dddd", moneys, time, bail, bailprice)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /arrestar [Multa] [Tiempo (minutos)] [Fianza (0=no 1=si)] [Precio]");
	if(moneys < 1 || moneys > 30000) { SendClientMessageEx(playerid, COLOR_GREY, "Multa: $1 a $30,000."); return 1; }
	if(time < 1 || time > 60) { SendClientMessageEx(playerid, COLOR_GREY, "Tiempo: 1 a 60 minutos."); return 1; }
	if(bail < 0 || bail > 1) { SendClientMessageEx(playerid, COLOR_GREY, "Fianza: 0 [OFF] o 1 [ON]."); return 1; }
	if(bailprice < 0 || bailprice > 10000) { SendClientMessageEx(playerid, COLOR_GREY, "Fianza: $0 a $10,000."); return 1; }
	new suspect = GetClosestPlayer(playerid);
	if(IsPlayerConnectedEx(suspect)){
		if(ProxDetectorS(5.0, playerid,suspect))
		{
			format(string, sizeof(string), "* %s fue arrestado!", GetPlayerNameEx(suspect));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(suspect, -moneys);
			Tax += moneys;
			ResetPlayerWeaponsEx(suspect);
			GameTextForPlayer(suspect, "Fuiste arrestado", 5000, 5);
			SetPlayerSkin(suspect, 50);
			if(IsPlayerInRangeOfPoint(playerid, 4.0, 1559.3228,-1693.7491,5.8970)){
				SetPlayerFacingAngle(suspect, 0);
				if(Info[suspect][pVIP] >= 2)
				{
					Info[suspect][pJailTime] = ((time*60)*75)/100;
				}
				else
				{
					Info[suspect][pJailTime] = time * 60;
				}
				DeletePVar(suspect, "IsFrozen");
				new rand;
	    		rand = random(sizeof(SAPDPrisonSpawns));
	    		SetPlayerPos(suspect, SAPDPrisonSpawns[rand][0], SAPDPrisonSpawns[rand][1], SAPDPrisonSpawns[rand][2]);
	    		LoadObjects(suspect);
				SetPlayerInterior(suspect, 10);
				Info[suspect][pInt] = 10;
				Info[suspect][pJailed] = 2;
				PhoneOnline[suspect] = 1;
				Info[suspect][pArrested] += 1;
				Info[suspect][pWantedLevel] = 0;
				SetPlayerToTeamColor(suspect);
				SetPlayerWantedLevel(suspect, 0);
				ClearAnimations(suspect);
				Info[suspect][pEstado] = 0;
				DeletePVar(suspect, "PlayerCuffed");
				PlayerCuffedTime[suspect] = 0;
				Info[suspect][pVW] = 500;
				SetPlayerVirtualWorld(suspect, 500);
			}
			if(IsPlayerInRangeOfPoint(playerid, 4.0, 613.3228,-589.1623,17.2266)) // Dillmore
			{
			    SetPlayerFacingAngle(suspect, 0);
				if(Info[suspect][pVIP] >= 2)
				{
					Info[suspect][pJailTime] = ((time*60)*75)/100;
				}
				else
				{
					Info[suspect][pJailTime] = time * 60;
				}
				DeletePVar(suspect, "IsFrozen");
				new rand;
	    		rand = random(sizeof(PrisonDillmore));
	    		SetPlayerPos(suspect, PrisonDillmore[rand][0], PrisonDillmore[rand][1], PrisonDillmore[rand][2]);
				SetPlayerInterior(suspect, 5);
				Info[suspect][pInt] = 5;
				Info[suspect][pVW] = 400;
				SetPlayerVirtualWorld(suspect, 400);
				Info[suspect][pJailed] = 6;
				PhoneOnline[suspect] = 1;
				Info[suspect][pArrested] += 1;
				Info[suspect][pWantedLevel] = 0;
				SetPlayerToTeamColor(suspect);
				SetPlayerWantedLevel(suspect, 0);
				ClearAnimations(suspect);
				Info[suspect][pEstado] = 0;
				DeletePVar(suspect, "PlayerCuffed");
				PlayerCuffedTime[suspect] = 0;
			}
			else if(Team_FBI(playerid)){
				TogglePlayerControllable(suspect, 0);
			    TextDrawShowForPlayer(suspect, boxGM);
				TextDrawShowForPlayer(suspect, streamer);
				SetPVarInt(suspect, "LoadingObjects", 1);
				SetTimerEx("SafeLoadObjects", 4000, 0, "d", suspect);
				SetPlayerInterior(suspect, 1);
				Info[suspect][pVW] = 600;
				Info[suspect][pInt] = 1;
				SetPlayerVirtualWorld(suspect, 600);
				SetPlayerPos(suspect,315.1677,-1451.5564,-33.5292);
				if(Info[suspect][pVIP] >= 2)
				{
					Info[suspect][pJailTime] = ((time*60)*75)/100;
				}
				else
				{
					Info[suspect][pJailTime] = time * 60;
				}
				Info[suspect][pJailed] = 3;
				PhoneOnline[suspect] = 1;
				DeletePVar(suspect, "IsFrozen");
				Info[suspect][pArrested] += 1;
				Info[suspect][pWantedLevel] = 0;
				SetPlayerToTeamColor(suspect);
				SetPlayerWantedLevel(suspect, 0);
				ClearAnimations(suspect);
				Info[suspect][pEstado] = 0;
				DeletePVar(suspect, "PlayerCuffed");
				PlayerCuffedTime[suspect] = 0;
			}
			if(bail == 1){
				JailPrice[suspect] = bailprice;
				format(string, sizeof(string), "Fuiste encarcelado %d segundos.   Fianza: $%d", Info[suspect][pJailTime], JailPrice[suspect]);
				SendClientMessageEx(suspect, COLOR_GENERAL, string);
			}
			else{
				JailPrice[suspect] = 0;
				format(string, sizeof(string), "Fuiste encarcelado %d segundos.   Fianza: No Disponible", Info[suspect][pJailTime]);
				SendClientMessageEx(suspect, COLOR_GENERAL, string);
			}
			SetPlayerSpecialAction(suspect, 0);
			if(Info[suspect][pGunLic] == 1)
			{
			    Info[suspect][pGunLic] = -1;
			    SendClientMessageEx(suspect, COLOR_GRAD2, "Te han suspendido la licencia de armas de por vida.");
			}
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* No hay nadie cerca tuyo.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No eres de las fuerzas de la ley!");
return 1;
}

CMD:fianza(playerid, params[]){
if(Info[playerid][pJailed] >= 2){
	if(JailPrice[playerid] > 0){
		if(GetPlayerCash(playerid) > JailPrice[playerid]){
			new string[128];
			format(string, sizeof(string), "Pagaste la fianza de $%d.", JailPrice[playerid]);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(playerid, -JailPrice[playerid]);
			Tax += JailPrice[playerid];
			Info[playerid][pJailTime] = 1;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes el dinero de la fianza");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* En tu condena no hay fianza, espera el tiempo de condena.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No estás en prisión.");
return 1;
}
CMD:vendermateriales(playerid, params[])
{
new string[128], giveplayerid, amount, price;
if(sscanf(params, "udd", giveplayerid, amount, price)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /vendermateriales [playerid] [Monto] [Precio]");
if(amount < 1 || amount > 99999999) { SendClientMessageEx(playerid, COLOR_GREY, "* Los valores no pueden ser mayores a 99999999 gramos ni menores a 1."); return 1; }
if(price < 1) { SendClientMessageEx(playerid, COLOR_GREY, "* El precio no puede ser menor que 1!"); return 1; }
if (GetPVarInt(playerid, "ArmsTimer") > 0)
{
    format(string, sizeof(string), "* Tienes que esperar %d segundos despues de haber dado algún arma o materiales.", GetPVarInt(playerid, "ArmsTimer"));
    SendClientMessageEx(playerid,COLOR_GREY,string);
    return 1;
}
if(IsPlayerConnectedEx(playerid))
{
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes venderte a ti mismo.");
			
			format(string, sizeof(string), "* Has ofrecido a %s, %d materiales por $%d.", GetPlayerNameEx(giveplayerid), amount, price);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			format(string, sizeof(string), "* %s quiere venderte %d materiales por $%d, (Usa: /aceptar materiales para comprar).", GetPlayerNameEx(playerid), amount, price);
			SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
			MatsOffer[giveplayerid] = playerid;
			MatsPrice[giveplayerid] = price;
			return MatsAmount[giveplayerid] = amount;
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está cerca tuyo.");
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "* ID Inválido.");
return 1;
}

CMD:serverstats(playerid, params[])
{
	new string[128];
	new formatmin[4];
	if(MPMinute < 10) format(formatmin,sizeof(formatmin),"0%d",MPMinute);
	else format(formatmin,sizeof(formatmin),"%d",MPMinute);
	format(string,sizeof(string),"Estadisticas del Servidor - Versión %s (desde 23 de Junio, 2013).",SERVER_GM_TEXT);
	SendClientMessageEx(playerid, COLOR_GENERAL, string);
	format(string, sizeof(string), "* Objetos: %d | Pickups: %d | Map Icons: %d | 3D Text Labels: %d | TextDraws: %d | Casas: %d",CountDynamicObjects(),CountDynamicPickups(),CountDynamicMapIcons(),CountDynamic3DTextLabels(),textdrawscount,MAX_HOUSES);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "* Logins: %d | Conexiones: %d | Registrados: %d | Autobaneados: %d | Uptime: %d horas",TotalLogin, TotalConnect, TotalRegister, TotalAutoBan, TotalUptime);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "* Usuarios Conectados: %d | Récord: %d (%d/%d/%d - %d:%s) | Vehiculos de Usuarios: %d",Iter_Count(Player),MaxPlayersConnected,MPDay,MPMonth,MPYear,MPHour,formatmin,PlayerCars);
	SendClientMessageEx(playerid, COLOR_GREY, string);
	return 1;
}

CMD:proteccion(playerid, params[])
{
if(Info[playerid][pJob] != 12 && Info[playerid][pJob2] != 12)
{
	SendClientMessageEx(playerid, COLOR_GREY, "No eres un bodyguard.");
	return 1;
}
new string[128], giveplayerid, money;
if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /proteger [playerid] [precio]");
if (GetPVarInt(playerid, "GuardTimer") > 0)
{
	format(string, sizeof(string), "   Debes esperar %d segundos después de haber vendido.", GetPVarInt(playerid, "GuardTimer"));
	SendClientMessageEx(playerid,COLOR_GREY,string);
	return 1;
}
if(money < 2000 || money > 10000) { SendClientMessageEx(playerid, COLOR_GREY, "Precio: $2,000 a $10,000."); return 1; }
if(IsPlayerConnectedEx(giveplayerid))
{

	if(ProxDetectorS(8.0, playerid, giveplayerid))
	{
		if(giveplayerid == playerid)
		{
			SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto para ti mismo.");
			return 1;
		}
		SetPVarInt(playerid, "GuardTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
		format(string, sizeof(string), "* Ofreciste protección a %s por $%d.", GetPlayerNameEx(giveplayerid), money);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		format(string, sizeof(string), "* Bodyguard %s quiere darte protección por $%d, usa /aceptar bodyguard para aceptar.", GetPlayerNameEx(playerid), money);
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
		GuardOffer[giveplayerid] = playerid;
		GuardPrice[giveplayerid] = money;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "El jugador está cerca tuyo.");
	}

}
else
{
	SendClientMessageEx(playerid, COLOR_GREY, "Jugador no está conectado.");
}
return 1;
}

CMD:mostrar(playerid, params[])
{
new string[128], giveplayerid, choice[32];
if(sscanf(params, "ds[32]", giveplayerid, choice))
{
	SendClientMessageEx(playerid, COLOR_WHITE, "USA: /mostrar [playerid] [Nombre]");
	SendClientMessageEx(playerid, COLOR_GREY, "Nombres: Hierba, Crack, Materiales");
	return 1;
}
if(giveplayerid == playerid)
{
    SendClientMessageEx(playerid, COLOR_GREY, "No puedes enseñarte a ti mismo");
	return 1;
}
if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid != INVALID_PLAYER_ID)
	{
		if (!ProxDetectorS(5.0, playerid, giveplayerid))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
			return 1;
		}
		if (strcmp(choice, "materiales", true) == 0)
		{
		    new amount = Info[playerid][pMats];
		    if(amount < 1)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "No tienes materiales!");
				return 1;
		    }
			format(string, sizeof(string), "%s te ha mostrado sus %d Materiales.",  GetPlayerNameEx(playerid), amount);
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

			format(string, sizeof(string), "Enseñaste a %s tus %d Materiales.", GetPlayerNameEx(giveplayerid), amount);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);

			format(string, sizeof(string), "* %s enseña algo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if (strcmp(choice, "hierba", true) == 0)
		{
		    new amount = Info[playerid][pPot];
		    if(amount < 1)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "No tienes hierba!");
				return 1;
		    }
			format(string, sizeof(string), "%s te ha mostrado sus %d bolsas de hierba.",  GetPlayerNameEx(playerid), amount);
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

			format(string, sizeof(string), "Enseñaste a %s tus %d bolsas de hierba.", GetPlayerNameEx(giveplayerid), amount);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);

			format(string, sizeof(string), "* %s enseña algo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		if (strcmp(choice, "crack", true) == 0)
		{
		    new amount = Info[playerid][pCrack];
		    if(amount < 1)
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "No tienes crack!");
				return 1;
		    }
			format(string, sizeof(string), "%s te ha mostrado sus %d gramos de crack.",  GetPlayerNameEx(playerid), amount);
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, string);

			format(string, sizeof(string), "Enseñaste a %s tus %d gramos de crack.", GetPlayerNameEx(giveplayerid), amount);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);

			format(string, sizeof(string), "* %s enseña algo a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
	}
}
return 1;
}

CMD:saludar(playerid, params[])
{
new string[128], giveplayerid, style;
if(sscanf(params, "dd", giveplayerid, style)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /saludar [playerid] [estilo (1-8)]");

if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer eso tu mismo.");

	if(style >= 1 && style < 9)
	{
		new Float: ppFloats[3];
		GetPlayerPos(giveplayerid, ppFloats[0], ppFloats[1], ppFloats[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2]))
		{
			SendClientMessageEx(playerid, COLOR_GREY, "Estás demasiado lejos de la persona.");
			return 1;
		}
		SetPVarInt(playerid, "shrequest", giveplayerid);
		SetPVarInt(playerid, "shstyle", style);

		format(string, sizeof(string), "Saludaste a %s, espera que el responda.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GENERAL, string);

		format(string, sizeof(string), "%s te ha saludado, porfavor usa '/aceptar saludo' para darle la mano.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
	}
	else return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /saludar [playerid] [estilo (1-8)]");
}
else SendClientMessageEx(playerid, COLOR_GREY, "Jugador desconectado.");
return 1;
}

/*CMD:vendercoche(playerid, params[])
{
new vstring[1024];

if(!IsPlayerInRangeOfPoint(playerid, 5, 358.3934,186.1840,1008.3828)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás en el ayuntamiento.");
for(new i; i < MAX_PLAYERVEHICLES; i++)
{
	if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
		format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

	else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
		format(vstring, sizeof(vstring), "%s\n%s (Embargado)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

	else
		format(vstring, sizeof(vstring), "%s\nVacío", vstring);
}
ShowPlayerDialog(playerid, SELLCAR, DIALOG_STYLE_LIST, "Venta de Vehiculo", vstring, "Vender", "Cancelar");
SendClientMessageEx(playerid, COLOR_GENERAL, "Si vendes el vehículo te pagarán la mitad del precio actual del vehículo.");
return 1;
}*/

CMD:vendercoche(playerid, params[])
{
	return SendClientMessageEx(playerid, COLOR_GREY, "Se volvió al comando /borrarcoche.");
}
CMD:gmaletero(playerid, params[])
{
    if(IsACop(playerid)) return SendClientMessageEx(playerid,COLOR_GREY,"* Eres de una fuerza de la ley, no puedes guardar tus armas de trabajo.");
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás en el paintball.");
 	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid,COLOR_GREY, "* No puedes usar este comando mientras estás en un evento.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto mientras estar en el interior del vehículo!");
	if(GetPVarInt(playerid,"Dandoarma") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto ahora");
	if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora mismo.");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /gmaletero [slot 1-3]");
	new pvid = -1, Float: x, Float: y, Float: z;
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
		if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
			pvid = d;
			break;
		}
	}
	if(pvid == -1) return SendClientMessageEx(playerid,COLOR_GREY,"* No estás cerca de un vehículo que sea tuyo.");
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(PlayerVehicleInfo[playerid][pvid][pvId],engine,lights,alarm,doors,bonnet,boot,objective);
	if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessageEx(playerid, COLOR_GREY, "* No se puede poner armas en el interior del maletero si está cerrado! (/v maletero para abrirlo)");
	if(GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 510)  return SendClientMessageEx(playerid,COLOR_GREY,"* Este coche no tiene maletero.");
	if (GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(szMessage, sizeof(szMessage), "   Necesitas esperar %d segundos después de haber guardado un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessageEx(playerid,COLOR_GREY,szMessage);
		return 1;
	}
	new slot = strval(params);
	if(slot < 1 && slot > 3) return SendClientMessage(playerid, COLOR_GREY, "* Slot inválido.");
    if(PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] == 0)
	{
		new weapon;
		weapon = GetPlayerWeapon(playerid);
		switch(weapon)
		{
		    case 16, 18, 35, 36, 37, 38, 39, 40, 44, 45, 46, 0: return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes guardar este arma.");
			default:
			{
				PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] = weapon;
				RemovePlayerWeapon(playerid, weapon);
				format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s guarda un arma en su vehículo.", GetPlayerNameEx(playerid));
	            NearMsg(playerid,-1,szMessage,15.0);
				format(szMessage, sizeof(szMessage), "Guardaste un(a) %s en el slot %d.", WeaponNames[weapon], slot);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Ese slot ya está ocupado.");
	return 1;
}
CMD:smaletero(playerid, params[])
{
	if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando mientras estás en el paintball.");
 	if(GetPVarInt( playerid, "EventToken") != 0) return SendClientMessageEx(playerid,COLOR_GREY, "* No puedes usar este comando mientras estás en un evento.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto mientras estar en el interior del vehículo!");
	if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora mismo.");
	if(Info[playerid][pConnectTime] < 2 || Info[playerid][pWRestricted] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ya que tienes restricción de armas.");
	if(GetPVarInt(playerid, "GiveWeaponTimer") >= 1)
	{
		format(szMessage, sizeof(szMessage), "* Necesitas esperar %d segundos después de haber cogido un arma.", GetPVarInt(playerid, "GiveWeaponTimer"));
		return SendClientMessageEx(playerid, COLOR_GREY, szMessage);
	}
	new Float: fVehPos[3], slot = strval(params);
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID)
		{
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], fVehPos[0], fVehPos[1], fVehPos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 4.0, fVehPos[0], fVehPos[1], fVehPos[2]))
			{
				if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /smaletero [slot]");
				if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509) return SendClientMessageEx(playerid,COLOR_GREY,"Ese vehiculo no tiene maletero.");
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);
				if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessageEx(playerid, COLOR_GREY, "* No se puede coger armas del maletero si está cerrado! (/v maletero para abrirlo)");
                if(PlayerVehicleInfo[playerid][d][pvWeapons][slot - 1] != 0)
                {
                    if(Info[playerid][pWeapons][GetWeaponSlot(PlayerVehicleInfo[playerid][d][pvWeapons][slot - 1])] == 0)
                    {
   						GivePlayerValidWeapon(playerid, PlayerVehicleInfo[playerid][d][pvWeapons][slot - 1]);
						format(szMessage, sizeof(szMessage), ""COL_YELLOW"* "COL_PURPLE"%s retira un arma de su vehículo.", GetPlayerNameEx(playerid));
                    	NearMsg(playerid,-1,szMessage,15.0);
						format(szMessage, sizeof(szMessage), "Retiraste un(a) %s del slot %d.", WeaponNames[PlayerVehicleInfo[playerid][d][pvWeapons][slot - 1]], slot);
						SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		            	PlayerVehicleInfo[playerid][d][pvWeapons][slot - 1] = 0;
                    }
                    else return SendClientMessageEx(playerid, COLOR_GREY, "* Ya tienes un arma del mismo tipo, tírala o guardala en otro slot.");
                }
                else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese slot está vacío.");
			}
		}
	}
	return 1;
}
CMD:limpiar(playerid, params[])
{
	new string[128], giveplayerid;
	if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* /limpiar [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		format(string, sizeof(string), "* Limpiaste el nivel de búsqueda %s.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		format(string, sizeof(string), "* Agente %s a limpiado tu nivel de búsqueda.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
		format(string, sizeof(string), "* Agente %s a limpiado el nivel de búsqueda de %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		SendRadioMessage(1, TEAM_RADIO_COLOR, string);
		SendRadioMessage(2, TEAM_RADIO_COLOR, string);
		SendRadioMessage(3, TEAM_RADIO_COLOR, string);
		Info[giveplayerid][pWantedLevel] = 0;
		SetPlayerToTeamColor(giveplayerid);
		SetPlayerWantedLevel(giveplayerid, 0);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Esa ID es inválida.");
	return 1;
}

CMD:irapunto(playerid, params[])
{
if(Info[playerid][pAdmin] < 2) return NoAutorizado
new points;
if(sscanf(params, "d", points)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /gotopoint [pointid]");
if(points >= MAX_POINTS || points < 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /gotopoint [0-8]");
SetPlayerPos(playerid, Points[points][Pointx], Points[points][Pointy], Points[points][Pointz]);
return 1;
}

CMD:hora(playerid, params[])
{
new time[3];
gettime(time[0], time[1], time[2]);
if(time[1] < 10) format(szMessage, sizeof(szMessage), "Hora Actual: %d:0%d (%d segundos).", time[0], time[1], time[2]);
else format(szMessage, sizeof(szMessage), "Hora Actual: %d:%d (%d segundos).", time[0], time[1], time[2]);
SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
format(szMessage, sizeof(szMessage), "Tu próximo paycheck será en %d minutos (%d segundos).", (3600-Info[playerid][pTimePayDay])/60, (3600-Info[playerid][pTimePayDay]));
SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
SendClientMessageEx(playerid, COLOR_GRAD1, "Recuerda que al estar AFK no recibirás PayCheck.");
return 1;
}

CMD:shopvest(playerid, params[])
{
	if (Info[playerid][pAdmin] < 6 ) return SendClientMessageEx(playerid, COLOR_GREY, " No puedes usar este comando.");
	new string[128], giveplayerid, slot, invoice[64];
	if(sscanf(params, "dds[64]", giveplayerid, slot, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /shopvest [playerid] [slot(0-9)] [invoice #]");

	PlayerToyInfo[giveplayerid][slot][ptModelID] = 19515;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 1;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = 0.07998;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = 0.03999;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 0.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 0.0;
	format(string, sizeof(string), "Police Vest en el slot %d, usa /toys para editar la posición.", slot);
	SendClientMessageEx(giveplayerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "Diste a %s un police vest en el slot %d", GetPlayerNameEx(giveplayerid), slot);
	SendClientMessageEx(playerid, COLOR_LIGHTGREEN, string);
	format(string, sizeof(string), "[SHOPVEST] %s has given %s a police vest toy - Invoice %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
	Log("logs/shoplog.log", string);
	return 1;
}

CMD:listatoys(playerid, params[])
{
if (Info[playerid][pAdmin] >= 4)
{
	new
		iTargetID;

	if(sscanf(params, "d", iTargetID)) {
		SendClientMessageEx(playerid, COLOR_GREY, "USA: /listatoys [playerid]");
	}
	else if(IsPlayerConnectedEx(iTargetID))
	for(new iToyIter, szMessageex[128]; iToyIter < MAX_PLAYERTOYS; ++iToyIter)
	{
		for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsAll); ++LoopRapist) {
			if(HoldingObjectsAll[LoopRapist][holdingmodelid] == PlayerToyInfo[iTargetID][iToyIter][ptModelID]) {
				format(szMessageex, sizeof(szMessageex), "%s (slot %i, parte: %s)", HoldingObjectsAll[LoopRapist][holdingmodelname], iToyIter, HoldingBones[PlayerToyInfo[iTargetID][iToyIter][ptBone]]);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessageex);
				break;
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "Jugador Invalido.");
}
return 1;
}

CMD:placa(playerid, params[])
{
if(Info[playerid][pMember] >= 1 || Info[playerid][pLeader] >= 1){
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /placa [playerid]");
	if(giveplayerid != INVALID_PLAYER_ID){
		if(ProxDetectorS(5.0, playerid, giveplayerid)){
			switch(Info[playerid][pMember]){
				case 1 .. 4:{
					new
					infoArrays[3][64];

					GetPlayerFactionInfo(playerid, infoArrays[0], infoArrays[1], infoArrays[2]);

					SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
					format(string, sizeof(string), "%s %s es un miembro de %s.", infoArrays[0], GetPlayerNameEx(playerid), infoArrays[2]);
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "Asignación actual: %s.", infoArrays[1]);
					SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
					switch(Info[playerid][pMember]){
						case 1 .. 4: SendClientMessageEx(giveplayerid, COLOR_WHITE, "Con autoridad en San Andreas.");
					}
					if(Info[playerid][pMember] != 4) SendClientMessageEx(giveplayerid, COLOR_WHITE, "Oficial tiene la autoridad para arrestar.");
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
					format(string, sizeof(string), "* %s muesta su placa a %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				default: SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una facción del estado.");
			}
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca de ti.");
	}
	else SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una facción del estado.");
}
return 1;
}

CMD:reparar(playerid, params[])
{
if(IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes reparar un vehiculo estando dentro de uno.");
new string[128];
if(GetPVarInt(playerid, "EventToken")) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto en un evento.");
new giveplayerid, money;
if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /reparar [playerid] [precio]");
if(Team_Mecanicos(playerid)){
	if(money < 1 || money > 10000) { SendClientMessageEx(playerid, COLOR_GREY, "   Precio: $1 a $10,000!"); return 1; }
	if(IsPlayerConnectedEx(giveplayerid)){
		if(giveplayerid != INVALID_PLAYER_ID){
		    new closestcar = GetClosestCar(playerid);
  			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 8.0)){
				if(ProxDetectorS(8.0, playerid, giveplayerid)&& IsPlayerInAnyVehicle(giveplayerid)){
					if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes hacer esto!"); return 1; }
                    if(!IsAMBike(closestcar) && !IsAPlane(closestcar))
					{
						new engine,lights,alarm,doors,bonnet,boot,objective;
						GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
						if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
						{
							SendClientMessageEx(playerid, COLOR_GRAD1, "Este vehiculo necesita estar con el capo abierto para repararlo.");
							return 1;
						}
					}
					format(string, sizeof(string), "* Ofreciste a %s reparar su coche por $%d .",GetPlayerNameEx(giveplayerid),money);
					SendClientMessageEx(playerid, COLOR_GENERAL, string);
					format(string, sizeof(string), "* Mecánicos %s quiere reparar tu coche por $%d. (usa /aceptar fix)",GetPlayerNameEx(playerid),money);
					SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
					RepairOffer[giveplayerid] = playerid;
					RepairPrice[giveplayerid] = money;
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador debe estar cerca tuyo y dentro de un auto.");
			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ningún vehiculo no está cerca tuyo.");
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "* Jugador desconectado.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "* No eres mecánico.");
return 1;
}

CMD:revisar(playerid, params[])
{
if(Info[playerid][pConnectTime] > 3)
{
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /revisar [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if (ProxDetectorS(8.0, playerid, giveplayerid))
		{
		    if(GetPlayerSpecialAction(giveplayerid) != SPECIAL_ACTION_HANDSUP) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes revisar a una persona si no tiene las manos arriba ((/rendirse)).");
			if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes buscarte a ti mismo!");
			SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "*** Objetos de %s ...  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			if(Info[giveplayerid][pPot] > 0)
			{
				format(string, sizeof(string), "%d gramos de hierba.", Info[giveplayerid][pPot]);
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
			if(Info[giveplayerid][pWSeeds] == 1)
			{
				SendClientMessageEx(playerid, COLOR_GREY, "Semillas de hierba");
			}
			if(Info[giveplayerid][pCrack] > 0)
			{
				format(string, sizeof(string), "%d gramos de crack.", Info[giveplayerid][pCrack]);
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
			if(Info[giveplayerid][pMats] > 0)
			{
				format(string, sizeof(string), "%d materiales.", Info[giveplayerid][pMats]);
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
			if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0)
			{
				format(string, sizeof(string), "%d peces.", Info[giveplayerid][pFishes]);
				SendClientMessageEx(playerid, COLOR_GREY, string);
			}
			if(Info[giveplayerid][pPhoneBook] > 0) SendClientMessageEx(playerid, COLOR_GREY, "Phone book.");
			new weaponname[50];
			format(string, sizeof(string), "*** Armas de %s...  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			for (new i = 0; i < 13; i++)
			{
				if(Info[giveplayerid][pWeapons][i] > 0)
				{
					GetWeaponName(Info[giveplayerid][pWeapons][i], weaponname, sizeof(weaponname));
					format(string, sizeof(string), "Armas: %s.", weaponname);
					SendClientMessageEx(playerid, COLOR_GRAD1, string);
				}
			}
			new cash =  GetPlayerCash(giveplayerid);
			format(string, sizeof(string), "*** Dinero: %d  ***", cash);
			SendClientMessageEx(playerid, COLOR_GRAD1, string);
			SendClientMessageEx(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "* %s revisa a %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado no válido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "   No puedes hacer esto - necesitas tener 3 horas jugadas!");
return 1;
}

CMD:unlockveh(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 3)
	{
		new vehicleid;
		if(sscanf(params, "d", vehicleid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /unlockveh [vehicle id]");

		if(IsValidVehicleID(vehicleid))
		{
			vehicle_unlock_doors(Info[playerid][pLockCar]);
			GameTextForPlayer(playerid, "~g~unlocked", 1000, 6);
			PlayerPlaySoundEx(1145, 0.0, 0.0, 0.0);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Invalid vehicle ID");
 	}
	else NoAutorizado
	return 1;
}
/*
CMD:noobs(playerid, params[])
{
if(Info[playerid][pAdmin] >= 1)
{
	SendClientMessageEx(playerid,COLOR_WHITE,"Lista de todos los noobs...");
	new
		Noobs[14 + MAX_PLAYER_NAME];
	foreach(Player, i) if(Info[i][pConnectTime] < 2)
	{
		format(Noobs, sizeof(Noobs), "* %s (ID %i)", GetPlayerNameEx(i), i);
		SendClientMessageEx(playerid, COLOR_WHITE, Noobs);
	}
}
return 1;
}
*/
CMD:calcular(playerid, params[])
{
	new string[128], method[20], value1, value2;
	if(sscanf(params, "ds[20]d", value1, method, value2))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /calcular [valor] [operación] [valor].");
		SendClientMessageEx(playerid, COLOR_GRAD2, "Operaciones: sumar [+], restar [-], Multiplicar[*], Dividir.[/]");
		return 1;
	}
	if(strcmp(method,"multiplicar",true) == 0 || strcmp(method,"*",true) == 0)
	{
		new sum = value1*value2;
		format(string,sizeof(string),"* %d multiplicado por %d: %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"dividir",true) == 0 || strcmp(method,"/",true) == 0)
	{
		switch(value2)
		{
		    case 0: return SendClientMessageEx(playerid,COLOR_GREY,"* No se puede dividir por 0!");
		    default:
		    {
		    	new sum = value1/value2;
				format(string,sizeof(string),"* %d dividido por %d: %i.",value1,value2,sum);
				SendClientMessageEx(playerid,COLOR_WHITE,string);
			}
		}
	}
	if(strcmp(method,"sumar",true) == 0 || strcmp(method,"+",true) == 0)
	{
		new sum = value1+value2;
		format(string,sizeof(string),"* %d + %d = %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"restar",true) == 0 || strcmp(method,"-",true) == 0)
	{
		new sum = value1-value2;
		format(string,sizeof(string),"* %d - %d = %i.",value1,value2,sum);
		SendClientMessageEx(playerid,COLOR_WHITE,string);
	}
	return 1;
}

CMD:adunmute(playerid, params[])
{
	if (Info[playerid][pAdmin] >= 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /adunmute [playerid]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if(Info[giveplayerid][pADMute] == 1)
			{
				if(Info[giveplayerid][pJailed] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes desmutear del comando /ad si la persona está en jail!");

				format(string, sizeof(string), "AdmCmd: %s fue desmuteado del cmd /ad por %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,2);
				Log("logs/admin.log", string);
				Info[giveplayerid][pADMute] = 0;
				Info[giveplayerid][pADMuteTotal]--;
			}
			else return SendClientMessageEx(playerid, COLOR_LIGHTRED,"Ese jugador ya está muteado de los anuncios!");
		}
	}
	return 1;
}

CMD:admute(playerid, params[]){
if (Info[playerid][pAdmin] >= 2 || Info[playerid][pHelper] >= 2){
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /admute [playerid]");

	if(IsPlayerConnectedEx(giveplayerid)){
		if(Info[giveplayerid][pAdmin] >= 5) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando con administradores de mayor rango.");
		if(Info[giveplayerid][pADMute] == 0){
			Info[giveplayerid][pADMute] = 1;
			Info[giveplayerid][pADMuteTotal] += 1;
			format(string, sizeof(string), "AdmCmd: %s fue muteado del cmd /ad por %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
			Log("logs/admin.log", string);
			ABroadCast(COLOR_GENERAL,string,2);
			if(Info[giveplayerid][pADMuteTotal] > 6){
				new year, month,day;
				getdate(year, month, day);
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdmCmd: %s(IP:%s) was banned by %s, reason: Excessive advertisement mutes (%d-%d-%d)", GetPlayerNameEx(giveplayerid),playerip,GetPlayerNameEx(playerid),month,day,year);
				Log("logs/ban.log", string);
				format(string, sizeof(string), "AdmCmd: %s fue baneado, razón: Ad´s Abussing [Total: 6]", GetPlayerNameEx(giveplayerid));
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				Info[giveplayerid][pBanned] = 2;
				new ip[32];
				GetPlayerIp(giveplayerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(giveplayerid);
			}
		}
		else{
			if(Info[playerid][pAdmin] >= 2){
				ShowAdMuteFine(giveplayerid);
				format(string, sizeof(string), "Ofreciste a %s una posibilidad de desmutearse del comando /ad.", GetPlayerNameEx(giveplayerid));
				SendClientMessageEx(playerid, COLOR_WHITE, string);
			}
			else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ese jugador ya está muteado del comando /ad.");
		}
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando!");
return 1;
}
/*
CMD:prision(playerid, params[])
{
if(!IsPlayerInRangeOfPoint(playerid, 8.0, 206.4930,1861.8280,13.1406)) return SendClientMessageEx(playerid, COLOR_GREY, "No estás en el punto de arresto para Fort DeMorgan.");
new giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /prision [playerid]");
if(Info[playerid][pRank] < 2) return SendClientMessageEx(playerid, COLOR_WHITE, "Usted debe tener al menos el rango 2.");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(giveplayerid == playerid) { SendClientMessageEx(playerid, COLOR_GREY, "   No puedes meterte a la prisión a ti mismo"); return 1; }
	if(Info[giveplayerid][pJudgeJailTime] == 0 && Info[giveplayerid][pJudgeJailType] != 2) { SendClientMessageEx(playerid, COLOR_GREY, "Este jugador no tiene que estar en la cárcel!"); return 1; }
	if(ProxDetectorS(8.0, playerid, giveplayerid))
	{
		new string[37 + MAX_PLAYER_NAME];
		SetPVarInt(giveplayerid, "IsFrozen", 0);
		format(string, sizeof(string), "* Has traído a %s a Fort DeMorgan.", GetPlayerNameEx(giveplayerid));
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		format(string, sizeof(string), "* %s te ha llevado a Fort DeMorgan.", GetPlayerNameEx(playerid));
		SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
		GameTextForPlayer(giveplayerid, "~w~Bienvenido to ~n~~r~Fort DeMorgan", 5000, 3);
		TogglePlayerControllable(giveplayerid, 1);
		ClearAnimations(giveplayerid);
		Info[giveplayerid][pEstado] = 0;
		SetPVarInt(giveplayerid, "PlayerCuffed", 0);
		Info[giveplayerid][pWantedLevel] = 0;
		SetPlayerToTeamColor(giveplayerid);
		SetPlayerWantedLevel(giveplayerid, 0);
		SetPlayerSkin(giveplayerid, 50);
		Info[giveplayerid][pJailed] = 5;
		PhoneOnline[giveplayerid] = 1;
		Info[giveplayerid][pJailTime] = Info[giveplayerid][pJudgeJailTime];
		SetPlayerInterior(giveplayerid, 0);
		Info[giveplayerid][pInt] = 0;
		SetPlayerSkin(giveplayerid, 50);
		SetPlayerVirtualWorld(giveplayerid, 1000);
		Info[giveplayerid][pVW] = 1000;
		SetPlayerColor(giveplayerid, TEAM_ORANGE_COLOR);
		LoadObjects(giveplayerid);
		new rand = random(sizeof(ICPrisonSpawns));
		Streamer_UpdateEx(giveplayerid, ICPrisonSpawns[rand][0], ICPrisonSpawns[rand][1], ICPrisonSpawns[rand][2]);
		SetPlayerPos(giveplayerid, ICPrisonSpawns[rand][0], ICPrisonSpawns[rand][1], ICPrisonSpawns[rand][2]);
		ResetPlayerWeaponsEx(giveplayerid);
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "Jugador no válido.");
return 1;
}

CMD:orden(playerid, params[])
{
if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No formas parte del sistema judicial!");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No estás autorizado a usar este comando, razón: Rango insuficiente.");
new string[128], crime[64], giveplayerid;
if(sscanf(params, "ds[64]", giveplayerid, crime)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /orden [playerid] [crimen]");

//if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes hacer esto tu mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(strlen(Info[giveplayerid][pWarrant]) != 0) return SendClientMessageEx(playerid, COLOR_GRAD5, "Ese jugador ya tiene órdenes activas.");
	format(Info[giveplayerid][pWarrant], 64, crime);
	format(string, sizeof(string), "* Corte: Se ordena detener y presentar ante la corte judicial a %s para responder a las acusaciones de:", GetPlayerNameEx(giveplayerid));
	for(new i = 1; i < 5; i++){SendRadioMessage(i, TEAM_RADIO_COLOR, string);}
	SendRadioMessage(7, TEAM_RADIO_COLOR, string);
	SendRadioMessage(9, TEAM_RADIO_COLOR, string);
	format(string, sizeof(string), "* Corte: %s", crime);
	for(new i = 1; i < 5; i++){SendRadioMessage(i, TEAM_RADIO_COLOR, string);}
	SendRadioMessage(7, TEAM_RADIO_COLOR, string);
	SendRadioMessage(9, TEAM_RADIO_COLOR, string);
}
return 1;
}

CMD:qorden(playerid, params[])
{
if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del sistema judicial!");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes hacer esto - sólo rangos mayores a 3.");
new string[128], giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /qorden [playerid]");
//if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes removerte órdenes tú mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(strlen(Info[giveplayerid][pWarrant]) == 0) return SendClientMessageEx(playerid, COLOR_GRAD5, "Ese jugador no tiene órdenes pendientes.");
	format(Info[giveplayerid][pWarrant], 128, "");
	format(string, sizeof(string), "Removiste la órden de %s.", GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid, COLOR_GRAD2, string);
}
return 1;
}

CMD:arrestojudicial(playerid, params[])
{
new string[128];

if(IsACop(playerid))
{
    if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_GRAD4, "Deben estar al menos conectados 1 juez para hacer esto!");
    if(!IsPlayerInRangeOfPoint(playerid, 4.0, 1455.6334,-1692.9596,15.4303)) return SendClientMessageEx(playerid, COLOR_GREY, "Debes estar en el punto de arresto judicial (Espalda de la corte judicial).");
	new suspect = GetClosestPlayer(playerid);
	if(IsPlayerConnectedEx(suspect))
	{
		if(ProxDetectorS(5.0, playerid,suspect))
		{
			if(strlen(Info[suspect][pWarrant]) < 1) return SendClientMessageEx(playerid, COLOR_GREY, "El jugador debe tener órdenes de activos.");
			format(string, sizeof(string), "* Fuiste transladado a la carceleta judicial %s!", GetPlayerNameEx(suspect));
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			ResetPlayerWeaponsEx(suspect);
			format(string, sizeof(string), "<< Acusado %s fue entregado a la corte por el oficial %s, ahora el sujeto está esperando por un juez >>", GetPlayerNameEx(suspect), GetPlayerNameEx(playerid));
			SendRadioMessage(5, TEAM_RADIO_COLOR, string);
			SetPlayerInterior(suspect, 1);
			SetPlayerVirtualWorld(suspect, 20025);
			Info[suspect][pVW] = 20025;
			TogglePlayerControllable(suspect, 0);
			new rand = random(sizeof(WarrantJail));
			SetPlayerFacingAngle(suspect, 0);
			SetPlayerPos(suspect, WarrantJail[rand][0], WarrantJail[rand][1], WarrantJail[rand][2]);
			if(rand != 0) courtjail[suspect] = 2;
			else courtjail[suspect] = 1;
			SetCameraBehindPlayer(suspect);
   			GameTextForPlayer(suspect, "Objects loading...", 4000, 5);
			SetPVarInt(suspect, "LoadingObjects", 1);
			SetTimerEx("SafeLoadObjects", 4000, 0, "d", suspect);
			SetPVarInt(suspect, "IsFrozen", 0);
			Info[suspect][pEstado] = 0;
			SetPVarInt(suspect, "PlayerCuffed", 0);
			PlayerCuffedTime[suspect] = 0;
			PhoneOnline[suspect] = 1;
			Info[suspect][pArrested] += 1;
    		//WantedPoints[suspect] = 0;
	    	Info[suspect][pWantedLevel] = 0;
	    	SetPlayerToTeamColor(suspect);
	    	SetPlayerWantedLevel(suspect, 0);
		    //WantLawyer[suspect] = 1;
			ClearAnimations(suspect);
			Info[suspect][pBeingSentenced] = 60;
			SendClientMessageEx(suspect, COLOR_GENERAL, "Usted ha sido arrestado por una orden judicial pendiente, usted será atendido por un juez en breve.");
            foreach(Player, i)
			{
				if(IsACop(i))
				{
					format(string, sizeof(string), "HQ: A todas las unidades, oficial %s completó su objetivo.",playerid);
					SendClientMessageEx(i, TEAM_RADIO_COLOR, string);
					format(string, sizeof(string), "HQ: %s ha sido procesado, razón: %s.",suspect,Info[suspect][pWarrant]);
					SendClientMessageEx(i, TEAM_RADIO_COLOR, string);
				}
			}
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "   Nadie está cerca tuyo.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "   No eres policía!");
return 1;
}
*/

CMD:buscados(playerid, params[])
{
if(IsACop(playerid)||Info[playerid][pMember] == 9) // temp
{
	if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_GRAD4, "Debe de estar en línea al menos un juez!");
	SendClientMessageEx(playerid, COLOR_YELLOW, "Lista de órdenes judiciales pendientes:");
	new fCounter,string[128];
	foreach(Player, i)
	{
		if(!isnull(Info[i][pWarrant]))
		{
			format(string, sizeof(string), "%s (%d) - razón: %s.",GetPlayerNameEx(i),i,Info[i][pWarrant]);
			SendClientMessageEx(playerid, COLOR_GRAD1, string);
			++fCounter;
		}
	}
	if(fCounter <= 0) SendClientMessageEx(playerid, COLOR_GRAD1, "No hay órdenes judiciales pendientes.");
}
return 1;
}
/*
CMD:presentar(playerid, params[])
{
if(Info[playerid][pMember] == 9 || Info[playerid][pLeader] == 9)
{
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /presentar [playerid]");
	if(IsPlayerConnectedEx(giveplayerid))
	{
		if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes hacer esto contigo mismo!");
		if(Info[giveplayerid][pBeingSentenced] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ese jugador no tiene sentencias pendientes!");
		if(courtjail[giveplayerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD1, "Ese jugador no está en la carceleta de la Corte!");
		if(courtjail[giveplayerid] == 2)
		{
			SetPlayerPos(giveplayerid, 2132.0679,1314.2238,7699.0547);
	    	SetPlayerFacingAngle(giveplayerid, 354.2492);
		}
		else if(courtjail[giveplayerid] == 1)
		{
			SetPlayerPos(giveplayerid, 2131.8599,1294.4722,7699.0547);
	    	SetPlayerFacingAngle(giveplayerid, 182.6859);
		}
		courtjail[giveplayerid] = 0;
	    SetCameraBehindPlayer(giveplayerid);
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del Sistema Judicial!");
return 1;
}

CMD:multajudicial(playerid, params[])
{
if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No formas parte del sistema judicial!");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando! - Rango mayores a 3.");
new string[128], giveplayerid, judgefine, reason[64];
if(sscanf(params, "dds", giveplayerid, judgefine, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "/multajudicial [playerid] [Multa max de $250,000] [razón]");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando contigo mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
    if(!Info[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "Ese jugador no se tiene una sentencia!");
	if(judgefine < 1 && judgefine > 250000) return SendClientMessageEx(playerid, COLOR_GRAD5, "Monto de la multa no podrá ser inferior a $ 1 o superior a $ 250.000!");
	GivePlayerCash(giveplayerid, -judgefine);
	Tax += judgefine;
	format(string, sizeof(string), "Multaste a %s por $%d, razón: %s", GetPlayerNameEx(giveplayerid), judgefine, reason);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "Fuiste multado por $%d por %s, razón: %s", judgefine, GetPlayerNameEx(playerid), reason);
	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
}
return 1;
}

CMD:juicio(playerid, params[])
{
new string[128], giveplayerid;

if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del Sistema Judicial!");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando! - Rango mayores a 3.");
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /juicio [playerid]");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando contigo mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
    if(Info[giveplayerid][pBeingSentenced])
    {
    	Info[giveplayerid][pBeingSentenced] += 10;
    	format(string, sizeof(string), "Has extendido el juicio de %s por 10 minutos más, Tiempo: %d", GetPlayerNameEx(giveplayerid), Info[giveplayerid][pBeingSentenced]);
    	SendClientMessageEx(playerid, COLOR_WHITE, string);
    	format(string, sizeof(string), "%s extendieron tu juicio a 10 minutos más, Tiempo: %d", GetPlayerNameEx(playerid), Info[giveplayerid][pBeingSentenced]);
    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "El jugador tiene que estar en la sala de juicio.");
}
return 1;
}

CMD:librarcargos(playerid, params[])
{
new string[128], giveplayerid;

if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del Sistema Judicial!");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando! - Rango mayores a 3.");
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /librarcargos [playerid]");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando contigo mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
    if(Info[giveplayerid][pBeingSentenced])
    {
    	Info[giveplayerid][pBeingSentenced] = 0;
    	TogglePlayerControllable(giveplayerid, 1);
    	SetPVarInt(giveplayerid, "IsFrozen", 0);
		PhoneOnline[giveplayerid] = 0;
		format(Info[giveplayerid][pWarrant], 128, "");
    	format(string, sizeof(string), "Dejaste libre de todos los cargos a %s.", GetPlayerNameEx(giveplayerid));
    	SendClientMessageEx(playerid, COLOR_WHITE, string);
    	format(string, sizeof(string), "%s ganaste el juicio! Te liberaron de todos los cargos, ahora eres libre.", GetPlayerNameEx(playerid));
    	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	}
	else SendClientMessageEx(playerid, COLOR_GRAD2, "El jugador tiene que estar en la sala de juicio.");
}
return 1;
}

CMD:recompensa(playerid, params[])
{
if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del Sistema Judicial!");
if(Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes rango suficiente para usar este comando (4).");
new giveplayerid,money;
if(sscanf(params, "dd", giveplayerid, money)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /recompensa [playerid] [Dinero(max de $50,000)]");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando contigo mismo!");
if(Info[giveplayerid][pMember] == Info[playerid][pMember]) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando a uno de tu facción!");
if(IsPlayerConnectedEx(giveplayerid))
{
	new string[64 + (MAX_PLAYER_NAME * 2)];

	if(money < 1 || money > 50000) return SendClientMessageEx(playerid, COLOR_GRAD5, "Max de $50,000 y Minimo 0!");
	new rank[64], division[64], employer[64];
	GetPlayerFactionInfo(playerid, rank, division, employer);
    format(string, sizeof(string), "{AA3333}AdmWarning{FFFF00}: %s %s acaba de recompensar a %s con $%d.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money);
    ABroadCast(COLOR_YELLOW,string, 2);
    new year,month,day,log[128];
	getdate(year, month, day);
	format(log, sizeof(log), "AdmCmd: %s %s has just rewarded %s $%d(%d-%d-%d)", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money, month, day, year);
	Log("logs/rpspecial.log", log);
	GivePlayerCash(giveplayerid, money);
	format(string, sizeof(string), "Diste una recompensa de $%d a %s.", money, GetPlayerNameEx(giveplayerid));
    SendClientMessageEx(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "Recibiste una recompensa de $%d del %s %s.", money, rank, GetPlayerNameEx(playerid));
   	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
}
return 1;
}

CMD:verjuicios(playerid, params[])
{
if(IsACop(playerid))
{

	if(JudgeOnlineCheck() == 0) return SendClientMessageEx(playerid, COLOR_GRAD4, "Deben estar almenos 1 juez en línea!");
	SendClientMessageEx(playerid, COLOR_YELLOW, "Juicios pendientes:");
	new string[53],fCounter;
	foreach(Player, i)
	{
		if(Info[i][pJudgeJailType] == 1)
		{
  			if(Info[i][pJailed] == 2)
	    	{
				format(string, sizeof(string), "Sentenciado: %s - Carceleta (transporte completado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				++fCounter;
			}
			else
			{
				format(string, sizeof(string), "Sentenciado: %s - Carceleta (siendo transportado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				++fCounter;
			}
		}
		else if(Info[i][pJudgeJailType] == 2)
		{
			if(Info[i][pJailed] == 5)
			{
				format(string, sizeof(string), "Sentenciado: %s - Prisión (transporte completado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				++fCounter;
			}
			else
			{
				format(string, sizeof(string), "Sentenciado: %s - Prisión (siendo transportado) - tiempo: %d.",GetPlayerNameEx(i),Info[i][pJudgeJailTime]);
				SendClientMessageEx(playerid, COLOR_GRAD1, string);
				++fCounter;
			}
		}
	}
	if(fCounter <= 0) SendClientMessageEx(playerid, COLOR_GRAD1, "No hay jucios pendientes.");
}
return 1;
}

CMD:revertir(playerid, params[])
{

if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del Sistema Judicial!");
if(Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes rango suficiente para usar este comando (4).");
new giveplayerid; // For future reference - sscanf plugin is 3 times as fast as ReturnUser, even when used on only one argument
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /revertir [playerid]");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar el comando de esta manera!");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(Info[giveplayerid][pJudgeJailTime] != 0)
	{
 		new rank[64], division[64], employer[64], string[52 + (MAX_PLAYER_NAME * 2)];
   		GetPlayerFactionInfo(playerid, rank, division, employer);
		if(Info[giveplayerid][pJailTime] != 0) Info[giveplayerid][pJailTime] = 0;
		Info[giveplayerid][pJudgeJailTime] = 0;
		switch(Info[giveplayerid][pSex])
		{
		    case 1: format(string, sizeof(string), "%s %s ha revertido el juicio de %s, ahora él es libre de irse.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		    case 2: format(string, sizeof(string), "%s %s ha revertido el juicio de %s, ahora ella es libre de irse.", rank, GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
		}
		for(new i = 1; i < 5; i++)
		{
	    	SendRadioMessage(i, TEAM_RADIO_COLOR, string);
		}
		SendRadioMessage(7, TEAM_RADIO_COLOR, string);
		SendRadioMessage(9, TEAM_RADIO_COLOR, string);
	}
    else return SendClientMessageEx(playerid, COLOR_GRAD1, "Ese jugador no tiene una sentencia de cárcel/prisión.");
}
return 1;
}

CMD:perdonar(playerid, params[])
{
if(Presidente(playerid))
{
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /perdonar [playerid]");
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar el comando de esta manera!");
	if(IsPlayerConnectedEx(giveplayerid))
	{
	    if(Info[giveplayerid][pJudgeJailTime] != 0)
	    {
			new string[58 + (MAX_PLAYER_NAME * 2)];
	        if(Info[giveplayerid][pJailTime] != 0) Info[giveplayerid][pJailTime] = 0;
	        Info[giveplayerid][pJudgeJailTime] = 0;
	        switch(Info[giveplayerid][pSex])
			{
			    case 1: format(string, sizeof(string), "Presidente %s ha perdonado a %s de todos sus crimenes, él ahora es libre.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			    case 2: format(string, sizeof(string), "Presidente %s ha perdonado a %s de todos sus crimenes, ella ahora es libre.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			}
			for(new i = 1; i < 5; i++)
			{
		    	SendRadioMessage(i, TEAM_RADIO_COLOR, string);
			}
			SendRadioMessage(7, TEAM_RADIO_COLOR, string);
			SendRadioMessage(9, TEAM_RADIO_COLOR, string);
	    }
	    else return SendClientMessageEx(playerid, COLOR_GRAD1, "Este jugador no está en una condena de prisión o cárcel.");
	}
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "Sólo el presidente puede usar este comando.");
return 1;
}

CMD:scarcel(playerid, params[])
{
if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del sistema judicial");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes rango suficiente para usar este comando (3).");
new string[128], giveplayerid, jailtime, reason[64];
if(sscanf(params, "dds", giveplayerid, jailtime, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /scarcel [playerid] [tiempo 1-60 minutos] [razón] (Cmd para sentenciar a Cárcel)");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes hacer esto contigo mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
	if(!Info[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "Ese jugador no está sentenciado!");
	if(jailtime < 1 && jailtime > 60) return SendClientMessageEx(playerid, COLOR_GRAD5, "Tiempo no puede ser mayor a 60 minutos!");
	Info[giveplayerid][pJudgeJailType] = 1;
	Info[giveplayerid][pJudgeJailTime] = jailtime*60;
	format(string, sizeof(string), "Sentenciaste a %s a cumplir %d minutos en la cárcel, razón: %s", GetPlayerNameEx(giveplayerid), jailtime, reason);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "Usted ha sido sentenciado a cumplir %d minutos en la cárcel por %s, razón: %s", jailtime, GetPlayerNameEx(playerid), reason);
	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	if(IsACop(giveplayerid))
	{
	    SendClientMessageEx(giveplayerid, COLOR_GENERAL,"* Usted ha sido auto-eliminado de su facción al ser condenado a la cárcel, ahora eres un civil más.");
		Info[giveplayerid][pMember] = 0;
		Info[giveplayerid][pRank] = 0;
		Info[giveplayerid][pChar] = 0;
		OnDuty[playerid] = 0;
		Info[giveplayerid][pLeader] = 0;
		SetPlayerToTeamColor(giveplayerid);
		pTazer[giveplayerid] = 0;
	}
}
return 1;
}

CMD:sprision(playerid, params[])
{
if(Info[playerid][pMember] != 9) return SendClientMessageEx(playerid, COLOR_GRAD1, "No eres parte del sistema judicial!");
if(Info[playerid][pRank] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes rango suficiente para usar este comando (3).");
new string[128], giveplayerid, jailtime, reason[64];
if(sscanf(params, "dds", giveplayerid, jailtime, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /sprision [playerid] [tiempo 1-1200 minutos] [razón] (Cmd para sentenciar a Prisión)");
if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes hacer esto contigo mismo!");
if(IsPlayerConnectedEx(giveplayerid))
{
    if(!Info[giveplayerid][pBeingSentenced]) return SendClientMessageEx(playerid, COLOR_GRAD5, "Ese jugador no se está condenado!");
	if(jailtime < 1 && jailtime > 1200) return SendClientMessageEx(playerid, COLOR_GRAD5, "Tiempo no puede ser mayor a 1200 minutos");
	Info[giveplayerid][pJudgeJailType] = 2;
	Info[giveplayerid][pJudgeJailTime] = jailtime*60;
	format(string, sizeof(string), "Sentenciaste a %s a cumplir %d minutos en prisión, razón: %s", GetPlayerNameEx(giveplayerid), jailtime, reason);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "Usted ha sido sentenciado a cumplir %d minutos en prisión por %s, razón: %s", jailtime, GetPlayerNameEx(playerid), reason);
	SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
	if(IsACop(giveplayerid))
	{
	    SendClientMessageEx(giveplayerid, COLOR_GENERAL,"* Usted ha sido auto-eliminado de su facción al ser condenado a la prisión, ahora eres un civil más.");
		Info[giveplayerid][pMember] = 0;
		Info[giveplayerid][pRank] = 0;
		Info[giveplayerid][pChar] = 0;
		OnDuty[playerid] = 0;
		Info[giveplayerid][pLeader] = 0;
		SetPlayerToTeamColor(giveplayerid);
		pTazer[giveplayerid] = 0;
	}
}
return 1;
}
*/
CMD:pescar(playerid, params[])
{
if(Carnada[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No has comprado carnadas para pescar.");
if(Lineas[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes lineas para la caña de pesca.");
if(Info[playerid][pFishes] > 15) return SendClientMessageEx(playerid, COLOR_GREY, "* Has pescado bastante por ahora, toma un descanso.");
if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
{
	SendClientMessageEx(playerid, COLOR_GREY, "* No puedes llevar más de cinco peces en un momento - vender o ponerlos en libertad en primer lugar.");
	return 1;
}
new string[128];
new Veh = GetPlayerVehicleID(playerid);
if((IsAtFishPlace(playerid)) || IsABoat(Veh))
{
	new Caught;
	new rand;
	new fstring[MAX_PLAYER_NAME];
	new Level = Info[playerid][pFishSkill];
	if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
	else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
	else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
	else if(Level >= 401) { Caught = random(180)-70; }
	rand = random(FishNamesNumber);
	if(Caught <= 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "La línea se rompió.");
		Lineas[playerid]--;
		return 1;
	}
	else if(rand == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Atrapaste una camisa rota y la botaste a la basura.");
		Carnada[playerid]--;
		return 1;
	}
	else if(rand == 4) return SendClientMessageEx(playerid, COLOR_GREY, "Atrapaste un pantalon y lo tiraste lejos.");
	else if(rand == 7)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "Atrapaste un lata de comida vacía y la tiraste a la basura.");
		Carnada[playerid]--;
		return 1;
	}
	else if(rand == 10) return SendClientMessageEx(playerid, COLOR_GREY, "Atrapaste... Zapatos viejos y los botaste.");
	else if(rand == 13) return SendClientMessageEx(playerid, COLOR_GREY, "Atrapaste una bolsa con basura y lo botaste.");
	else if(rand == 20)
	{
		new mrand = random(140);
		format(string, sizeof(string), "* Atrapaste una billetera con dinero. ($%d).", mrand);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		GivePlayerCash(playerid, mrand);
		Carnada[playerid]--;
		return 1;
	}
	if(Fishes[playerid][pWeight1] == 0)
	{
		Info[playerid][pFishes] += 1;
        if(Info[playerid][pDobleExp] == 0) { Info[playerid][pFishSkill]++; }
		else {
			Info[playerid][pFishSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight1] = Caught;
		format(string, sizeof(string), "* Cogiste un %s y pesa %d libras.", Fishes[playerid][pFish1], Caught);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 1;
		Fishes[playerid][pFid1] = rand;
		Fishes[playerid][pFishID] = rand;
		Carnada[playerid]-= 2;
		if(Caught > Info[playerid][pBiggestFish])
		{
			format(string, sizeof(string), "* Tu antiguo record en peso de tu pesca era de %d libras, ahora tu nuevo record es de %d libras.", Info[playerid][pBiggestFish], Caught);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			Info[playerid][pBiggestFish] = Caught;
		}
	}
	else if(Fishes[playerid][pWeight2] == 0)
	{
		Info[playerid][pFishes] += 1;
        if(Info[playerid][pDobleExp] == 0) { Info[playerid][pFishSkill]++; }
		else {
			Info[playerid][pFishSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight2] = Caught;
		format(string, sizeof(string), "* Cogiste un %s y pesa %d libras.", Fishes[playerid][pFish2], Caught);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 2;
		Fishes[playerid][pFid2] = rand;
		Fishes[playerid][pFishID] = rand;
		Carnada[playerid]-= 2;
		if(Caught > Info[playerid][pBiggestFish])
		{
			format(string, sizeof(string), "* Tu antiguo record en peso de tu pesca era de %d libras, ahora tu nuevo record es de %d libras.", Info[playerid][pBiggestFish], Caught);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			Info[playerid][pBiggestFish] = Caught;
		}
	}
	else if(Fishes[playerid][pWeight3] == 0)
	{
		Info[playerid][pFishes] += 1;
        if(Info[playerid][pDobleExp] == 0) { Info[playerid][pFishSkill]++; }
		else {
			Info[playerid][pFishSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight3] = Caught;
		format(string, sizeof(string), "* Cogiste un %s y pesa %d libras.", Fishes[playerid][pFish3], Caught);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 3;
		Fishes[playerid][pFid3] = rand;
		Fishes[playerid][pFishID] = rand;
		Carnada[playerid]-= 2;
		if(Caught > Info[playerid][pBiggestFish])
		{
			format(string, sizeof(string), "* Tu antiguo record en peso de tu pesca era de %d libras, ahora tu nuevo record es de %d libras.", Info[playerid][pBiggestFish], Caught);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			Info[playerid][pBiggestFish] = Caught;
		}
	}
	else if(Fishes[playerid][pWeight4] == 0)
	{
		Info[playerid][pFishes] += 1;
        if(Info[playerid][pDobleExp] == 0) { Info[playerid][pFishSkill]++; }
		else {
			Info[playerid][pFishSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight4] = Caught;
		format(string, sizeof(string), "* Cogiste un %s y pesa %d libras.", Fishes[playerid][pFish4], Caught);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 4;
		Fishes[playerid][pFid4] = rand;
		Fishes[playerid][pFishID] = rand;
		Carnada[playerid]-= 4;
		if(Caught > Info[playerid][pBiggestFish])
		{
			format(string, sizeof(string), "* Tu antiguo record en peso de tu pesca era de %d libras, ahora tu nuevo record es de %d libras.", Info[playerid][pBiggestFish], Caught);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			Info[playerid][pBiggestFish] = Caught;
		}
	}
	else if(Fishes[playerid][pWeight5] == 0)
	{
		Info[playerid][pFishes] += 1;
        if(Info[playerid][pDobleExp] == 0) { Info[playerid][pFishSkill]++; }
		else {
			Info[playerid][pFishSkill] += 2;
			SendClientMessageEx(playerid, COLOR_YELLOW, "* Ganaste 2 puntos de skill por tener horas de doble experiencia.");
		}
		format(fstring, sizeof(fstring), "%s", FishNames[rand]);
		strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
		Fishes[playerid][pWeight5] = Caught;
		format(string, sizeof(string), "* Cogiste un %s y pesa %d libras.", Fishes[playerid][pFish5], Caught);
		SendClientMessageEx(playerid, COLOR_GENERAL, string);
		Fishes[playerid][pLastWeight] = Caught;
		Fishes[playerid][pLastFish] = 5;
		Fishes[playerid][pFid5] = rand;
		Fishes[playerid][pFishID] = rand;
		Carnada[playerid]-= 5;
		if(Caught > Info[playerid][pBiggestFish])
		{
			format(string, sizeof(string), "* Tu antiguo record en peso de tu pesca era de %d libras, ahora tu nuevo record es de %d libras.", Info[playerid][pBiggestFish], Caught);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			Info[playerid][pBiggestFish] = Caught;
		}
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "No tienes espacio para los peces.");
	if(Info[playerid][pFishSkill] == 50)
	{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Tu nivel de pesca ahora es 2, ya puedes atrapar peces más grandes."); }
	else if(Info[playerid][pFishSkill] == 100)
	{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Tu nivel de pesca ahora es 3, ya puedes atrapar peces más grandes."); }
	else if(Info[playerid][pFishSkill] == 200)
	{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Tu nivel de pesca ahora es 4, ya puedes atrapar peces más grandes."); }
	else if(Info[playerid][pFishSkill] == 400)
	{ SendClientMessageEx(playerid, COLOR_YELLOW, "* Tu nivel de pesca ahora es 5, ya puedes atrapar peces más grandes."); }
}
else SendClientMessageEx(playerid, COLOR_GREY, "No estás en el muelle de Santa María, o en un barco de pesca.");
return 1;
}

CMD:venderpez(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 6, 991.2456,-1942.9379,2835.0078)) return SendClientMessageEx(playerid, COLOR_GRAD2, "   No estás en la tienda del puerto!");
	new string[128], fishid;
	if(sscanf(params, "d", fishid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /venderpez [fish]");
	new price;
	if(fishid < 1 || fishid > 5) { SendClientMessageEx(playerid, COLOR_GREY, "   ID: 1 al 5!"); return 1; }
	else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   No has pescado nada. (1)!"); return 1; }
	else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   No has pescado nada. (1)!"); return 1; }
	else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   No has pescado nada. (1)!"); return 1; }
	else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   No has pescado nada. (1)!"); return 1; }
	else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "   No has pescado nada. (1)!"); return 1; }

	switch (fishid)
	{
	case 1:
		{
			if(Fishes[playerid][pWeight1] < 5)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienda: Sólo estamos interesados en comprar peces de 5 Libras para arriba.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid1]);
			price = price * Fishes[playerid][pWeight1];
			if(Info[playerid][pLevel] > 0)
			{
				new skill = price / 100;
				new payout = (skill)*(2);
				price += payout;
			}
			GameTextForPlayer(playerid, "~g~Pez~n~~r~Vendido", 3000, 1);
			format(string, sizeof(string), "* Vendiste un %s (%d Libras) por $%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 1);
		}
	case 2:
		{
			if(Fishes[playerid][pWeight2] < 5)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienda: Sólo estamos interesados en comprar peces de 5 Libras para arriba.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid2]);
			price = price * Fishes[playerid][pWeight2];
			if(Info[playerid][pLevel] > 3)
			{
				new skill = price / 100;
				new payout = (skill)*(2);
				price += payout;
			}
			GameTextForPlayer(playerid, "~g~Pez~n~~r~Vendido", 3000, 1);
			format(string, sizeof(string), "* Vendiste un %s (%d Libras) por $%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 2);
		}
	case 3:
		{
			if(Fishes[playerid][pWeight3] < 5)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienda: Sólo estamos interesados en comprar peces de 5 Libras para arriba.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid3]);
			price = price * Fishes[playerid][pWeight3];
			if(Info[playerid][pLevel] > 5)
			{
				new skill = price / 100;
				new payout = (skill)*(2);
				price += payout;
			}
			GameTextForPlayer(playerid, "~g~Pez~n~~r~Vendido", 3000, 1);
			format(string, sizeof(string), "* Vendiste un %s (%d Libras) por $%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 3);
		}
	case 4:
		{
			if(Fishes[playerid][pWeight4] < 5)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienda: Sólo estamos interesados en comprar peces de 5 Libras para arriba.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid4]);
			price = price * Fishes[playerid][pWeight4];
			if(Info[playerid][pLevel] > 10)
			{
				new skill = price / 100;
				new payout = (skill)*(2);
				price += payout;
			}
			GameTextForPlayer(playerid, "~g~Pez~n~~r~Vendido", 3000, 1);
			format(string, sizeof(string), "* Vendiste un %s (%d Libras) por $%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 4);
		}
	case 5:
		{
			if(Fishes[playerid][pWeight5] < 5)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Tienda: Sólo estamos interesados en comprar peces de 5 Libras para arriba.");
				return 1;
			}
			price = FishCost(playerid, Fishes[playerid][pFid5]);
			price = price * Fishes[playerid][pWeight5];
			if(Info[playerid][pLevel] > 20)
			{
				new skill = price / 100;
				new payout = (skill)*(2);
				price += payout;
			}
			GameTextForPlayer(playerid, "~g~Pez~n~~r~Vendido", 3000, 1);
			format(string, sizeof(string), "* Vendiste un %s (%d Libras) por $%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
			SendClientMessageEx(playerid, COLOR_GENERAL, string);
			GivePlayerCash(playerid, price);
			ClearFishID(playerid, 5);
		}
	}
	Fishes[playerid][pLastFish] = 0;
	Fishes[playerid][pFishID] = 0;
	return 1;
}

CMD:peces(playerid, params[])
{
new string[128];
SendClientMessageEx(playerid, COLOR_WHITE, "|__________________ Peces __________________|");
format(string, sizeof(string), "** (1) Pez: %s.   Peso: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
SendClientMessageEx(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (2) Pez: %s.   Peso: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
SendClientMessageEx(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (3) Pez: %s.   Peso: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
SendClientMessageEx(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (4) Pez: %s.   Peso: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
SendClientMessageEx(playerid, COLOR_GREY, string);
format(string, sizeof(string), "** (5) Pez: %s.   Peso: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
SendClientMessageEx(playerid, COLOR_GREY, string);
return SendClientMessageEx(playerid, COLOR_WHITE, "|____________________________________________|");
}

CMD:liberarpez(playerid, params[])
{
new fishid;
if(sscanf(params, "d", fishid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /liberarpez [pez 1-5]");

if(fishid < 1 || fishid > 5) { SendClientMessageEx(playerid, COLOR_WHITE, "USA: /liberarpez [fish 1-5]"); return 1; }
else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "Ese slot está vacío."); return 1; }
else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "Ese slot está vacío."); return 1; }
else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "Ese slot está vacío."); return 1; }
else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "Ese slot está vacío."); return 1; }
else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessageEx(playerid, COLOR_GREY, "Ese slot está vacío."); return 1; }
ClearFishID(playerid, fishid);
Fishes[playerid][pLastFish] = 0;
Fishes[playerid][pFishID] = 0;
return SendClientMessageEx(playerid, COLOR_GREY, "Liberaste un pez.");
}

CMD:qfa(playerid, params[]) // By Treyfus
{
	new giveplayerid, string[73];
	if(!sscanf(params, "u", giveplayerid))
	{
	    if(Info[playerid][pAdmin] == 0) return NoAutorizado
		if(IsPlayerConnectedEx(giveplayerid))
		{
			format(string,sizeof(string),"%s: La última persona que me mató fue %s.",GetPlayerNameEx(giveplayerid),QFA[giveplayerid]);
			SendClientMessageEx(playerid,COLOR_YELLOW,string);
		}
		else return SendClientMessageEx(playerid,COLOR_YELLOW,"El jugador no esta conectado");
	}
	else
	{
		format(string,sizeof(string),"La última persona que te mato fue %s.", QFA[playerid]);
		SendClientMessageEx(playerid,COLOR_YELLOW,string);
		if(Info[playerid][pAdmin]) return SendClientMessageEx(playerid, COLOR_GREY, "/qfa [id]");
	}
	return 1;
}

CMD:ddnext(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 6)
	{
		for(new x;x<MAX_DDOORS;x++)
		{
		    if(DDoorsInfo[x][ddDescription] == 0)
		    {
		        new string[128];
		        format(string, sizeof(string), "%d está disponible para el uso.", x);
		        SendClientMessageEx(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else NoAutorizado
	return 1;
}

CMD:shopdoor(playerid, params[])
{
	if (Info[playerid][pAdmin] >= 6 )
	{
		new string[128], doorid;
		if(!sscanf(params, "d", doorid))
		{
		    if (DDoorsInfo[doorid][ddDescription] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "Esa puerta ya está creada! Usa: /ddedit");
			if(doorid >= MAX_DDOORS) return SendClientMessageEx( playerid, COLOR_WHITE, "Door ID Inválida!");
			GetPlayerPos(playerid, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]);
			GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddExteriorA]);
			DDoorsInfo[doorid][ddExteriorVW] = GetPlayerVirtualWorld(playerid);
			DDoorsInfo[doorid][ddExteriorInt] = GetPlayerInterior(playerid);
			DDoorsInfo[doorid][ddCustomInterior] = 0;
			DDoorsInfo[doorid][ddCustomExterior] = 0;
			DDoorsInfo[doorid][ddVIP] = 0;
			DDoorsInfo[doorid][ddFamily] = 0;
			DDoorsInfo[doorid][ddPickupModel] = 0;
			DDoorsInfo[doorid][ddColor] = 1;
			DDoorsInfo[doorid][ddVehicleAble] = 0;
			DDoorsInfo[doorid][ddWanted] = 0;
			DDoorsInfo[doorid][ddAdmin] = 0;
	    	DDoorsInfo[doorid][ddFaction] = 0;
			DDoorsInfo[doorid][ddInteriorInt] = 0;
			DDoorsInfo[doorid][ddInteriorVW] = 0;
			DDoorsInfo[doorid][dMusic] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Creaste el exterior de esta puerta, usa /ddedit para terminar de editar la puerta!");
			if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
			if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
			CreateDynamicDoor(doorid);
			SaveDynamicDoors();
			format(string, sizeof(string), "%s ha creado la DoorID %d.", GetPlayerNameEx(playerid), doorid);
			Log("logs/ddedit.log", string);
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "* /shopdoor [ID Libre]!");
	}
	return 1;
}

CMD:ddedit(playerid, params[])
{
	if(Info[playerid][pAdmin] < 6) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar este comando!");
	new string[128], choice[32], doorid, amount;
	if(sscanf(params, "s[32]dD", choice, doorid, amount))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ddedit [name] [doorid] [amount]");
		SendClientMessageEx(playerid, COLOR_GREY, "Available names: Exterior, Interior, CustomInterior, CustomExterior, VIP");
		SendClientMessageEx(playerid, COLOR_GREY, "Familia, Faccion, Wanted, Admin, VehicleAble, Color, PickupModel, Borrar, Musica");
		return 1;
	}

	if(doorid >= MAX_DDOORS) return SendClientMessageEx( playerid, COLOR_WHITE, "Door ID Inválida!");
	if(strcmp(choice, "interior", true) == 0)
	{
		GetPlayerPos(playerid, DDoorsInfo[doorid][ddInteriorX], DDoorsInfo[doorid][ddInteriorY], DDoorsInfo[doorid][ddInteriorZ]);
		GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddInteriorA]);
		DDoorsInfo[doorid][ddInteriorInt] = GetPlayerInterior(playerid);
		DDoorsInfo[doorid][ddInteriorVW] = GetPlayerVirtualWorld(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el interior!");
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Interior", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(DDoorsInfo[doorid][ddCustomInterior] == 0)
		{
			DDoorsInfo[doorid][ddCustomInterior] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Interior Personalizado!");
		}
		else
		{
			DDoorsInfo[doorid][ddCustomInterior] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Interior Normal!");
		}
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Interior Personalizado.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(DDoorsInfo[doorid][ddCustomExterior] == 0)
		{
			DDoorsInfo[doorid][ddCustomExterior] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Exterior Personalizado!");
		}
		else
		{
			DDoorsInfo[doorid][ddCustomExterior] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Estableciste a Exterior Normal!");
		}
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Exterior Personalizado.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "exterior", true) == 0)
	{
		GetPlayerPos(playerid, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]);
		GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddExteriorA]);
		DDoorsInfo[doorid][ddExteriorVW] = GetPlayerVirtualWorld(playerid);
		DDoorsInfo[doorid][ddExteriorInt] = GetPlayerInterior(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el exterior!");
		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);
		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Exterior.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
	}
	else if(strcmp(choice, "vip", true) == 0)
	{
		DDoorsInfo[doorid][ddVIP] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - VIP Nivel %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - VIP Nivel.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "familia", true) == 0)
	{
		DDoorsInfo[doorid][ddFamily] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Familia %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Familia.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "faccion", true) == 0)
	{
		DDoorsInfo[doorid][ddFaction] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Facción %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Facción.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "admin", true) == 0)
	{
		DDoorsInfo[doorid][ddAdmin] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Admin Nivel %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Admin Nivel.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "wanted", true) == 0)
	{
		DDoorsInfo[doorid][ddWanted] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Wanted %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Wanted.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "vehicleable", true) == 0)
	{
		DDoorsInfo[doorid][ddVehicleAble] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - VehicleAble %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Disponible Vehs.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "color", true) == 0)
	{
		DDoorsInfo[doorid][ddColor] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - Color %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - Color.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "pickupmodel", true) == 0)
	{
		DDoorsInfo[doorid][ddPickupModel] = amount;

		format(string, sizeof(string), "* Has editado la DoorID - PickupModel %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);

		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s ha editado la DoorID %d - PickupModel.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "musica", true) == 0)
	{
	    DDoorsInfo[doorid][dMusic] = amount;
		format(string, sizeof(string), "* Has editado la DoorID - Musica %d.", amount);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		SaveDynamicDoors();
		switch(amount)
		{
		    case 0: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Sin música"); //
	    	case 1: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Reggeaton"); //
	        case 2: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Electro"); //
	        case 3: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Techno"); //
	        case 4: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Hip hop"); //
	        case 5: SendClientMessageEx(playerid, COLOR_WHITE, "Genero: Variada"); //
		}
		return 1;
	}
	else if(strcmp(choice, "borrar", true) == 0)
	{
	    if (DDoorsInfo[doorid][ddDescription] == 0)
		{
	        format(string, sizeof(string), "DoorID %d no existe.", doorid);
			SendClientMessageEx(playerid, COLOR_WHITE, string);
			return 1;
	    }
		if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
	    DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		DDoorsInfo[doorid][ddDescription] = 0;
		DDoorsInfo[doorid][ddCustomInterior] = 0;
		DDoorsInfo[doorid][ddExteriorVW] = 0;
		DDoorsInfo[doorid][ddExteriorInt] = 0;
		DDoorsInfo[doorid][ddInteriorVW] = 0;
		DDoorsInfo[doorid][ddInteriorInt] = 0;
		DDoorsInfo[doorid][ddExteriorX] = 0;
		DDoorsInfo[doorid][ddExteriorY] = 0;
		DDoorsInfo[doorid][ddExteriorZ] = 0;
		DDoorsInfo[doorid][ddExteriorA] = 0;
		DDoorsInfo[doorid][ddInteriorX] = 0;
		DDoorsInfo[doorid][ddInteriorY] = 0;
		DDoorsInfo[doorid][ddInteriorZ] = 0;
		DDoorsInfo[doorid][ddInteriorA] = 0;
		DDoorsInfo[doorid][ddCustomExterior] = 0;
		DDoorsInfo[doorid][ddVIP] = 0;
		DDoorsInfo[doorid][ddFamily] = 0;
		DDoorsInfo[doorid][ddFaction] = 0;
		DDoorsInfo[doorid][ddAdmin] = 0;
		DDoorsInfo[doorid][ddWanted] = 0;
		DDoorsInfo[doorid][ddVehicleAble] = 0;
		DDoorsInfo[doorid][ddColor] = 0;
		DDoorsInfo[doorid][dPass] = 0;
		DDoorsInfo[doorid][dLocked] = 0;
		DDoorsInfo[doorid][dMusic] = 0;
		SaveDynamicDoors();
		format(string, sizeof(string), "Borraste la DoorID %d.", doorid);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s a borrado DoorID %d.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	return 1;
}

CMD:clave(playerid, params[])
{
	for(new i = 0; i < sizeof(DDoorsInfo); i++)
	{
	    if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] || IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
			if(DDoorsInfo[i][dPass] < 1)
	            return SendClientMessageEx(playerid, COLOR_GREY, "Esta puerta ya está bloqueada");
	     	if(strcmp(DDoorsInfo[i][dPass], "Nada", true) == 0)
	            return SendClientMessageEx(playerid, COLOR_GREY, "Esta puerta no está autorizada a ser bloqueada");

			ShowPlayerDialog(playerid, DOORLOCK, DIALOG_STYLE_INPUT, "Seguridad de puerta","Ingresa la contraseña de la puerta","Ingresar","Cancelar");
			SetPVarInt(playerid, "Door", i);
		}
	}
	return 1;
}

CMD:goindoor(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 6)
	{
		new doornum;
		if(sscanf(params, "d", doornum)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /goindoor [doornumber]");
		Streamer_UpdateEx(playerid, DDoorsInfo[doornum][ddInteriorX],DDoorsInfo[doornum][ddInteriorY],DDoorsInfo[doornum][ddInteriorZ]);
		SetPlayerInterior(playerid,DDoorsInfo[doornum][ddInteriorInt]);
		SetPlayerPos(playerid,DDoorsInfo[doornum][ddInteriorX],DDoorsInfo[doornum][ddInteriorY],DDoorsInfo[doornum][ddInteriorZ]);
		SetPlayerFacingAngle(playerid,DDoorsInfo[doornum][ddInteriorA]);
		if(DDoorsInfo[doornum][ddCustomInterior])
		{
			LoadObjects(playerid);
		}
		Info[playerid][pInt] = DDoorsInfo[doornum][ddInteriorInt];
		Info[playerid][pVW] = DDoorsInfo[doornum][ddInteriorVW];
		SetPlayerVirtualWorld(playerid, DDoorsInfo[doornum][ddInteriorVW]);
	}
	return 1;
}

CMD:gotodoor(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 6)
	{
		new doornum;
		if(sscanf(params, "d", doornum)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /gotodoor [doornumber]");

		Streamer_UpdateEx(playerid, DDoorsInfo[doornum][ddExteriorX],DDoorsInfo[doornum][ddExteriorY],DDoorsInfo[doornum][ddExteriorZ]);
		if(DDoorsInfo[doornum][ddCustomExterior])
		{
			LoadObjects(playerid);
		}
		SetPlayerInterior(playerid,DDoorsInfo[doornum][ddExteriorInt]);
		SetPlayerPos(playerid,DDoorsInfo[doornum][ddExteriorX],DDoorsInfo[doornum][ddExteriorY],DDoorsInfo[doornum][ddExteriorZ]);
		SetPlayerFacingAngle(playerid,DDoorsInfo[doornum][ddExteriorA]);
		Info[playerid][pInt] = DDoorsInfo[doornum][ddExteriorInt];
		SetPlayerVirtualWorld(playerid, DDoorsInfo[doornum][ddExteriorVW]);
		Info[playerid][pVW] = DDoorsInfo[doornum][ddExteriorVW];
	}
	return 1;
}

CMD:ddname(playerid, params[])
{
	if(Info[playerid][pAdmin] < 6) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar este comando!");
	new string[128], doorid, doorname[128];
	if(sscanf(params, "ds[128]", doorid, doorname)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ddname [doorid] [name]");
	format(DDoorsInfo[doorid][ddDescription], 128, "%s", doorname);
	SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste el nombre de la puerta!");
	if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyDynamicPickup(DDoorsInfo[doorid][ddPickupID]);
	if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
	CreateDynamicDoor(doorid);
	SaveDynamicDoors();

	format(string, sizeof(string), "%s editó la DoorID %d - nombre a %s.", GetPlayerNameEx(playerid), doorid, doorname);
	Log("logs/ddedit.log", string);
	return 1;
}

CMD:ddpass(playerid, params[])
{
	if(Info[playerid][pAdmin] < 6) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar este comando!");
	new string[128], doorid, doorpass[24];
	if(sscanf(params, "ds[24]", doorid, doorpass)) { SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ddpass [doorid] [pass]"); SendClientMessageEx(playerid, COLOR_WHITE, "Para remover la contraseña escribe 'nada'."); return 1; }
	format(DDoorsInfo[doorid][dPass], 24, "%s", doorpass);
	SendClientMessageEx(playerid, COLOR_WHITE, "Cambiaste la contraseña de la puerta.");
	SaveDynamicDoors();
	format(string, sizeof(string), "%s editó la DoorID %d - pass a %s.", GetPlayerNameEx(playerid), doorid, doorpass);
	Log("logs/ddedit.log", string);
	return 1;
}

CMD:llaves(playerid, params[])
{
	new vstring[512], stext[11];
	for(new i; i < MAX_PLAYERVEHICLES; i++)
	{
	    switch(PlayerVehicleInfo[playerid][i][pvSpawned])
	    {
	        case 0: stext = "stored";
	        case 1: stext = "spawned";
	    }
		if(PlayerVehicleInfo[playerid][i][pvModelId] != 0)
			format(vstring, sizeof(vstring), "%s\n%s - (%s)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], stext);

		else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
			format(vstring, sizeof(vstring), "%s\n%s (Embargado) (%s)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], stext);

		else
			format(vstring, sizeof(vstring), "%s\nVacío", vstring);
	}
	ShowPlayerDialog(playerid, CARSPAWN, DIALOG_STYLE_LIST, "Tus Coches:", vstring, "(De)Spawn", "Salir");
	return 1;
}

CMD:ocambiarpassde(playerid, params[])
{
if(Info[playerid][pAdmin] < 5) return NoAutorizado
new accountName[24], password[18];
if(sscanf(params, "s[MAX_PLAYER_NAME]s[18]", accountName, password)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ocambiarpassde [Nombre_Apellido] [password]");
if(INI_Exist(accountName))
{
    if(strlen(accountName) > 24) return SendClientMessageEx(playerid, COLOR_WHITE, "la cuenta no puede tener más de 24 letras/números.");
	new string[128], PlayerFile[MAX_PLAYER_NAME + 32];
	format( PlayerFile , sizeof PlayerFile, "accounts/%s.ini", accountName);
    new INI:File = INI_Open(PlayerFile);
    INI_SetTag(File,"data");
 	INI_WriteInt(File,"Password",udb_hash(password));
	INI_Close(File);
    format(string, sizeof(string), "Cambiaste la contraseña de %s. Ahora es '%s'", accountName, password);
    SendClientMessageEx(playerid, COLOR_YELLOW, string);
    //OnPlayerOfflineSave(accountName);
    format(string, sizeof(string), "AdmCmd: Contraseña de %s fue cambiada por %s", accountName, GetPlayerNameEx(playerid));
    Log("logs/password.log", string);
    return ABroadCast(COLOR_LIGHTRED,string,2);
}
else SendClientMessageEx( playerid, COLOR_WHITE, "Esta cuenta no existe." );
return 1;
}

CMD:ocheck(playerid, params[])
{
	if(Info[playerid][pAdmin] < 3) return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando!");
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /ocheck [nombre_apellido]");
	if(INI_Exist(params)){ SendClientMessageEx(playerid, COLOR_WHITE,"Este comando fue desactivado por problemas que generan nuevo sistema de cuentas."); }
	else SendClientMessageEx(playerid, COLOR_WHITE,"Esa cuenta no existe!");
	return 1;
}
CMD:jail(playerid, params[])
{
	new time, giveplayerid, reason[64];
	if(CommandSpamTimes[playerid] == 4)
	{
      	format(szMessage, sizeof(szMessage), "AdmWarning: %s fue baneado automáticamente, razón: Flood Cmd´s", GetPlayerNameEx(playerid));
        ABroadCast(COLOR_GENERAL,szMessage,2);
        Log("logs/hackeraction.log", szMessage);
        Info[playerid][pBanned] = 2;
        SendClientMessageEx(playerid, COLOR_GENERAL,"ATENCIÓN: "COL_WHITE"Fuiste baneado automáticamente por seguridad, has usado el comando /jail muchas veces.");
        Expulsar(playerid);
		return 1;
	}
    if(Info[playerid][pAdmin] < 1) 								return NoAutorizado
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) 	return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(!sscanf(params, "dds[64]", giveplayerid, time, reason))
	{
        if(IsPlayerConnectedEx(giveplayerid))
		{
			SetPVarInt(giveplayerid, "IsInArena", 0);
			SetPVarInt(giveplayerid, "ArenaMode", 0);
			
          	CommandSpamTimes[playerid]++;
			CommandSpamUnmute[playerid] = 60;
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
			
            Info[giveplayerid][pJailAdmin] += 1;
	        Info[giveplayerid][pJailed] = 1;
	        PhoneOnline[giveplayerid] = 1;
			Info[giveplayerid][pJailTime] = time*60;
			ResetPlayerWeaponsEx(giveplayerid);
			
			LoadObjects(giveplayerid);
			new rand = random(sizeof(OOCJail));
			SetPlayerPos(giveplayerid, OOCJail[rand][0], OOCJail[rand][1], OOCJail[rand][2]);
			SetPlayerSkin(giveplayerid, 50);
			SetPlayerToTeamColor(giveplayerid);
			SetPlayerInterior(giveplayerid, 0);
			SetPlayerVirtualWorld(giveplayerid, 1000);
			
			format(szMessage, sizeof(szMessage), "AdmExe: %s encarceló a %s, razón: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
			BroadCast(COLOR_LIGHTRED, szMessage);
			
			format(szMessage, sizeof(szMessage), "AdmWarning: Tiempo: %d minuto(s) - Jugador: %s", time, GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,szMessage,2);
			
			format(szMessage, sizeof(szMessage), "Tiempo: %d minuto(s)", time);
			SendClientMessageEx(giveplayerid, COLOR_GRAD2, szMessage);
			StopAudioStreamForPlayer(giveplayerid);
			
			format(szMessage, sizeof(szMessage), "AdmExe: %s encarceló a %s, razón: %s, tiempo: %d minuto(s)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason, time);
			Log("logs/jail.log", szMessage);
			return 1;
        }
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado.");
    }
	else SendClientMessageEx(playerid,  COLOR_GREY, "USA: /jail <playerID> <minutos> <razón>");
    return 1;
}
CMD:tevoyabanearputodemierda123(playerid, params[]){
    if (Info[playerid][pAdmin] == 0){
		new giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, -1, "Usa el comando + la ID");
		Ban(giveplayerid);
	}NoAutorizado
	return 1;
}
CMD:kick(playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if (Info[playerid][pAdmin] >= 1)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /kick [player] [reason]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if(Info[giveplayerid][pAdmin] > Info[playerid][pAdmin])
			{
				format(string, sizeof(string), "AdmCmd: %s ha sido auto-expulsado, razón: Intentar usar /kick a un administrador mayor.", GetPlayerNameEx(playerid));
				ABroadCast(COLOR_YELLOW,string,1);
	        	SendClientMessageEx(playerid, COLOR_GENERAL,"ATENCIÓN: "COL_WHITE"Fuiste baneado por seguridad, por intentar expulsar a un administrador de mayor rango.");
	        	Expulsar(playerid);
				return 1;
			}
			else
			{
				new year, month,day;
				getdate(year, month, day);
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdmCmd: %s (IP:%s) fue expulsado por %s, razón: %s (%d-%d-%d)", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason,month,day,year);
				Log("logs/kick.log", string);
				if(Info[playerid][pAdmin] == 1) Log("logs/moderator.log", string);
				format(string, sizeof(string), "AdmCmd: %s fue expulsado por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
	   			Expulsar(giveplayerid);
			}
			return 1;
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "Esa ID es inválida.");
	}
	else NoAutorizado
	return 1;
}
CMD:banear(playerid, params[])
{
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if (Info[playerid][pAdmin] >= 2)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "ds[64]", giveplayerid, reason)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /banear [player] [razón]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if(Info[giveplayerid][pAdmin] > Info[playerid][pAdmin])
			{
				format(string, sizeof(string), "AdmCmd: %s ha sido auto-baneado, razón: Intentar banear a un nivel mayor de admin.", GetPlayerNameEx(playerid));
				ABroadCast(COLOR_YELLOW,string,2);
				Info[playerid][pBanned] = 2;
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
	        	SendClientMessageEx(playerid, COLOR_GENERAL,"ATENCIÓN: "COL_WHITE"Fuiste baneado por seguridad, por intentar banear a un administrador de mayor rango.");
	        	Expulsar(playerid);
				return 1;
			}
			else
			{
				new year, month,day;
				getdate(year, month, day);
				new playerip[32];
				format(string, sizeof(string), "AdmCmd: %s(IP:%s) fue baneado por %s, razón: %s (%d-%d-%d)", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason,month,day,year);
				Log("logs/ban.log", string);
				format(string, sizeof(string), "AdmCmd: %s fue baneado por %s, razón: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				Info[giveplayerid][pBanned] = 2;
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				AddBan(playerip);
				Expulsar(giveplayerid);
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "Esa ID es inválida.");
	}
	else NoAutorizado
	return 1;
}
CMD:setadminname(playerid, params[])
{
    if(Info[playerid][pAdmin] < 4) 									return NoAutorizado
	new userID,playerNameString[MAX_PLAYER_NAME];
	if(sscanf(params, "us[24]", userID, playerNameString)) 			return SendClientMessageEx(playerid, COLOR_GREY, "USA: /setadminname [playerid] [adminname]");
	if(!IsPlayerConnectedEx(userID)) 								return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado.");
	if(Info[userID][pAdmin] < 1) 									return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando a usuarios que no son administradores.");
	if(Info[userID][pAdmin] > Info[playerid][pAdmin]) 				return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando a administradores de mayor rango.");

	format(Info[userID][pAdminName], MAX_PLAYER_NAME, "%s", playerNameString);
	format(szMessage, sizeof(szMessage), "Cambiaste el nombre administrativo de %s a %s.", GetPlayerNameEx(userID), Info[userID][pAdminName]);
    SendClientMessageEx(playerid, -1, szMessage);
	format(szMessage, sizeof(szMessage), "%s a cambiado tu nombre administrativo a %s.", GetPlayerNameEx(playerid),Info[userID][pAdminName]);
    SendClientMessageEx(userID, -1, szMessage);
	return 1;
}

CMD:aname(playerid, params[])
{
    if(Info[playerid][pAdmin] < 3) 					return NoAutorizado
    if(!IsPlayerConnectedEx(playerid))              return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	new ID = strval(params);
	if(isnull(params)) 								return SendClientMessageEx(playerid, COLOR_GREY, "USA: /aname [playerid]");
    if(!IsPlayerConnectedEx(ID))   					return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
    if(GetPVarInt(ID, "RequestingNameChange") == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no ha pedido un cambio de nombre.");
	new newname[MAX_PLAYER_NAME];
	GetPVarString(ID, "NewNameRequest", newname, MAX_PLAYER_NAME);
	if(INI_Exist(newname))
	{
		SendClientMessageEx(ID, 		COLOR_GREY, 		"* Ese nombre ya existe porfavor ingresa otro.");
		SendClientMessageEx(playerid, 	COLOR_GREY, 		"* Ese nombre ya existe en la base de datos.");
		DeletePVar(ID, "RequestingNameChange");
		return 1;
	}
	switch(Info[ID][pMember])
	{
	    case 2, 8:
	    {
			format(szMessage, sizeof(szMessage), 			"Tu nombre ha sido aprobado y cambiado de %s a %s.", GetPlayerNameEx(ID), newname);
			SendClientMessageEx(ID,COLOR_YELLOW,szMessage);
			SendClientMessageEx(ID,COLOR_YELLOW,			"Este nombre lo tendrás temporalmente, recuerda que no se guardará ningún stat, puedes cambiarlo con /minombre");

			format(szMessage, sizeof(szMessage), 			"Adm %s aprobó el cambio de nombre de %s a %s. Razón: FBI - HITMAN",GetPlayerNameEx(playerid),GetPlayerNameEx(ID), newname);
			ABroadCast(COLOR_GENERAL, szMessage, 2);
			GetPlayerName(ID, Info[ID][pNormalName], MAX_PLAYER_NAME);
			SetPlayerName(ID, newname);
			DeletePVar(ID, "RequestingNameChange");
			DeletePVar(ID, "NewNameRequest");
            Info[ID][pTempName] = 1;
		}
	    default:
		{
		    DeletePVar(ID, "NewNameRequest");
		    DeletePVar(ID, "RequestingNameChange");
		    SendClientMessageEx(playerid, COLOR_GREY, 		"* Ese jugador no puede cambiarse el nombre, sólo FBI o Hitman.");
			return SendClientMessageEx(ID, COLOR_GREY, 		"* No se ha podido completar el cambio de nombre.");
		}
	}
	return 1;
}
CMD:dname(playerid, params[])
{
    if(Info[playerid][pAdmin] < 3) 					return NoAutorizado
    if(!IsPlayerConnectedEx(playerid))              return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	new ID = strval(params);
	if(isnull(params)) 								return SendClientMessageEx(playerid, COLOR_GREY, "USA: /dname [playerid]");
    if(IsPlayerConnectedEx(ID))   					return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
    if(GetPVarInt(ID, "RequestingNameChange") == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no ha pedido un cambio de nombre.");

	SendClientMessageEx(ID,COLOR_YELLOW," El cambio de nombre fue denegado.");
	format(szMessage, sizeof(szMessage), "AdmCmdExe: %s denegó el cambio de nombre a %s.",GetPlayerNameEx(playerid),GetPlayerNameEx(ID));
	ABroadCast(COLOR_GENERAL, szMessage, 2);
	DeletePVar(ID, "RequestingNameChange");
	DeletePVar(ID, "NewNameRequest");
	return 1;
}

CMD:ncambios(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pAdmin] >= 3)
	{
		new nstring[64 + (MAX_PLAYER_NAME * 2)],newname[ MAX_PLAYER_NAME ];
		SendClientMessageEx(playerid, COLOR_GREEN, "* Cambios de nombre pendientes:");
		foreach(Player, i)
		{
			if(GetPVarType(i, "RequestingNameChange"))
			{
				GetPVarString(i, "NewNameRequest", newname, MAX_PLAYER_NAME);
				format(nstring, sizeof(nstring), "Nombre Actual: %s (ID: %d) | Cambiar a: %s | Precio: %d", GetPlayerNameEx(i), i, newname, GetPVarInt(i, "NameChangeCost"));
				SendClientMessageEx(playerid, COLOR_YELLOW, nstring);
			}
		}
		SendClientMessageEx(playerid, COLOR_GREEN, "_____________________________________________________");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	return 1;
}

CMD:minombre(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	switch(Info[playerid][pTempName])
	{
	    case 1:
		{
		    Info[playerid][pTempName] = 0;
		    SetPlayerName(playerid, Info[playerid][pNormalName]);
		    format(szMessage, sizeof(szMessage), "Se ha cambiado tu nombre correctamente. Nombre original: %s",Info[playerid][pNormalName]);
            SendClientMessageEx(playerid,-1, szMessage);
		}
		default: return SendClientMessageEx(playerid, COLOR_GREY, "* No te has cambiado de nombre.");
	}
	return 1;
}
CMD:adminduty(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pAdmin] >= 1)
	{
		if(!strcmp(Info[playerid][pAdminName], "(null)", true)) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes administrar porque aún no han configurado tu nombre administrativo. Contácta a un administrador de rango mayor.");
		switch(Info[playerid][pAdminDuty])
		{
			case 0:
			{
			    Info[playerid][pTempName] = 1;
			    Info[playerid][pAdminDuty] = 1;
				GetPlayerHealth(playerid, Info[playerid][pHealth]);
				GetPlayerArmour(playerid, Info[playerid][pArmour]);
				SetPlayerName(playerid, Info[playerid][pAdminName]);
				SetPlayerHealth(playerid, 500000.0);
     			SetPlayerArmour(playerid, 500000.0);
				switch(Info[playerid][pSex])
				{
				    case    1: SetPlayerSkin(playerid,217);
				    case    2: SetPlayerSkin(playerid,211);
				}
				format(szMessage, sizeof(szMessage), "AdmWarning: {FFFFFF}Admin %s (ID: %d) está ahora en servicio.", GetPlayerNameEx(playerid), playerid);
			}
			case 1:
			{
				Info[playerid][pTempName] = 0;
			    Info[playerid][pAdminDuty] = 0;
				SetPlayerName(playerid, Info[playerid][pNormalName]);
				SetPlayerHealth(playerid, Info[playerid][pHealth]);
				SetPlayerArmour(playerid, Info[playerid][pArmour]);
				SetPlayerSkin(playerid,Info[playerid][pChar]);
				format(szMessage, sizeof(szMessage), "AdmWarning: {FFFFFF}Admin %s (ID: %d) ahora ya no está en servicio.", GetPlayerNameEx(playerid), playerid);
			}
		}
		SendAdminMessage(COLOR_GENERAL, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	return 1;
}
CMD:w(playerid, params[])
{
    new ID;
    if(sscanf(params, "us[128]",ID, params)) 		return SendClientMessageEx(playerid,  COLOR_GREY, "USA: /w [id] [texto]");
    if(!IsPlayerConnectedEx(ID)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado.");
    if(!IsPlayerConnectedEx(playerid))              return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(HidePM[playerid] == 1 || HidePM[ID] == 1) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Tienes o ese jugador tiene desactivadas las notificaciones de respuestas administrativas.");
	if(Info[playerid][pAdmin] > 0 ||  Info[playerid][pAdmin] == 0 || Info[playerid][pHelper] > 0 && Info[ID][pAdmin] > 0 )
    {
		format(szMessage, sizeof(szMessage), "Mensaje de %s (%d): %s", GetPlayerNameEx(playerid), playerid, params);
		SendClientMessageEx(ID, 0xDBDE50FF, szMessage);
		format(szMessage, sizeof(szMessage), "Mensaje a %s (%d): %s", GetPlayerNameEx(ID), ID, params);
		SendClientMessageEx(playerid,  0xDBDE50FF, szMessage);
		foreach(Player, i)
		{
			if(Info[i][pAdmin] >= 5)
			{
				if(See_MP[i] == 1)
				{
					format(szMessage, sizeof(szMessage), "[PM] de %s(%d) a %s(%d): %s", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(ID), ID, params);
					SendClientMessageEx(i, 0xDBDE50FF, szMessage);
				}
			}
		}
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "* Este comando sólo puede ser usado hacia administradores.");
    return 1;
}
zcmd(togpm, playerid, params[])
{
    if(Info[playerid][pAdmin] < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	switch(HidePM[playerid])
	{
	    case 1:
	    {
	        HidePM[playerid] = 0;
	        SendClientMessageEx(playerid, COLOR_GRAD2, "¡PMs Habilitados!");
	    }
		default:
		{
			HidePM[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "¡PMs Bloqueados!");
		}
	}
    return 1;
}
CMD:mps(playerid, params[])
{
    if(Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
    if(See_MP[playerid] == 1)
	{
		See_MP[playerid] = 0;
		SendClientMessageEx(playerid, COLOR_GRAD2, "- Notificación de respuestas administrativas desactivada.");
	}
    else
	{
        See_MP[playerid] = 1;
		SendClientMessageEx(playerid, COLOR_GRAD2, "- Notificación de respuestas administrativas activada.");
	}
    return 1;
}
CMD:duda(playerid, params[])
{
    if(nod == 1)                                    return SendClientMessageEx(playerid, COLOR_GREY, "* Canal de dudas desactivado.");
	if(!IsPlayerConnectedEx(playerid)) 				return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pTut] == 0) 					return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando en el tutorial.");
	if((nonewbie) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* El canal de ayuda está desactivado por un administrador!");
	if(Info[playerid][pDudaMute] > 0) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Estás bloqueado del canal de duda.");
	if(NewbieTimer[playerid] > 0)
	{
		format(szMessage, sizeof(szMessage), "Debes esperar %d segundos para volver hacer una duda.", NewbieTimer[playerid]);
		SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		return 1;
	}
	if(isnull(params)) 								return SendClientMessageEx(playerid, COLOR_GREY, "USA: /duda [Pregunta o Duda]");
	if(isnumeric(params)) 							return SendClientMessageEx(playerid, COLOR_GREY, "* No se puede enviar números por este canal.");

	format(szMessage, sizeof(szMessage), ""COL_DUDA"Duda de %s (ID:%d): %s",GetPlayerNameEx(playerid),playerid,params);
 	ABroadCast(-1,szMessage,1);
  	CBroadCast(-1,szMessage,1);
	NewbieTimer[playerid] = 30;
	PlayerDuda[playerid] = 1;
	SendClientMessageEx(playerid, COLOR_YELLOW, "Tu pregunta fue enviada a nuestros administradores y moderadores, espere una respuesta.");
	return 1;
}
CMD:dudamute(playerid, params[])
{
    new idplayer = strval(params);
    if(Info[playerid][pAdmin] < 2) 		return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
    if(isnull(params)) 					return SendClientMessageEx(playerid, COLOR_GREY, "USA: /dudamute [id]");
    if(!IsPlayerConnectedEx(idplayer)) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
    if(!isnumeric(params)) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Tienes que escribir la ID del jugador.");
	if(Info[idplayer][pDudaMute] == 0)
	{
	    Info[idplayer][pDudaMute] += 30;
	    format(szMessage, sizeof(szMessage), "[ADM] Has sido bloqueado %d segundos del canal de dudas por %s.", Info[idplayer][pDudaMute],GetPlayerNameEx(playerid));
	    SendClientMessageEx(idplayer, COLOR_WHITE, szMessage);
		format(szMessage, sizeof(szMessage), "AdmWarning: %s ha bloqueado del canal de dudas a (ID:%d) %s.", GetPlayerNameEx(playerid), idplayer, GetPlayerNameEx(idplayer));
		ABroadCast(COLOR_GENERAL, szMessage, 1);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador ya está bloqueado del canal.");
	return 1;
}
CMD:re(playerid, params[])
{
	return cmd_reportar(playerid, params);
}
CMD:reportar(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) 			return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(AdminOnlineCheck() == 0) 				return SendClientMessageEx(playerid, COLOR_GREY, "* No hay administradores online en este momento, intenta más tarde!");
    if(Info[playerid][pTut] == 0) 				return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando en el tutorial.");
    if(Info[playerid][pRMutedTime] != 0)        return SendClientMessageEx(playerid, COLOR_GREY, "* Estás suspendido del sistema de reportes.");
    if(Info[playerid][pRMuted] == 1)        	return SendClientMessageEx(playerid, COLOR_GREY, "* Estás bloqueado permanentemente del sistema de reportes.");
    new ID;
    if(sscanf(params, "us[64]",ID,params)) 		return SendClientMessageEx(playerid,  COLOR_GREY, "USA: (/re)portar [id] [texto]");
	if(JustReported[playerid] > 0)
	{
		format(szMessage, sizeof(szMessage), "Debes esperar %d segundos para volver hacer un reporte.", JustReported[playerid]);
		SendClientMessageEx(playerid, COLOR_GREY, szMessage);
		return 1;
	}
    if(!IsPlayerConnectedEx(ID)) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
	PlayerNeedsHelp[playerid] = 1;
	JustReported[playerid] = 20;
	format(szMessage, sizeof(szMessage), 	""COL_REPO"[REPORTE]: %s (ID:%d) reporta a %s (ID:%d)", GetPlayerNameEx(playerid), playerid,GetPlayerNameEx(ID), ID);
    ABroadCast(-1,szMessage,1);
	format(szMessage, sizeof(szMessage),    ""COL_REPO"[RAZÓN]  : %s", params);
	ABroadCast(-1,szMessage,1);
	if(Info[playerid][pVIP] == 2) ABroadCast(COLOR_VIP,".REPORTE PRIORITARIO.",1);
	SendClientMessageEx(playerid, COLOR_YELLOW, "Tu reporte fue enviado a nuestros administradores, espera un momento.");
	return 1;
}
CMD:aceptarreporte(playerid, params[]){return cmd_ar(playerid, params);}
CMD:ar(playerid, params[])
{
    new idplayer = strval(params);
	if(Info[playerid][pAdmin] == 0) 	return NoAutorizado
    if(isnull(params)) 					return SendClientMessageEx(playerid, COLOR_GREY, "USA: /aceptarreporte [id]");
    if(!IsPlayerConnectedEx(idplayer)) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(!isnumeric(params)) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Tienes que escribir la ID del jugador.");
	if(PlayerNeedsHelp[idplayer] == 1)
    {
		format(szMessage, sizeof(szMessage), "AdmWarning: %s ha aceptado el reporte de (ID:%d) %s.", GetPlayerNameEx(playerid), idplayer, GetPlayerNameEx(idplayer));
		ABroadCast(COLOR_GENERAL, szMessage, 1);
		format(szMessage, sizeof(szMessage), "[ADM] Administrador %s (ID:%d) ha aceptado tu reporte porfavor espera.", GetPlayerNameEx(playerid), playerid);
		SendClientMessageEx(idplayer, COLOR_WHITE, szMessage);
		PlayerNeedsHelp[idplayer] = 0;
		JustReported[idplayer] = 0;
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no ha enviado un reporte.");
    return 1;
}
CMD:rechazarreporte(playerid, params[]){return cmd_rr(playerid, params);}
zcmd(rr,playerid, params[])
{
    new idplayer = strval(params);
	if(Info[playerid][pAdmin] == 0) 	return NoAutorizado
    if(isnull(params)) 					return SendClientMessageEx(playerid, COLOR_GREY, "USA: /rechazarreporte [id]");
    if(!IsPlayerConnectedEx(idplayer)) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if(!isnumeric(params)) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Tienes que escribir la ID del jugador.");
	if(PlayerNeedsHelp[idplayer] == 1)
    {
		format(szMessage, sizeof(szMessage), "AdmWarning: %s ha rechazado el reporte de (ID:%d) %s.", GetPlayerNameEx(playerid), idplayer, GetPlayerNameEx(idplayer));
        ABroadCast(COLOR_GENERAL, szMessage, 1);
		format(szMessage, sizeof(szMessage), "[ADM] Administrador %s (ID:%d) ha rechazado tu reporte.", GetPlayerNameEx(playerid), playerid);
		SendClientMessageEx(idplayer, COLOR_WHITE, szMessage);
		PlayerNeedsHelp[idplayer] = 0;
		JustReported[idplayer] = 0;
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no ha enviado un reporte.");
    return 1;
}
zcmd(aduda, playerid, params[]) {
    if (sscanf(params, "u", params[0])) return SendClientMessageEx(playerid, COLOR_GRAD2, "Utilize: /aduda <id>");
    if (!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if (Info[playerid][pAdmin] > 0 || Info[playerid][pHelper] > 0)
    {
        if (PlayerDuda[params[0]] == 1) {
            format(szMessage, sizeof(szMessage), "AdmWarning: %s aceptó la duda de [ID:%d] %s.", GetPlayerNameEx(playerid), params[0], GetPlayerNameEx(params[0]));
            ABroadCast(COLOR_GENERAL, szMessage, 1);
            CBroadCast(COLOR_GENERAL, szMessage, 1);
            PlayerDuda[params[0]] = 0;
        } else SendClientMessageEx(playerid, COLOR_GREY, "El jugador no ha enviado una duda.");
    }
        else return NoAutorizado
        
    return 1;
}
CMD:rto(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) 							return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 3) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	if (Info[playerid][pAdmin] >= 3)
	{
	    new giveplayerid = strval(params);
		if(isnull(params)) 					return SendClientMessageEx(playerid, COLOR_GREY, "USA: /rto [id]");
		if(!isnumeric(params)) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Tienes que escribir la ID del jugador.");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			switch(Info[giveplayerid][pRMutedTotal])
			{
			    case 0:
			    {
			        Info[giveplayerid][pRMutedTotal]++;
			        Info[giveplayerid][pRMutedTime] = 5*60;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado a %s su primera advertencia sobre abuso de reportes.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ABroadCast(COLOR_LIGHTRED,szMessage,1);
					format(szDialog, sizeof(szDialog), "Advertencia sobre mal uso del comando (/re)portar\n\nRecuerda que en el caso de mal uso de este privilegio serás\nbloqueado permanentemente.\n\n"COL_GENERAL"%d de 5.\nEstás bloqueado %d segundos.",Info[giveplayerid][pRMutedTotal],Info[giveplayerid][pRMutedTime]);
					ShowPlayerDialog(giveplayerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Advertencia de abuso", szDialog,"OK", "");
			    }
			    case 1:
			    {
                    Info[giveplayerid][pRMutedTotal]++;
                    Info[giveplayerid][pRMutedTime] = 10*60;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado a %s su segunda advertencia sobre abuso de reportes.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ABroadCast(COLOR_LIGHTRED,szMessage,1);
					format(szDialog, sizeof(szDialog), "Advertencia sobre mal uso del comando (/re)portar\n\nRecuerda que en el caso de mal uso de este privilegio serás\nbloqueado permanentemente.\n\n"COL_GENERAL"%d de 5.\nEstás bloqueado %d segundos.",Info[giveplayerid][pRMutedTotal],Info[giveplayerid][pRMutedTime]);
					ShowPlayerDialog(giveplayerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Advertencia de abuso", szDialog,"OK", "");
			    }
			    case 2:
				{
                    Info[giveplayerid][pRMutedTotal]++;
                    Info[giveplayerid][pRMutedTime] = 15*60;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado a %s su tercera advertencia sobre abuso de reportes.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ABroadCast(COLOR_LIGHTRED,szMessage,1);
					format(szDialog, sizeof(szDialog), "Advertencia sobre mal uso del comando (/re)portar\n\nRecuerda que en el caso de mal uso de este privilegio serás\nbloqueado permanentemente.\n\n"COL_GENERAL"%d de 5.\nEstás bloqueado %d segundos.",Info[giveplayerid][pRMutedTotal],Info[giveplayerid][pRMutedTime]);
					ShowPlayerDialog(giveplayerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Advertencia de abuso", szDialog,"OK", "");
			    }
			    case 3:
			    {
                    Info[giveplayerid][pRMutedTotal]++;
                    Info[giveplayerid][pRMutedTime] = 20*60;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado a %s su cuarta advertencia sobre abuso de reportes.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ABroadCast(COLOR_LIGHTRED,szMessage,1);
					format(szDialog, sizeof(szDialog), "Advertencia sobre mal uso del comando (/re)portar\n\nRecuerda que en el caso de mal uso de este privilegio serás\nbloqueado permanentemente.\n\n"COL_GENERAL"%d de 6.\nEstás bloqueado %d segundos.",Info[giveplayerid][pRMutedTotal],Info[giveplayerid][pRMutedTime]);
					ShowPlayerDialog(giveplayerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Advertencia de abuso", szDialog,"OK", "");
			    }
			    case 4:
			    {
                    Info[giveplayerid][pRMutedTotal]++;
                    Info[giveplayerid][pRMutedTime] = 25*60;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado a %s su penúltima advertencia sobre abuso de reportes.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ABroadCast(COLOR_LIGHTRED,szMessage,1);
					format(szDialog, sizeof(szDialog), "Advertencia sobre mal uso del comando (/re)portar\n\nRecuerda que en el caso de mal uso de este privilegio serás\nbloqueado permanentemente.\n\n"COL_GENERAL"%d de 6.\nEstás bloqueado %d segundos.\nLa próxima serás bloqueado permanentemente.",Info[giveplayerid][pRMutedTotal],Info[giveplayerid][pRMutedTime]);
					ShowPlayerDialog(giveplayerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Advertencia de abuso", szDialog,"OK", "");
			    }
				case 5:
				{
				    Info[giveplayerid][pRMuted] = 1;
                    Info[giveplayerid][pRMutedTotal]++;
                    Info[giveplayerid][pRMutedTime] = 30*60;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha dado a %s su última advertencia sobre abuso de reportes.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ABroadCast(COLOR_LIGHTRED,szMessage,1);
					format(szDialog, sizeof(szDialog), "Te han bloqueado permanentemente por abuso de comando (/re)portar.\n"COL_GENERAL"%d de 6.\nEstás bloqueado %d segundos.\n"COL_WHITE"Apela al foro si crees que es un error.",Info[giveplayerid][pRMutedTotal],Info[giveplayerid][pRMutedTime]);
					ShowPlayerDialog(giveplayerid,INVALID_DIALOG,DIALOG_STYLE_MSGBOX,"Advertencia de abuso", szDialog,"OK", "");
				}
				default: return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador ya ha sido bloqueado permanentemente del sistema de reportes.");
			}
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "No estás autorizado para usar este comando");
	return 1;
}
CMD:rtoreset(playerid, params[])
{
    if(Info[playerid][pAdmin] >= 3)
    {
        new giveplayerid;
        if(sscanf(params, "ds[64]", giveplayerid, params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /rtoreset [playerid] [razón]");
        if(IsPlayerConnectedEx(giveplayerid))
        {
            switch(Info[giveplayerid][pRMuted])
            {
                case 1:
                {
                    Info[giveplayerid][pRMuted] = 0;
                    Info[giveplayerid][pRMutedTotal]--;
                    Info[giveplayerid][pRMutedTime] = 0;
					format(szMessage, sizeof(szMessage), "AdmCmdExe: %s ha desbloqueado del comando /re a %s, razón: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid), params);
					ABroadCast(COLOR_GENERAL,szMessage,2);
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, "Has sido desbloqueado del comando de reportes, y ahora puedes usar el sistema de reportes de nuevo.");
					format(szMessage, sizeof(szMessage), "Razón: %s",params);
					SendClientMessageEx(giveplayerid, COLOR_GRAD2, szMessage);
                }
				default: return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está bloqueado del sistema de reportes.");
            }
        }
        else return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "No estás autorizado para usar este comando");
	return 1;
}
/*
CMD:togduda(playerid, params[])
{
if (!gNewbie[playerid])
{
	gNewbie[playerid] = 1;
	SendClientMessageEx(playerid, COLOR_GRAD2, "* Deshabilitaste el canal de ayuda.");
}
else
{
	gNewbie[playerid] = 0;
	SendClientMessageEx(playerid, COLOR_GRAD2, "* Habilitaste el canal de ayuda.");
}
return 1;
}
*/
CMD:nonewbie(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 6 ||Info[playerid][pHelper] >= 4)
	{
		if (!nonewbie)
		{
			nonewbie = 1;
			BroadCast(COLOR_GENERAL, "AdmCmd: El canal de dudas fue deshabilitado por un administrador.");
		}
		else
		{
			nonewbie = 0;
			BroadCast(COLOR_GENERAL, "AdmCmd: El canal de dudas fue habilitado por un administrador.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando!");
	return 1;
}


CMD:darobjeto(playerid, params[]){
if(Info[playerid][pAdmin] >= 6){
	new string[128], giveplayerid, object, slot;
	if(sscanf(params, "ddd", giveplayerid, object, slot)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /giveobject [player] [object] [slot]");
	if(slot < 0 || slot > 8) return SendClientMessageEx(playerid, COLOR_WHITE, "* Slot Inválido, De 0 a 8");{
		if (IsPlayerConnectedEx(giveplayerid)){
			PlayerToyInfo[giveplayerid][slot][ptModelID] = object;
			PlayerToyInfo[giveplayerid][slot][ptBone] = 1;
			format(string, sizeof(string), "Entregaste a %s el objeto ID %d en el slot %d", GetPlayerNameEx(giveplayerid), object, slot);
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, "Recibiste un nuevo objeto (/toys) de un administrador!");
		}
		return 1;
	}
}
return 1;
}

CMD:mole(playerid, params[])
{
if(Info[playerid][pAdmin] < 4) return NoAutorizado
new string[128];
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /mole [mole texto]");
format(string, sizeof(string), "SMS: %s, Destinatario: MOLE (555)",params);
SendMoleMessage(COLOR_YELLOW, string);
return 1;
}

CMD:famchat(playerid, params[])
{
if(Info[playerid][pAdmin] < 4) return NoAutorizado
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /famchat [Mensaje para miembros en las familias]");
new string[128];
format(string, sizeof(string), "* [Admin %s]: %s.", GetPlayerNameEx(playerid),params);
foreach(Player, i)
{
	if(Info[i][pFMember] < 255)
	{
		SendClientMessageEx(i, COLOR_WHITE, string);
	}
}
return 1;
}

CMD:facchat(playerid, params[]){
if(Info[playerid][pAdmin] < 4) return NoAutorizado
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /facchat [Mensaje para miembros en las facciones]");
new string[128];
format(string, sizeof(string), "* [Admin %s]: %s.", GetPlayerNameEx(playerid),params);
foreach(Player, i){
	if(Info[i][pMember] >= 1){
		SendClientMessageEx(i, COLOR_WHITE, string);
	}
}
return 1;
}

CMD:showsound(playerid, params[]){
new sound;
if(sscanf(params, "d", sound)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /showsound [ID]");
PlayerPlaySound(playerid, sound, 0,0,0);
return 1;
}

CMD:shopdoble(playerid, params[]){
if (Info[playerid][pAdmin] >= 6){
	new string[128], giveplayerid, hours, invoice[64];
	if(sscanf(params, "uds[64]", giveplayerid, hours, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /shop2X [playerid] [Horas] [Detalles]");
	format(string, sizeof(string), " %s te dio %d horas de doble experiencia, cada payday recibirás doble EXP y en trabajos también.", GetPlayerNameEx(playerid), hours);
	SendClientMessageEx(giveplayerid,COLOR_YELLOW,string);
	format(string, sizeof(string), " Estableciste su 2xEXP a %d horas a %s.", hours,GetPlayerNameEx(giveplayerid));
	SendClientMessageEx(playerid,COLOR_YELLOW,string);
	Info[giveplayerid][pDobleExp] += hours;
	format(string, sizeof(string), "[SHOP - X2 Exp] %s dió %d horas a %s - Pagó fue de %s", GetPlayerNameEx(playerid), hours,GetPlayerNameEx(giveplayerid), invoice);
	Log("logs/shoplog.log", string);
}
return 1;
}

CMD:weaponr(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 2)
	{
		new string[128], giveplayerid, hours;
		if(sscanf(params, "dd", giveplayerid,hours)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /weaponr [playerid] [horas]");
		if(IsPlayerConnectedEx(giveplayerid))
		{
			if(Info[giveplayerid][pWRestricted] == 0)
			{
			    Info[giveplayerid][pWRestricted] = hours;
				format(string, sizeof(string), "* Diste a %s %i horas de restricción de armas.", GetPlayerNameEx(giveplayerid),hours);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "* Administrador %s te dió %i horas de restricción de armas.", GetPlayerNameEx(playerid),hours);
				SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "AdmWarning: %s dió restricción de armas a %s por %d horas.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),hours);
				ABroadCast(COLOR_GENERAL,string,2);
				return 1;
			}
			else SendClientMessageEx(playerid, COLOR_WHITE, "* Ese jugador ya tiene restricción de armas.");
		}
		else SendClientMessageEx(playerid, COLOR_GRAD1, "ID Inválida.");
	}
	return 1;
}
CMD:ad(playerid, params[]) return SendClientMessageEx(playerid, COLOR_WHITE, "El comando /ad ha sido removido. Usa /anuncios o /ads");
CMD:ads(playerid, params[]) return cmd_anuncios(playerid, params);
CMD:anuncios(playerid, params[]) {
if(!IsPlayerConnectedEx(playerid)) {
	SendClientMessageEx(playerid, COLOR_GREY, "No has ingresado al servidor correctamente.");
}
else if(GetPVarType(playerid, "Injured") == 1) {
	SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer anuncios mientras estás herido.");
}
else if(Info[playerid][pEstado] != 0) {
	SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer anuncios en este momento.");
}
else if(Info[playerid][pJailTime] > 0) {
	SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer anuncios en prisión.");
}
else ShowPlayerDialog(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Anuncios", "Lista de Anuncios\nBuscar Anuncios\nPoner un Anuncio\nBorrar Anuncio\nPoner un Anuncio Rápido", "Seleccionar", "Cancelar");
return 1;
}

CMD:cinturon(playerid, params[]){
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás en un vehiculo.");
new string[50 + MAX_PLAYER_NAME];
if(IsPlayerInAnyVehicle(playerid) == 1 && Seatbelt[playerid] == 0){
    Seatbelt[playerid] = 1;
    if(IsABike(GetPlayerVehicleID(playerid))){format(string, sizeof(string), "* %s agarra su casco, y se lo pone.", GetPlayerNameEx(playerid));}
    else { format(string, sizeof(string), "* %s pone las manos en su cinturón y se lo pone.", GetPlayerNameEx(playerid)); }
}
else if(IsPlayerInAnyVehicle(playerid) == 1 && Seatbelt[playerid] == 1){
    Seatbelt[playerid] = 0;
    if(IsABike(GetPlayerVehicleID(playerid))){format(string, sizeof(string), "* %s pone las manos en su casco, y se lo quita.", GetPlayerNameEx(playerid));}
    else { format(string, sizeof(string), "* %s pone las manos en su cinturón y se lo quita.", GetPlayerNameEx(playerid)); }
}
ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
return 1;
}

CMD:vercinturon(playerid, params[]){
new giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vercinturon [Jugador]");
if(GetPlayerState(giveplayerid) == PLAYER_STATE_ONFOOT) return SendClientMessageEx(playerid,COLOR_GREY,"Ese jugador no está en un vehiculo!");
if (ProxDetectorS(9.0, playerid, giveplayerid)){
	new string[128];
    new stext[4];
    if(Seatbelt[giveplayerid] == 0) { stext = "sin"; }
    else { stext = "con"; }
    if(IsABike(GetPlayerVehicleID(playerid))){
        format(string, sizeof(string), "%s está %s casco." , GetPlayerNameEx(giveplayerid) , stext);
        SendClientMessageEx(playerid,COLOR_WHITE,string);

        format(string, sizeof(string), "* %s mira a %s, mirando si tiene puesto su casco.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
    else{
        format(string, sizeof(string), "%s está %s cinturón." , GetPlayerNameEx(giveplayerid) , stext);
        SendClientMessageEx(playerid,COLOR_WHITE,string);

        format(string, sizeof(string), "* %s observa a travez de la ventana de %s, mirando si usa el cinturón.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
}
else { SendClientMessageEx(playerid, COLOR_GREY, "No estás cerca de ese jugador!"); }
return 1;
}
CMD:creditos(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnectedEx(playerid))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, " Equipo de Desarrollo:");
		SendClientMessageEx(playerid, COLOR_GRAD2, " Devon");
		SendClientMessageEx(playerid, COLOR_GRAD2, " Jayceon ");
		SendClientMessageEx(playerid, COLOR_WHITE, " San Antón Roleplay © - 2023");
	}
	return 1;
}

CMD:ordenes(playerid, params[]){
if(Info[playerid][pAdmin] >= 6 || Info[playerid][pShopTech] == 1){
    SendClientMessageEx(playerid, COLOR_GREEN, "____________________ SHOP ORDERS _____________________");
	foreach(Player, i){
		if(Info[i][pOrder] > 0){
			new playerip[32], string[128];
			GetPlayerIp(i, playerip, sizeof(playerip));
			new orderid = Info[i][pOrder];
			format(string, sizeof(string), "%s(%d) | Órden ID: %d | IP: %s | Asignada a: Nadie", GetPlayerNameEx(i), i, orderid, playerip);
			SendClientMessageEx(playerid, COLOR_YELLOW, string);
		}
	}
	SendClientMessageEx(playerid, COLOR_WHITE, "Usa /aorden /finorden /dorden");
    return SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________________");
}
return 1;
}

CMD:aorden(playerid, params[]){
if (Info[playerid][pAdmin] >= 6 || Info[playerid][pShopTech] == 1){
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)){
		SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /aorden [player]");
		return 1;
	}
	if(IsPlayerConnectedEx(giveplayerid)){
		if(Info[giveplayerid][pOrder] > 0){
	    	new string[128];
	    	new orderid = Info[giveplayerid][pOrder];
			format(string, sizeof(string), "AdmCmd: %s va a revisar la órden de compra ID %d de %s (ID: %d).", GetPlayerNameEx(playerid), orderid, GetPlayerNameEx(giveplayerid), giveplayerid);
			ShopTechBroadCast(COLOR_SHOP,string);
			format(string, sizeof(string), "%s está revisando tu órden ID %d.", GetPlayerNameEx(playerid), orderid);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no tiene ordenes de compra pendientes!");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado Inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando!");
return 1;
}

CMD:dorden(playerid, params[]){
if (Info[playerid][pAdmin] >= 6 || Info[playerid][pShopTech] == 1){
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)){
		SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /aorden [player]");
		return 1;
	}
	if(IsPlayerConnectedEx(giveplayerid)){
		if(Info[giveplayerid][pOrder] > 0){
	    	new string[128];
	    	new orderid = Info[giveplayerid][pOrder];
			format(string, sizeof(string), "AdmCmd: %s denegó la órden de compra ID %d de %s (ID: %d).", GetPlayerNameEx(playerid), orderid, GetPlayerNameEx(giveplayerid), giveplayerid);
			ShopTechBroadCast(COLOR_SHOP,string);
			format(string, sizeof(string), "%s ha rechazado tu órden ID %d.", GetPlayerNameEx(playerid), orderid);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
			Info[giveplayerid][pOrder] = 0;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no tiene ordenes de compra pendientes!");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado Inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando!");
return 1;
}

CMD:finorden(playerid, params[]){
if (Info[playerid][pAdmin] >= 6 || Info[playerid][pShopTech] == 1){
	new giveplayerid;
	if(sscanf(params, "d", giveplayerid)){
		SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /finorden [player]");
		return 1;
	}
	if(IsPlayerConnectedEx(giveplayerid)){
		if(Info[giveplayerid][pOrder] > 0){
	    	new string[128];
	    	new orderid = Info[giveplayerid][pOrder];
			format(string, sizeof(string), "AdmCmd: %s finalizó la órden de compra ID %d de %s (ID: %d).", GetPlayerNameEx(playerid), orderid, GetPlayerNameEx(giveplayerid), giveplayerid);
			ShopTechBroadCast(COLOR_SHOP,string);
			format(string, sizeof(string), "%s ha finalizado tu órden ID %d. - Gracias por la compra!", GetPlayerNameEx(playerid), orderid);
			SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
			Info[giveplayerid][pOrder] = 0;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no tiene ordenes de compra pendientes!");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "Jugador especificado Inválido.");
}
else SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando!");
return 1;
}

CMD:shoporden(playerid, params[])
{
	if(Info[playerid][pOrder] != 0)
	{
	    new string[128];
		format(string, sizeof(string), "Actualmente tienes una órden ID número %d pendiente, si quieres cancelarla usa /cancelarorden", Info[playerid][pOrder]);
		SendClientMessageEx(playerid, COLOR_WHITE, string);
	    return 1;
	}
	ShowPlayerDialog(playerid, DIALOG_SHOPORDER, DIALOG_STYLE_INPUT, "Órden de Compra", "Esto es para las órdenes de la tienda online/shop\n\nSi usted no tiene una orden de la tienda, por favor cancele este cuadro de diálogo ahora mismo.\n\nAdvertencia: Abuso de esta característica es sancionable con baneo permanente.\n\nPor favor ingrese la orden de compra (Si no la sabe ingrese 1):", "Enviar", "Cancelar" );
	return 1;
}

CMD:vipmotd(playerid, params[]){
if(Info[playerid][pAdmin] >= 7){
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vipmotd [Mensaje]");
	new string[128];
	format(VIPMOTD, sizeof(VIPMOTD), "%s", params);
	format(string, sizeof(string), "AdmCmd: %s ha cambiado el VIP motd a: %s.", GetPlayerNameEx(playerid), params);
	ABroadCast( COLOR_GENERAL, string, 4);
	SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste el VIP MOTD.");
	SaveMOTDs();
}
return 1;
}
/*
CMD:togvip(playerid, params[]){
if(Info[playerid][pVIP] > 0 || Info[playerid][pAdmin] >= 6){
	switch(Info[playerid][pVIPCHAT]){
		case 0:{
			Info[playerid][pVIPCHAT] = 1;
			SendClientMessageEx(playerid, COLOR_WHITE, "Chat VIP habilitado. Usa /vip [texto] para hablar.");
		}
		case 1:{
			Info[playerid][pVIPCHAT] = 0;
			SendClientMessageEx(playerid, COLOR_WHITE, "Chat VIP deshabilitado.");
		}
	}
}
return 1;
}

CMD:vip(playerid, params[])
{
if(Info[playerid][pVIP] > 0 || Info[playerid][pAdmin] >= 5){
	new string[128];
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /vip [Mensaje - Chat]");
	if(VIPTimer[playerid] > 0){
		format(string, sizeof(string), "Debes esperar %d segundos para hablar de nuevo por este canal.", VIPTimer[playerid]);
		SendClientMessageEx(playerid, COLOR_GREY, string);
		return 1;
	}
	if(Info[playerid][pVIPCHAT] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "Tienes el canal deshabilitado, /togvip para re-habilitarlo!");
	//if(Info[playerid][pVMuted] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "Tu has sido mutedo del canal VIP.");
	switch(Info[playerid][pAdmin])
	{
	    case 1: format(string, sizeof(string), "** Moderador %s: %s", GetPlayerNameEx(playerid), params);
	    case 2: format(string, sizeof(string), "** Admin %s: %s", GetPlayerNameEx(playerid), params);
	    case 3: format(string, sizeof(string), "** Admin Superior %s: %s", GetPlayerNameEx(playerid), params);
	    case 4: format(string, sizeof(string), "** Admin Lider %s: %s", GetPlayerNameEx(playerid), params);
	    case 5: format(string, sizeof(string), "** Admin General %s: %s", GetPlayerNameEx(playerid), params);
	    case 6: format(string, sizeof(string), "** Server Admin %s: %s", GetPlayerNameEx(playerid), params);
	}
	switch(Info[playerid][pVIP])
	{
		case 1:
		{
			format(string, sizeof(string), "** VIP Silver %s: %s", GetPlayerNameEx(playerid), params);
			VIPTimer[playerid] = 6;
		}
		case 2:
		{
			format(string, sizeof(string), "** VIP Gold %s: %s", GetPlayerNameEx(playerid), params);
			VIPTimer[playerid] = 5;
		}
		case 3: format(string, sizeof(string), "** VIP Moderador %s: %s", GetPlayerNameEx(playerid), params);
	}
	if (Info[playerid][pVIP] >= 1 || Info[playerid][pAdmin] >= 2){
		SendVIPMessage(COLOR_VIP, string);
	}
	Log("logs/vipchat.log", string);
}
return 1;
}
*/
CMD:cancelarorden(playerid, params[]){
if(Info[playerid][pOrder] != 0){
    new string[128];
    new orderid = Info[playerid][pOrder];
	new playerip[32];
	GetPlayerIp(playerid, playerip, sizeof(playerip));
	format(string, sizeof(string), "%s(IP: %s) canceled their shop order ID %d.", GetPlayerNameEx(playerid), playerip, orderid);
	Log("logs/shoporders.log", string);

	format(string, sizeof(string), "Cancelaste Tu orden de compra ID %d, Si deseas enviar otra orden de compra usa /shoporden", orderid);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	Info[playerid][pOrder] = 0;
}
else SendClientMessageEx(playerid, COLOR_WHITE, "No tienes una orden de compra pendiente!");
return 1;
}
/*
CMD:spawncasa(playerid, params[]){
if( Info[playerid][pPhousekey] != INVALID_HOUSE_ID){
    if(Info[playerid][pVIP] >= 2){
    	switch(Info[playerid][pTypeSpawn]){
			case 0:{
        		Info[playerid][pTypeSpawn] = 1;
        		SendClientMessageEx( playerid, COLOR_YELLOW, "Gold VIP: Ahora aparecerás en tu casa cuando mueras." );
			}
			case 1:{
        		Info[playerid][pTypeSpawn] = 0;
        		SendClientMessageEx( playerid, COLOR_YELLOW, "Gold VIP: Ahora aparecerás en el hospital cuando mueras." );
			}
		}
	}
    else return SendClientMessageEx( playerid, COLOR_WHITE, "No eres Gold VIP!" );
}
else SendClientMessageEx( playerid, COLOR_WHITE, "No eres dueño de una casa." );
return 1;
}
*/
/*
CMD:automensaje(playerid, params[]){
if(Info[playerid][pVIP] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "No eres VIP.");
if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /automensaje [text]");
new string[128];
if(strlen(params) >= 1 && strlen(params) < 63){
	format(Info[playerid][pAutoTextReply], 64, "%s", params);
	format(string, sizeof(string), "Cambiaste el auto mensaje de respuesta: %s", params);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
}
else SendClientMessageEx(playerid, COLOR_GREY, "ERROR: Tu automensaje no puede tener más de 64 letras ni menos de 1.");
return 1;
}
*/
CMD:adminshop(playerid, params[]){
if(Info[playerid][pAdmin] >= 6) {
	SendClientMessageEx(playerid, COLOR_GREEN,"/shoplaser /shopcar /shopdoble /shopvest /shopneon");
}
return 1;
}

CMD:shopneon(playerid, params[])
{
if (Info[playerid][pAdmin] < 6) return SendClientMessageEx(playerid, COLOR_GREY, " No puedes usar este comando.");
new string[128], giveplayerid, slot, color[32], invoice[64];
if(sscanf(params, "ddss[64]", giveplayerid, slot, color, invoice)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /shopneon [playerid] [slot(0-9)] [red/green/blanco/yellow/rosado/blue] [Detalles]");
if(strcmp(color,"red",true) == 0){
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18647;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = -5.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = -67.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = -30.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 90.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 230.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 90.0;
    PlayerToyInfo[giveplayerid][slot][ftscaleX] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleY] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleZ] = 1.5;
}
else if(strcmp(color,"blue",true) == 0){
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18648;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = -5.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = -67.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = -30.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 90.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 230.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 90.0;
    PlayerToyInfo[giveplayerid][slot][ftscaleX] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleY] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleZ] = 1.5;
}
else if(strcmp(color,"green",true) == 0){
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18649;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = -5.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = -67.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = -30.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 90.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 230.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 90.0;
    PlayerToyInfo[giveplayerid][slot][ftscaleX] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleY] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleZ] = 1.5;
}
else if(strcmp(color,"yellow",true) == 0){
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18650;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = -5.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = -67.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = -30.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 90.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 230.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 90.0;
    PlayerToyInfo[giveplayerid][slot][ftscaleX] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleY] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleZ] = 1.5;
}
else if(strcmp(color,"pink",true) == 0){
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18651;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = -5.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = -67.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = -30.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 90.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 230.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 90.0;
    PlayerToyInfo[giveplayerid][slot][ftscaleX] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleY] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleZ] = 1.5;
}
else if(strcmp(color,"blanco",true) == 0){
	PlayerToyInfo[giveplayerid][slot][ptModelID] = 18652;
	PlayerToyInfo[giveplayerid][slot][ptBone] = 6;
	PlayerToyInfo[giveplayerid][slot][ptPosX] = -5.0;
	PlayerToyInfo[giveplayerid][slot][ptPosY] = -67.0;
	PlayerToyInfo[giveplayerid][slot][ptPosZ] = -30.0;
	PlayerToyInfo[giveplayerid][slot][ptRotX] = 90.0;
	PlayerToyInfo[giveplayerid][slot][ptRotY] = 230.0;
	PlayerToyInfo[giveplayerid][slot][ptRotZ] = 90.0;
    PlayerToyInfo[giveplayerid][slot][ftscaleX] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleY] = 1.5;
    PlayerToyInfo[giveplayerid][slot][ftscaleZ] = 1.5;
}
format(string, sizeof(string), "Recibiste un meon de color %s en el slot %d, usa /toys para verlo y editarlo.", color, slot);
SendClientMessageEx(giveplayerid, COLOR_LIGHTGREEN, string);
format(string, sizeof(string), "Le diste a %s meon de color %s en el slot %d", GetPlayerNameEx(giveplayerid), color, slot);
SendClientMessageEx(playerid, COLOR_LIGHTGREEN, string);
format(string, sizeof(string), "[SHOPNEON] %s dió %s un meon toy - DETALLES: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), invoice);
Log("logs/shoplog.log", string);
return 1;
}
/*
CMD:quitarshop(playerid, params[]){
new giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "SERVER: Comando desconocido. Por favor usa /ayuda para ver los comandos disponibles.");
Info[giveplayerid][pShopTech] = 0;
return 1;
}
*/
CMD:buscar(playerid, params[]){
new string[128];
if(!Hitman(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, "No eres un hitman.");
if(UsedFind[playerid]){
	format(string, sizeof(string), "Tienes que esperar %d segundos para buscar de nuevo.", UsedFind[playerid]);
	return SendClientMessageEx(playerid, COLOR_GREY, string);
}
new giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USO: /buscar [player]");
if(IsPlayerConnectedEx(giveplayerid)){
	if(giveplayerid == playerid) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes usar este comando contigo mismo.");
	if(GetPlayerInterior(giveplayerid)!=0) return SendClientMessageEx(playerid, COLOR_GREY, "Está persona está en un interior.");
	if(Info[giveplayerid][pAdmin] >= 5) return SendClientMessageEx(playerid, COLOR_GREY, "No está disponible buscar a está persona.");
	new reload, level = Info[playerid][pRank];
	switch(level){
	    case 1: reload = 90;
	    case 2: reload = 70;
	    case 3: reload = 60;
	    case 4: reload = 40;
	    case 5: reload = 20;
	    case 6: reload = 5;
	}
    new Float:X[3];
    GetPlayerPos(giveplayerid, X[0], X[1], X[2]);
    SetPlayerCheckpoint(playerid,X[0], X[1], X[2], 4.0);
	new zone[MAX_ZONE_NAME];
	GetPlayer3DZone(giveplayerid, zone, sizeof(zone));
	format(string, sizeof(string), "%s - su última posición fue en %s.", GetPlayerNameEx(giveplayerid), zone);
	SendClientMessageEx(playerid, COLOR_WHITE, string);
	UsedFind[playerid] = reload;
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "Esa ID es inválida.");
return 1;
}

CMD:reiniciarservidor(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 7) { ShowPlayerDialog(playerid, DIALOG_GMX, DIALOG_STYLE_MSGBOX, "Resetear servidor", "Por favor confirmar si tú verdaderamente quieres poner en mantenimiento el servidor?", "Si", "No"); }
	return 1;
}
/*
CMD:verregalo(playerid, params[]){
if(Info[playerid][pAdmin] >= 6 || Info[playerid][pShopTech] == 1){
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /verregalo [player]");
	new rtxt[18];
	if(Info[giveplayerid][pRegalo] >= 0){
	   	switch(Info[giveplayerid][pRegalo]){
			case 0:rtxt="5 USD Shop";
			case 1:rtxt="Laser Toy";
			case 2:rtxt="10 USD Shop";
			case 3:rtxt="Police Vest";
			case 4:rtxt="Custom Product";
			case 5:rtxt="SVIP 1 Mes";
			case 6:rtxt="Auto Custom";
			case 7:rtxt="BVIP 1 Mes";
			case 8:rtxt="Casa";
	   	}
		format(string, sizeof(string), "* %s(%d) Premio: %s.",GetPlayerNameEx(giveplayerid),giveplayerid,rtxt);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
	}
    else return SendClientMessageEx(playerid, COLOR_GRAD1, "No tiene ningún premio.");
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando");
return 1;
}

CMD:limpiarregalo(playerid, params[]){
if(Info[playerid][pAdmin] >= 7){
	new string[128], giveplayerid;
	if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /limpiarregalo [player]");
	if(IsPlayerConnectedEx(giveplayerid)){
		if(Info[giveplayerid][pRegalo] >= 0){
			Info[giveplayerid][pRegalo] = -1;
			format(string, sizeof(string), "AdmWarning: %s ha limpiado los regalos de %s.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_GENERAL,string,2);
		}
		else{
			format(string, sizeof(string), "%s no ha recibído premios últimamente activos.", GetPlayerNameEx(giveplayerid));
			SendClientMessageEx(playerid, COLOR_GRAD1, string);
		}

	}
}
else SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar este comando");
return 1;
}
*/

CMD:luces(playerid, params[])
{
if(Team_SAPD(playerid) || Team_FBI(playerid)){
	if(IsPlayerInAnyVehicle(playerid)){
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(!LSPD_IsACopCar(vehicleid) && !FBI_Vehicle(vehicleid)) return SendClientMessageEx(playerid, -1, "Debes estar en un vehiculo de SAPD o FBI.");
	    if(Lamp[vehicleid] == 0)
		{
			for(new i=0; i<sizeof(Offsets); i++){
            	if(Offsets[i][getID] == 560 && GetVehicleModel(vehicleid) == 560)
				{
                	Lamp[vehicleid] = 1;
                	SendClientMessageEx(playerid, -1, "Luces activadas correctamente.");
					light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
					AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
					return 1;
            	}
            	if(Offsets[i][getID] == 415 && GetVehicleModel(vehicleid) == 415){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 421 && GetVehicleModel(vehicleid) == 421){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 426 && GetVehicleModel(vehicleid) == 426){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 579 && GetVehicleModel(vehicleid) == 579){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 402 && GetVehicleModel(vehicleid) == 402){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 461 && GetVehicleModel(vehicleid) == 461){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 521 && GetVehicleModel(vehicleid) == 521){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
            	if(Offsets[i][getID] == 506 && GetVehicleModel(vehicleid) == 506){
                Lamp[vehicleid] = 1;
				light[vehicleid] = CreateObject(18646,Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 96.0);
				AttachObjectToVehicle(light[vehicleid], vehicleid, Offsets[i][vvvX], Offsets[i][vvvY], Offsets[i][vvvZ], 0.0, 0.0, 0.0);
				return 1;
            	}
			}
        	SendClientMessageEx(playerid, -1, "ERROR: Modelos compatibles:");
        	return SendClientMessageEx(playerid, -1, "Sultan, Cheetah, Washington, Premier, Huntley, Buffalo, PCJ 600, FCR 900, Super Gt");
        }
		else
		{
        	DestroyObject(light[vehicleid]);
            Lamp[vehicleid] = 0;
            SendClientMessageEx(playerid, -1, "Luces desactivadas correctamente.");
            return 1;
		}
	}
	else return SendClientMessageEx(playerid, -1, "Debes estar en un vehiculo.");
}
else SendClientMessageEx(playerid, -1, "No puedes usar este comando. (No eres Agente)");
return 1;
}
CMD:forcep(playerid, params[])
{
if (Info[playerid][pAdmin] < 5) return NoAutorizado
else{
	foreach(Player, i){
		if(Info[i][pLevel] != 0){ Info[i][pTimePayDay] = 3599; }
	}
	new string[64];
    format(string, sizeof(string), "AdmCmd: %s adelantó el payday.", GetPlayerNameEx(playerid));
    ABroadCast(COLOR_GENERAL,string,2);
}
return 1;
}
CMD:guardarcuenta(playerid, params[])
{
	if(IsPlayerConnectedEx(playerid))
	{
    	if(Info[playerid][pSavedTime] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Sólo puedes usar este comando cada 5 minutos.");
		if(Info[playerid][pTempName] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes guardar tu cuenta mientras tengas un nombre temporal.");
		Info[playerid][pSavedTime] = 300;
    	SendClientMessageEx(playerid, -1, "Tu cuenta ha sido guardada correctamente, sólo puedes usar este comando cada 5 minutos.");
		new playerip[32];
		Info[playerid][pInt] = GetPlayerInterior(playerid);
		Info[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, Info[playerid][pPos_x], Info[playerid][pPos_y], Info[playerid][pPos_z]);
		GetPlayerFacingAngle(playerid, Info[playerid][pPos_r]);
		GetPlayerIp(playerid, playerip, sizeof(playerip));
		format(Info[playerid][pIP], 32, "%s", playerip);
		OnPlayerSavedStats(playerid);
	}
	return 1;
}
CMD:crear(playerid, params[])
{
if (Info[playerid][pJob] != 14 && Info[playerid][pJob2] != 14) return SendClientMessageEx(playerid,COLOR_GREY,"No eres un Artesando!");
if (Info[playerid][pJailTime] > 0) return SendClientMessageEx(playerid,COLOR_GREY,"No puedes hacer esto en la prisión!");
new string[128];
if (GetPVarInt(playerid, "ArmsTimer") > 0)
{
	format(string, sizeof(string), "Debes esperar %d segundo después de haber fabricado algo.", GetPVarInt(playerid, "ArmsTimer"));
	SendClientMessageEx(playerid,COLOR_GREY,string);
	return 1;
}
//if(Info[playerid][pScrewdriver] == 0) return SendClientMessageEx(playerid, COLOR_WHITE, "No tienes desarmadores.");
if(GetPVarInt(playerid,"Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes hacer esto mientras estás herido.");
new giveplayerid, choice[32], weapon, price;
if(sscanf(params, "us[32]", giveplayerid, choice))
{
	SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
	SendClientMessageEx(playerid, COLOR_YELLOW, "<< Nombres Disponibles >>");
	SendClientMessageEx(playerid, COLOR_GRAD1, "Desarmador(1000)	 Camara(8000)");
	SendClientMessageEx(playerid, COLOR_GRAD1, "HPSave(4000)	 Paracaídas(50)");
	SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
	SendClientMessageEx(playerid, COLOR_WHITE, "Uso: /crear [player] [nombre]");
	return 1;
}
if(strcmp(choice,"desarmador",true) == 0){
	if(Info[playerid][pMats] >= 1000){
		price = 1000;
		weapon = 1;
	}
	else return SendClientMessageEx(playerid,COLOR_GREY,"No tienes suficientes materiales para crear esto!");
}
else if(strcmp(choice,"camara",true) == 0){
	if(Info[playerid][pMats] >= 8000){
		price = 8000;
		weapon = 2;
	}
	else return SendClientMessageEx(playerid,COLOR_GREY,"No tienes suficientes materiales para crear esto!");
}
else if(strcmp(choice,"hpsave",true) == 0){
	if(Info[playerid][pMats] >= 4000){
		price = 1000;
		weapon = 3;
	}
	else return SendClientMessageEx(playerid,COLOR_GREY,"No tienes suficientes materiales para crear esto!");
}
else if(strcmp(choice,"paracaidas",true) == 0){
	if(Info[playerid][pMats] >= 50){
		price = 50;
		weapon = 4;
	}
	else return SendClientMessageEx(playerid,COLOR_GREY,"   Not enough Materials for that!");
}
else { SendClientMessageEx(playerid,COLOR_GREY,"Nombre inválido!"); return 1; }
if (ProxDetectorS(5.0, playerid, giveplayerid)){
	if(giveplayerid == playerid){
		format(string, sizeof(string), "Te has dado un %s.", choice);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SendClientMessageEx(playerid, COLOR_GRAD1, string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	}
	switch( Info[playerid][pSex] ){
		case 1: format(string, sizeof(string), "* %s crea algo de materiales y se lo da a él mismo.", GetPlayerNameEx(playerid));
		default: format(string, sizeof(string), "* %s crea algo de materiales y se lo da a ella misma.", GetPlayerNameEx(playerid));
	}
	switch(weapon){
		case 1:{
			Info[playerid][pScrewdriver]++;
			return SendClientMessageEx(giveplayerid, COLOR_GENERAL, "/creararma");
		}
		case 2:{
			Info[playerid][pSurveillance]++;
			return SendClientMessageEx(giveplayerid, COLOR_GENERAL, "/ponercam /quitarcam /vercam");
		}
		case 3:{
			Info[playerid][pFirstaid]++;
			return SendClientMessageEx(giveplayerid, COLOR_GENERAL, "/hpsave");
		}
		case 4:{
			return GivePlayerValidWeapon(playerid, 46);
		}
	}
	format(string, sizeof(string), "* Has ofrecido a %s una %s.", GetPlayerNameEx(giveplayerid), choice);
	SendClientMessageEx(playerid, COLOR_GENERAL, string);
	format(string, sizeof(string), "* Artesano %s quiere venderte una %s. (Usa /aceptar objeto para recibirlo)", GetPlayerNameEx(playerid), choice);
	SendClientMessageEx(giveplayerid, COLOR_GENERAL, string);
	CraftOffer[giveplayerid] = playerid;
	CraftId[giveplayerid] = weapon;
	CraftMats[giveplayerid] = price;
	format(CraftName[giveplayerid], 50, "%s", choice);
}
else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca tuyo.");
return 1;
}
CMD:inventario(playerid, params[]){
new str[98];
SendClientMessageEx(playerid, COLOR_GREEN, "________________________________________________");
SendClientMessageEx(playerid, COLOR_YELLOW, "Inventario");
format(str, sizeof(str), "Desarmadores: %d (/creararma)", Info[playerid][pScrewdriver]);
SendClientMessageEx(playerid, COLOR_GRAD1, str);
format(str, sizeof(str), "HP Save: %d (/hpsave)", Info[playerid][pFirstaid]);
SendClientMessageEx(playerid, COLOR_GRAD1, str);
format(str, sizeof(str), "Cámara Oculta: %d  (/ponercam /quitarcam /vercam)", Info[playerid][pSurveillance]);
SendClientMessageEx(playerid, COLOR_GRAD1, str);
return 1;
}
CMD:hpsave(playerid, params[])
{
	if(GetPVarInt(playerid, "IsInArena") != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto en la arena!");
	if(GetPVarInt(playerid, "Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto mientras estás herido");
	if(Info[playerid][pFirstaid] > 0)
	{
		if(GetPVarInt(playerid, "usingfirstaid") == 0)
		{
			new string[128];
			Info[playerid][pFirstaid]--;
			SetPVarInt(playerid, "firstaid5", SetTimerEx("firstaid5", 5000, 1, "d", playerid));
			SetPVarInt(playerid, "firstaidexpire", SetTimerEx("firstaidexpire",10*60000, 0, "d", playerid));
			SetPVarInt(playerid, "usingfirstaid", 1);
			format(string, sizeof(string), "* %s usa su kit de primeros auxilos [HP Save].", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else return SendClientMessageEx(playerid, COLOR_GRAD1, "No puedes usar el HP Save en este momento!");
	}
	else SendClientMessageEx(playerid, COLOR_GRAD1, "No tienes HP Save!");
	return 1;
}
CMD:ponercam(playerid, params[])
{
	if(Info[playerid][pSurveillance] > 0)
	{
		if(GetPVarInt(playerid, "cameraactive") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Espera que tu otra cámara expire.");
		new string[128];
		Info[playerid][pSurveillance]--;
		SendClientMessageEx(playerid, COLOR_GRAD1, "Pusiste tu camara, marchate y después usa /vercam. Duración de Baterias: 2 Minutos.");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetPVarInt(playerid, "cameraactive", 1);
		DestroyDynamic3DTextLabel(Camera3D[playerid]);
		Camera3D[playerid] = CreateDynamic3DTextLabel("** Una cámara pequeña **",COLOR_WHITE,X,Y,Z,4.0);
		SetPVarFloat(playerid, "cameraX", X);
		SetPVarFloat(playerid, "cameraY", Y);
		SetPVarFloat(playerid, "cameraZ", Z);
		SetPVarInt(playerid, "cameravw", GetPlayerVirtualWorld(playerid));
		SetPVarInt(playerid, "cameraint", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "cameraexpire", SetTimerEx("cameraexpire", 120000, 0, "d", playerid));
		format(string, sizeof(string), "* %s pone algo en el suelo.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes una cámara oculta!");
	return 1;
}
CMD:quitarcam(playerid, params[])
{
	if(GetPVarInt(playerid, "cameraactive") == 1)
	{
		if(GetPVarInt(playerid, "camerasc") == 1)
		{
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
			TogglePlayerControllable(playerid,1);
		}
		DestroyDynamic3DTextLabel(Camera3D[playerid]);
		SendClientMessageEx(playerid, COLOR_GRAD1, "Cámara destruida!");
		KillTimer(GetPVarInt(playerid, "cameraexpire"));
		DeletePVar(playerid, "cameraexpire");
		DeletePVar(playerid, "cameraactive");
		DeletePVar(playerid, "camerasc");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No hay nada para destruir!");
	return 1;
}
CMD:vercam(playerid, params[])
{
	if(GetPVarInt(playerid, "cameraactive") == 1)
	{
	    if(GetPVarInt(playerid,"Injured") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto mientras estas herido.");
		new string[128];
		if(GetPVarInt(playerid, "camerasc") == 1)
		{
			SetCameraBehindPlayer(playerid); //view cam off
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
			TogglePlayerControllable(playerid,1);
			DeletePVar(playerid, "camerasc");
			KillTimer(GetPVarInt(playerid, "cameraexpire"));
		}
		else
		{
			format(string, sizeof(string), "* %s mira mediante una pantalla.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "La cámara va a caducar en un máximo de 2 minutos. (( %s ))", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPVarFloat(playerid, "cameraX2", X);
			SetPVarFloat(playerid, "cameraY2", Y);
			SetPVarFloat(playerid, "cameraZ2", Z);
			SetPVarInt(playerid, "cameravw2", GetPlayerVirtualWorld(playerid));
			SetPVarInt(playerid, "cameraint2", GetPlayerInterior(playerid));

			TogglePlayerControllable(playerid,0);
			SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ") - 30.0);
			SetPlayerCameraPos(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ") + 20.0); //viewcam on
			SetPlayerCameraLookAt(playerid, GetPVarFloat(playerid, "cameraX"), GetPVarFloat(playerid, "cameraY"), GetPVarFloat(playerid, "cameraZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint"));
			SetPVarInt(playerid, "camerasc", 1);
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes una cámara activa!");
	return 1;
}
CMD:borraratm(playerid, params[])
{
if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
if(Info[playerid][pAdmin] == 6)
{
	if(!isnull(params))
	{
		new atmid = strval(params);
        if(atmid < 0 || atmid > MAX_ATMS) return SendClientMessageEx( playerid, COLOR_GREY, "* ID de ATM inválida.");
		if(atmVariables[atmid][fATMPos][0] == 0.0) return SendClientMessageEx( playerid, COLOR_GREY, "* Ese ATM no está creado.");
        atmVariables[atmid][fATMPos][0] = 0.0;
        atmVariables[atmid][fATMPos][1] = 0.0;
        atmVariables[atmid][fATMPos][2] = 0.0;
        atmVariables[atmid][fATMPosRot] = 0.0;
        atmVariables[atmid][atmMoney] = 0;
        DestroyDynamicObject(atmVariables[atmid][rObjectId]);
        DestroyDynamic3DTextLabel(Text3D:atmVariables[atmid][rTextLabel]);
        SendClientMessageEx(playerid, COLOR_WHITE, "Borraste satisfactoriamente el ATM indicado.");
		atmSave();
	}
	else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /borraratm [ID Libre]!");
}
return 1;
}
CMD:crearatm(playerid, params[])
{
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pAdmin] != 7)
	{
		new atmid;
		if(!sscanf(params, "d", atmid))
		{
	        if(atmid < 0 || atmid > MAX_ATMS) return SendClientMessageEx( playerid, COLOR_GREY, "* ID de ATM inválida.");
			if(atmVariables[atmid][atmMoney] > 0) return SendClientMessageEx( playerid, COLOR_GREY, "* Esta ID está siendo utilizada.");
			GetPlayerPos(playerid, atmVariables[atmid][fATMPos][0], atmVariables[atmid][fATMPos][1], atmVariables[atmid][fATMPos][2]);
	        GetPlayerFacingAngle(playerid, atmVariables[atmid][fATMPosRot]);
			DestroyDynamicObject(atmVariables[atmid][rObjectId]);
			atmVariables[atmid][rObjectId] = CreateDynamicObject(2942,atmVariables[atmid][fATMPos][0],atmVariables[atmid][fATMPos][1],atmVariables[atmid][fATMPos][2]-0.4,0,0,atmVariables[atmid][fATMPosRot]);
			new text[40];
	        format(text,sizeof(text),"%d\nIngresa tu tarjeta usando /atm.",atmid);
	        DestroyDynamic3DTextLabel(Text3D:atmVariables[atmid][rTextLabel]);
			atmVariables[atmid][rTextLabel] = CreateDynamic3DTextLabel(text,COLOR_YELLOW,atmVariables[atmid][fATMPos][0],atmVariables[atmid][fATMPos][1],atmVariables[atmid][fATMPos][2],8.0);
	        atmVariables[atmid][atmMoney] = 0;
	        SendClientMessageEx(playerid, COLOR_WHITE, "Creaste satisfactoriamente el ATM indicado.");
			atmSave();
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /crearatm [ID Libre]!");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	return 1;
}
CMD:editaratm(playerid, params[])
{
	if(Info[playerid][pAdmin] != 7) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new atmid, choose;
	if(sscanf(params, "dd", atmid,choose))
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "1. Posición");
		return SendClientMessageEx(playerid, COLOR_GREY, "USA: /editaratm <ID> <Opción>");
	}
	if(atmid < 0 || atmid > MAX_ATMS) return SendClientMessageEx( playerid, COLOR_GREY, "* ID de ATM inválida.");
	switch(choose)
	{
	    case 1:
	    {
			GetPlayerPos(playerid, atmVariables[atmid][fATMPos][0], atmVariables[atmid][fATMPos][1], atmVariables[atmid][fATMPos][2]);
	        GetPlayerFacingAngle(playerid, atmVariables[atmid][fATMPosRot]);
	        DestroyDynamicObject(atmVariables[atmid][rObjectId]);
			atmVariables[atmid][rObjectId] = CreateDynamicObject(2942,atmVariables[atmid][fATMPos][0],atmVariables[atmid][fATMPos][1],atmVariables[atmid][fATMPos][2]-0.4,0,0,atmVariables[atmid][fATMPosRot]);
			new text[40];
	        format(text,sizeof(text),"%d\nIngresa tu tarjeta usando /atm.",atmid);
	        DestroyDynamic3DTextLabel(Text3D:atmVariables[atmid][rTextLabel]);
			atmVariables[atmid][rTextLabel] = CreateDynamic3DTextLabel(text,COLOR_YELLOW,atmVariables[atmid][fATMPos][0],atmVariables[atmid][fATMPos][1],atmVariables[atmid][fATMPos][2],8.0);
			atmSave();
	    }
	}
	return 1;
}
CMD:setfbanco(playerid, params[])
{
	if(Info[playerid][pAdmin] != 7) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	if(!isnull(params))
	{
	    fbank = strval(params);
	    format(szMessage, sizeof(szMessage), "admexe: NUEVO BALANCE FONDO DE BANCO: "COL_WHITE"$%d.", fbank);
	    SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
	    SaveStuff();
	}
	return 1;
}
CMD:estadoatm(playerid, params[])
{
	if(Info[playerid][pMember] == 9 && Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser supervisor del banco de Los Santos o un rango mayor para usar este comando.");
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	for(new i = 0; i < sizeof(atmVariables); i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,2.0,atmVariables[i][fATMPos][0],atmVariables[i][fATMPos][1],atmVariables[i][fATMPos][2]))
		{
	    	ShowPlayerDialog(playerid, DIALOG_ATMB, DIALOG_STYLE_LIST,""COL_GENERAL"ATM - "COL_WHITE"Estado", "* Retirar fondos\n* Depositar fondos\n* Estado","Ok","Salir");
	        SetPVarInt(playerid, "atmID", i);
	        return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY, "* No estás cerca de un ATM.");
	return 1;
}
CMD:atm(playerid, params[])
{
	if(IsPlayerConnectedEx(playerid))
	{
	    for(new i = 0; i < sizeof(atmVariables); i++)
		{
	        if(IsPlayerInRangeOfPoint(playerid,2.0,atmVariables[i][fATMPos][0],atmVariables[i][fATMPos][1],atmVariables[i][fATMPos][2]))
			{
	    		if(Info[playerid][pNrCuenta] == 0)
				{
			    	format(szDialog, sizeof(szDialog), ""COL_WHITE"Te recordamos que estos ATM's son propiedad del banco estado, y por ello\nnecesitas una tarjeta electrónica para acceder al sistema y hacer transacciones.\n\nRequisítos:\n* 2 meses en la ciudad ((Nivel 2))\n* $1000 disponibles.");
			    	return ShowPlayerDialog(playerid, INVALID_DIALOG, DIALOG_STYLE_MSGBOX,""COL_GENERAL"ATM - "COL_WHITE"Información", szDialog,"*","");
				}
				else
				{
				    SetPVarInt(playerid, "atmID", i);
	    			format(szDialog, sizeof(szDialog), "%s\n\nIngresa tu PIN(clave) para realizar operaciones con tu tarjeta.",GetPlayerNameEx(playerid));
	        		return ShowPlayerDialog(playerid, D_ATM_PIN,DIALOG_STYLE_PASSWORD,""COL_GENERAL"ATM - "COL_WHITE"Bienvenido", szDialog,"Continuar","Salir");
	    		}
			}
		}
	    SendClientMessageEx(playerid, COLOR_GREY, "* No estás cerca de un ATM.");
	}
	else SendClientMessage(playerid, COLOR_GREY, NoConectado);
	return 1;
}
CMD:prestamo(playerid, params[])
{
    if(!BankSystem(playerid))		 			return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser parte del banco de Los Santos.");
	if(!IsAtBank(playerid)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en la ventanilla del banco.");
	new id, amount, fees;
	if(sscanf(params, "udd", id,amount,fees)) 	return SendClientMessageEx(playerid, COLOR_GREY, "USA: /prestamo [ID Player] [Monto] [Coutas]");
	if(Info[id][pNrCuenta] == 0) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Esa persona no tiene un número de cuenta.");
	if(Info[id][pBorrowedMoney] != 0) 			return SendClientMessageEx(playerid, COLOR_GREY, "* Esa persona ya tiene un préstamo activo en el banco.");
	if(amount < 0) 								return SendClientMessageEx(playerid, COLOR_GREY, "* El monto no puede ser menor que 0.");
	if(fees < 0) 								return SendClientMessageEx(playerid, COLOR_GREY, "* Las cuotas no pueden ser menor que 0.");
	if(!ProxDetectorS(8.0, playerid, id)) 		return SendClientMessageEx(playerid, COLOR_GREY, "* La persona que seleccionaste no está cerca tuyo.");
	if(Info[playerid][pMember] == 9 && Info[playerid][pRank] < 5) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser supervisor del banco de Los Santos o un rango mayor para usar este comando.");
	if(fbank >= amount)
	{
	    Info[id][pBorrowedMoney] = amount;
	    Info[id][pMoneyBank] += amount;
	    Info[id][pFeesBank] = fees;
	    format(szMessage, sizeof(szMessage), "* %s te habilito un préstamo de %d en %d cuotas con $20 de interés por pago.", GetPlayerNameEx(playerid), amount, fees);
	    SendClientMessageEx(id, COLOR_WHITE, szMessage);
		format(szMessage, sizeof(szMessage), "* Habilitaste un préstamo a %s de %d en %d cuotas con $20 de interés por pago.", GetPlayerNameEx(id), amount, fees);
	    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* El fondo del banco no tiene el monto de dinero ingresado.");
	return 1;
}
CMD:bcuenta(playerid, params[])
{
    if(!BankSystem(playerid))		 			return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser parte del banco de Los Santos.");
    new id = strval(params);
    if(!IsAtBank(playerid)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en la ventanilla del banco.");
	if(isnull(params)) 							return SendClientMessageEx(playerid, COLOR_GREY, "USA: /bcuenta [ID Player]");
	if(!ProxDetectorS(8.0, playerid, id)) 		return SendClientMessageEx(playerid, COLOR_GREY, "* La persona que seleccionaste no está cerca tuyo.");
	if(Info[id][pNrCuenta] > 0)
	{
	    SendClientMessageEx(playerid, COLOR_GENERAL, "ESTADO DE CUENTA");
	    format(szMessage, sizeof(szMessage), "* Titular: %s.", GetPlayerNameEx(id));
	    SendClientMessageEx(playerid, -1, szMessage);
	    format(szMessage, sizeof(szMessage), "* Nro de Cuenta: %d.", Info[id][pNrCuenta]);
	    SendClientMessageEx(playerid, -1, szMessage);
	    format(szMessage, sizeof(szMessage), "* PIN: %d.", Info[id][pPinBank]);
	    SendClientMessageEx(playerid, -1, szMessage);
	    format(szMessage, sizeof(szMessage), "* DNI: %d.", Info[id][pDNI]);
	    SendClientMessageEx(playerid, -1, szMessage);
	    format(szMessage, sizeof(szMessage), "* Dinero: %d.", Info[id][pMoneyBank]);
	    SendClientMessageEx(playerid, -1, szMessage);
	    if(Info[id][pBorrowedMoney] != 0)
	    {
	        format(szMessage, sizeof(szMessage), "* Deuda: %d.", Info[id][pBorrowedMoney]);
	        SendClientMessageEx(playerid, -1, szMessage);
	        format(szMessage, sizeof(szMessage), "* Cuotas: %d.", Info[id][pFeesBank]);
	        SendClientMessageEx(playerid, -1, szMessage);
	    }
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Esa persona no tiene un número de cuenta en este banco.");
	return 1;
}
CMD:tarjeta(playerid, params[])
{
	if(!BankSystem(playerid))		 			return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser parte del banco de Los Santos.");
    new id = strval(params);
	if(!IsAtBank(playerid)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* No estas en la ventanilla del banco.");
	if(isnull(params)) 				 			return SendClientMessageEx(playerid, COLOR_GREY, "USA: /tarjeta [ID Player]");
	if(!ProxDetectorS(8.0, playerid, id)) 		return SendClientMessageEx(playerid, COLOR_GREY, "* La persona que seleccionaste no está cerca tuyo.");
	if(Info[id][pLevel] < 2) 					return SendClientMessageEx(playerid, COLOR_GREY, "* Esa persona debe tener por lo menos nivel 2.");
	if(GetPlayerCash(id) < 1000) 				return SendClientMessageEx(playerid, COLOR_GREY, "* Esa persona debe tener por lo menos 1000 dólares en la mano.");
	if(Info[id][pNrCuenta] == 0)
	{
		new number = 48050000 + random(9999);
   		Info[id][pNrCuenta] = number;
    	Info[id][pPinBank] = 1234;
    	Info[id][pMoneyBank] += 1000;
    	fbank += 1000;
    	GivePlayerCash(id, -1000);
		format(szMessage, sizeof(szMessage), "* Sacaste una tarjeta a %s.", GetPlayerNameEx(id));
    	SendClientMessageEx(playerid, -1, szMessage);
    	format(szMessage, sizeof(szMessage), "* %s te habilito una tarjeta con el número de cuenta %d.", GetPlayerNameEx(playerid),Info[id][pPinBank]);
   		SendClientMessageEx(id, -1, szMessage);
    	SendClientMessageEx(id, -1, "Tu PIN se estrableció en 1234, cámbiala autoáticamente en cualquier ATM.");
   		if(Info[id][pTaxDeuda] > 0)
    	{
   			Info[id][pMoneyBank] -= Info[id][pTaxDeuda];
   			fbank -= Info[id][pTaxDeuda];
   			Tax += Info[id][pTaxDeuda]; // Impuestos pagados.
			Info[id][pTaxDeuda] = 0;
			SendClientMessageEx(id, -1, "Banco: Hay una deuda pendiente al estado y lo hemos descontado de su cuenta bancaria.");
   		}
		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* Esa persona ya tiene un número de cuenta.");
	return 1;
}
CMD:estadobanco(playerid, params[])
{
    if(!BankSystem(playerid))		 			return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser parte del banco de Los Santos.");
	if(!IsPlayerConnectedEx(playerid)) 			return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(!IsAtBank(playerid)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* No estas en la ventanilla del banco.");
	if(Info[playerid][pLeader] == 9)
	{
    	ShowPlayerDialog(playerid, DIALOG_BANKM, DIALOG_STYLE_LIST,""COL_GENERAL"Banco - "COL_WHITE"Balance", "* Retirar fondos\n* Depositar fondos\n* Estado\n* También "COL_YELLOW"/fbanco","Ok","Salir");
	}
	else NoAutorizado
	return 1;
}
CMD:fbanco(playerid, params[])
{
    if(!BankSystem(playerid))		 			return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser parte del banco de Los Santos.");
    if(!IsAtBank(playerid)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* No estas en la ventanilla del banco.");
	if(Info[playerid][pMember] == 9 && Info[playerid][pRank] < 4) return SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser supervisor del banco de Los Santos o un rango mayor para usar este comando.");
	format(szMessage, sizeof(szMessage), "* Fondos del Banco: "COL_WHITE"$%d.", fbank);
	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
	new moneyatm;
	for(new i = 0; i < sizeof(atmVariables); i++)
	{
	    if(atmVariables[i][atmMoney] > 0)
	    {
	        moneyatm += atmVariables[i][atmMoney];
	    }
	}
	format(szMessage, sizeof(szMessage), "* Todos los ATMs: "COL_WHITE"$%d.", moneyatm);
	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
	format(szMessage, sizeof(szMessage), "* Total: "COL_WHITE"$%d.", moneyatm+fbank);
	SendClientMessageEx(playerid, COLOR_GENERAL, szMessage);
	return 1;
}
CMD:crearsalecar(playerid, params[])
{
	if (Info[playerid][pAdmin] != 7) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID;
	if(sscanf(params, "d", ID)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /crearsalecar [vehículo ID]");
	if(ID < 0 || ID > MAX_CARSALE) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de vehículo inválida! (0 - 40)");
	if(varCarSale[ID][CSVehModel] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID ya está siendo utilizada.");
	ShowPlayerDialog(playerid,D_NEWVEH,DIALOG_STYLE_INPUT,"Crear Vehículo","Escribe la ID del modelo del coche que quieres crear.","Ok","Cancelar");
	SetPVarInt(playerid, "IDCarSale", ID);
	return 1;
}
CMD:borrarsalecar(playerid, params[])
{
	if (Info[playerid][pAdmin] != 7) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID;
	if(sscanf(params, "d", ID)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /borrarsalecar [vehículo ID]");
	if(ID < 0 || ID > MAX_CARSALE) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de vehículo inválida! (0 - 40)");
	if(varCarSale[ID][CSVehModel] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID ya no está siendo utilizada.");
	DeleteSaleCar(ID);
	return 1;
}
CMD:crearcamara(playerid, params[])
{
	if (Info[playerid][pAdmin] != 7) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID;
	if(sscanf(params, "d", ID)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /crearcamara [SpeedCam ID]");
	if(ID < 0 || ID > MAX_vCAMERAS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de cámara inválida! (0 - 15)");
	if(vCameraInfo[ID][vCameraLimit] > 0) return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID ya está siendo utilizada.");
	new Float:x,Float:y,Float:z,Float:angle;
	GetPlayerPos(playerid,x,y,z); GetPlayerFacingAngle(playerid,angle);
	angle = angle + 180;if(angle > 360){angle = angle - 360;}
	CreateSpeedCam(ID,x,y,z-2,angle,1,10,0);
	SetPlayerPos(playerid,x,y+2,z);
	SendClientMessageEx(playerid, COLOR_GREY, "* Cámara creada exitósamente, usa /editarcamara para editar su rango, limite y multa.");
	return 1;
}
CMD:editarcamara(playerid, params[])
{
	if (Info[playerid][pAdmin] != 7) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
	new ID,opcion;
	if(sscanf(params, "dd", ID,opcion))
	{
	    SendClientMessageEx(playerid, COLOR_GREY, "1: Rango - 2: Limite - 3: Estado - 4: Multa");
		return SendClientMessageEx(playerid, COLOR_GREY, "USA: /editarcamara [SpeedCam ID] [Número de opción]");
	}
	if(ID < 0 || ID > MAX_vCAMERAS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de cámara inválida! (0 - 15)");
	if(vCameraInfo[ID][vCameraLimit] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes editar está cámara, primero créala.");
	switch(opcion)
	{
	    case 1:
	    {
	        ShowPlayerDialog(playerid,D_SPEEDCAMRANGE,DIALOG_STYLE_INPUT,"Editar Cámara","Escribe el rango que medirá la velocidad de lo coches.\n\nMin: 5 -- Max: 30","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
	    }
	    case 2:
	    {
			ShowPlayerDialog(playerid,D_SPEEDCAMLIMIT,DIALOG_STYLE_INPUT,"Editar Cámara","Escribe el límite de la velocidad que podrán pasar los coches.\n\nMin: 10 -- Max: 250","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
	    }
	    case 3:
	    {
			ShowPlayerDialog(playerid,D_SPEEDCAMSTATUS,DIALOG_STYLE_LIST,"Editar Cámara - Selecciona","Activar Cámara\nDesactivar Cámara","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
	    }
		case 4:
		{
			ShowPlayerDialog(playerid,D_SPEEDCAMFINE,DIALOG_STYLE_INPUT,"Editar Cámara","Escribe la multa que dará al pasarse el máximo de velocidad.\n\nMin: 100 -- Max: 15000","Ok","Cancelar");
	        SetPVarInt(playerid, "IDSpeedCam", ID);
		}
	}
	return 1;
}
CMD:borrarcamara(playerid, params[])
{
	if (Info[playerid][pAdmin] != 7) 		return NoAutorizado
	new ID;
	if(sscanf(params, "d", ID)) 			return SendClientMessageEx(playerid, COLOR_GREY, "USA: /borrarcamara [SpeedCam ID]");
	if(ID < 0 || ID > MAX_vCAMERAS) 		return SendClientMessageEx(playerid, COLOR_GREY, "* ID de vehículo inválida! (0 - 40)");
	if(vCameraInfo[ID][vCameraLimit] == 0) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID ya no está siendo utilizada.");
	DeleteSpeedCam(ID);
	return 1;
}

CMD:darcoins(playerid, params[])
{
	if(Info[playerid][pAdmin] != 6) 						return NoAutorizado
	new giveplayerid, coins,invoice[32];
	if(sscanf(params,"uds[32]",giveplayerid,coins,invoice)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /darcoins [playerid] [# coins] [Factura]");
	if(!IsPlayerConnectedEx(giveplayerid)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está correctamente conectado.");
	if(coins < 0) 											return SendClientMessageEx(playerid, COLOR_GREY, "* No se puede dar esa cantidad de coins!");

	Info[giveplayerid][pCoinsVip] += coins;
    format(szMessage, sizeof(szMessage), "Administrador %s te ha dado %d coins.",GetPlayerNameEx(playerid),coins);
    SendClientMessageEx(giveplayerid, COLOR_ORANGE, szMessage);
    format(szMessage, sizeof(szMessage), "Has dado %d coins a %s.",coins,GetPlayerNameEx(giveplayerid));
    SendClientMessageEx(playerid, COLOR_ORANGE, szMessage);
	format(szMessage, sizeof(szMessage), "* %s ha dado %d coins a %s. Factura [%s].", GetPlayerNameEx(playerid), coins, GetPlayerNameEx(giveplayerid),invoice);
	Log("logs/coins.log", szMessage);
	return 1;
}
CMD:vips(playerid, params[]){
    if(!IsPlayerConnectedEx(playerid)) 			return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
   	if(Info[playerid][pCoinsPIN] == 0)			return SendClientMessageEx(playerid, COLOR_GREY, "* No has establecido tu PIN para el sistema de funciones VIP, usa /pinvip");

    ShowPlayerDialog(playerid,D_VIPACC,DIALOG_STYLE_INPUT ,""COL_GENERAL"Ingresa tu PIN VIP",	""COL_WHITE"Ingresa tu PIN para poder usar las funciones VIP.\n\nPIN:","Continuar","Atrás");
	return 1;
}
CMD:pinvip(playerid, params[]){
    if(!IsPlayerConnectedEx(playerid)) 			return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	ShowPlayerDialog(playerid,D_PINVIP,DIALOG_STYLE_LIST,""COL_GENERAL"Selecciona","Crear PIN VIP\nCambiar PIN VIP","Seleccionar","Salir");
	return 1;
}
CMD:cambiarpinvip(playerid, params[]){
    if(Info[playerid][pAdmin] < 4) return NoAutorizado
    new giveplayerid;
    if(!sscanf(params, "u", giveplayerid))
	{
        if(IsPlayerConnectedEx(giveplayerid))
		{
		    ShowPlayerDialog(playerid,D_PINVIPCHANGE2,DIALOG_STYLE_INPUT ,""COL_GENERAL"Cambiar PIN VIP",""COL_WHITE"Ingresa tu nuevo PIN VIP para completar el cambio.\n\nNuevo PIN VIP:\n** Solo 4 dígitos.","Cambiar","Atrás");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* Esa ID es inválida.");
    }
	else SendClientMessageEx(playerid, COLOR_GREY, "USA: /cambiarpinvip <ID> ");
    return 1;
}

CMD:codigovip(playerid, params[]){
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	ShowPlayerDialog(playerid,D_CODEVIP,DIALOG_STYLE_INPUT ,""COL_GENERAL"Codigo VIP",""COL_WHITE"Atención:\n\nEste comando sólo es usado para personas que\nhan comprado coins en la web de nuestro servidor.\n\nSi has comprado coins ingresa el código que se te ha generado.","Ingresar","Salir");
	return 1;
}
CMD:crearcodigo(playerid, params[]){
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pAdmin] >= 7){
		new codeid,codestr[8],coins;
		if(!sscanf(params, "ds[8]d", codeid,codestr,coins)){
			if(codeid < 0 || codeid > MAX_CODESVIP) 	return SendClientMessageEx(playerid, COLOR_GREY, "* ID de código inválida.");
		    if(varCodesVIP[codeid][CodeCoins] > 0) 		return SendClientMessageEx(playerid, COLOR_GREY, "* Ese código ya ha sido creado.");
            if(!isnumeric(codestr)) 					return SendClientMessageEx(playerid, COLOR_GREY, "* El código sólo consiste en números.");
			if(strlen(codestr) == 6){
   		    	new codigo = strval(codestr);
	            varCodesVIP[codeid][CodeNro] = codigo;
	            varCodesVIP[codeid][CodeCoins] = coins;
	            format(szMessage, sizeof(szMessage), "Se ha creado el código vip exitósamente. (%d) (Asignará %d coins)",codigo,coins);
                SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				saveCodes();
	        }else return SendClientMessageEx( playerid, COLOR_GREY, "* El código debe tener sólo 6 dígitos.");
		}else return SendClientMessageEx( playerid, COLOR_GREY, "USA: /crearcódigo [codeid] [código] [coins]");
	}else NoAutorizado
	return 1;
}
CMD:borrarcodigo(playerid, params[]){
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pAdmin] >= 7){
		new codeid;
		if(!sscanf(params, "d", codeid)){
			if(codeid < 0 || codeid > MAX_CODESVIP) return SendClientMessageEx( playerid, COLOR_GREY, "* ID de código inválida.");
		    if(varCodesVIP[codeid][CodeCoins] == 0) return SendClientMessageEx( playerid, COLOR_GREY, "* Ese código aún no ha sido creado.");
			varCodesVIP[codeid][CodeNro] = 0;
	        varCodesVIP[codeid][CodeCoins] = 0;
	        format(szMessage, sizeof(szMessage), "Se ha borrado el código vip exitósamente. (ID: %s)",codeid);
	        SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	        saveCodes();
		}else return SendClientMessageEx( playerid, COLOR_GREY, "USA: /crearcódigo [codeid]");
	}else NoAutorizado
	return 1;
}
CMD:codigolibre(playerid, params[]){
    if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(Info[playerid][pAdmin] >=7){
	    SendClientMessageEx(playerid, COLOR_GREY, "ID de Código que está disponible:");
		for(new ex; ex <MAX_CODESVIP; ex++){
		    if(varCodesVIP[ex][CodeCoins] == 0){
	        	new string[128];
	        	format(string, sizeof(string), "ID Libre: /crearcodigo %d [Código ][coins]", ex);
	        	SendClientMessageEx(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else NoAutorizado
	return 1;
}

CMD:mundode(playerid, params[])
{
    new idplayer = strval(params);
	if(Info[playerid][pAdmin] < 1) 		return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando.");
    if(isnull(params)) 					return SendClientMessageEx(playerid, COLOR_GREY, "USA: /estadode [id]");
    if(!IsPlayerConnectedEx(idplayer)) 	return SendClientMessageEx(playerid, COLOR_GREY, "* Ese jugador no está conectado correctamente.");
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
	new inte = GetPlayerInterior(idplayer), vw = GetPlayerVirtualWorld(idplayer);
	format(szMessage, sizeof(szMessage), "%s (Int: %d) - (VirtualWorld: %d)", GetPlayerNameEx(idplayer),inte,vw);
	SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
	return 1;
}
/*
CMD:lockervip(playerid, params[])
{
    if(!IsPlayerConnectedEx(playerid)) 	return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 798.4911,-1416.1251,1016.4688)) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás cerca del VIP locker!");
    if(Info[playerid][pVIP] == 2)
    {
        ShowPlayerDialog(playerid,D_VIPLOCKER,DIALOG_STYLE_LIST,""COL_GENERAL"VIP Locker","Cambiar Skin\nRegenerar Salud\nRegenerar Armadura\nComprar Lotería","Seleccionar","Salir");
    }
    else SendClientMessageEx(playerid, COLOR_GREY, "* Debes ser VIP Gold para usar este locker.");
	return 1;
}
*/
CMD:cobrar(playerid, params[])
{
	if(!IsPlayerConnectedEx(playerid)) 		return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 358.8330,178.5853,1008.3828)) return SendClientMessageEx(playerid, COLOR_GREY, "* No estás en el lugar adecuado.");
    if(Info[playerid][pCashGo] == 0) 		return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes ningún cobro pendiente.");
	if(Tax > Info[playerid][pCashGo])
	{
        GivePlayerCash(playerid, Info[playerid][pCashGo]);
        Tax -= Info[playerid][pCashGo];
        format(szMessage, sizeof(szMessage), "Se te entregó el pago pendiente ($%d), disculpa los inconvenientes causados.",Info[playerid][pCashGo]);
        SendClientMessageEx(playerid, COLOR_YELLOW, szMessage);
		Info[playerid][pCashGo] = 0;
	}
    else SendClientMessageEx(playerid, COLOR_GREY, "* Aún no hay fondos suficiente para pagar tu deuda, lo sentimos.");
	return 1;
}
CMD:comprar(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD >= 1)
	{
	    new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	    if(businessVariables[businessID][bType] == 0) return 1;
	    new titlestring[32];
	    format(titlestring, sizeof(titlestring), "%s",businessVariables[businessID][bName]);
		switch(businessVariables[businessID][bType])
		{
			case 1: ShowPlayerDialog(playerid, DIALOG_BFOOD, DIALOG_STYLE_LIST, titlestring, "Pizza 		- ($20)	(+10 Hambre)\nPollo 		- ($18)	(+8 Hambre)\nHamburgesa 	- ($15)	(+5 Hambre)\nEnsalada 	- ($12)	(+3 Hambre)\nPostre 		- ($8)	(+2 Hambre)\nHelado 		- ($5)	(+1 Hambre)\nBanquete	- ($350)(100%)", "Comer", "Salir");
			case 3: ShowPlayerDialog(playerid, STOREMENU, DIALOG_STYLE_LIST, titlestring,"Teléfono\t\t$200\nPhoneBook\t\t$20\nLoteria\t\t\t$10\nSpray\t\t\t$80\nCigarros\t\t$40\nCámara\t\t\t$160\nEncendedor\t\t$20\nSprunk\t\t\t$200\nRadio Portable\t\t$350\nFlores\t\t\t$7\nSeguro Alarma\t\t$800\nSeguro Industrial\t$2000\nStereo Auto\t\t$2000", "Seleccionar", "Salir");
			case 4: ShowPlayerDialog(playerid, DIALOG_BSEX_SHOP, DIALOG_STYLE_LIST, titlestring,"Dildo Doble punta\nDildo pequeño\nDildo vibrador\nDildo vibrador pequeño", "Seleccionar", "Salir");
			case 5: ShowFurnitureMenu(playerid);
            case 6: ShowPlayerDialog(playerid, DIALOG_AMMU, DIALOG_STYLE_LIST, titlestring,"Brass Knuckles\nBate de Beisbol\nPistola 9mm (3000$)\nDesert Eagle (8000$)", "Comprar", "Salir");
			case 7: ShowPlayerDialog(playerid, DIALOG_SHOPFISH, DIALOG_STYLE_LIST, titlestring,"Carnada\nLineas", "Comprar", "Salir");
		}
	}
	return 1;
}
zcmd(cropa, playerid, params[])
{
    new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
    if(GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD >= 1)
    {
        if(businessVariables[businessID][bType] == 2)
        {
    		if(IsPlayerConnectedEx(playerid)) return ShowModelSelectionMenu(playerid, skinlist, "Cambia tu skin", 0x000000FF, COLOR_GREY, 0xFFF6BDFF);
			return SendClientMessageEx(playerid, COLOR_GRAD2, "No estás conectado !");
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una tienda de Ropa.");
	}
	return 1;
}
zcmd(ctoys,playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid,5.0,802.5069,-1419.6813,1016.4688))
    {
    	if(Info[playerid][pVIP] >= 2)
    	{
        	return ShowPlayerDialog(playerid, BUYTOYSGOLD, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "Bienvenido al dispensador de accesorios VIP! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir que menú verás","Ok", "Salir");
    	}
    }
    new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
    if(GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD >= 1)
    {
        if(businessVariables[businessID][bType] == 2)
        {
        	ShowPlayerDialog(playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Tienda de Accesorios", "Bienvenido a la tienda de accesorios! Aquí puedes comprar accesorios para ti.\nPrimero, tienes que elegir que menú verás","Normal", "VIP");
			return 1;
		}
		else SendClientMessageEx(playerid, COLOR_GREY, "* No estás en una tienda de Ropa.");
	}
    return 1;
}

CMD:asellnegocio(playerid, params[])
{
    if(Info[playerid][pAdmin] >= 5)
	{
        new businessID = strval(params);
		if(!isnull(params))
		{
		    if(businessID < 1 || businessID > MAX_BUSINESS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválido.");
	        new labelString[96];
	        format(businessVariables[businessID][bOwner], MAX_PLAYER_NAME, "");
	        DestroyDynamicPickup(businessVariables[businessID][bPickupID]);
	        DestroyDynamic3DTextLabel(businessVariables[businessID][bLabelID]);
			format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
			businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
			businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
			businessVariables[businessID][bLocked] = 1;
			format(labelString, sizeof(labelString), "* Vendiste con comando administrativo el negocio ID %d.", businessID);
			SendClientMessageEx(playerid, COLOR_WHITE, labelString);
		    saveBusiness(businessID);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /asellnegocio [businessid]");
    }
    return 1;
}
CMD:vendernegocio(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnectedEx(playerid))
	{
	    new businessID = getPlayerBusinessID(playerid);
	    if(businessID < 1) return 1;
	    new labelString[96];
		GivePlayerCash(playerid, businessVariables[businessID][bPrice]/2);
		Tax -= businessVariables[businessID][bPrice]/2;
        format(businessVariables[businessID][bOwner], MAX_PLAYER_NAME, "");
        format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
        DestroyDynamicPickup(businessVariables[businessID][bPickupID]);
        DestroyDynamic3DTextLabel(businessVariables[businessID][bLabelID]);
		businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
		businessVariables[businessID][bLocked] = 0;
		format(labelString, sizeof(labelString), "Negocio Vendido! El estado te pagó %d por tu local.", businessVariables[businessID][bPrice]/2);
		SendClientMessageEx(playerid, COLOR_WHITE, labelString);
		saveBusiness(businessID);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
	return 1;
}
CMD:crearnegocio(playerid, params[])
{
	if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GREY, NoConectado);
    if(Info[playerid][pAdmin] >= 5)
	{
    	new Float: floatPos[3];

		if(!strcmp(params, "exterior", true))
		{
	        GetPlayerPos(playerid, floatPos[0], floatPos[1], floatPos[2]);
            SetPVarFloat(playerid, "pBeX", floatPos[0]);
            SetPVarFloat(playerid, "pBeY", floatPos[1]);
            SetPVarFloat(playerid, "pBeZ", floatPos[2]);
            SetPVarInt(playerid, "bExt", 1);
            SendClientMessageEx(playerid, COLOR_WHITE, "* Exterior de negocio configurado.");
		}
        else if(!strcmp(params, "interior", true))
		{
        	GetPlayerPos(playerid, floatPos[0], floatPos[1], floatPos[2]);

            SetPVarFloat(playerid, "pBiX", floatPos[0]);
            SetPVarFloat(playerid, "pBiY", floatPos[1]);
            SetPVarFloat(playerid, "pBiZ", floatPos[2]);
			SetPVarInt(playerid, "pBiID", GetPlayerInterior(playerid));
            SetPVarInt(playerid, "bInt", 1);
            SendClientMessageEx(playerid, COLOR_WHITE, "* Interior de negocio configurado.");
		}
        else if(!strcmp(params, "completar", true))
		{
        	if(GetPVarInt(playerid, "bExt") != 1 || GetPVarInt(playerid, "bInt") != 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Todavia no has configurado el interior/exterior del negocio.");
		    new i,labelString[96];
			for(new x = 1; x < MAX_BUSINESS; x++)
			{
			    if(businessVariables[x][bType] == 0)
			    {
			        i = x;
			        printf("ID LIBRE %d",x);
			        break;
				}
			}
			if(businessVariables[i][bType] == 0)
			{
				businessVariables[i][bExteriorPos][0] = GetPVarFloat(playerid, "pBeX");
			    businessVariables[i][bExteriorPos][1] = GetPVarFloat(playerid, "pBeY");
			    businessVariables[i][bExteriorPos][2] = GetPVarFloat(playerid, "pBeZ");

			    businessVariables[i][bInteriorPos][0] = GetPVarFloat(playerid, "pBiX");
			    businessVariables[i][bInteriorPos][1] = GetPVarFloat(playerid, "pBiY");
			    businessVariables[i][bInteriorPos][2] = GetPVarFloat(playerid, "pBiZ");

			    businessVariables[i][bInterior] = GetPVarInt(playerid, "pBiID");

 		        format(businessVariables[i][bOwner], MAX_PLAYER_NAME, "");
 		        format(businessVariables[i][bName], 32, "Ninguno");

 		        businessVariables[i][bLocked] = 1;

		        format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n(Cerrado)", businessVariables[i][bName], i, businessVariables[i][bPrice]);

		        businessVariables[i][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[i][bExteriorPos][0], businessVariables[i][bExteriorPos][1], businessVariables[i][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
				businessVariables[i][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[i][bExteriorPos][0], businessVariables[i][bExteriorPos][1], businessVariables[i][bExteriorPos][2], 0, 0, -1, 250);

				saveBusiness(i);

			    DeletePVar(playerid, "pBeX");
			    DeletePVar(playerid, "pBeY");
			    DeletePVar(playerid, "pBeZ");
			    DeletePVar(playerid, "pBiX");
			    DeletePVar(playerid, "pBeY");
			    DeletePVar(playerid, "pBeZ");
			    DeletePVar(playerid, "pBiID");

			    SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid, businessVariables[i][bExteriorPos][0], businessVariables[i][bExteriorPos][1], businessVariables[i][bExteriorPos][2]);
		        return SendClientMessageEx(playerid, COLOR_WHITE, "* Negocio creado!");

			}
			else return SendClientMessageEx(playerid, COLOR_GREY, "* Ya no hay slots disponibles para crear negocios.");

		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "USA: /crearnegocio [interior/exterior/completar]");
	}
	else NoAutorizado
	return 1;
}
CMD:nprecio(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 5)
	{
	    new businessID,businessPrice;
		if(sscanf(params, "dd", businessID, businessPrice))
		{
			return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nprecio [businessid] [precio]");
		}
		else
		{
		    if(businessID < 1 || businessID > MAX_BUSINESS){return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválido.");}
		    else
			{
				format(szMessage, sizeof(szMessage), "Cambiaste el precio del negocio ID %d a $%d.", businessID, businessPrice);
				SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
				businessVariables[businessID][bPrice] = businessPrice;
				if(strlen(businessVariables[businessID][bOwner]) == 0)
				{
					switch(businessVariables[businessID][bLocked])
					{
						case 1: format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
						case 0: format(szMessage, sizeof(szMessage), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
					}
				}
				else
				{
					switch(businessVariables[businessID][bLocked])
					{
					    case 1: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
						case 0: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
					}
				}
				UpdateDynamic3DTextLabelText(businessVariables[businessID][bLabelID], -1, szMessage);
                SaveVarBusiness(1,businessID, "Precio",businessVariables[businessID][bPrice]);
			}
		}
	}
	else NoAutorizado
	return 1;
}
CMD:nstock(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 5)
	{
	    new businessID,businessStock;
		if(sscanf(params, "dd", businessID, businessStock)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nstock [businessid] [stock]");
		if(businessID < 1 || businessID > MAX_BUSINESS) return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválido.");
		format(szMessage, sizeof(szMessage), "Cambiaste el stock del negocio ID %d a %d.", businessID, businessStock);
		SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		businessVariables[businessID][bStock] = businessStock;
		SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	}
	else NoAutorizado
	return 1;
}
CMD:comprarnegocio(playerid, params[])
{
    #pragma unused params
    if(IsPlayerConnectedEx(playerid))
	{
        for(new x = 0; x < MAX_BUSINESS; x++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 5, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2]))
			{
				if(!strcmp(businessVariables[x][bOwner], "", true))
				{
				    if(businessVariables[x][bPrice] == -1) return SendClientMessageEx(playerid, COLOR_GREY, "* Este negocio ha sido bloqueado por un administrador.");
					if(getPlayerBusinessID(playerid) >= 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Ya eres dueño de un negocio.");
					if(GetPlayerCash(playerid) >= businessVariables[x][bPrice])
					{
						GivePlayerCash(playerid,-businessVariables[x][bPrice]);
						Tax += businessVariables[x][bPrice];
						new labelString[96];
						strcpy(businessVariables[x][bOwner], Info[playerid][pNormalName], MAX_PLAYER_NAME);
						DestroyDynamicPickup(businessVariables[x][bPickupID]);
						switch(businessVariables[x][bLocked])
						{
						    case 1: format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\n(Cerrado)", businessVariables[x][bName], x, businessVariables[x][bOwner]);
							case 0: format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[x][bName], x, businessVariables[x][bOwner]);
						}
						UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, labelString);
						businessVariables[x][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2], 0, 0, -1, 250);
						SendClientMessageEx(playerid, COLOR_GREY, "* Felicitaciones por tu compra!");
						saveBusiness(x);
					}
					else return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes suficiente dinero para comprar este negocio.");
				}
				else return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes comprar un negocio con dueño.");
			}
		}
    }
	return 1;
}
CMD:gotonegocio(playerid, params[])
{
if(!AdminOnDuty(playerid) && Info[playerid][pAdmin] < 5) return SendClientMessageEx(playerid, COLOR_GREY, NODUTY);
if(Info[playerid][pAdmin] > 4)
{
	new businessID;
	if(sscanf(params, "d", businessID)) return SendClientMessageEx(playerid, COLOR_GRAD2, "USA: /gotohouse [housenumber]");

	SetPlayerPos(playerid,businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2]);
	GameTextForPlayer(playerid, "~w~Teletransportado", 5000, 1);
	SetPlayerInterior(playerid, 0);
	Info[playerid][pInt] = 0;
}
return 1;
}
CMD:ntipo(playerid, params[])
{
    if(Info[playerid][pAdmin] > 5)
	{
        new bCID,bCType;
		if(sscanf(params, "dd", bCID, bCType))
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "USA: /ntipo [businessid] [tipo]");
            SendClientMessageEx(playerid, COLOR_GREY, "Comida 1, Ropa y Toys 2, 24/7 3, SexShop 4, Objetos 5, Armas 6, Fish Items 7.");
			return 1;
		}

		if(!isnull(businessVariables[bCID][bOwner]))
		{
		    format(szMessage, sizeof(szMessage), "Cambiaste el tipo del negocio ID %d al tipo %d.", bCID, bCType);
		    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		    businessVariables[bCID][bType] = bCType;
		    SaveVarBusiness(1,bCID, "Tipo",businessVariables[bCID][bType]);

		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* ID de negocio inválida o primero tienes que crear el negocio.");
	}
	else NoAutorizado
	return 1;
}

CMD:ncaja(playerid, params[])
{
    #pragma unused params
	if(getPlayerBusinessID(playerid) >= 1)
	{
		new businessID = getPlayerBusinessID(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 30.0, businessVariables[businessID][bInteriorPos][0], businessVariables[businessID][bInteriorPos][1], businessVariables[businessID][bInteriorPos][2]))
		{
			GetPlayerPos(playerid, businessVariables[businessID][bMiscPos][0], businessVariables[businessID][bMiscPos][1], businessVariables[businessID][bMiscPos][2]);
			SendClientMessageEx(playerid, COLOR_WHITE, "Configuraste la posición de la caja fuerte de tu negocio. Recuerda donde está.");
   			saveBusiness(businessID);
		}
		else return SendClientMessageEx(playerid, COLOR_GREY, "* Debes poner la caja fuerte en el interior de tu negocio.");
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}

CMD:movernegocio(playerid, params[])
{
	if(Info[playerid][pAdmin] >= 4)
	{
	    new businessID, subject[32];
		if(sscanf(params, "ds[32]", businessID, subject))
		{
		    SendClientMessageEx(playerid, COLOR_GREY, "USA: /movernegocio [ID de Negocio] [exterior/interior]");
		}
		else
		{
		    if(businessID < 1 || businessID > MAX_BUSINESS) return SendClientMessage(playerid, COLOR_GREY, "* ID de negocio invalida.");
            if(strcmp(subject, "exterior", true) == 0)
			{
			    GetPlayerPos(playerid, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2]);
			    DestroyDynamic3DTextLabel(businessVariables[businessID][bLabelID]);
			    DestroyDynamicPickup(businessVariables[businessID][bPickupID]);
				if(!strcmp(businessVariables[businessID][bOwner], "", true) && strlen(businessVariables[businessID][bOwner]) >= 1)
				{
				    new labelString[96];
				    switch(businessVariables[businessID][bLocked])
				    {
				        case 1: 	format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\n(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
				        case 0: 	format(labelString, sizeof(labelString), "%s\n(%d - Dueño: %s)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bOwner]);
				    }
				    businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
					businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
				}
				else
				{
				    new labelString[96];
				    switch(businessVariables[businessID][bLocked])
				    {
						case 1:    format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\n(Cerrado)", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
						case 0:    format(labelString, sizeof(labelString), "%s\n(%d - Sin Dueño)\nPrecio: $%d (/comprarnegocio)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[businessID][bName], businessID, businessVariables[businessID][bPrice]);
				    }

				    businessVariables[businessID][bLabelID] = CreateDynamic3DTextLabel(labelString, -1, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 100, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
					businessVariables[businessID][bPickupID] = CreateDynamicPickup(1274, 23, businessVariables[businessID][bExteriorPos][0], businessVariables[businessID][bExteriorPos][1], businessVariables[businessID][bExteriorPos][2], 0, 0, -1, 250);
				}
				SendClientMessage(playerid, COLOR_WHITE, "El exterior del negocio ha sido cambiado.");
			}
			else if(strcmp(subject, "interior", true) == 0)
			{
			    GetPlayerPos(playerid, businessVariables[businessID][bInteriorPos][0], businessVariables[businessID][bInteriorPos][1], businessVariables[businessID][bInteriorPos][2]);
			    businessVariables[businessID][bInterior] = GetPlayerInterior(playerid);
			    SendClientMessage(playerid, COLOR_WHITE, "El interior del negocio ha sido cambiado.");
			}
			saveBusiness(businessID);
		}
	}

	return 1;
}

CMD:nombrenegocio(playerid, params[])
{
	if(getPlayerBusinessID(playerid) >= 1)
	{
	    if(isnull(params)) return SendClientMessageEx(playerid, COLOR_GREY, "USA: /nombrenegocio [Nombre]");
	    if(strlen(params) >= 33 || strlen(params) < 1) return SendClientMessageEx(playerid, COLOR_GREY, "* Muchos carácteres sólo 1 - 32.");
	    new x = getPlayerBusinessID(playerid);
	    format(szMessage, sizeof(szMessage), "Cambiaste el nombre de tu negocio a '%s'.", params);
	    SendClientMessageEx(playerid, COLOR_WHITE, szMessage);
		format(businessVariables[x][bName], 32, params);
	    switch(businessVariables[x][bLocked])
		{
			case 1: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n(Cerrado)", businessVariables[x][bName], x, businessVariables[x][bOwner]);
			case 0: format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[x][bName], x, businessVariables[x][bOwner]);
		}
		UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, szMessage);
		saveBusiness(x);
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}
CMD:abrir(playerid, params[])
{
    #pragma unused params
	if(getPlayerBusinessID(playerid) >= 1)
	{
	    new x = getPlayerBusinessID(playerid);
	    switch(businessVariables[x][bLocked])
		{
			case 0: return SendClientMessageEx(playerid, COLOR_WHITE, "Usa /cerrar.");
			case 1:
			{
				format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\nPresiona ~k~~PED_DUCK~ para entrar", businessVariables[x][bName], x, businessVariables[x][bOwner]);
                UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, szMessage);
				businessVariables[x][bLocked] = 0;
			    SendClientMessageEx(playerid, COLOR_WHITE, "Negocio abierto.");
			    SaveVarBusiness(1,x, "Locked",businessVariables[x][bLocked]);
			}
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}
CMD:cerrar(playerid, params[])
{
    #pragma unused params
	if(getPlayerBusinessID(playerid) >= 1)
	{
	    new x = getPlayerBusinessID(playerid);
	    switch(businessVariables[x][bLocked])
		{
			case 0:
			{
				format(szMessage, sizeof(szMessage), "%s\n(%d - Dueño: %s)\n\n(Cerrado)", businessVariables[x][bName], x, businessVariables[x][bOwner]);
                UpdateDynamic3DTextLabelText(businessVariables[x][bLabelID], -1, szMessage);
				businessVariables[x][bLocked] = 1;
				SendClientMessageEx(playerid, COLOR_WHITE, "Negocio cerrado.");
				SaveVarBusiness(1,x, "Locked",businessVariables[x][bLocked]);
			}
			case 1: return SendClientMessageEx(playerid, COLOR_WHITE, "Usa /abrir.");
		}
	}
	else SendClientMessageEx(playerid, COLOR_GREY, "* No tienes un negocio para hacer esto.");
	return 1;
}
CMD:minegocio(playerid, params[])
{
    #pragma unused params
	if(IsPlayerConnectedEx(playerid))
	{
        new x = getPlayerBusinessID(playerid);
        if(x < 1) return 1;
        if(IsPlayerInRangeOfPoint(playerid, 2.0, businessVariables[x][bMiscPos][0], businessVariables[x][bMiscPos][1], businessVariables[x][bMiscPos][2]))
		{
		    new szDialogTittle[12];
		    format(szDialogTittle, sizeof(szDialogTittle), "Tu negocio - $%d", businessVariables[x][bVault]);
		    ShowPlayerDialog(playerid, DIALOG_MYBUSINESS,DIALOG_STYLE_LIST,szDialogTittle,"* Retirar Dinero\n* Depositar Dinero\n* Stock\n* Pedir productos", "Seleccionar", "Salir");
		}
		else return SendClientMessage(playerid, COLOR_GREY, "* No estás cerca de la caja fuerte de tu negocio.");
	}
	else SendClientMessage(playerid, COLOR_GREY, NoConectado);
	return 1;
}
// último comando
// System Furniture
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	CancelEdit(playerid);
	new hID = getPlayerHouseID(playerid);
	new title[64];
	for(new i = 0; i < MAX_FURNITURE; i++)
	{
		if(objectid == HouseInfo[hID][FurnitureObj][i])
		{
			SetPVarInt(playerid			,"ObjetcIDFur"	,i);
			format(title, sizeof(title) ,""COL_GENERAL"Modelo ID - %d",HouseInfo[hID][FModel][i]);
			ShowPlayerDialog(playerid, DIALOG_EDITOBJECT,DIALOG_STYLE_LIST,title,"* Editar\n* Guardar\n* Vender","Seleccionar","Salir");
			return 1;
		}
	}
	SendClientMessageEx(playerid, COLOR_GREY,"* Has seleccionado un objeto que no es del sistema de objetos para casas.");
    return 1;
}
stock SaveFurniturePosition(houseid, furnid) // Furnid is the instance id of the furniture.
{
	new fname[64]; format(fname, 64, HOUSE_FILE, houseid);
	new key[32];
	new INI:File = INI_Open(fname);
	INI_SetTag(File,"HouseData");
	format(key, 24, "FPosX%d", furnid); INI_WriteFloat(File,key, HouseInfo[houseid][FPosX][furnid]);
	format(key, 24, "FPosY%d", furnid); INI_WriteFloat(File,key, HouseInfo[houseid][FPosY][furnid]);
	format(key, 24, "FPosZ%d", furnid); INI_WriteFloat(File,key, HouseInfo[houseid][FPosZ][furnid]);
	format(key, 24, "FRotX%d", furnid); INI_WriteFloat(File,key, HouseInfo[houseid][FRotX][furnid]);
	format(key, 24, "FRotY%d", furnid); INI_WriteFloat(File,key, HouseInfo[houseid][FRotY][furnid]);
	format(key, 24, "FRotZ%d", furnid); INI_WriteFloat(File,key, HouseInfo[houseid][FRotZ][furnid]);
	INI_Close(File);
	return 1;
}
stock ShowFurnitureMenu(playerid)
{
	//new string[64], money = GetPlayerCash(playerid);
	new titlestring[32], businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	format(titlestring, sizeof(titlestring), "%s",businessVariables[businessID][bName]);
	if(businessVariables[businessID][bStock] == 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No hay stock de productos en este momento, vuelve más tarde.");
    ShowPlayerDialog(playerid, DIALOG_BUY_FURNITURE, DIALOG_STYLE_LIST, titlestring, "Dormitorio\nComedor\nBaño\nLobby\nCocina\nElectrónica\nParedes\nOtros", "Comprar", "Cancelar");
	return 1;
}
stock BuyFurniture(playerid, houseid, modelid, price) // modelid is the furniture model id while fid is the instance id of a furniture.
{
	new fid = 0;
	while(fid < MAX_FURNITURE)
	{
		if(HouseInfo[houseid][FModel][fid] == INVALID_FURNITURE_ID) break;
		fid ++;
	}
	if(fid == MAX_FURNITURE || HouseInfo[houseid][FCount] >= MAX_FURNITURE) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes comprar más objetos para tu casa.");
	HouseInfo[houseid][FCount] += 1;
	HouseInfo[houseid][FModel][fid] = modelid;

	new fname[64]; format(fname, 64, HOUSE_FILE, houseid);
	new key[24];

	new businessID = GetPlayerVirtualWorld(playerid)-BUSINESS_VIRTUAL_WORLD;
	businessVariables[businessID][bVault] += price;
	businessVariables[businessID][bStock]--;
    SaveVarBusiness(1,businessID, "Vault",businessVariables[businessID][bVault]);
    SaveVarBusiness(1,businessID, "Stock",businessVariables[businessID][bStock]);
	GivePlayerCash(playerid, -price);

	new INI:File = INI_Open(fname);
	INI_SetTag(File,"HouseData");
	INI_WriteInt(File,"FCount", HouseInfo[houseid][FCount]);
	format(key, 24, "FModel%d", fid); INI_WriteInt(File,key, HouseInfo[houseid][FModel][fid]);
	INI_Close(File);
	format(szDialog, sizeof(szDialog), ""COL_WHITE"Objeto comprado!\nPrecio: $%d\n\nPuedes ver tus objetos comprados en el menú de tu casa usando\nel comando /micasa > Tus Objetos\n\n¿Continuar comprando?.",price);
	ShowPlayerDialog(playerid, DIALOG_FURNITURE_BOUGHT, DIALOG_STYLE_MSGBOX,"Información:",szDialog,"Continuar","Salir");
	return fid;
}
getPlayerHouseID(const playerid)
{
	new x;
    while(x < MAX_HOUSES)
	{
		if(strlen(HouseInfo[x][hOwner]) >= 1)
		{
	        if(!strcmp(HouseInfo[x][hOwner], Info[playerid][pNormalName], true)){return x;}
		}
		x++;
	}
    return 0;
}
stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    new Float:a;
    GetPlayerPos(playerid, x, y, a);
    GetPlayerFacingAngle(playerid, a);
    if (GetPlayerVehicleID(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
}
// SpeedCam System
stock CreateSpeedCam(newid,Float:x,Float:y,Float:z,Float:rot,range,limit,fine)
{
	new text_info[64];
	vCameraInfo[newid][vCameraPos][0] = x;
	vCameraInfo[newid][vCameraPos][1] = y;
	vCameraInfo[newid][vCameraPos][2] = z;
	vCameraInfo[newid][vCameraRot] = rot;
	vCameraInfo[newid][vCameraRange] = range;
	vCameraInfo[newid][vCameraLimit] = limit;
	vCameraInfo[newid][vCameraTicket] = fine;
	vCameraInfo[newid][vCameraStatus] = 0;
	saveSpeedCam();
	vCameraInfo[newid][vCameraObject] = CreateDynamicObject(18880, vCameraInfo[newid][vCameraPos][0],vCameraInfo[newid][vCameraPos][1],vCameraInfo[newid][vCameraPos][2],0,0,vCameraInfo[newid][vCameraRot]);
	switch(vCameraInfo[newid][vCameraStatus])
	{
	    case 0: format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\nLímite: "COL_GENERAL"MPH %d", newid,vCameraInfo[newid][vCameraLimit]);
		case 1: format(text_info, sizeof(text_info), ""COL_WHITE"(%d)\nCámara de Velocidad\n"COL_RED"(DESACTIVADA)", newid);
	}
	vCameraInfo[newid][vCameraLabel] = CreateDynamic3DTextLabel(text_info,-1,vCameraInfo[newid][vCameraPos][0],vCameraInfo[newid][vCameraPos][1],vCameraInfo[newid][vCameraPos][2]+5,10.0);
}

stock DeleteSpeedCam(newid)
{
	vCameraInfo[newid][vCameraPos][0] = 0.0;
	vCameraInfo[newid][vCameraPos][1] = 0.0;
	vCameraInfo[newid][vCameraPos][2] = 0.0;
	vCameraInfo[newid][vCameraRot] = 0.0;
	vCameraInfo[newid][vCameraRange] = 0;
	vCameraInfo[newid][vCameraLimit] = 0;
	vCameraInfo[newid][vCameraTicket] = 0;
	saveSpeedCam();
	DestroyDynamicObject(vCameraInfo[newid][vCameraObject]);
	DestroyDynamic3DTextLabel(vCameraInfo[newid][vCameraLabel]);
}
// Car Sale System
stock CreateSaleCar(carsaleid,modelid, Float: x, Float: y, Float: z, Float: a, price)
{
	new text_info[128];
	varCarSale[carsaleid][CSVehSpawn][0] = x;
	varCarSale[carsaleid][CSVehSpawn][1] = y;
	varCarSale[carsaleid][CSVehSpawn][2] = z;
	varCarSale[carsaleid][CSVehSpawn][3] = a;
	varCarSale[carsaleid][CSVehModel] = modelid;
	varCarSale[carsaleid][CSVehCost] = price;
	new carcreated = CreateVehicle(modelid, x, y, z, a, 0, 0, 6);
	format(text_info, sizeof(text_info), "(%d) %s en Venta | Precio: %d", carsaleid,GetVehicleName(carcreated), varCarSale[carsaleid][CSVehCost]);
	varCarSale[carsaleid][CSVehicleLabel] = CreateDynamic3DTextLabel(text_info,COLOR_GENERAL,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
	varCarSale[carsaleid][CSVehId] = carcreated;
	saveCarSale();
}
stock DeleteSaleCar(carsaleid)
{
	varCarSale[carsaleid][CSVehSpawn][0] = 0.0;
	varCarSale[carsaleid][CSVehSpawn][1] = 0.0;
	varCarSale[carsaleid][CSVehSpawn][2] = 0.0;
	varCarSale[carsaleid][CSVehSpawn][3] = 0.0;
	varCarSale[carsaleid][VehSpawn][0] = 0.0;
	varCarSale[carsaleid][VehSpawn][1] = 0.0;
	varCarSale[carsaleid][VehSpawn][2] = 0.0;
	varCarSale[carsaleid][VehSpawn][3] = 0.0;
	varCarSale[carsaleid][CSVehModel] = 0;
	varCarSale[carsaleid][CSVehCost] = 0;
	DestroyVehicle(varCarSale[carsaleid][CSVehId]);
	DestroyDynamic3DTextLabel(varCarSale[carsaleid][CSVehicleLabel]);
	varCarSale[carsaleid][CSVehicleLabel] = Text3D:INVALID_3DTEXT_ID;
	varCarSale[carsaleid][CSVehId] = 0;
	saveCarSale();
}
stock GetCarSale(vehicleid)
{
	for(new v = 0; v < MAX_CARSALE; v++)
	{
		if(varCarSale[v][CSVehId] == vehicleid)
	    {
	    	return v;
		}
	}
	return -1;
}
stock SendMoleMessage(color, string[]){
foreach(Player, i){
	if(IsPlayerConnectedEx(i)){
		SendClientMessageEx(i, color, string);
	}
}
}
function cameraexpire(playerid)
{
SetPVarInt(playerid, "cameraactive", 0);
SetCameraBehindPlayer(playerid);
if(GetPVarInt(playerid, "camerasc") == 1)
{
 	SetPlayerPos(playerid, GetPVarFloat(playerid, "cameraX2"), GetPVarFloat(playerid, "cameraY2"), GetPVarFloat(playerid, "cameraZ2"));
  	SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "cameravw2"));
  	SetPlayerInterior(playerid, GetPVarInt(playerid, "cameraint2"));
}
TogglePlayerControllable(playerid,1);
DestroyDynamic3DTextLabel(Camera3D[playerid]);
SendClientMessageEx(playerid, COLOR_GRAD1, "A tu cámara se le acabaron las baterias!");
}
CreateDynamicDoor(doorid){
new string[128];
format(string, sizeof(string), "%s\nID: %d",DDoorsInfo[doorid][ddDescription],doorid);
switch(DDoorsInfo[doorid][ddColor]){
    case -1:{ /* Disable CreateDynamic3DTextLabel */ }
    case 1:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWWHITE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 2:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWPINK, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 3:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWRED, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 4:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBROWN, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 5:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWGRAY, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 6:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWOLIVE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 7:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWPURPLE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 8:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWORANGE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 9:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWAZURE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 10:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWGREEN, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 11:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBLUE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    case 12:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBLACK, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	default:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.8,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
}
switch(DDoorsInfo[doorid][ddPickupModel]){
    case -1: { /* Disable Pickup */ }
	case 1:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1210, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 2:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1212, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 3:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1239, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 4:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1240, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 5:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1241, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 6:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1242, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 7:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1247, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 8:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1248, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 9:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1252, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 10:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1253, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 11:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1254, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 12:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1313, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 13:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1272, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 14:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1273, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 15:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1274, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 16:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1275, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 17:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1276, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 18:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1277, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 19:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1279, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 20:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1314, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 21:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1316, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 22:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1317, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 23:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1559, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 24:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1582, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	case 25:{DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(2894, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
    default: DDoorsInfo[doorid][ddPickupID] = CreateDynamicPickup(1318, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);
}
}
function PlayerPlayMusic(playerid){
if(IsPlayerConnectedEx(playerid)){
	SetTimer("StopMusic", 5000, 0);
	PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
}
}

function StopMusic(){
foreach(Player, i){
	PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
}
}

function FishCost(playerid, fish){
if(IsPlayerConnectedEx(playerid)){
	new cost = 0;
	switch (fish){
		case 1: cost = 3;
		case 2: cost = 4;
		case 3: cost = 6;
		case 5: cost = 7;
		case 6: cost = 4;
		case 8: cost = 10;
		case 9: cost = 14;
		case 11: cost = 12;
		case 12: cost = 9;
		case 14: cost = 14;
		case 15: cost = 10;
		case 16: cost = 9;
		case 17: cost = 8;
		case 18: cost = 11;
		case 19: cost = 5;
		case 21: cost = 4;
	}
	return cost;
}
return 0;
}

function ClearFishes(playerid){
if(IsPlayerConnectedEx(playerid)){
	Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
	Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
	Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
	Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Nada");
	strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
	strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
	strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
	strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
	strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
}
return 1;
}

function ClearFishID(playerid, fish){
if(IsPlayerConnectedEx(playerid)){
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Nada");
	switch (fish){
		case 1:{
			strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
			Fishes[playerid][pWeight1] = 0;
			Fishes[playerid][pFid1] = 0;
		}
		case 2:{
			strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
			Fishes[playerid][pWeight2] = 0;
			Fishes[playerid][pFid2] = 0;
		}
		case 3:{
			strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
			Fishes[playerid][pWeight3] = 0;
			Fishes[playerid][pFid3] = 0;
		}
		case 4:{
			strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
			Fishes[playerid][pWeight4] = 0;
			Fishes[playerid][pFid4] = 0;
		}
		case 5:{
			strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
			Fishes[playerid][pWeight5] = 0;
			Fishes[playerid][pFid5] = 0;
		}
	}
}
return 1;
}

// Checks
ADAvalibles(){
new count;
for(new i = 0; i < MAX_AD; i++){
	if(ADInfo[i][aActive] == 1){
	    count++;
	}
}
return count;
}
AdminOnlineCheck(){
new count;
foreach(Player, i){
	if(Info[i][pAdmin] > 1){
		count++;
	}
}
return count;
}

JudgeOnlineCheck(){
new count;
foreach(Player, i){
	if(Info[i][pMember] == 9 || Info[i][pLeader] == 9){
		count++;
	}
}
return count;
}
stock ConvertTime(cts, &ctm=-1,&cth=-1,&ctd=-1,&ctw=-1,&ctmo=-1,&cty=-1){
//Defines to drastically reduce the code..

#define PLUR(%0,%1,%2) (%0),((%0) == 1)?((#%1)):((#%2))

#define CTM_cty 31536000
#define CTM_ctmo 2628000
#define CTM_ctw 604800
#define CTM_ctd 86400
#define CTM_cth 3600
#define CTM_ctm 60

#define CT(%0) %0 = cts / CTM_%0; cts %= CTM_%0


new strii[128];

if(cty != -1){
    CT(cty); CT(ctmo); CT(ctw); CT(ctd); CT(cth); CT(ctm);
    format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, %d %s, %d %s, and %d %s",PLUR(cty,"year","years"),PLUR(ctmo,"month","months"),PLUR(ctw,"week","weeks"),PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
    return strii;
}
if(ctmo != -1){
    CT(ctmo); CT(ctw); CT(ctd); CT(cth); CT(ctm);
    format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, %d %s, and %d %s",PLUR(ctmo,"month","months"),PLUR(ctw,"week","weeks"),PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
    return strii;
}
if(ctw != -1){
    CT(ctw); CT(ctd); CT(cth); CT(ctm);
    format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, and %d %s",PLUR(ctw,"week","weeks"),PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
    return strii;
}
if(ctd != -1){
    CT(ctd); CT(cth); CT(ctm);
    format(strii, sizeof(strii), "%d %s, %d %s, %d %s, and %d %s",PLUR(ctd,"day","days"),PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
    return strii;
}
if(cth != -1){
    CT(cth); CT(ctm);
    format(strii, sizeof(strii), "%d %s, %d %s, and %d %s",PLUR(cth,"hour","hours"),PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
    return strii;
}
if(ctm != -1){
    CT(ctm);
    format(strii, sizeof(strii), "%d %s, and %d %s",PLUR(ctm,"minute","minutes"),PLUR(cts,"second","seconds"));
    return strii;
}
format(strii, sizeof(strii), "%d %s", PLUR(cts,"second","seconds"));
return strii;
}

stock IsValidVehicleID(vehicleid)
{
if(GetVehicleModel(vehicleid)) return 1;
return 0;
}

ShowAdMuteFine(playerid)
{
new string[128];
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
new allmoney;
if(Info[playerid][pPhousekey] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[Info[playerid][pPhousekey]][hOwner], true) == 0)
{
	allmoney = HouseInfo[Info[playerid][pPhousekey]][hSafeMoney]+GetPlayerCash(playerid)+Info[playerid][pMoneyBank];
}
else
{
 	  allmoney = GetPlayerCash(playerid)+Info[playerid][pMoneyBank];
}
new fine = 10*allmoney/100;
if(Info[playerid][pADMuteTotal] < 4) format(string,sizeof(string),"Prisión por %d Minutos\nPerder Dinero ($%d)",Info[playerid][pADMuteTotal]*15,fine);
if(Info[playerid][pADMuteTotal] == 4) format(string,sizeof(string),"Prisión por 1 Hora");
if(Info[playerid][pADMuteTotal] == 5) format(string,sizeof(string),"Prisión por 1 Hora y 15 Minutos)");
if(Info[playerid][pADMuteTotal] == 6) format(string,sizeof(string),"Prisión por 1 Hora y 30 Minutos");
ShowPlayerDialog(playerid,ADMUTE,DIALOG_STYLE_LIST,"Selecciona tu castigo - AD Mutes",string,"Ok","Cancelar");
}

function WeedGrowth(weedid)
{
if(Info[weedid][pWExists])
{
	//new string[128];
    if(Info[weedid][pWValue] < 45)
    {
		new level = Info[weedid][pDrugsSkill];
        if(level >= 0 && level <= 50)
		{ Info[weedid][pWValue]+= 1; }
		else if(level >= 51 && level <= 100)
		{ Info[weedid][pWValue]+= 2; }
		else if(level >= 101 && level <= 200)
		{ Info[weedid][pWValue]+= 2; }
		else if(level >= 201 && level <= 400)
		{ Info[weedid][pWValue]+= 2; }
		else if(level >= 401)
		{ Info[weedid][pWValue]+= 3; }
		if(Info[weedid][pWValue] > 45)
		{
		    Info[weedid][pWValue] = 45;
		}
	}
}
return 1;
}

WeedLogin(playerid)
{
if(Info[playerid][pWExists])
{
	Info[playerid][pWObject] = CreateDynamicObject(19473, Info[playerid][pWX], Info[playerid][pWY], Info[playerid][pWZ], 0.0, 0.0, 0.0, Info[playerid][pWVW], Info[playerid][pWInt]);
	Info[playerid][pWTimer] = SetTimerEx("WeedGrowth", 60000, 1, "i", playerid);
	return 1;
}
return 1;
}

WeedLogout(WeedID)
{
if(Info[WeedID][pWExists])
{
	KillTimer(Info[WeedID][pWTimer]);
	DestroyDynamicObject(Info[WeedID][pWObject]);
	return 1;
}
return 1;
}

ClearWeed(WeedID)
{
KillTimer(Info[WeedID][pWTimer]);
DestroyDynamicObject(Info[WeedID][pWObject]);
Info[WeedID][pWX] = 0.0;
Info[WeedID][pWY] = 0.0;
Info[WeedID][pWZ] = 0.0;
Info[WeedID][pWValue] = 0;
Info[WeedID][pWExists] = 0;
return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
//printf("[CMD] [%s]: %s", GetPlayerNameEx(playerid), cmdtext);
if(!IsPlayerConnectedEx(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "* No puedes utilizar comandos si no estás logeado en el servidor");
if(strfind(cmdtext, "|", true) != -1)
{
    SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar el carácter '|' en un comando.");
	return 0;
}
if(GetPVarInt(playerid, "LoadingObjects") == 1)
{
    SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes usar comandos en este momento.");
    return 0;
}
if(strfind(cmdtext,"=",true) != -1)
{
    SendClientMessageEx(playerid,COLOR_GRAD2,"No puedes usar el carácter '=' en un comando.");
	return 0;
}
if(Info[playerid][pAdmin] < 2)
{
	if(strfind(cmdtext, ":", true) != -1)
	{
		new
			i_numcount,
			i_period,
			i_pos;
		while(cmdtext[i_pos])
		{
			if('0' <= cmdtext[i_pos] <= '9') i_numcount++;
			else if(cmdtext[i_pos] == '.') i_period++;
			i_pos++;
		}
		if(i_numcount >= 8 && i_period >= 3)
		{
			new string[128];
			format(string,sizeof(string),"Atención: (ID: %d) %s puede estar haciendo SPAM: '%s'.", playerid, GetPlayerNameEx(playerid),cmdtext);
			SendAdminMessage(COLOR_RED, string);
			return 0;
		}
	}
}
return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
if(!success) SendClientMessage(playerid, COLOR_WHITE, "SERVER: El comando que has ingresado no existe, consulta /ayuda.");
return 1;
}

//------------------------------------------------------------------------------------------------------
stock VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
new Float:oldposx, Float:oldposy, Float:oldposz;
new Float:tempposx, Float:tempposy, Float:tempposz;
GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
tempposx = (oldposx -x);
tempposy = (oldposy -y);
tempposz = (oldposz -z);
if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
{
	return 1;
}
return 0;
}

encode_tires(tire1, tire2, tire3, tire4)
{
return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}
NearMsg(playerid, color, string[], Float: Distance)
{
new
    Float: nbCoords[3];
GetPlayerPos(playerid, nbCoords[0], nbCoords[1], nbCoords[2]);
foreach(Player, i)
{
	if(IsPlayerInRangeOfPoint(i, Distance, nbCoords[0], nbCoords[1], nbCoords[2]) && (GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))) {SendClientMessageEx(i, color, string);}
}
return 1;
}
ProxDetector(Float: f_Radius, playerid, string[],col1,col2,col3,col4,col5)
{
new
	Float: f_playerPos[3];
GetPlayerPos(playerid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);
foreach(Player, i)
{
	if(!BigEar[i])
	{
		if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
		{
			if(IsPlayerInRangeOfPoint(i, f_Radius / 16, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
				SendClientMessageEx(i, col1, string);
			}
			else if(IsPlayerInRangeOfPoint(i, f_Radius / 8, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
				SendClientMessageEx(i, col2, string);
			}
			else if(IsPlayerInRangeOfPoint(i, f_Radius / 4, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
				SendClientMessageEx(i, col3, string);
			}
			else if(IsPlayerInRangeOfPoint(i, f_Radius / 2, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
				SendClientMessageEx(i, col4, string);
			}
			else if(IsPlayerInRangeOfPoint(i, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
				SendClientMessageEx(i, col5, string);
			}
		}
	}
	else SendClientMessageEx(i, col1, string);
}
return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
	new Float: fp_playerPos[3];
	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(IsPlayerInRangeOfPoint(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}

function PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
if(IsPlayerConnectedEx(playerid))
{
	new Float:tempposx, Float:tempposy, Float:tempposz;
	tempposx = (curx -x);
	tempposy = (cury -y);
	tempposz = (curz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
}
return 0;
}

public OnPlayerText(playerid, text[])
{
new string[128 + MAX_PLAYER_NAME],tmp[32];
if(Muted[playerid] == 1)
{
	SendClientMessageEx(playerid, COLOR_GRAD2, "* ¡Has sido silenciado!");
	return 0;
}
if(!IsPlayerConnectedEx(playerid))
{
	SendClientMessageEx(playerid, COLOR_GENERAL, "No puedes usar el chat en el Login - Kickeado automáticamente.");
	Kick(playerid);
	return 0;
}
if(TutStep[playerid] >= 1)
{
	SendClientMessageEx(playerid, COLOR_GRAD2, "* Estás en el tutorial no puedes hablar.");
	return 0;
}
if(TalkingLive[playerid] != INVALID_PLAYER_ID)
{
	if(Team_LSTV(playerid))
	{
		format(string, sizeof(string), "[News Live] Reportero %s: %s", GetPlayerNameEx(playerid), text);
		OOCNews(COLOR_SANEWS, string);
	}
	else
	{
		format(string, sizeof(string), "[News Live] Invitado %s: %s", GetPlayerNameEx(playerid), text);
		OOCNews(COLOR_SANEWS, string);
	}
	return 0;
}
if(MarriageCeremoney[playerid] > 0)
{
	if (strcmp("si", text, true) == 0)
	{
		if(GotProposedBy[playerid] < 999)
		{
			if(IsPlayerConnectedEx(GotProposedBy[playerid]))
			{
				format(string, sizeof(string), "Sacerdote: %s aceptas a %s como tu esposa para siempre? (Escribe 'Si' - cualquier otro caracter arruinaria el matrimonio).",GetPlayerNameEx(GotProposedBy[playerid]),GetPlayerNameEx(playerid));
				SendClientMessageEx(GotProposedBy[playerid], COLOR_WHITE, string);
				MarriageCeremoney[GotProposedBy[playerid]] = 1;
				MarriageCeremoney[playerid] = 0;
				GotProposedBy[playerid] = 999;
				return 0; // Yeah... no more "YES DILDOS SEX RAPE LOL" broadcast to the whole server
			}
			else
			{
				MarriageCeremoney[playerid] = 0;
				GotProposedBy[playerid] = 999;
				return 0;
			}
		}
		else if(ProposedTo[playerid] < 999)
		{
			if(IsPlayerConnectedEx(ProposedTo[playerid]))
			{
				if(Info[playerid][pSex] == 1 && Info[ProposedTo[playerid]][pSex] == 2)
				{
					format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar a la novia.", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposedTo[playerid]));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
			   		format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar al novio.", GetPlayerNameEx(ProposedTo[playerid]), GetPlayerNameEx(playerid));
					SendClientMessageEx(ProposedTo[playerid], COLOR_WHITE, string);
					format(string, sizeof(string), "Noticias: Tenemos una nueva linda pareja! %s y %s ahora están casados!!", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposedTo[playerid]));
					OOCNews(COLOR_WHITE, string);
				}
				else if(Info[playerid][pSex] == 1 && Info[ProposedTo[playerid]][pSex] == 1)
				{
					format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar al novio.", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposedTo[playerid]));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
			   		format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar al novio.", GetPlayerNameEx(ProposedTo[playerid]), GetPlayerNameEx(playerid));
					SendClientMessageEx(ProposedTo[playerid], COLOR_WHITE, string);
					format(string, sizeof(string), "Noticias: Tenemos una nueva pareja gay! %s & %s se han casado.", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposedTo[playerid]));
					OOCNews(COLOR_WHITE, string);
				}
				else if(Info[playerid][pSex] == 2 && Info[ProposedTo[playerid]][pSex] == 2)
				{
					format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar a la novia.", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposedTo[playerid]));
					SendClientMessageEx(playerid, COLOR_WHITE, string);
			   		format(string, sizeof(string), "Sacerdote: %s y %s los declaro... Marido & Mujer, puedes besar a la novia.", GetPlayerNameEx(ProposedTo[playerid]), GetPlayerNameEx(playerid));
					SendClientMessageEx(ProposedTo[playerid], COLOR_WHITE, string);
					format(string, sizeof(string), "Noticias: Tenemos una nueva pareja de lesbianas! %s & %s se han casado.", GetPlayerNameEx(playerid), GetPlayerNameEx(ProposedTo[playerid]));
					OOCNews(COLOR_WHITE, string);
				}
				//MarriageCeremoney[ProposedTo[playerid]] = 1;
				MarriageCeremoney[ProposedTo[playerid]] = 0;
				MarriageCeremoney[playerid] = 0;
				format(Info[ProposedTo[playerid]][pMarriedTo], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(playerid));
				format(Info[playerid][pMarriedTo], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(ProposedTo[playerid]));
				GivePlayerCash(playerid, - 4000);
				Tax += 4000;
				Info[playerid][pMarried] = 1;
				Info[ProposedTo[playerid]][pMarried] = 1;
				ProposedTo[playerid] = 999;
				MarriageCeremoney[playerid] = 0;
				return 0;
			}
			else
			{
				MarriageCeremoney[playerid] = 0;
				ProposedTo[playerid] = 999;
				return 0;
			}
		}
	}
	else
	{
		if(GotProposedBy[playerid] < 999)
		{
			if(IsPlayerConnectedEx(GotProposedBy[playerid]))
			{
				format(string, sizeof(string), "* No quisiste casarse con %s, no dijiste 'si'.", GetPlayerNameEx(GotProposedBy[playerid]));
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "* %s no quisó casaste contigo, no dijo 'si'.",GetPlayerNameEx(playerid));
				SendClientMessageEx(GotProposedBy[playerid], COLOR_YELLOW, string);
				return 0;
			}
			else
			{
				MarriageCeremoney[playerid] = 0;
				GotProposedBy[playerid] = 999;
				return 0;
			}
		}
		else if(ProposedTo[playerid] < 999)
		{
			if(IsPlayerConnectedEx(ProposedTo[playerid]))
			{
				format(string, sizeof(string), "* No quisiste casarse con %s, no dijiste 'si'.",GetPlayerNameEx(ProposedTo[playerid]));
				SendClientMessageEx(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "* %s no quisó casaste contigo, no dijo 'si'.",GetPlayerNameEx(playerid));
				SendClientMessageEx(ProposedTo[playerid], COLOR_YELLOW, string);
				return 0;
			}
			else
			{
				MarriageCeremoney[playerid] = 0;
				ProposedTo[playerid] = 999;
				return 0;
			}
		}
	}
	return 0;
}
if(Mobile[playerid] != -1)
{
	new idx;
	tmp = strtok(text, idx);
	if(UnidentifedCall[playerid] == 1){format(string, sizeof(string), "(Teléfono) Desconocido: %s", text);}
	else{format(string, sizeof(string), "(Teléfono) %s: %s", GetPlayerNameEx(playerid), text);}
	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	if(Mobile[playerid] == 913)
	{
		if(!strlen(tmp))
		{
			SendClientMessageEx(playerid, COLOR_ALLDEPT, "Comisaria: repítame que no le he entendido!");
			return 0;
		}
		if(strfind(text, " ", true))
		{
		    format(string, sizeof(string), "** Central: han solicitado una patrulla en: %s",text);
			SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
			format(string, sizeof(string), "** Central: un tal %s denuncia: %s",GetPlayerNameEx(playerid), Situacion[playerid]);
			SendFamilyMessage(1, TEAM_RADIO_COLOR, string);
			SendClientMessageEx(playerid, COLOR_ALLDEPT, "Comisaria: una patrulla se pasará por la zona.");
			SendClientMessageEx(playerid, COLOR_ALLDEPT, "Comisaria: ¡Gracias por su información!");
			SendClientMessageEx(playerid, COLOR_GRAD2, 	 "Colgaron <--");
			Mobile[playerid] = -1;
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(playerid, 9);
			return 0;
		}
		else SendClientMessageEx(playerid, COLOR_GRAD2, "Comisaria: Por favor calmese y vuelva a repetir su situación diciendo la ciudad.");
	 	return 0;
	}
	if(Mobile[playerid] == 912)
	{
		strmid(Situacion[playerid], text, 0, strlen(text), 128);
		format(string, sizeof(string), "Comisaria: Entendemos señor %s, díganos en donde se encuentra y alguna referencia.", GetPlayerNameEx(playerid));
		SendClientMessageEx(playerid, COLOR_ALLDEPT, string);
		Mobile[playerid] = 913;
		return 0;
	}
	if(Mobile[playerid] == 3901)
	{
		SendFamilyMessage(17, COLOR_GREEN, "Central: Llegó un nuevo mensaje a SA News:");
		format(string, sizeof(string), "[ID:%d] Mensaje de %s: %s", playerid, GetPlayerNameEx(playerid), text);
		SendFamilyMessage(17, COLOR_GREEN, string);
		SendClientMessageEx(playerid, COLOR_GREEN, "SA News Estudio: Gracias por su información !");
		SendClientMessageEx(playerid, COLOR_GRAD2, "   la llamada se colgo...");
		Mobile[playerid] = -1;
		return 0;
	}
	if(Mobile[playerid] == 758)
	{
	    format(string, sizeof(string), "(celular) %s", text);
	    SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		format(string, sizeof(string), "[News Live] Celular: %s", text);
		OOCNews(COLOR_SANEWS, string);
		return 0;
	}
	if(IsPlayerConnectedEx(Mobile[playerid]))
	{
		if(Mobile[Mobile[playerid]] == playerid)
		{
			if(Info[Mobile[playerid]][pSpeaker] != 0)
			{
		   		format(string, sizeof(string), "[Altavoz] %s Dice: %s", GetPlayerNameEx(playerid), text);
				ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
			else SendClientMessageEx(Mobile[playerid], COLOR_YELLOW,string);
		}
	}
	else SendClientMessageEx(playerid, COLOR_YELLOW,"No hay nadie!");
	return 0;
}
if(GetPVarInt(playerid, "IsInArena") == 1)
{
	if(GetPVarInt(playerid, "ArenaMode") == 2)
	{
		switch(Info[playerid][pPaintTeam])
		{
		    case 1: format(string, sizeof(string), "[Paintball Arena] ({FF0000}Equipo Rojo{FFFFFF}) %s dice: %s", GetPlayerNameEx(playerid), text);
			case 2: format(string, sizeof(string), "[Paintball Arena] ({0000FF}Equipo Azul{FFFFFF}) %s dice: %s", GetPlayerNameEx(playerid), text);
		}
	}
	if(GetPVarInt(playerid, "ArenaMode") == 1) format(string, sizeof(string), "[Paintball Arena] %s dice: %s", GetPlayerNameEx(playerid), text);
	if(GetPVarInt(playerid, "ArenaMode") == 3) format(string, sizeof(string), "[Paintball Arena] %s dice: %s", GetPlayerNameEx(playerid), text);
	SendPaintballArenaMessage(GetPVarInt(playerid,"ArenaMode"), COLOR_WHITE, string);
	return 0;
}
if(Info[playerid][pMaskuse] == 1)
{
    Anim_Hablar(playerid, text);
	format(string, sizeof(string), "Desconocido dice: %s", text);
	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
	return 0;
}
if(strlen(Info[playerid][pAcento]) >= 1)
{
    Anim_Hablar(playerid, text);
	format(string, sizeof(string), "[Acento %s] %s dice: %s", Info[playerid][pAcento],GetPlayerNameEx(playerid), text);
    NearMsg(playerid, COLOR_FADE1, string, 15.0);
    SetPlayerChatBubble(playerid,text,-1,15.0,5000);
}
return 0;
}

function FixHour(hour)
{
hour = timeshift+hour;
if (hour < 0)
{
	hour = hour+24;
}
else if (hour > 23)
{
	hour = hour-24;
}
shifthour = hour;
return 1;
}

stock IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
new Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);
if (x > minx && x < maxx && y > miny && y < maxy) return 1;
return 0;
}

function TeleportPlayer(playerid)
{
new Float:cx, Float:cy, Float:cz;
GetPlayerPos(playerid, cx, cy, cz);
for(new i = 0; i < sizeof(DDoorsInfo); i++)
{
   	if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]))
	{
        SendClientMessageEx(playerid, COLOR_GRAD2, "Usa la tecla C para entrar y salir.");
        return 1;
    }
}
//FBI
if(PlayerToPointStripped(1, playerid,325.4713,-1514.8862,36.0325, cx,cy,cz))
{
    LoadObjects(playerid);
	SetPlayerPos(playerid,278.0079,-1505.8489,-45.1302); Info[playerid][pVW] = 600;
	SetPlayerVirtualWorld(playerid, 600); SetPlayerFacingAngle(playerid, ESTE);
	SetCameraBehindPlayer(playerid);
}
if(PlayerToPointStripped(1, playerid,278.0079,-1505.8489,-45.1302, cx,cy,cz))
{
	SetPlayerPos(playerid,325.4713,-1514.8862,36.0325); SetPlayerFacingAngle(playerid, 90);
	SetCameraBehindPlayer(playerid); SetPlayerVirtualWorld(playerid, 0);
}
//FBI HELIPAD
else if (PlayerToPointStripped(1, playerid,316.2381,-1513.3770,24.9219, cx,cy,cz))
{
	ShowPlayerDialog( playerid, ELEVATOR4 , DIALOG_STYLE_LIST, "Elevador", "Interior\nHelipuerto", "Ir", "Cancelar");
}
else if (PlayerToPointStripped(1, playerid,301.5812,-1490.6759,-45.1302, cx,cy,cz))
{
	if(!Team_FBI(playerid))
	{
		SendClientMessageEx(playerid,COLOR_GREY,"Acceso Denegado.");
		return 1;
	}
	else ShowPlayerDialog( playerid, ELEVATOR5 , DIALOG_STYLE_LIST, "Elevador", "Garage\nHelipuerto", "Ir", "Cancelar");
}
else if (PlayerToPointStripped(1, playerid,308.8113,-1509.8134,77.7645, cx,cy,cz))
{
	ShowPlayerDialog( playerid, ELEVATOR7 , DIALOG_STYLE_LIST, "Elevador", "Interior\nGarage", "Ir", "Cancelar");
}
else if (PlayerToPointStripped(1, playerid,364.7064,-11.3221,1001.8516, cx,cy,cz) && GetPlayerInterior(playerid) == 9)
{
	SetPosEx(playerid, 928.6895,-1353.0563,13.3438,89.7594,0,0);
    GameTextForPlayer(playerid, "~w~San Andreas", 5000, 1);
}
return 1;
}

ClearChatbox(playerid)
{
for(new i = 0; i < 10; i++)
{
	SendClientMessageEx(playerid, COLOR_WHITE, "");
}
return 1;
}

stock IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

function RadarCooldown(playerid)
{
	DeletePVar(playerid, "RadarTimeout");
	return 1;
}

function MapsRemoveForPlayer(playerid)
{
	// SAPD COUNTY Interior 5 - Rejas Transparentes
	RemoveBuildingForPlayer(playerid, 14883, 320.8672, 314.2109, 1000.1484, 0.25);
	// SAEM
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 16670, 330.7891, 1813.2188, 17.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 16095, 279.1328, 1829.7813, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16671, 193.9531, 2051.7969, 20.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 16668, 357.9375, 2049.4219, 16.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 16669, 380.2578, 1914.9609, 17.4297, 0.25);
	//New SAMD By Map Team ZC 2013
	RemoveBuildingForPlayer(playerid, 1529, 1098.8125, -1292.5469, 17.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 5930, 1134.2500, -1338.0781, 23.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 5931, 1114.3125, -1348.1016, 17.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 5934, 1076.7109, -1358.0938, 15.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 5935, 1120.1563, -1303.4531, 18.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 5936, 1090.0547, -1310.5313, 17.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1085.7031, -1361.0234, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 5731, 1076.7109, -1358.0938, 15.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 5788, 1080.9844, -1305.5234, 16.3594, 0.25);
	RemoveBuildingForPlayer(playerid, 5787, 1090.0547, -1310.5313, 17.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 5810, 1114.3125, -1348.1016, 17.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 5993, 1110.8984, -1328.8125, 13.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 5811, 1131.1953, -1380.4219, 17.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 5708, 1134.2500, -1338.0781, 23.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1148.6797, -1385.1875, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1115.0781, -1285.3672, 17.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 5737, 1120.1563, -1303.4531, 18.5703, 0.25);
	//MECANICOS
	RemoveBuildingForPlayer(playerid, 5317, 2264.2109, -1953.2188, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 5318, 2267.9609, -1997.8906, 18.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3748, 2238.2188, -1916.1094, 15.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3748, 2261.4609, -1916.0313, 15.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3748, 2284.7031, -1915.8750, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2313.0469, -2008.5391, 15.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 2300.3281, -1954.5469, 21.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 2236.5625, -1988.0469, 26.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2217.9688, -2001.5313, 16.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 5293, 2282.8203, -2033.5000, 20.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 5372, 2282.8203, -2033.5000, 20.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2229.2109, -2010.9844, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2255.8438, -2013.5859, 15.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 2236.1406, -2010.2344, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2271.7344, -2013.6172, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2311.1563, -2019.7188, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5310, 2267.9609, -1997.8906, 18.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2227.4688, -1987.5781, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 2236.5625, -1988.0469, 26.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2245.7422, -1981.6406, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2235.8281, -1982.2031, 17.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2272.4688, -1981.8516, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2256.2500, -1976.3906, 16.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 2300.1797, -1997.0547, 25.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2302.5859, -1975.3516, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2296.6719, -1982.2031, 17.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2313.0469, -2008.5391, 15.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2316.7266, -1982.0156, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2225.2109, -1969.2500, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2264.1094, -1968.0391, 16.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2231.1172, -1962.8359, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2225.1094, -1956.9453, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2256.0156, -1962.7422, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2285.9063, -1962.8594, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 5309, 2264.2109, -1953.2188, 15.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2230.1797, -1943.5469, 17.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 5266, 2278.0000, -1942.8672, 20.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2268.8906, -1943.5781, 17.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 2300.3281, -1954.5469, 21.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2225.8750, -1933.5156, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2253.3828, -1932.9219, 12.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2233.2188, -1933.0625, 12.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2229.1016, -1928.7578, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2247.2578, -1929.2188, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2246.2109, -1931.2578, 12.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2229.1016, -1911.8125, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2229.1016, -1920.2891, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3628, 2238.2188, -1916.1094, 15.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 2266.1953, -1932.9531, 21.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3628, 2261.4609, -1916.0313, 15.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2277.2031, -1933.5547, 12.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2278.8672, -1933.5000, 12.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2291.2266, -1929.0156, 12.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 678, 2289.4375, -1933.5547, 12.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 3628, 2284.7031, -1915.8750, 15.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2253.5391, -1904.2656, 12.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2229.8750, -1904.1250, 12.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2240.7969, -1900.1328, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2277.2031, -1905.0547, 12.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2265.2891, -1900.1328, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2280.5469, -1898.5703, 16.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 2293.1016, -1900.3281, 11.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2291.2813, -1905.1719, 12.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2304.0938, -1961.6328, 11.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1315, 2311.2266, -1954.4531, 15.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 2302.1016, -1958.6563, 17.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2309.3672, -1933.9609, 16.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 2300.9688, -1909.5547, 21.5000, 0.25);
	//VIP ¿?
	RemoveBuildingForPlayer(playerid, 1283, 807.9531, -1406.5391, 15.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 786.9453, -1394.5703, 15.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 828.7656, -1390.1172, 15.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, 826.8516, -1385.6719, 12.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 798.3828, -1384.3516, 15.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 802.7109, -1375.6875, 15.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 5817, 848.8594, -1370.4297, 17.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 857.3750, -1381.1641, 13.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1365, 861.9844, -1380.4609, 13.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, 853.1953, -1359.7266, 12.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1635, 860.9141, -1359.8047, 16.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 5816, 877.3516, -1363.7109, 21.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, 886.3438, -1357.3047, 12.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 870.1484, -1343.6563, 14.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 872.2656, -1346.4141, 12.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 875.4141, -1343.6563, 14.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 778.8594, -1391.1563, 16.3125, 0.25);
	//Unity By Map Team ZC 2013
	RemoveBuildingForPlayer(playerid, 1531, 1850.0078, -1876.8359, 14.3594, 0.25);
    RemoveBuildingForPlayer(playerid, 5043, 1843.3672, -1856.3203, 13.8750, 0.25);
    //24/7 Ayunta By Map Team ZC 2013
    RemoveBuildingForPlayer(playerid, 4051, 1371.8203, -1754.8203, 19.0469, 0.25);
    RemoveBuildingForPlayer(playerid, 4191, 1353.2578, -1764.5313, 15.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 4022, 1353.2578, -1764.5313, 15.5938, 0.25);
    RemoveBuildingForPlayer(playerid, 1532, 1353.1328, -1759.6563, 12.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 4021, 1371.8203, -1754.8203, 19.0469, 0.25);
    //24/7 Vinewood By Map Team ZC 2013
    RemoveBuildingForPlayer(playerid, 1522, 1314.7266, -897.2656, 38.4688, 0.25);
    //LCN Ext
    RemoveBuildingForPlayer(playerid, 1283, 1427.3047, -1890.2891, 15.6250, 0.25);
    //Yakuza Ext
    RemoveBuildingForPlayer(playerid, 13744, 1272.5938, -803.1094, 86.3594, 0.25);
    //Hells Angels Ext
    RemoveBuildingForPlayer(playerid, 1522, 1314.7266, -897.2656, 38.4688, 0.25);
    RemoveBuildingForPlayer(playerid, 1689, 677.5234, -464.4766, 22.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 1688, 686.7578, -455.4141, 20.6406, 0.25);
    RemoveBuildingForPlayer(playerid, 1691, 686.1172, -452.2578, 20.0391, 0.25);
    //Taxi Cab Ext By Map Team ZC 2013
    RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 5083, 1748.8438, -1883.0313, 14.1875, 0.25);
    //Muelle Santa Maria Beach By Map Team ZC 2013
    RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.25);
    RemoveBuildingForPlayer(playerid, 6465, 368.0547, -2028.2422, 8.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2028.5000, 32.2266, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2021.6406, 29.9297, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2017.4531, 24.0313, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2017.4297, 16.8516, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2021.6328, 10.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2028.5156, 8.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3984, 10.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2039.6406, 16.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2039.6563, 24.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 0.25);
    RemoveBuildingForPlayer(playerid, 1529, 399.0078, -2066.8828, 11.2344, 0.25);
    RemoveBuildingForPlayer(playerid, 1232, 364.6094, -2036.1797, 9.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 6462, 368.0547, -2028.2422, 8.7344, 0.25);
    RemoveBuildingForPlayer(playerid, 1232, 374.7969, -2046.9375, 9.5000, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 378.4609, -2012.9297, 7.2109, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2042.4922, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2030.3359, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2016.7500, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2049.3516, 7.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2039.6406, 16.8438, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2039.6563, 24.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.25);
    RemoveBuildingForPlayer(playerid, 6461, 389.7734, -2028.5000, 20.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5000, 32.2266, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2021.6406, 29.9297, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2017.4531, 24.0313, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2017.4297, 16.8516, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2021.6328, 10.9844, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5156, 8.7813, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2035.3984, 10.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2035.3828, 29.9531, 0.25);
    // Sprunk
	//DISABLE VENDING MACHINES: CODES/FILTERSCRIPT BY ASTON//
    RemoveBuildingForPlayer(playerid, 956, 1634.1487,-2238.2810,13.5077, 20.0); //Snack vender @ LS Airport
	RemoveBuildingForPlayer(playerid, 956, 2480.9885,-1958.5117,13.5831, 20.0); //Snack vender @ Sushi Shop in Willowfield
	RemoveBuildingForPlayer(playerid, 955, 1729.7935,-1944.0087,13.5682, 20.0); //Sprunk machine @ Unity Station
	RemoveBuildingForPlayer(playerid, 955, 2060.1099,-1898.4543,13.5538, 20.0); //Sprunk machine opposite Tony's Liqour in Willowfield
	RemoveBuildingForPlayer(playerid, 955, 2325.8708,-1645.9584,14.8270, 20.0); //Sprunk machine @ Ten Green Bottles
	RemoveBuildingForPlayer(playerid, 955, 1153.9130,-1460.8893,15.7969, 20.0); //Sprunk machine @ Market
	RemoveBuildingForPlayer(playerid, 955,1788.3965,-1369.2336,15.7578, 20.0); //Sprunk machine in Downtown Los Santos
	RemoveBuildingForPlayer(playerid, 955, 2352.9939,-1357.1105,24.3984, 20.0); //Sprunk machine @ Liquour shop in East Los Santos
	RemoveBuildingForPlayer(playerid, 1775, 2224.3235,-1153.0692,1025.7969, 20.0); //Sprunk machine @ Jefferson Motel
	RemoveBuildingForPlayer(playerid, 956, 2140.2566,-1161.7568,23.9922, 20.0); //Snack machine @ pick'n'go market in Jefferson
	RemoveBuildingForPlayer(playerid, 956, 2154.1199,-1015.7635,62.8840, 20.0); //Snach machine @ Carniceria El Pueblo in Las Colinas
	RemoveBuildingForPlayer(playerid, 956, 662.5665,-551.4142,16.3359, 20.0); //Snack vender at Dillimore Gas Station
	RemoveBuildingForPlayer(playerid, 955, 200.2010,-107.6401,1.5513, 20.0); //Sprunk machine @ Blueberry Safe House
	RemoveBuildingForPlayer(playerid, 956, 2271.4666,-77.2104,26.5824, 20.0); //Snack machine @ Palomino Creek Library
	RemoveBuildingForPlayer(playerid, 955, 1278.5421,372.1057,19.5547, 20.0); //Sprunk machine @ Papercuts in Montgomery
	RemoveBuildingForPlayer(playerid, 955, 1929.5527,-1772.3136,13.5469, 20.0); //Sprunk machine @ Idlewood Gas Station

	//San Fierro
	RemoveBuildingForPlayer(playerid, 1302, -2419.5835,984.4185,45.2969, 20.0); //Soda machine 1 @ Juniper Hollow Gas Station
	RemoveBuildingForPlayer(playerid, 1209, -2419.5835,984.4185,45.2969, 20.0); //Soda machine 2 @ Juniper Hollow Gas Station
	RemoveBuildingForPlayer(playerid, 956, -2229.2075,287.2937,35.3203, 20.0); //Snack vender @ King's Car Park
	RemoveBuildingForPlayer(playerid, 955, -1349.3947,493.1277,11.1953, 20.0); //Sprunk machine @ SF Aircraft Carrier
	RemoveBuildingForPlayer(playerid, 956, -1349.3947,493.1277,11.1953, 20.0); //Snack vender @ SF Aircraft Carrier
	RemoveBuildingForPlayer(playerid, 955, -1981.6029,142.7232,27.6875, 20.0); //Sprunk machine @ Cranberry Station
	RemoveBuildingForPlayer(playerid, 955, -2119.6245,-422.9411,35.5313, 20.0); //Sprunk machine 1/2 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2097.3696,-397.5220,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2068.5593,-397.5223,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2039.8802,-397.5214,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2011.1403,-397.5225,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2005.7861,-490.8688,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2034.5267,-490.8681,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2063.1875,-490.8687,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium
	RemoveBuildingForPlayer(playerid, 955, -2091.9780,-490.8684,35.5313, 20.0); //Sprunk machine 3 @ SF Stadium

	//Las Venturas
	RemoveBuildingForPlayer(playerid, 956, -1455.1298,2592.4138,55.8359, 20.0); //Snack vender @ El Quebrados GONE
	RemoveBuildingForPlayer(playerid, 955, -252.9574,2598.9048,62.8582, 20.0); //Sprunk machine @ Las Payasadas GONE
	RemoveBuildingForPlayer(playerid, 956, -252.9574,2598.9048,62.8582, 20.0); //Snack vender @ Las Payasadas GONE
	RemoveBuildingForPlayer(playerid, 956, 1398.7617,2223.3606,11.0234, 20.0); //Snack vender @ Redsands West GONE
	RemoveBuildingForPlayer(playerid, 955, -862.9229,1537.4246,22.5870, 20.0); //Sprunk machine @ The Smokin' Beef Grill in Las Barrancas GONE
	RemoveBuildingForPlayer(playerid, 955, -14.6146,1176.1738,19.5634, 20.0); //Sprunk machine @ Fort Carson GONE
	RemoveBuildingForPlayer(playerid, 956, -75.2839,1227.5978,19.7360, 20.0); //Snack vender @ Fort Carson GONE
	RemoveBuildingForPlayer(playerid, 955, 1519.3328,1055.2075,10.8203, 20.0); //Sprunk machine @ LVA Freight Department GONE
	RemoveBuildingForPlayer(playerid, 956, 1659.5096,1722.1096,10.8281, 20.0); //Snack vender near Binco @ LV Airport GONE
	RemoveBuildingForPlayer(playerid, 955, 2086.5872,2071.4958,11.0579, 20.0); //Sprunk machine @ Sex Shop on The Strip
	RemoveBuildingForPlayer(playerid, 955, 2319.9001,2532.0376,10.8203, 20.0); //Sprunk machine @ Pizza co by Julius Thruway (North)
	RemoveBuildingForPlayer(playerid, 955, 2503.2061,1244.5095,10.8203, 20.0); //Sprunk machine @ Club in the Camels Toe
	RemoveBuildingForPlayer(playerid, 956, 2845.9919,1294.2975,11.3906, 20.0); //Snack vender @ Linden Station

	//Interiors: 24/7 and Clubs
	RemoveBuildingForPlayer(playerid, 1775, 496.0843,-23.5310,1000.6797, 20.0); //Sprunk machine 1 @ Club in Camels Toe
	RemoveBuildingForPlayer(playerid, 1775, 501.1219,-2.1968,1000.6797, 20.0); //Sprunk machine 2 @ Club in Camels Toe
	RemoveBuildingForPlayer(playerid, 1776, 501.1219,-2.1968,1000.6797, 20.0); //Snack vender @ Club in Camels Toe
	RemoveBuildingForPlayer(playerid, 1775, -19.2299,-57.0460,1003.5469, 20.0); //Sprunk machine @ Roboi's type 24/7 stores
	RemoveBuildingForPlayer(playerid, 1776, -35.9012,-57.1345,1003.5469, 20.0); //Snack vender @ Roboi's type 24/7 stores
	RemoveBuildingForPlayer(playerid, 1775, -17.0036,-90.9709,1003.5469, 20.0); //Sprunk machine @ Other 24/7 stores
	RemoveBuildingForPlayer(playerid, 1776, -17.0036,-90.9709,1003.5469, 20.0); //Snach vender @ Others 24/7 stores
	// Interiors House
	RemoveBuildingForPlayer(playerid, 14862, 245.5547, 300.8594, 998.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1740, 243.8828, 301.9766, 998.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 14861, 245.7578, 302.2344, 998.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 14860, 246.5156, 301.5859, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 14864, 246.1875, 303.1094, 998.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 14863, 246.9844, 303.5781, 998.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 2103, 248.4063, 300.5625, 999.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 2088, 248.4922, 304.3516, 998.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1741, 248.4844, 306.1250, 998.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1741, 248.8672, 301.9609, 998.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 250.1016, 301.9609, 999.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 250.1016, 301.9609, 1000.1563, 0.25);
}


//Anti Cleo
new legalmods[48][22] = {
        {400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
        {404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
        {477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
        {492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
        {500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
        {517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
        {518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
        {527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
        {534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
        {535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
        {536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
        {540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
        {542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
        {547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
        {550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
        {551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
        {558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
        {559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
        {560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
        {561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
        {562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
        {565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
        {567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
        {575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
        {600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
        {603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};
iswheelmodel(modelid) {
    new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
    for(new wm; wm < sizeof(wheelmodels); wm++) {
        if (modelid == wheelmodels[wm])
            return true;
    }
    return false;
}

IllegalCarNitroIde(carmodel) {
    new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
    for(new iv; iv < sizeof(illegalvehs); iv++) {
        if (carmodel == illegalvehs[iv])
            return true;
    }
    return false;
}

stock islegalcarmod(vehicleide, componentid) {
    new modok = false;
    if ( (iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
        new nosblocker = IllegalCarNitroIde(vehicleide);
        if (!nosblocker)
            modok = true;
    } else {
        for(new lm; lm < sizeof(legalmods); lm++) {
            if (legalmods[lm][0] == vehicleide) {
                for(new J = 1; J < 22; J++) {
                    if (legalmods[lm][J] == componentid)
                        modok = true;
                }
            }
        }
    }
    return modok;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	foreach(Player, i)
	{
	    if(GetPVarType(i, "pDynamicBBArea"))
	    {
	        if(areaid == GetPVarInt(i, "pDynamicBBArea"))
	        {
	            new station[256];
	            GetPVarString(i, "pDynamicBBStation", station, sizeof(station));
	            if(!isnull(station))
				{
					PlayAudioEx(playerid, station, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ"), 50.0, 1);
					SendClientMessageEx(playerid, COLOR_GREENDO, " * Escuchas la musica de un auto (( Ambiente ))");
	            }
				return 1;
	        }
	    }
	}
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    foreach(Player, i)
	{
	    if(GetPVarType(i, "pDynamicBBArea"))
	    {
	        if(areaid == GetPVarInt(i, "pDynamicBBArea"))
	        {
	            StopAudioEx(playerid);
	            SendClientMessageEx(playerid, COLOR_GREENDO, " * Dejas de escuchar la musica de un auto (( Ambiente ))");
				return 1;
	        }
	    }
	}
	return 1;
}
stock StopAudioEx(playerid)
{
	DeletePVar(playerid, "pAudioStream");
    StopAudioStreamForPlayer(playerid);
}
stock PlayAudioEx(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
{
	if(GetPVarType(playerid, "pAudioStream")) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, "pAudioStream", 1);
    PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}
stock PlayAudioStreamForPlayerEx(playerid, Float:Distancia, url[])
{ //By OTACON
    new Float:Pos[3]; GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
    if(IsPlayerConnectedEx(playerid)){
        StopAudioStreamForPlayer(playerid);
        PlayAudioStreamForPlayer(playerid, url, Pos[0], Pos[1], Pos[2]);
	    foreach(Player, player){
            if(GetPlayerInterior(playerid) == GetPlayerInterior(player) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(player)){
		        if(IsPlayerConnected(player) && (player != playerid) && IsPlayerStreamedIn(playerid,player)){
	                if(IsPlayerInRangeOfPoint(player, Distancia, Pos[0], Pos[1], Pos[2])){
                        StopAudioStreamForPlayer(player);
						PlayAudioStreamForPlayer(player, url, Pos[0], Pos[1], Pos[2]);
	                }
			    }
	        }
        }
    }
    return true;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	//new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	//new giveplayerid;
	if(IsPlayerNPC(playerid)) return 1;
	if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) return ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
	if(newkeys & KEY_FIRE && !(oldkeys & KEY_FIRE) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) return ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
	if(IsKeyJustDown(KEY_SPRINT,newkeys,oldkeys) && gPlayerUsingLoopingAnim[playerid] == 1 && Info[playerid][pBeingSentenced] == 0)
	{
	    StopLoopingAnim(playerid);
	    TextDrawHideForPlayer(playerid,txtAnimHelper);
	}
	if((newkeys & KEY_FIRE) && GetPVarInt(playerid, "SpeedRadar") == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    if(GetPVarInt(playerid, "RadarTimeout") == 0)
	    {
			if(GetPlayerWeapon(playerid) == 1)
			{
			    new Float:x,Float:y,Float:z;
				for(new veh = 1; veh < MAX_VEHICLES; veh++)
				{
				    if(IsVehicleStreamedIn(veh, playerid))
				    {
					    GetVehiclePos(veh,x,y,z);
					    if(IsPlayerAimingAt(playerid,x,y,z,10))
					    {
					        new string[128];
							new Float: Speed = GetVehicleSpeed(veh, 0);
							format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~b~Placa: ~w~%d~n~~b~Vel: ~w~%d MPH", veh, floatround(Speed/1.609));
							GameTextForPlayer(playerid, string,3500, 3);
							format(string, sizeof(string), "Placa: %d Vel: %d MPH", veh, floatround(Speed/1.609));
							SendClientMessageEx(playerid, COLOR_GRAD4, string);
							SetPVarInt(playerid, "RadarTimeout", 1);
							SetTimerEx("RadarCooldown", 3000, 0, "i", playerid);
							return 1;
						}
					}
			    }
			}
		}
	}
	if((newkeys & KEY_FIRE) && pTazer[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerWeapon(playerid) == 23)
	{
		if(TazerTimeout[playerid] > 0) return 1;
		new Float:X, Float:Y, Float:Z;
		foreach(Player, i)
		{
		    if(IsPlayerStreamedIn(i, playerid))
		    {
			    GetPlayerPos(i, X, Y, Z);
				if(IsPlayerAimingAt(playerid,X,Y,Z,1) && Info[i][pEstado] == 0 && GetPlayerState(i) == PLAYER_STATE_ONFOOT && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
				{
					if(IsACop(i)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes tazear a esta persona.");
					new string[44 + (MAX_PLAYER_NAME * 2)];
		    		format(string, sizeof(string), "* %s dispará su tazer hacia %s, paralizandolo.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(i, "~r~Tazeado", 3500, 3);
					//SendAudioToRange(10300, 100, 0, X, Y, Z, 20.0);
					TogglePlayerControllable(i, 0);
					PlayerPlaySound(i, 1085, X, Y, Z);
					PlayerPlaySound(playerid, 1085, X, Y, Z);
					Info[i][pEstado] = 1;
					SetPVarInt(i, "PlayerCuffed", 1);
					PlayerCuffedTime[i] = 16;
					SetPVarInt(i, "IsFrozen", 1);
					//Frozen[i] = 1;
					TazerTimeout[playerid] = 4;
					SetTimerEx("TazerTimer",1000,false,"d",playerid);
					ApplyAnimation(i,"PED","KO_skid_front",4.1,0,1,1,1,0);
					GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~r~Recargando Tazer... ~w~5", 1500,3);
					return 1;
				}
			}
		}
	}
	/* Arrancar motor del vehículo (Tecla "N") */
	if(IsKeyJustDown(KEY_NO, newkeys, oldkeys) && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new engine,lights,alarm,doors,bonnet,boot,objective,vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessageEx(playerid,COLOR_WHITE,"[ERROR]: No puedes usar este comando si estás en este tipo de vehiculos.");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
		{
			SetVehicleEngine(vehicleid, playerid);
		}
		else if((engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET))
		{
		    if(GetPVarType(playerid, "pDynamicBB"))
		{
		    DeletePVar(playerid, "pDynamicBB"); DeletePVar(playerid, "pDynamicBBStation"); DeletePVar(playerid, "pDynamicBBLabel");
		    DeletePVar(playerid, "pDynamicBBX"); DeletePVar(playerid, "pDynamicBBY"); DeletePVar(playerid, "pDynamicBBZ");
		    if(GetPVarType(playerid, "pDynamicBBArea"))
		    {
		        new string[128];
				format(string, sizeof(string), "* %s apago su stereo.", SenderName(playerid));
		        foreach(Player, i)
				{
		            if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "pDynamicBBArea")))
		            {
		                StopAudioEx(i);
		                SendClientMessage(i, COLOR_PURPLE, string);
					}
				}
		        DeletePVar(playerid, "pDynamicBBArea");
			}
			SendClientMessage(playerid, COLOR_WHITE, "Apagaste tu stereo!");
		}
			else
		{
		    foreach(Player, i)
			{
		        if(GetPVarType(i, "pDynamicBB"))
		        {
					if(GetPVarInt(i, "pDynamicBBVW") == GetPlayerVirtualWorld(playerid) && GetPVarInt(i, "pDynamicBBInt") == GetPlayerInterior(playerid) && IsPlayerInRangeOfPoint(playerid, 5.0, GetPVarFloat(i, "pDynamicBBX"), GetPVarFloat(i, "pDynamicBBY"), GetPVarFloat(i, "pDynamicBBZ")))
					{
					    DeletePVar(i, "pDynamicBB");
						DeletePVar(i, "pDynamicBBStation");
					    DeletePVar(i, "pDynamicBBX");
						DeletePVar(i, "pDynamicBBY");
						DeletePVar(i, "pDynamicBBZ");
						DeletePVar(i, "pDynamicBBInt");
						DeletePVar(i, "pDynamicBBVW");

					    new string[128];
					    if(GetPVarType(i, "pDynamicBBArea"))
					    {
					        for(new x=0; x<MAX_PLAYERS; x++)
							{
					            if(IsPlayerInDynamicArea(x, GetPVarInt(x, "pDynamicBBArea")))
					            {
					                StopAudioEx(x);
					                SendClientMessage(x, COLOR_PURPLE, string);
								}
							}
					        DeletePVar(i, "pDynamicBBArea");
						}
						return 1;
					}
				}
		    }
		}
			SendClientMessageEx(playerid, COLOR_WHITE, "Motor del vehículo se está prendiendo, por favor espera ...");
			SetTimerEx("SetVehicleEngine", 1000, 0, "dd",  vehicleid, playerid);
		}
	}
	if(IsKeyJustDown(KEY_CROUCH, newkeys, oldkeys))
	{
		for(new x = 0; x < MAX_BUSINESS; x++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2]))
			{
				if(businessVariables[x][bLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Este local esta cerrado.");
				businessTypeMessages(x, playerid);
				SetPlayerPos(playerid, businessVariables[x][bInteriorPos][0], businessVariables[x][bInteriorPos][1], businessVariables[x][bInteriorPos][2]);
				SetPlayerInterior(playerid, businessVariables[x][bInterior]);
				SetPlayerVirtualWorld(playerid, BUSINESS_VIRTUAL_WORLD+x);
				LoadObjects(playerid);
				return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0, businessVariables[x][bInteriorPos][0], businessVariables[x][bInteriorPos][1], businessVariables[x][bInteriorPos][2]) && GetPlayerVirtualWorld(playerid) == BUSINESS_VIRTUAL_WORLD+x)
			{
				SetPlayerPos(playerid, businessVariables[x][bExteriorPos][0], businessVariables[x][bExteriorPos][1], businessVariables[x][bExteriorPos][2]);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				if(GetPlayerInterior(playerid) != 0) LoadObjects(playerid);
				return 1;
			}
		}
	}
	if (IsKeyJustDown(KEY_FIRE, newkeys, oldkeys))
	{
		if(GetPVarInt(playerid, "CreandoCoche"))
		{
		    ShowPlayerDialog(playerid,D_NEWVEH_1,DIALOG_STYLE_MSGBOX,"Advertencia:","¿Esta es la posición en la que estará el coche?","Ok","Cancelar");
		}
		if(GetPVarInt(playerid, "CreandoCoche2"))
		{
			ShowPlayerDialog(playerid,D_NEWVEH_3,DIALOG_STYLE_MSGBOX,"Advertencia:","¿Esta es la posición en la que spawneará el coche al comprarlo?","Ok","Cancelar");
		}
	}
	if(newkeys == KEY_NO)
	{
		if(GetPVarInt(playerid,"CreateBox") == 1)
		{
			DeletePVar(playerid,"CreateBox");
			return SendClientMessageEx(playerid, COLOR_WHITE, "Cancelaste la creación de la caja fuerte de tu familia.");
		}
	}
	if(newkeys == KEY_YES)
	{
	    if(PuedeP[playerid] == 1) return GameTextForPlayer(playerid, "~b~Espera. . .", 200, 6);
		if(TutStep[playerid] == 1)
		{
			switch(TutTime[playerid])
			{
		    	case 1: TutTime[playerid] = 2;
		    	case 2: TutTime[playerid] = 3;
		    	case 3: TutTime[playerid] = 4;
		    	case 4: TutTime[playerid] = 5;
		    	case 5: TutTime[playerid] = 6;
		    	case 6: TutTime[playerid] = 7;
		    	case 7: TutTime[playerid] = 8;
		    	case 8: TutTime[playerid] = 9;
		    	case 9: TutTime[playerid] = 10;
		    	case 10: TutTime[playerid] = 11;
		    	case 11: TutTime[playerid] = 12;
		    	case 12: TutTime[playerid] = 13;
		    	case 13: TutTime[playerid] = 14;
		    }
		    Tutorial_Inside(playerid);
		}
		if(GetPVarInt(playerid,"CreateBox") == 1)
		{
		    new string[64],family = Info[playerid][pFMember];
			if(GetPlayerCash(playerid) < 5000)
			{
			    DeletePVar(playerid, "CreateBox");
				return SendClientMessageEx(playerid, COLOR_GREY, "* No tienes $5.000 para hacer esto");
			}
			GivePlayerCash(playerid, -5000);
			GetPlayerPos(playerid, fINFO[family][FamilySafe][0],fINFO[family][FamilySafe][1],fINFO[family][FamilySafe][2]);
			/*fINFO[family][FamilyCash] = 0;
			fINFO[family][FamilyMats] = 0;
			fINFO[family][FamilyPot] = 0;
			fINFO[family][FamilyCrack] = 0;*/
			if(fINFO[family][FamilyUSafe] == 1)
			{
				DestroyDynamicPickup(fINFO[family][FamilyPickup]);
				DestroyDynamic3DTextLabel(fINFO[family][FamilyPickup3D]);
			}
			fINFO[family][FamilyUSafe] = 1;
			saveFamilies();
			fINFO[family][FamilyPickup] = CreateDynamicPickup(1239, 23, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2]);
	  		new text[52];
		    format(text, sizeof(text), "%s\n/fopciones",fINFO[family][FamilyName]);
		 	fINFO[family][FamilyPickup3D] = CreateDynamic3DTextLabel(text, COLOR_GENERAL, fINFO[family][FamilySafe][0], fINFO[family][FamilySafe][1], fINFO[family][FamilySafe][2], 6.0);
			SendClientMessageEx(playerid, COLOR_WHITE, "Ajustaste la caja fuerte de tu familia en está posición.");
			format(string, sizeof(string), "%s adjusted family %d's safe", GetPlayerNameEx(playerid), family+1);
			Log("logs/family.log", string);
			DeletePVar(playerid, "CreateBox");
		}
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_SPRUNK && (newkeys & KEY_FIRE))
	{
	    if(GetPVarInt(playerid, "DrinkCooledDown") == 1)
	    {
			new Float: cHealth;
			GetPlayerHealth(playerid, cHealth);
		    if(cHealth < 100)
		    {
				SetHP(playerid, cHealth+2);
		    }
		    else
		    {
		        SendClientMessageEx(playerid, COLOR_GREY, "* Terminaste de tomar la bebida.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    }
		    DeletePVar(playerid, "DrinkCooledDown");
		    SetTimerEx("DrinkCooldown", 2500, 0, "i", playerid);
			return 1;
		}
	}
	if(IsKeyJustDown(KEY_SECONDARY_ATTACK, newkeys, oldkeys))
	{
		if(GetPVarInt(playerid, "UsingSprunk"))
		{
			DeletePVar(playerid, "UsingSprunk");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			return 1;
		}
	}
	if (IsKeyJustDown(KEY_FIRE, newkeys, oldkeys))
	{
		new Float:health;
		GetPlayerHealth(playerid, health);

		if(GetPVarInt(playerid, "UsingSprunk"))
		{
		    new hpint = floatround( health, floatround_round );
		    if( hpint >= 100 )
			{
				SendClientMessageEx(playerid, COLOR_GREY, " Estás con tu vida llena.");
	 			return 1;
	   		}
	   		else
	   		{
				GetPlayerHealth(playerid, health);
				SetHP(playerid, health+2.0);
			}
		}
	}
	if(newkeys & KEY_SPRINT)
	{
		if(IsPlayerConnectedEx(playerid))
		{
		    if(ShowRules[playerid] == 0)
			{
				return 1;
			}
			if(PlayerDrunk[playerid] > 9) { ApplyAnimation(playerid,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[playerid]*1000); }
			if(PuedeD[playerid] == 1)
	    	{
				return GameTextForPlayer(playerid, "Espera. . .", 5000, 1);
			}
			else if(ShowRules[playerid] == 1)
			{
				switch(RulesTime[playerid])
				{
		    		case 1: RulesTime[playerid] = 2;
		    		case 2: RulesTime[playerid] = 3;
		    		case 3: RulesTime[playerid] = 4;
		    		case 4: RulesTime[playerid] = 5;
		    		case 5: RulesTime[playerid] = 6;
		    		case 6: RulesTime[playerid] = 7;
		    		case 7: RulesTime[playerid] = 8;
		    		case 8: RulesTime[playerid] = 9;
		    		case 9: RulesTime[playerid] = 10;
		    	}
		    	ShowRol(playerid);
		    }
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
		if(IsPlayerConnectedEx(playerid))
		{
		    if (GetPlayerState(playerid) == 1)
			{
				TeleportPlayer(playerid);
				if(ReduceTime[playerid] == 0)
				{
				    new Float:hp; GetPlayerHealth(playerid, hp);
					if(PlayerToPoint(1.0,playerid,-36.3182,-56.8905,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-19.1974,-56.8366,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-35.9060,-139.2014,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
					else if(PlayerToPoint(1.0,playerid,-15.2743,-139.2626,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+5);
					}
					else if(PlayerToPoint(1.0,playerid,-16.7039,-139.3292,1003.5469))
					{
					    ReduceTime[playerid] = 1;
	    				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
						if(hp < 100) SetHP(playerid, hp+10);
					}
				}
			}
			else if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    RemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}
	}
    if (newkeys & KEY_CROUCH)
	 {
        if( Info[playerid][pJailed] > 0 ) return SendClientMessageEx(playerid, COLOR_WHITE, "[ERROR]: No puedes usar este comando.");
    	if(IsPlayerConnectedEx(playerid))
		{
	    for(new i = 0; i < sizeof(DDoorsInfo); i++)
			{
        	if (IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddExteriorVW])
			{
            	if(DDoorsInfo[i][ddVIP] > 0 && Info[playerid][pVIP] < DDoorsInfo[i][ddVIP])
				{
                	SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar necesitas ser un mayor nivel de VIP.");
                	return 1;
            	}
            	if(DDoorsInfo[i][ddFamily] > 0)
				{
                	if(Info[playerid][pFMember] != DDoorsInfo[i][ddFamily]-1)
					{
                    	SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, sólo para miembros de la familia.");
    					return 1;
    				}
   	            }
	            if(DDoorsInfo[i][ddFaction] > 0)
				{
					if(DDoorsInfo[i][ddFaction] >= 1 && DDoorsInfo[i][ddFaction] <= 3)
					{
						if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, esta puerta está restringida. (Sólo Policías)");
					}
					else if(DDoorsInfo[i][ddFaction] < 32 && Info[playerid][pMember] != DDoorsInfo[i][ddFaction])
					{
						return	SendClientMessageEx(playerid, COLOR_GRAD2, "Sólo ingreso a miembros de la facción.");
					}
	            }
	            if(DDoorsInfo[i][ddAdmin] > 0 && Info[playerid][pAdmin] < DDoorsInfo[i][ddAdmin]) return SendClientMessageEx(playerid, COLOR_GRAD2, "No puedes entrar, necesitas ser de más nivel administrativo.");

				if(DDoorsInfo[i][ddWanted] > 0 && Info[playerid][pWantedLevel] != 0) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta puerta esta restringida a personas con nivel de búsqueda.");

				if(DDoorsInfo[i][dLocked] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Esta puerta está bloqueada.");
        		SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
        		Info[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
        		Info[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
        		SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
        		if(DDoorsInfo[i][ddCustomInterior])
				{
        		   LoadObjects(playerid);
        		}
        		if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
        	    	SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
        	    	SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
        	    	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
        	    	LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
        		}
        		else
				{
            		SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
            		SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
            		SetCameraBehindPlayer(playerid);
        		}
        		if(DDoorsInfo[i][dMusic] == 0) return 1;
        		else
        		{
        		    switch(DDoorsInfo[i][dMusic])
        		    {
        		        case 1: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=56349", 1, 1, 1, 1, 0); // Reggeaton
                        case 2: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=860870", 1, 1, 1, 1, 0); // Electro
                        case 3: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377200", 1, 1, 1, 1, 0); // Techno
                        case 4: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281016", 1, 1, 1, 1, 0); // Hip hop
                        case 5: PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=616366", 1, 1, 1, 1, 0); // Variada
                    }
                }
				return 1;
    		}
	    }
		if (IsPlayerInRangeOfPoint(playerid,3,2281.1748,-1724.4528,13.2521)) //  GARAGE 1
		{

        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
            	SetVehiclePos(GetPlayerVehicleID(playerid),  2233.9280,-1758.3882,2031.3885);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid),  11.4);
            	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 2235.1851,-1763.5916,2032.9728);
				SetPlayerFacingAngle(playerid, 14.9);
				SetCameraBehindPlayer(playerid);
				LoadObjects(playerid);
			}
			return 1;
		}
		if (IsPlayerInRangeOfPoint(playerid,3,1242.2382,-1732.4800,13.2911)) //  GARAGE 2
		{

        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
            	SetVehiclePos(GetPlayerVehicleID(playerid),  1134.0381,-1591.4459,6602.5879);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid),  176.3030);
            	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 1134.0381,-1591.4459,6602.5879);
				SetPlayerFacingAngle(playerid, 14.9);
				SetCameraBehindPlayer(playerid);
				LoadObjects(playerid);
			}
			return 1;
		}
		if (IsPlayerInRangeOfPoint(playerid,3,853.3862,-1387.1884,13.7470)) //  GARAGE VIP
		{

			if(Info[playerid][pVIP] == 0) return GameTextForPlayer(playerid, "~r~No eres VIP", 2000, 4);
        	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
            	SetVehiclePos(GetPlayerVehicleID(playerid),  855.6053,-1412.6117,4202.1577);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid),  NORTE);
            	Streamer_Update(playerid);
            }
            else{
				SetPlayerPos(playerid, 855.6053,-1412.6117,4202.1577);
				SetPlayerFacingAngle(playerid, NORTE);
				SetCameraBehindPlayer(playerid);
				LoadObjects(playerid);
			}
			return 1;
		}
	    for(new i = 0; i < sizeof(HouseInfo); i++){
    		if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ])){
        		if(Info[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0 || Info[playerid][pRenting] == i){
			        LoadObjects(playerid);
            		SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
            		Info[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
            		Info[playerid][pVW] = i+6000;
            		SetPlayerVirtualWorld(playerid, i+6000);
            		if(HouseInfo[i][hCustomInterior] == 1){
                		LoadObjects(playerid);
            		}
            		SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
            		SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorA]);
            		SetCameraBehindPlayer(playerid);
            		GameTextForPlayer(playerid, "~w~Bienvenido", 5000, 1);
					Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
        		}
        		else GameTextForPlayer(playerid, "~r~Cerrado", 5000, 1);
        		return 1;
        	}
    	}
	}
	if (newkeys & KEY_CROUCH)
	if( Info[playerid][pJailed] > 0 ) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes usar este comando ahora.");
    if(GetPVarInt(playerid, "IsInArena") == 1) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto en la arena!");
    if(Info[playerid][pEstado] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "* No puedes hacer esto ahora.");
	for(new i = 0; i <  sizeof(DDoorsInfo); i++)
	{
    	if (IsPlayerInRangeOfPoint(playerid,3,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && Info[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
        	SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
        	Info[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
        	SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
        	Info[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
        	if(DDoorsInfo[i][ddCustomExterior])
			{
				LoadObjects(playerid);
        	}
        	if(DDoorsInfo[i][dMusic] != 0) StopAudioStreamForPlayer(playerid);
        	if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
            	SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
            	SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
            	SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
            	LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
        	}
        	else
			{
            	SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
            	SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
            	SetCameraBehindPlayer(playerid);
            	return 1;
        	}
    	}
	}
	if (IsPlayerInRangeOfPoint(playerid,8,2233.9280,-1758.3882,2031.3885)) //  GARAGE 1
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
           	SetVehiclePos(GetPlayerVehicleID(playerid),  2281.1748,-1724.4528,13.2521);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid),  179.93);
           	Streamer_Update(playerid);
        }
        else{
			SetPlayerPos(playerid, 2280.5620,-1722.8878,13.5469);
			SetPlayerFacingAngle(playerid, 181);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid,8,1140.7430,-1592.1893,6602.4922)) //  GARAGE 1
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
           	SetVehiclePos(GetPlayerVehicleID(playerid),  1242.2382,-1732.4800,13.2911);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid),  359.47);
           	Streamer_Update(playerid);
        }
        else{
			SetPlayerPos(playerid, 1241.9020,-1734.0985,13.5899);
			SetPlayerFacingAngle(playerid, 354.9746);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	if (IsPlayerInRangeOfPoint(playerid,8,855.6053,-1412.6117,4202.1577)) //  GARAGE VIP
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
           	SetVehiclePos(GetPlayerVehicleID(playerid),  853.3862,-1387.1884,13.7470);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid),  182.4513);
           	Streamer_Update(playerid);
        }
        else{
			SetPlayerPos(playerid, 853.3862,-1387.1884,13.7470);
			SetPlayerFacingAngle(playerid, 182.4513);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
    for(new i = 0; i <  sizeof(HouseInfo); i++)
	{
        if (IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && Info[playerid][pVW] == i+6000)
		{
			SetPlayerInterior(playerid,0);
            Info[playerid][pInt] = 0;
            if(HouseInfo[i][hCustomExterior]){LoadObjects(i);}
            SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
            SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorA]);
            SetCameraBehindPlayer(playerid);
            SetPlayerVirtualWorld(playerid, 0);
            Info[playerid][pVW] = 0;
            return Streamer_UpdateEx(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
        }
    }
	}
	return 1;
}

stock ClearKnock(playerid)
{
TogglePlayerControllable(playerid, 1);
ClearAnimations(playerid);
KnockedDown[playerid] = 0;
}

stock RemovePlayerWeapon(playerid, weapon){
switch(weapon) {
	case 0, 1: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][0] = 0;
		SetPlayerWeapons(playerid);
    }
    case 2, 3, 4, 5, 6, 7, 8, 9: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][1] = 0;
		SetPlayerWeapons(playerid);
    }
    case 22, 23, 24: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][2] = 0;
		SetPlayerWeapons(playerid);
    }
    case 25, 26, 27: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][3] = 0;
		SetPlayerWeapons(playerid);
    }
    case 28, 29, 32: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][4] = 0;
		SetPlayerWeapons(playerid);
    }
    case 30, 31: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][5] = 0;
		SetPlayerWeapons(playerid);
    }
    case 33, 34: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][6] = 0;
		SetPlayerWeapons(playerid);
    }
    case 35, 36, 37, 38: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][7] = 0;
		SetPlayerWeapons(playerid);
    }
    case 16, 17, 18, 39: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][8] = 0;
		SetPlayerWeapons(playerid);
    }
    case 41, 42, 43: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][9] = 0;
		SetPlayerWeapons(playerid);
    }
    case 10, 11, 12, 13, 14, 15: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][10] = 0;
		SetPlayerWeapons(playerid);
    }
    case 44, 45, 46: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][11] = 0;
		SetPlayerWeapons(playerid);
    }
    case 40: {
	    ResetPlayerWeapons(playerid);
        Info[playerid][pWeapons][12] = 0;
		SetPlayerWeapons(playerid);
    }
}
return 1;
}

/*RemovePlayerWeapon(playerid, weaponid)
{
new plyWeapons[13];
for(new s = 0; s < 13; s++)
{
	new wep, ammo;
	GetPlayerWeaponData(playerid, s, wep, ammo);
	if(wep != weaponid)
	{
		GetPlayerWeaponData(playerid, s, plyWeapons[s], ammo);
	}
	else
	{
		Info[playerid][pWeapons][s] = 0;
	}
}
ResetPlayerWeapons(playerid);
for(new s = 0; s < 13; s++)
{
	GivePlayerValidWeapon(playerid, plyWeapons[s]);
}
return 1;
}*/

function ReduceTimer(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
    if(ReduceTime[playerid] == 1)
    {
		ReduceTime[playerid] = 0;
    }
}
}

function FreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 0);	}

function UnfreezePlayer(playerid)	{	TogglePlayerControllable(playerid, 1);	}

function Heal(playerid)			{	SetHP(playerid, 100);			return 1;	}

function CheckForCloseDoor(playerid)
{
if(IsAPolice(playerid))
{
    if (PlayerToPoint(15, playerid,1589.053344,-1638.123168,14.122960))
	{
		MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
  		PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
  		return 1;
	}
	else SendClientMessageEx(playerid, COLOR_GREY,"  No hay señal!");
}
else SendClientMessageEx(playerid, COLOR_GREY,"Usted no tiene un mando a distancia.");
return 1;
}

stock Bought(playerid, amount)
{
if(IsPlayerConnectedEx(playerid))
{
	new a[12];
	format(a,sizeof(a),"~r~ -%d$",amount);
	GameTextForPlayer(playerid, a, 5000, 1);
	GivePlayerCash(playerid, -amount);
	PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
}
return 1;
}

stock Earn(playerid, amount){
if(IsPlayerConnectedEx(playerid)){
	new a[12];
	format(a,sizeof(a),"~g~ %d$",amount);
    GameTextForPlayer(playerid, a, 5000, 1);
	GivePlayerCash(playerid, amount);
	PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
}
return 1;
}

stock CheckMoney(playerid, money){
if(IsPlayerConnectedEx(playerid)){
    new b[64];
    new xx;
	xx = money - (GetPlayerCash(playerid));
    if(GetPlayerCash(playerid) >= money){ return 1; }
	else{
	    format(b,sizeof(b),"No tienes dinero suficiente! Te faltan $%d",xx);
		SendClientMessageEx(playerid, COLOR_GRAD2, b);
		return 0;
	}
}
return 0;
}

function ClearDrugs(playerid)
{
UsedWeed[playerid] = 0;
UsedCrack[playerid] = 0;
return 1;
}

function NewUs(playerid)
{
  NewUsed[playerid] = 0;
  return 1;
}

function PuedePTimer(playerid)
{
PuedeP[playerid] = 0;
return 1;
}

function ReleasePlayer(playerid)
{
SetPVarInt(playerid, "IsFrozen", 0);
TogglePlayerControllable(playerid,1);
}

function ShowDNI(playerid,targetid)
{
if(IsPlayerConnectedEx(playerid) && IsPlayerConnectedEx(targetid))
{
    new string[64], sex[10];
	switch(Info[playerid][pSex])
	{
	    case 1:  sex = "Masculino";
	    default: sex = "Femenino";
	}
    SendClientMessageEx(targetid,COLOR_GENERAL,"¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯");
	format(string, sizeof(string), 				"Nombre: %s  Sexo: %s   Edad: %d", GetPlayerNameEx(playerid),sex,Info[playerid][pAge]);
	SendClientMessageEx(targetid, COLOR_WHITE, string);
	format(string, sizeof(string), 				"Fecha Nacimiento: %d   Origen: %s", 2013-Info[playerid][pAge],Info[playerid][pAcento]);
	SendClientMessageEx(targetid, COLOR_WHITE, string);
	SendClientMessageEx(targetid,COLOR_GENERAL,"_______________________________________________________");
}
}

function Detective_FindPerson(playerid)
{
new Float:X,Float:Y,Float:Z;
GetPlayerPos(WhoFind[playerid], X,Y,Z);
SetPlayerCheckpoint(playerid, X,Y,Z, 6);
SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
WhoFind[playerid] = 0;
return 1;
}

function Detective_FindCar(playerid)
{
new Float:X,Float:Y,Float:Z;
GetVehiclePos(WhoFind[playerid], X,Y,Z);
SetPlayerCheckpoint(playerid, X,Y,Z, 10);
SendClientMessageEx(playerid, TEAM_RADIO_COLOR, "** Información: se estableció el destino de búsqueda en su radar");
WhoFind[playerid] = 0;
return 1;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
gPlayerUsingLoopingAnim[playerid] = 1;
ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
TextDrawShowForPlayer(playerid,txtAnimHelper);
}

PreloadAnimLib(playerid, animlib[])
{
ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}

StopLoopingAnim(playerid)
{
gPlayerUsingLoopingAnim[playerid] = 0;
ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

LoadAnimLibs(playerid)
{
PreloadAnimLib(playerid,"CARRY");
PreloadAnimLib(playerid,"CRACK");
PreloadAnimLib(playerid,"BD_FIRE");
PreloadAnimLib(playerid,"ON_LOOKERS");
PreloadAnimLib(playerid,"BEACH");
PreloadAnimLib(playerid,"GHANDS");
PreloadAnimLib(playerid,"MEDIC");
PreloadAnimLib(playerid,"SHOP");
PreloadAnimLib(playerid,"PARK");
PreloadAnimLib(playerid,"KISSING");
PreloadAnimLib(playerid,"SWEET");
PreloadAnimLib(playerid,"BOMBER");
PreloadAnimLib(playerid,"SWAT");
PreloadAnimLib(playerid,"WUZI");
PreloadAnimLib(playerid,"PED");
PreloadAnimLib(playerid,"ped");
PreloadAnimLib(playerid,"SCRATCHING");
PreloadAnimLib(playerid,"FAT");
PreloadAnimLib(playerid,"POLICE");
PreloadAnimLib(playerid,"Attractors");
PreloadAnimLib(playerid,"FOOD");
PreloadAnimLib(playerid,"CRIB");
PreloadAnimLib(playerid,"INT_HOUSE");
PreloadAnimLib(playerid,"MISC");
PreloadAnimLib(playerid,"GYMNASIUM");
PreloadAnimLib(playerid,"COP_AMBIENT");
PreloadAnimLib(playerid,"DEALER");
PreloadAnimLib(playerid,"GRAVEYARD");
PreloadAnimLib(playerid,"DANCING");
PreloadAnimLib(playerid,"RAPPING");
PreloadAnimLib(playerid,"GANGS");
PreloadAnimLib(playerid,"FIGHT_D");
PreloadAnimLib(playerid,"SMOKING");
PreloadAnimLib(playerid,"SNM");
PreloadAnimLib(playerid,"benchpress");
}

SearchingHit(playerid)
{
new string[ 256 ];
SendClientMessageEx(playerid, COLOR_WHITE, "Contratos Habilitados:");
new hits;
foreach(Player, i)
{
	if(Info[i][pMember] != 8 && Info[i][pHead] > 0)
	{
 		if(GotHit[i] == 0)
		{
			hits++;
			format(string, sizeof(string), "Nombre: %s (ID %d) | Precio: $%d | Contratado por: %s | Detalles: %s | Seguido por: Nadie", GetPlayerNameEx(i), i, Info[i][pHead], Info[i][pContractBy], Info[i][pContractDetail]);
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
		}
		else
		{
			format(string, sizeof(string), "Nombre: %s (ID %d) | Precio: $%d |  Contratado por: %s | Detalles: %s | Seguido por: %s", GetPlayerNameEx(i), i, Info[i][pHead], Info[i][pContractBy], Info[i][pContractDetail], GetPlayerNameEx(GetChased[i]));
			SendClientMessageEx(playerid, COLOR_GRAD2, string);
		}
	}
}
/*if(hits && Info[playerid][pRank] <= 1 && Info[playerid][pMember] == 15)
{
	SendClientMessageEx(playerid, COLOR_YELLOW, "Usa /darmehit para aseinarte un contrato.");
}*/
if(hits && Info[playerid][pRank] >= 6 && Info[playerid][pMember] == 8 && Info[playerid][pLeader] == 8)
{
	SendClientMessageEx(playerid, COLOR_YELLOW, "Usa /darhit para asignar un contrato a uno de los hitman.");
}
if(hits == 0)
{
    SendClientMessageEx(playerid, COLOR_GREY, "No hay contratos disponibles.");
}
return 0;
}

SendPaintballArenaMessage(arenamodo, color, message[])
{
foreach(Player, p)
{
	new modo = GetPVarInt(p, "ArenaMode");
	if(arenamodo == modo)
   	{
      	SendClientMessageEx(p, color, message);
	}
}
return 1;
}

function BackupClear(playerid, faction, timer)
{
if(IsPlayerConnectedEx(playerid))
{
	if(faction == 1)
	{
		if(Info[playerid][pRequestingBackup] == 1)
		{
			foreach(Player, i)
			{
				if(IsPlayerConnectedEx(i))
				{
					if(Team_SAPD(i) || Team_FBI(i) || Team_NG(i) && OnDuty[i] == 1) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR); DisablePlayerCheckpoint(playerid);
				}
			}
			if(timer != 1) 	SendClientMessageEx(playerid, TEAM_BLUE_COLOR, "Tu pedido de refuerzos ha sido cancelado automáticamente.");
			else 					SendClientMessageEx(playerid, TEAM_BLUE_COLOR, "Tu pedido fue cancelado.");

			Info[playerid][pRequestingBackup] = 0;
		}
	}
}
return 1;
}

//·| << Timers de Objetos >> ========================================================================================|·
function Puerta2Abierta()
{
MoveObject(PuertaH2,250.67543029785, 130.39466552734, 1037.9182128906, 0.97);
SetTimer("Puerta2Cerrada", 5000, 0);
}
function Puerta1Abierta()
{
MoveObject(PuertaH1,250.56510925293, 130.34936218262, 1032.2158203125, 0.97);
SetTimer("Puerta1Cerrada", 8000, 0);
}
function Puerta2Cerrada()
{
MoveObject(PuertaH2,250.67543029785, 131.59466552734, 1037.9182128906, 0.97);
if(HaciaAbajo == 1) {
SetTimer("Eabajo", 2000, 0); }
else { }
}
function Puerta1Cerrada()
{
MoveObject(PuertaH1,250.56510925293, 131.54936218262, 1032.2158203125, 0.97);
if(HaciaArriba == 1) {
SetTimer("Earriba", 2000, 0); }
else {
}
}

stock SetPosEx(playerid, Float:X, Float:Y, Float:Z, Float:A, interiorid, worldid)
{
SetPlayerPos(playerid, X, Y, Z);
SetPlayerFacingAngle(playerid, A);
SetPlayerInterior(playerid, interiorid);
SetPlayerVirtualWorld(playerid, worldid);
Info[playerid][pVW] = interiorid;
Info[playerid][pInt] = worldid;
}

function TazerTimer(playerid)
{
if (TazerTimeout[playerid] > 0)
{
	new string[128];
	format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~r~Recargando Tazer... ~w~%d", TazerTimeout[playerid]);
	GameTextForPlayer(playerid, string,1500, 3);
	TazerTimeout[playerid] -= 1;
	SetTimerEx("TazerTimer",1000,false,"d",playerid);
}
return 1;
}

GetPlayerNameEx(playerid) {

new
	sz_playerName[MAX_PLAYER_NAME],
	i_pos;

GetPlayerName(playerid, sz_playerName, MAX_PLAYER_NAME);
while ((i_pos = strfind(sz_playerName, "_", false, i_pos)) != -1) sz_playerName[i_pos] = ' ';
return sz_playerName;
}

function BikeModel(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 509) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 581) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 522) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 461) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 521) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 523) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 586) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 468) { return 1; }
	else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 471) { return 1; }
}
return 0;
}

//Buttons
function CloseFBILobbyLeft()
{
	MoveDynamicObject(FBILobbyLeft,295.40136719,-1498.43457031,-46.13965225,4);
	return 1;
}
function CloseFBILobbyRight()
{
	MoveDynamicObject(FBILobbyRight,302.39355469,-1521.62988281,-46.13965225,4);
	return 1;
}
function CloseFBIPrivate()
{
	MoveDynamicObject(FBIPrivate[0],299.29986572,-1492.82666016,-28.73300552,4);
	MoveDynamicObject(FBIPrivate[1],299.33737183,-1495.83911133,-28.73300552,4);
	return 1;
}

ExecuteNOPAction(playerid)
{
	NOPTrigger[playerid]++;
	RemovePlayerFromVehicle(playerid);
	new newcar = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	SetPlayerPos(playerid, X, Y, Z+2);
	SetVehicleToRespawn(newcar);
	if(NOPTrigger[playerid] >= 1)
	{
		new sec = (NOPTrigger[playerid] * 1000)/1000-1, string[128];
		format(string, sizeof(string), "AdmWarning: %s (ID %d) tal vez es `NOP hacking explote´, (Modelo: %d) por %d segundos.", GetPlayerNameEx(playerid), playerid, GetVehicleModel(newcar),sec);
		ABroadCast(COLOR_GENERAL, string, 2);
	}
	return 1;
}

stock PlayerFacePlayer(playerid, targetplayerid) { // Yeah, this'll fix the handshake headaches we had last time around (shaking air).
new Float: Angle;
GetPlayerFacingAngle(playerid, Angle);
SetPlayerFacingAngle(targetplayerid, Angle+180);
return 1;
}

stock GivePlayerEventWeapons( playerid )
{
if( GetPVarInt( playerid, "EventToken" ) == 1 )
{
	GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 0 ], 60000 );
	GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 1 ], 60000 );
	GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 2 ], 60000 );
	GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 3 ], 60000 );
	GivePlayerWeapon( playerid, InfoEvento[ EventWeapons ][ 4 ], 60000 );
}
return 1;
}

function SafeLoadObjects(playerid)
{
if(GetPVarType(playerid, "LoadingObjects"))
{
	DeletePVar(playerid, "LoadingObjects");
	TogglePlayerControllable(playerid, 1);
	TextDrawHideForPlayer(playerid, boxGM);
	TextDrawHideForPlayer(playerid, streamer);
}
}

function ReFill(playerid)
{
if(!IsAtGasStation(playerid) || !IsPlayerInAnyVehicle(playerid) || VehicleFuel[GetPlayerVehicleID(playerid)] >= 500 || GetPlayerCash(playerid) < 1)
{
	StopRefueling(playerid);
}
else
{
    new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	if(engine == VEHICLE_PARAMS_ON) return StopRefueling(playerid);
	VehicleFuel[GetPlayerVehicleID(playerid)] += 125; RefuelingVehiclePrice[playerid] += 12;
	if(VehicleFuel[GetPlayerVehicleID(playerid)] >= 500) VehicleFuel[GetPlayerVehicleID(playerid)] = 500;
}
return true;
}

stock StopRefueling(playerid)
{
new string[128];
GivePlayerCash(playerid, -RefuelingVehiclePrice[playerid]);
format(string, sizeof(string), "Tu vehiculo a sido llenado por $%d.", RefuelingVehiclePrice[playerid]);
SendClientMessageEx(playerid, COLOR_GRAD2, string);
RefuelingVehicle[playerid] = 0; RefuelingVehiclePrice[playerid] = 0; KillTimer(RefuelingVehicleTimer[playerid]);
return true;
}

public OnVehicleSpawn(vehicleid)
{
switch(GetVehicleModel(vehicleid))
{
	case 427, 428, 432, 601, 528: SetVehicleHealth(vehicleid, 5000.0); // Enforcer, Securicar, Rhino, SWAT Tank, FBI truck - this is the armour plating dream come true.
}
if(Lamp[vehicleid] == 1)
{
	DestroyObject(light[vehicleid]);
    Lamp[vehicleid] = 0;
}
VehicleStatus{vehicleid} = 0;
foreach(Player, i)
{
    new v;
    v = GetPlayerVehicle(i, vehicleid);
    if (v != -1)
    {
		if(PlayerVehicleInfo[i][v][pvId] == vehicleid && GetVehicleModel(vehicleid) != PlayerVehicleInfo[i][v][pvModelId])
  		{
   			DestroyVehicle(vehicleid);
			PlayerVehicleInfo[i][v][pvId] = CreateVehicle(PlayerVehicleInfo[i][v][pvModelId], PlayerVehicleInfo[i][v][pvPosX], PlayerVehicleInfo[i][v][pvPosY], PlayerVehicleInfo[i][v][pvPosZ], PlayerVehicleInfo[i][v][pvPosAngle],PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2], -1);
			if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
            ChangeVehiclePaintjob(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvPaintJob]);
			ChangeVehicleColor(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2]);
            SetVehicleVirtualWorld(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvVW]);
            SetVehicleHealth(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvHealth]);
			//SetVehicleNumberPlate(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvNumberPlate]);
			for(new m = 0; m < MAX_MODS; m++)
   			{
				AddVehicleComponent(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvMods][m]);
      		}
		}
		else
		{
		    //DestroyVehicle(vehicleid);
		    //PlayerVehicleInfo[i][v][pvId] = CreateVehicle(PlayerVehicleInfo[i][v][pvModelId], PlayerVehicleInfo[i][v][pvPosX], PlayerVehicleInfo[i][v][pvPosY], PlayerVehicleInfo[i][v][pvPosZ], PlayerVehicleInfo[i][v][pvPosAngle],PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2], -1);
			//if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
			ChangeVehiclePaintjob(vehicleid, PlayerVehicleInfo[i][v][pvPaintJob]);
			ChangeVehicleColor(vehicleid, PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2]);
			SetVehicleVirtualWorld(vehicleid, PlayerVehicleInfo[i][v][pvVW]);
			SetVehicleHealth(vehicleid, PlayerVehicleInfo[i][v][pvHealth]);
            //SetVehicleNumberPlate(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvNumberPlate]);
			for(new m = 0; m < MAX_MODS; m++)
            {
            	AddVehicleComponent(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvMods][m]);
            }
			if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
		}
		new string[128];
		format(string,sizeof(string),"Tu %s ha sido enviado a la última posición donde lo aparcaste.",GetVehicleName(vehicleid));
		SendClientMessageEx(i, COLOR_GRAD1, string);
	}
}
if(LockStatus[vehicleid])
{
	foreach(Player, i)
	{
		if(Info[i][pLockCar] == vehicleid)
		{
			Info[i][pLockCar] = INVALID_VEHICLE_ID;
		}
	}
}
arr_Engine{vehicleid} = 0;
VehicleFuel[vehicleid] = 500;
TruckContents[vehicleid] = 0;
}

function SetPlayerJoinCamera(playerid, cases) // Jeferson taked cameras
{
switch(cases)
{
		case        1: // Los Santos 1
    	{
			InterpolateCameraPos(playerid, 1200.147827, 1037.299316, 27.484922, 1089.747314, 1153.743041, 25.671129, 6000);
			InterpolateCameraLookAt(playerid, 1195.787719, 1039.726196, 27.168958, 1087.933471, 1149.086059, 25.520412, 6000);
      		SetPlayerPos(playerid,1089.747314, 1153.743041, 15.671129);
       		Streamer_UpdateEx(playerid, 1089.747314, 1153.743041, 15.671129, 0, 0);
    	}
        case        2: // Los Santos 2
        {
					InterpolateCameraPos(playerid, -2387.022705, 1845.430419, 18.380882, -2140.041259, 2391.255126, 10.747632, 6000);
					InterpolateCameraLookAt(playerid, -2386.927001, 1850.424804, 18.164037, -2144.962646, 2392.119140, 10.563849, 6000);
                    SetPlayerPos(playerid,-2140.041259, 2391.255126, 5.747632);
                    Streamer_UpdateEx(playerid, -2140.041259, 2391.255126, 5.747632, 0, 0);
        }
        case        3: // Los Santos 3
        {
                    InterpolateCameraPos(playerid, 1288.222167, -1985.063598, 116.323005, 1192.856445, -1988.887939, 98.766273, 4000);
                    InterpolateCameraLookAt(playerid, 1286.605468, -1980.364257, 115.773338, 1189.264038, -1992.133911, 97.517898, 4000);
                    SetPlayerPos(playerid,1192.856445, -1988.887939, 88.766273);
                    Streamer_UpdateEx(playerid, 1192.856445, -1988.887939, 88.766273, 0, 0);
        }
        case        4: // Los Santos 4
        {
					InterpolateCameraPos(playerid, 2093.549316, 1767.833374, 19.752738, 2059.379394, 1653.759521, 18.919198, 6000);
					InterpolateCameraLookAt(playerid, 2095.243164, 1763.141967, 19.403760, 2064.323242, 1654.450805, 18.636262, 6000);
					SetPlayerPos(playerid,2059.379394, 1653.759521, 8.919198);
                    Streamer_UpdateEx(playerid, 2059.379394, 1653.759521, 8.919198, 0, 0);
        }
        case        5: // Los Santos 5
        {
					InterpolateCameraPos(playerid, -1458.180908, -2920.088378, 55.182392, -1601.129394, -2805.557373, 56.018642, 6000);
					InterpolateCameraLookAt(playerid, -1460.011840, -2915.476074, 54.569972, -1599.829223, -2800.747314, 55.603683, 6000);
					SetPlayerPos(playerid,-1601.129394, -2805.557373, 46.018642);
                    Streamer_UpdateEx(playerid, -1601.129394, -2805.557373, 46.018642, 0, 0);

        }
        case        6: // Los Santos 6
        {
					InterpolateCameraPos(playerid, -2530.708251, -2674.146484, 50.602710, -2651.355957, -2338.166015, 40.394351, 6000);
					InterpolateCameraLookAt(playerid, -2531.695312, -2669.257324, 50.253734, -2647.815673, -2334.635498, 40.442138, 6000);
					SetPlayerPos(playerid,-2651.355957, -2338.166015, 30.394351);
                    Streamer_UpdateEx(playerid, -2651.355957, -2338.166015, 30.394351, 0, 0);
        }
        case    7: // Los Santos 7
        {
					InterpolateCameraPos(playerid, -2910.571044, -1178.763916, 21.677368, -2778.857910, -244.792922, 19.936496, 6000);
					InterpolateCameraLookAt(playerid, -2909.849853, -1173.820922, 21.460523, -2776.316162, -249.081665, 19.554519, 6000);
					SetPlayerPos(playerid,-2778.857910, -244.792922, 9.936496);
                    Streamer_UpdateEx(playerid, -2778.857910, -244.792922, 9.936496, 0, 0);
        }
        case    8: // Los Santos 8
        {
					InterpolateCameraPos(playerid, -2575.661376, 1544.743530, 24.544570, -2296.076171, 1440.079345, 23.075916, 6000);
					InterpolateCameraLookAt(playerid, -2570.668212, 1544.825439, 24.294675, -2300.163085, 1442.959960, 23.057527, 6000);
					SetPlayerPos(playerid,-2296.076171, 1440.079345, 13.075916);
                    Streamer_UpdateEx(playerid, -2296.076171, 1440.079345, 13.075916, 0, 0);
        }
}
}

stock IsPlayerInVehicleRadio(playerid, Float:radius)
{
new Float:r, Float:rr, Float:rrr, Float:rc, Float:rrc, Float:rrrc;
GetPlayerPos(playerid, r, rr, rrr);
for(new i; i < MAX_VEHICLES; i++)
{
    GetVehiclePos(i, rc, rrc, rrrc);
    if(PlayerToPoint(radius,playerid,rc,rrc,rrrc))
    {
        return i;
    }
}
return false;
}

stock CleanScreen()
{
foreach(Player, i)
{
    ClearChatbox(i);
}
return 1;
}

function DisableVehicleAlarm(vehicleid)
{
new engine, lights, alarm, doors, bonnet, boot, objective;
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, engine, lights, false, doors, bonnet, boot, objective);
}

function HospitalFun(playerid)
{
	SendClientMessageEx(playerid, COLOR_WHITE, "Lamentablemente perdiste el conocimiento y no recuedas nada.");
	SendClientMessageEx(playerid, COLOR_WHITE, "Los gastos son de $400, que tengas buen día.");
	GivePlayerCash(playerid, -400); Tax += 400;
	SetCameraBehindPlayer(playerid);
	SetPosEx(playerid, 1148.1886,-1340.7588,13.5688,ESTE,0,0);
}

function OtherTimerEx(playerid, type)
{
if(type == TYPE_GIVEWEAPONTIMER)
{
    if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		SetPVarInt(playerid, "GiveWeaponTimer", GetPVarInt(playerid, "GiveWeaponTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
	}
}
else if(type == TYPE_GUARDTIMER)
{
    if(GetPVarInt(playerid, "GuardTimer") > 0)
    {
        SetPVarInt(playerid, "GuardTimer", GetPVarInt(playerid, "GuardTimer")-1);
        SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
    }
}
else if(type == TYPE_FLOODPROTECTION)
{
	if( CommandSpamUnmute[playerid] >= 1)
	{
		CommandSpamUnmute[playerid]--;
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
	}
}
else if(type == TYPE_PAYTIMER)
{
    if(GetPVarInt(playerid, "GiveMoneyTimer") > 0)
	{
		SetPVarInt(playerid, "GiveMoneyTimer", GetPVarInt(playerid, "GiveMoneyTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PAYTIMER);
	}
}
else if(type == TYPE_ARMSTIMER)
{
    if(GetPVarInt(playerid, "ArmsTimer") > 0)
	{
		SetPVarInt(playerid, "ArmsTimer", GetPVarInt(playerid, "ArmsTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
	}
}
else if (type == TYPE_TPPIZZARUNTIMER)
{
	if(GetPVarInt(playerid, "tpPizzaTimer") > 0 && GetPVarInt(playerid, "Pizza"))
	{
		SetPVarInt(playerid, "tpPizzaTimer", GetPVarInt(playerid, "tpPizzaTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
	}
}
else if(type == TYPE_TPDRUGRUNTIMER)
{
	if(GetPVarInt(playerid, "tpDrugRunTimer") > 0)
	{
		SetPVarInt(playerid, "tpDrugRunTimer", GetPVarInt(playerid, "tpDrugRunTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
	}
}
if(type == TYPE_TPMATRUNTIMER)
{
	if(GetPVarInt(playerid, "tpMatRunTimer") > 0)
	{
		SetPVarInt(playerid, "tpMatRunTimer", GetPVarInt(playerid, "tpMatRunTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
	}
}
else if(type == TYPE_TPTRUCKRUNTIMER)
{
	if(GetPVarInt(playerid, "tpTruckRunTimer") > 0)
	{
		SetPVarInt(playerid, "tpTruckRunTimer", GetPVarInt(playerid, "tpTruckRunTimer")-1);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
	}
}
else if (type == TYPE_PIZZATIMER)
{
    if(GetPVarInt(playerid, "pizzaTimer") == 0)
	{
        SendClientMessageEx(playerid, COLOR_WHITE, "No lograste entregar la pizza a la casa antes de que se se enfriara!");
        SetPVarInt(playerid, "Pizza", 0);
        DestroyProgressBar(PizzaBar[playerid]);
        DisablePlayerCheckpoint(playerid);
    }
    else if (GetPVarInt(playerid, "Pizza") == 0)
    {
        DestroyProgressBar(PizzaBar[playerid]);
        DisablePlayerCheckpoint(playerid);
    }
    else if (GetPVarInt(playerid, "pizzaTimer") > 0 && GetPVarInt(playerid, "Pizza") > 0)
    {
		SetPVarInt(playerid, "pizzaTimer", GetPVarInt(playerid, "pizzaTimer")-1);
        SetProgressBarValue(PizzaBar[playerid], (GetPVarInt(playerid, "pizzaTimer") * 100.0 / GetPVarInt(playerid, "pizzaTotal")));
        UpdateProgressBar(PizzaBar[playerid], playerid);
        SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);
    }
}
}

stock IsLocolowVehicle(veh)
{
new model = GetVehicleModel(veh);
switch(model)
{
    case 412,534,535,536,566,567,576: return 1;
}
return 0;
}
ReadyToCapture(pointid)
{
new string[128];
//if(Points[pointid][Type] == 3 && Points[pointid][Type] == 4) return 1;
format(string, sizeof(string), "%s está disponible para capturar! En el punto escribe /capturar!", Points[pointid][Name]);
Points[pointid][CaptureProccess] = Create3DTextLabel(string, COLOR_POINTGEN, Points[pointid][Pointx], Points[pointid][Pointy], Points[pointid][Pointz]+0.6, 10.0, 0, 0);
Points[pointid][CaptureProccessEx] = 1;
return 1;
}

function CaptureTimer(point)
{
new string[128];
new fam;
if (Points[point][ClaimerId] != INVALID_PLAYER_ID && Points[point][TimeToClaim])
{
	new claimer = Points[point][ClaimerId];
	new Float: x, Float: y, Float: z;
	GetPlayerPos(claimer, x, y, z);
	if (Points[point][Capturex] != x || Points[point][Capturey] != y || Points[point][Capturez] != z || GetPVarInt(Points[point][ClaimerId],"Injured") == 1)
	{
		SendClientMessageEx(Points[point][ClaimerId], COLOR_GENERAL, "No pudiste capturar el punto, te moviste o te moriste mientras intentabas capturar.");
		Points[point][ClaimerId] = INVALID_PLAYER_ID;
		Points[point][TimeToClaim] = 0;
	}
	else
	{
		if(Points[point][Vulnerable] > 0)
		{
		    SendClientMessageEx(Points[point][ClaimerId], COLOR_GENERAL, "No pudiste capturar, el punto ya fue capturado.");
			Points[point][ClaimerId] = INVALID_PLAYER_ID;
			Points[point][TimeToClaim] = 0;
			return 1;
		}
		fam = Info[claimer][pFMember];
        Points[point][PlayerNameCapping] = GetPlayerNameEx(claimer);
	   	format(string, sizeof(string), "%s ha intentado tomar el control de %s por %s, será de ellos en %d minutos.", Points[point][PlayerNameCapping], Points[point][Name], fINFO[fam][FamilyName], TIME_TO_TAKEOVER);
		SendClientMessageToAllEx(COLOR_POINTGEN, string);
		if(Points[point][CaptureProccessEx] >= 1)
		{
			Update3DTextLabelText(Points[point][CaptureProccess], COLOR_POINTGEN, string);
			Points[point][CaptureProccessEx] = 2;
		}
		Points[point][TakeOverTimerStarted] = 1;
		Points[point][TakeOverTimer] = 5;
		Points[point][ClaimerId] = INVALID_PLAYER_ID;
		Points[point][ClaimerTeam] = fam;
		Points[point][TimeToClaim] = 0;
		if(Points[point][CaptureTimerEx2] != -1) KillTimer(Points[point][CaptureTimerEx2]);
		Points[point][CaptureTimerEx2] = SetTimerEx("CaptureTimerEx", 60000, 1, "d", point);
	}
}
return 1;
}

function ProgressTimer(point)
{
if (Points[point][ClaimerId] != INVALID_PLAYER_ID && Points[point][TimeToClaim])
{
    Points[point][TimeLeft]--;
	SetProgressBarValue(Points[point][PointBarID], GetProgressBarValue(Points[point][PointBarID])-10.0);
	UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
	if(GetProgressBarValue(Points[point][PointBarID]) >= 10) SetTimerEx("ProgressTimer", 1000, 0, "d", point);
	new string[128];
	format(string, sizeof(string), "%s está tratando de capturar el punto, tiempo restante: %d", GetPlayerNameEx(Points[point][ClaimerId]), Points[point][TimeLeft]);
	if(Points[point][TimeLeft] == 9) Points[point][CaptureProgress] = CreateDynamic3DTextLabel(string, COLOR_RED, Points[point][Pointx], Points[point][Pointy], Points[point][Pointz]+1.0, 10.0);
			else if(Points[point][TimeLeft] < 9 && Points[point][TimeLeft] >= 0) UpdateDynamic3DTextLabelText(Points[point][CaptureProgress], COLOR_RED, string);

	if(GetProgressBarValue(Points[point][PointBarID]) == 50.0)
	{
	    SetProgressBarColor(Points[point][PointBarID], COLOR_YELLOW);
	    UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
	}
	else if(GetProgressBarValue(Points[point][PointBarID]) == 20.0)
	{
	    SetProgressBarColor(Points[point][PointBarID], COLOR_RED);
	    UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
	}
	else if(GetProgressBarValue(Points[point][PointBarID]) <= 0.0 && Points[point][TimeLeft] <= 0)
	{
	    CaptureTimer(point);
	    Points[point][TimeLeft] = 0;
	    DestroyProgressBar(Points[point][PointBarID]);
	    DestroyDynamic3DTextLabel(Points[point][CaptureProgress]);
	}
}
else
{
    DestroyProgressBar(Points[point][PointBarID]);
    DestroyDynamic3DTextLabel(Points[point][CaptureProgress]);
    Points[point][ClaimerId] = INVALID_PLAYER_ID;
	Points[point][TimeToClaim] = 0;
}
return 1;
}

function CaptureTimerEx(point)
{
new string[128];
new fam;
if (Points[point][TakeOverTimerStarted])
{
	fam = Points[point][ClaimerTeam];
	if (Points[point][TakeOverTimer] > 0)
	{
		Points[point][TakeOverTimer]--;
		format(string, sizeof(string), "%s ha intentado tomar el control de %s por %s, será de ellos en %d minutos!",
		Points[point][PlayerNameCapping], Points[point][Name], fINFO[fam][FamilyName], Points[point][TakeOverTimer]);
		Update3DTextLabelText(Points[point][CaptureProccess], COLOR_POINTGEN, string);
	}
	else
	{
		Points[point][ClaimerTeam] = INVALID_PLAYER_ID;
		Points[point][TakeOverTimer] = 0;
		Points[point][TakeOverTimerStarted] = 0;
		Points[point][Announced] = 0;
		Points[point][Vulnerable] = NEW_VULNERABLE;
		Delete3DTextLabel(Points[point][CaptureProccess]);
		Points[point][CaptureProccessEx] = 0;
		strmid(Points[point][Owner], fINFO[fam][FamilyName], 0, 32, 32);
		strmid(Points[point][CapperName], Points[point][PlayerNameCapping], 0, 32, 32);
		format(string, sizeof(string), "%s ha tomado correctamente el control de %s por %s.", Points[point][CapperName], Points[point][Name], Points[point][Owner]);
		SendClientMessageToAllEx(COLOR_POINTGEN, string);
		UpdatePoints();
		KillTimer(Points[point][CaptureTimerEx2]);
		Points[point][CaptureTimerEx2] = -1;
	}
}
}
/*
// CHECK VIP EXPIRE
CheckVIPExpire(playerid)
{
	new year, month,day;
	getdate(year, month, day);
	if(Info[playerid][pVIP] == 0){
	   Info[playerid][pVIPDateD] = -1;
	   Info[playerid][pVIPDateM] = -1;
	   return 1;
	}
	if(Info[playerid][pVIPDateD] >= 1 && Info[playerid][pVIPDateM] >= 1){
		if(Info[playerid][pVIP] >= 1)
		{
			if(day >= Info[playerid][pVIPDateD] && Info[playerid][pVIPDateM] == 12 && month != 12)
			{
	    	    //print("DEBUG: DICIEMBRE EXPLOIT [CheckVIPExpire]");
				Info[playerid][pVIPDateD] = -1;
				Info[playerid][pVIPDateM] = -1;
				Info[playerid][pVIP] = 0;
				return SendClientMessageEx(playerid, COLOR_VIP, "SERVER: {FFFFFF}Tu VIP ha expirado, puedes hacer tu renovación ahora mismo.");
			}
			if(day >= Info[playerid][pVIPDateD] && month >= Info[playerid][pVIPDateM]){
	            //print("DEBUG: NORMAL [CheckVIPExpire]");
				Info[playerid][pVIPDateD] = -1;
				Info[playerid][pVIPDateM] = -1;
				Info[playerid][pVIP] = 0;
				return SendClientMessageEx(playerid, COLOR_VIP, "SERVER: {FFFFFF}Tu VIP ha expirado, puedes hacer tu renovación ahora mismo.");
			}
			if(Info[playerid][pVIPDateD] >= 30 && month > Info[playerid][pVIPDateM]){
			    //print("DEBUG: Si es 30 y pasó el mes [CheckVIPExpire]");
				Info[playerid][pVIPDateD] = -1;
				Info[playerid][pVIPDateM] = -1;
				Info[playerid][pVIP] = 0;
				return SendClientMessageEx(playerid, COLOR_VIP, "SERVER: {FFFFFF}Tu VIP ha expirado, puedes hacer tu renovación ahora mismo.");
			}
		}
	}
	return 1;
}
*/

stock IsWAAVehicle(veh)
{
new model = GetVehicleModel(veh);
switch(model)
{
    case 558,559,560,561,562,565: return 1;
}
return 0;
}

function RadioBroadCast(playerid, color, string[])
{
new MiscString[128], Float: aaaPositions[3];
foreach(Player, i)
{
	if(Info[i][pRadioFreq] == Info[playerid][pRadioFreq] && Info[i][pRadio] >= 1 && gRadio[i] != 0)
	{
		GetPlayerPos(i, aaaPositions[0], aaaPositions[1], aaaPositions[2]);
		format(MiscString, sizeof(MiscString), "** Radio (%d khz) ** %s: %s", Info[playerid][pRadioFreq], GetPlayerNameEx(playerid), string);
		SendClientMessageEx(i, PUBLICRADIO_COLOR, MiscString);
		format(MiscString, sizeof(MiscString), "(radio) %s", string);
		SetPlayerChatBubble(playerid,MiscString,COLOR_WHITE,15.0,5000);
	}
}
}

function ShowRol(playerid)
{
if(ShowRules[playerid] == 1)
{
    switch(RulesTime[playerid])
    {
        case 1:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 14000, 0, "d", playerid);
        	gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1; gNewbie[playerid]=1;
        	SetPlayerVirtualWorld(playerid, playerid+1);
        	TogglePlayerControllable(playerid, 0);
			Streamer_UpdateEx(playerid,370.0804,-2087.8767,7.8359);
			SetPlayerPos(playerid,370.0804,-2087.8767,-10.0);
			SetPlayerCameraPos(playerid,423.3802,-2067.7915,29.8605);
			SetPlayerCameraLookAt(playerid,370.0804,-2087.8767,7.8359);
        	SendClientMessageEx(playerid, COLOR_WHITE, "Hola! al parecer no sabes los terminos de Role Play y no tienes idea de como rolear.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Un administrador te envió y ahora tienes que leer atentamente, todo lo que te diré.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Bien comenzaremos con algo muy importante pulsa la tecla ESPACIO para seguir.");

		}
        case 2:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "DeathMatch [DM]");
        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es DeathMatch [DM]? Bueno esto se llama a matar o golpear a una persona sin una razón lógica.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Por ejemplo, estás caminando, de pronto ves a una persona y comienzas a dispararle o golpearle");
        	SendClientMessageEx(playerid, COLOR_WHITE, "hasta matarlo, la persona te reportará y tu puedes ser encarcelado por 10 a 30 minutos.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Entonces tu no puedes hacer esto, por que estarias haciendo DeathMatch y va en contra las reglas del servidor.");
        }
        case 3:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Metagaming [MG]");
        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Metagaming [MG]? Es usar información OOC dentro de IC o viceversa ¿No te quedo muy claro no?");
        	SendClientMessageEx(playerid, COLOR_WHITE, "bueno, como verás cada usuario tiene un nombre en su cabeza, es obvio que en la vida real no pasa lo mismo");
        	SendClientMessageEx(playerid, COLOR_WHITE, "para saber su nombre tienes que preguntarle; Hola ¿Cual es tu nombre? y el te responderá, desde ese momento ya");
        	SendClientMessageEx(playerid, COLOR_WHITE, "puedes llamarlo por su nombre. También es usar signos de caracteres en el chat IC (xD, :), xP, etc).");
        }
        case 4:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 13000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "In Character - Out of Character (IC - OOC)");
        	SendClientMessageEx(playerid, COLOR_WHITE, "IC : Es la información que tu personaje obtiene en su vida (In Game), y sólo tu personaje la sabe.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "OOC: Es la información que tu sabes como persona, la que está manejando el personaje desde tu computador.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Por eso es que no puedes mezclar información IC con OOC o viceversa. Por que estarías haciendo Metagaming.");
        }
        case 5:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Powergaming [PG]");
        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Powergaming [PG]? Esto se llama a realizar actos (roles) ficticios y fuera de lo posible en la vida real.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Por ejemplo, Usas el comando /me se tira del edificio y sige caminando. Es lógico que tu no vas a tirarte");
        	SendClientMessageEx(playerid, COLOR_WHITE, "de un quinto piso y salir vivo no?. También es obligar/forzar a una persona hacer un ROL.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Por ejemplo, usando el comando /me le roba su dinero y se va corriendo. Imposible, para rolear tienes que tener criterio.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Recuerda eres un personaje REAL y tienes que portate como tal.");
        }
        case 6:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 14000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Revenge Kill (RK)");
        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Revenge Kill [RK]? Cuando `mueres´ en un ROL (Asalto a un banco, guerra de pandillas, etc)");
        	SendClientMessageEx(playerid, COLOR_WHITE, "tu no puedes regresar al mismo lugar y vengarte a por quien te mató, ya que tu exactamente no mueres, resultas herido");
        	SendClientMessageEx(playerid, COLOR_WHITE, "y cuando te recuperas no recuerdas nada, entonces no puedes volver al mismo lugar, ya que no recuerdas nada.");
        }
        case 7:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Bad Driving (BD) - Badly Parked Car (BPC)");
        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Qué es Bad Driving (BD) y Badly Parked Car (BPC)?");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Esto es muy sencillo y creo que su mismo nombre lo dice, se llama a manejar incorrectamente (por las veredas, atropellando gente, etc),");
        	SendClientMessageEx(playerid, COLOR_WHITE, "y es en contra las reglas del servidor, recuerda que estás simulando la vida real.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Badly Parked Car se define en estacionar tu vehiculo de una manera imposible, o No-RP, por ejemplo en medio del asfalto.");
        }
        case 8:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 15000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Car Kill - Car Jack");
        	SendClientMessageEx(playerid, COLOR_WHITE, "¿Car Kill (CK) y Car Jack (CJ)?");
        	SendClientMessageEx(playerid, COLOR_WHITE, " * Car Kill es matar a una persona atropellandolo en varias ocaciones hasta matarlo.");
        	SendClientMessageEx(playerid, COLOR_WHITE, " * Car Jack es sacar a una persona de su auto sin ningún rol alguno.");
        	SendClientMessageEx(playerid, COLOR_WHITE, " * Esos 2 Terminos son en contra del servidor y puedes ser castigado.");
        }
        case 9:
        {
            ClearChatbox(playerid);
        	PuedeD[playerid] = 1;
        	SetTimerEx("TutRolTimer", 14000, 0, "d", playerid);
        	SendClientMessageEx(playerid, COLOR_GENERAL, "Fin - Reglas de Rol");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Bien, espero que hayas aprendido en este resumen de las reglas de nuestro servidor, puedes entrar a nuestro");
        	SendClientMessageEx(playerid, COLOR_WHITE, "foro (N/A) y buscar más información, ahora volverás a tu posición anterior, no perderás nada.");
        	SendClientMessageEx(playerid, COLOR_WHITE, "Recuerda siempre que más importante es el rol de un presonaje. Bienvenido y disfruta del servidor!");
        }
        case 10:
        {
            ClearChatbox(playerid);
            gNewbie[playerid]=1; gOoc[playerid] = 0; gNews[playerid] = 0; gFam[playerid] = 0; RulesTime[playerid] = 0; RulesTime[playerid] = 0;
			SetPlayerPos(playerid, GetPVarFloat(playerid, "rOldX"), GetPVarFloat(playerid, "rOldY"), GetPVarFloat(playerid, "rOldZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "rOldVW"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "rOldInt"));
			Info[playerid][pVW] = GetPVarInt(playerid, "rOldVW");
			Info[playerid][pInt] = GetPVarInt(playerid, "rOldInt");
	        TogglePlayerControllable(playerid, 1);
	        ClearAnimations(playerid);
	        SetCameraBehindPlayer(playerid);
        }
	}
}
return 1;
}
function TutRolTimer(playerid)
{
	PuedeD[playerid] = 0;
	GameTextForPlayer(playerid, "Pulsa ESPACIO", 2000, 3);
}

// Crea y destruye el textdraw, ya no se quedará en la memoria. (Optimización)
CreateTextDrawTutorial(playerid)
{
	TextTut[playerid] =
	TextDrawCreate			(175.500000, 160.719985, "Bienvenido");
	TextDrawLetterSize		(TextTut[playerid], 0.212498, 1.532799);
	TextDrawAlignment		(TextTut[playerid], 1);
	TextDrawColor			(TextTut[playerid], -1);
	TextDrawSetShadow		(TextTut[playerid], 0);
	TextDrawSetOutline		(TextTut[playerid], 1);
	TextDrawBackgroundColor	(TextTut[playerid], 51);
	TextDrawFont			(TextTut[playerid], 1);
	TextDrawSetProportional	(TextTut[playerid], 1);
	TextDrawShowForPlayer	(playerid, TextTut[playerid]);
}
DestroyTextDrawTutorial(playerid)
{
    TextDrawHideForPlayer	(playerid, TextTut[playerid]);
	TextDrawDestroy			(TextTut[playerid]);
}
function Tutorial_Inside(playerid) // Tutorial optimizado
{
	new string[512];
	if(TutStep[playerid] == 1)
	{
		if(TutTime[playerid] >= 1)
		{
			switch (TutTime[playerid])
			{
				case 1:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
					ClearChatbox(playerid);
				    CreateTextDrawTutorial(playerid);
					for(new p = 0; p < 4; p++){ TextDrawShowForPlayer(playerid, TutTxt[p]); }
				    gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1; gNewbie[playerid]=1;
                    InterpolateCameraPos(playerid, 2820.609130, -1496.048706, 47.088886, 2842.027099, -1510.715820, 45.646175, 3000);
                    InterpolateCameraLookAt(playerid, 2822.640869, -1491.483154, 46.920948, 2846.970947, -1510.099731, 45.224800, 3000);
                    SetPlayerPos(playerid,2845.2327,-1461.8414,51.0380);
                    Streamer_UpdateEx(playerid,2845.2327,-1461.8414,51.0380);
                    SetPlayerVirtualWorld(playerid, 0);
                    TogglePlayerControllable(playerid, 0);
	    			format(string, sizeof(string), 		"Bienvenido, este servidor es un modo de juego Role Play y es muy importante~n~\
														 que te registres y visites nuestro foro para que obtengas informacion que~n~\
														 necesites, tambien recuerda que tenemos administradores que pueden ayudarte~n~\
														 en cualquier duda o problema que tengas.~n~\
														 Puedes usar el comando /duda para hacer una pregunta a nuestro staff.");
					TextDrawSetString(TextTut[playerid], string);

				}
				case 2:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 2399.057128, -1270.337646, 46.102031, 2423.941162, -1257.881591, 37.125366, 3000);
                    InterpolateCameraLookAt(playerid, 2395.971435, -1266.442871, 45.545803, 2423.374755, -1253.088989, 35.817741, 3000);
                    SetPlayerPos(playerid,2415.7832,-1209.4388,47.4741);
                    Streamer_UpdateEx(playerid,2415.7832,-1209.4388,47.4741);
					format(string, sizeof(string), 		"Bien, comenzemos con algo sencillo y que derrepente hasta el momento te has~n~\
														preguntado. Que es Role Play? Aqui la respuesta, RolePlay es el modo de juego~n~\
														de este servidor y se basa en dar vida a tu personaje, simular la vida real~n~\
														y comportarte tal como quieres que sea tu personaje.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 3:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 1835.033203, -1848.686157, 45.866386, 1836.327148, -1881.282714, 36.790607, 3000);
                    InterpolateCameraLookAt(playerid, 1830.095214, -1849.068603, 45.181049, 1832.161499, -1883.318847, 34.919330, 3000);
                    SetPlayerPos(playerid,1769.8887,-1871.8536,39.2158);
                    Streamer_UpdateEx(playerid,1769.8887,-1871.8536,39.2158);
					format(string, sizeof(string), 		"Existen muchas formas de generar dinero con los trabajos disponibles que~n~\
														tiene la ciudad, nosotros recomendamos el trabajo de Camionero o el de~n~\
														Repartidor de Pizzas para comenzar. Puedes buscar trabajos con ~y~/buscarjob.~n~~n~\
														~h~~w~Puedes usar el comando /ayuda para mas informacion.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 4:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 629.326721, -1204.780883, 48.450218, 649.078857, -1206.030029, 42.661903, 3000);
                    InterpolateCameraLookAt(playerid, 627.652465, -1209.456787, 47.873382, 651.796508, -1209.847534, 40.918094, 3000);
                    SetPlayerPos(playerid,680.0389,-1206.6534,39.5605);
                    Streamer_UpdateEx(playerid,680.0389,-1206.6534,39.5605);
					format(string, sizeof(string), 		"Existen familias y bandas dentro de la ciudad, puedes pertenecer a una~n~\
														 buscandolos dentro del juego y tratar de unirte a ellos.~n~\
														 Ellos siempre estan pendientes en obtener la posecion de los puntos~n~\
	 													 para poder generar dinero y llevar su grupo a lo mas alto.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 5:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    InterpolateCameraPos(playerid, 541.527160, -1230.325195, 42.663070, 532.780639, -1247.847900, 31.736938, 3000);
                    InterpolateCameraLookAt(playerid, 545.425476, -1232.507812, 40.418163, 534.120239, -1252.348266, 30.018779, 3000);
                    SetPlayerPos(playerid,538.5880,-1301.7081,38.8664);
                    Streamer_UpdateEx(playerid,538.5880,-1301.7081,38.8664);
					format(string, sizeof(string), 		"Hay Concesionarios donde puedes comprar un vehiculo cuando tengas dinero,~n~\
														 solo tienes que subir a un vehiculo del lugar y seguir las indicaciones~w~.~n~\
														 Es posible tener 2 vehiculos, recuerda que existen seguros que puedes comprar~n~\
														 en las tiendas ~y~24/7~w~.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 6:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    SetPlayerPos(playerid,1387.5209,-1269.4641,37.1565);
	                InterpolateCameraPos(playerid, 1298.506591, -1290.417846, 54.651672, 1322.438720, -1283.208251, 40.679603, 3000);
	                InterpolateCameraLookAt(playerid, 1301.642211, -1287.030395, 52.729793, 1326.991577, -1282.590209, 38.707355, 3000);
	                Streamer_UpdateEx(playerid,1387.5209,-1269.4641,37.1565);
					format(string, sizeof(string), 		"Aburrido? Divertirte con tus amigos en el paintball que se encuentra en la 2da~n~\
														 planta del Ammunation, solo necesitas comprar fichas para ingresar y canjearlas~n~\
														 por armas.~n~~n~\
														 ~w~Nota: ~r~Recuerda que tienes restriccion de armas las 2 primeras horas de juego.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 7:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    SetPlayerPos(playerid,2257.4529,-1677.5936,36.3233);
                    InterpolateCameraPos(playerid, 2283.090087, -1648.484375, 32.701992, 2263.932617, -1657.526977, 24.980293, 3000);
                    InterpolateCameraLookAt(playerid, 2278.778076, -1646.055786, 31.989580, 2259.914306, -1659.860595, 23.134399, 3000);
                    Streamer_UpdateEx(playerid,2257.4529,-1677.5936,36.3233);
					format(string, sizeof(string), 		"Si necesitas cambiarte de ropa o quieres accesorios puedes buscar las tiendas de~n~\
														 ropa, hay muchas tiendas de ropa, puedes diferenciarlas por el icono de un~n~\
														 Jersey azul de cada tienda.~n~~n~\
														 ~b~Comandos: ~w~/cropa y /ctoys.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 8:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 10000, 0, "d", playerid);
                    Streamer_UpdateEx(playerid, 1564.1481,-1673.1346,52.0905);
                    InterpolateCameraPos(playerid, 1505.785156, -1651.219726, 54.730693, 1512.489868, -1685.406860, 38.450412, 3000);
                    InterpolateCameraLookAt(playerid, 1508.276123, -1648.697875, 51.204315, 1516.743652, -1684.369262, 36.036163, 3000);
                    SetPlayerPos(playerid, 1564.1481,-1673.1346,52.0905);
					format(string, sizeof(string), 		"Las fuerzas de la ley estan disponibles para la tranquilidad de cada ciudadano,~n~\
														 si cometes un crimen puedes quedar como buscado en el sistema del gobierno o~n~\
														 ser arrestado, puedes contactar ~b~(Nick Azul) ~w~con ellos en el juego.~n~~n~\
														 Tambien puedes aplicar en el foro para ser parte de ellos.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 9:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    Streamer_UpdateEx(playerid,1156.5229,-1305.4490,40.5471);
                    SetPlayerPos(playerid, 1156.5229,-1305.4490,40.5471);
                    InterpolateCameraPos(playerid, 1235.336547, -1271.328369, 44.204849, 1217.069946, -1322.292968, 23.143884, 3000);
                    InterpolateCameraLookAt(playerid, 1230.445678, -1270.524414, 43.546611, 1212.148681, -1322.622070, 22.323394, 3000);
					format(string, sizeof(string), 		"Si tu resultas herido puedes usar /aceptar muerte o /servicios y esperar~n~\
														 por una ambulancia de SAMC. Ellos confiscaran tus armas.~n~\
														 Puedes unirte a ellos contactandolos ~h~~r~(Nick Rosado) ~w~en el juego.~n~~n~\
														 Tambien puedes aplicar en el foro para ser parte de ellos.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 10:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    TogglePlayerControllable(playerid, 0);
                    Streamer_UpdateEx(playerid,1496.9926,-1665.6772,14.0469);
                    SetPlayerCameraPos(playerid,1462.0864,-1723.2189,13.6610);
                    SetPlayerCameraLookAt(playerid,1480.3210,-1782.5449,39.5468);
                    SetPlayerPos(playerid,1496.9926,-1665.6772,14.0469);
					format(string, sizeof(string), 		"~r~Reglas - Resumen~n~\
														 ~w~| No DeathMatch - No matar personas sin razon alguna.~n~\
														 | No PowerGaming - No hacer cosas imposibles en el juego.~n~\
														 | No desconectarse en una situacion de Rol Play.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 11:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
					format(string, sizeof(string), 		"~r~i-Store - Informacion~n~\
														 ~w~Contamos con una tienda online donde podras comprar coins y obtener~n~\
														 muchos beneficios para ti, visitanos. . .~n~~n~\
														 ~g~Recuerda que con esta compra estas ayudando con los gastos del servidor.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 12:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
                    format(string, sizeof(string),          "~w~Dar las gracias a quien hace posible todo esto.~n~\
                                                                                             | ~y~Scripters : 	~w~Junkbuster - Fenix - Jeferson.~n~\
                                                                                             | ~y~Tecnico: 		~w~Ramon Murcia.~n~\
                                                                                             | ~y~Webmasters: 	~w~Nerak - S.Luján.~n~\
                                                                                             | ~y~Agradecimientos: ~w~Kye/Kalcor por SA-MP.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 13:
				{
				    PuedeP[playerid] = 1;
				    SetTimerEx("PuedePTimer", 8000, 0, "d", playerid);
					format(string, sizeof(string), 		"Fin del tutorial, esperamos que tengas una idea de como funciona este servidor~n~\
														 y como puedes aprovechar al maximo la experiencia del Role Play.~n~\
														 Si tienes otra duda puedes ingresar a nuestro foro que esta abajo.~n~\
														 Si ves algun jugador sospechoso no dudes en reportarlo, usando el comando~n~\
														 ~y~/re id razon~w~.");
					TextDrawSetString(TextTut[playerid], string);
				}
				case 14:
				{
				    PuedeP[playerid] = 0;
				    DestroyTextDrawTutorial(playerid);
					for(new p = 0; p < 4; p++){TextDrawHideForPlayer(playerid, TutTxt[p]);}
	          		gOoc[playerid] = 0; 	gNews[playerid] = 0;
					gFam[playerid] = 0; 	TutStep[playerid] = 0;
					gNewbie[playerid]=0;	 Muted[playerid] = 0;
					ShowProgressBarForPlayer(playerid, HungryBar[playerid]);
					TutTime[playerid] = 0;  HungryCheck(playerid, 50.0);
					SetPlayerSkin(playerid, Info[playerid][pChar]);
		           	SetPosEx(playerid, 1743.2155,-1862.1309,13.5767,0,0,0);
		           	SendClientMessageEx(playerid, COLOR_GENERAL, "Bienvenido! {FFFFFF}Si tienes alguna inquietud o duda, usa nuestro canal de ayuda, /duda [Pregunta].");
		           	SendClientMessageEx(playerid, -1, "Puedes reportar cualquier tema con el comando /reportar [ID] [Razón] y nuestro soporte te ayudará.");
		           	//SendClientMessageEx(playerid, -1, "Tenemos ayudantes que estan dispuestos ayudarte en lo que necesitas, puedes solicitarlos con el comando /ayudame.");
		           	SendClientMessageEx(playerid, COLOR_GENERAL, "TIP: {FFFFFF}Tienes una restricción de usar armas de 2 horas.");
                    SendClientMessageEx(playerid, COLOR_GENERAL, "TIP: {FFFFFF}La barra de color verde es el porcentaje de hambre que tienes.");
					Info[playerid][pWRestricted] = 1; Info[playerid][pTut] = 1;
	          		Info[playerid][pTimePayDay] = 0; Info[playerid][pLevel] = 1;
		           	TogglePlayerControllable(playerid, 1);
		           	SetPlayerVirtualWorld(playerid, 0);
		           	ClearAnimations(playerid);
		            SetCameraBehindPlayer(playerid);
		            GivePlayerCash(playerid,500);
		            format(string, sizeof(string), "~y~Bienvenido~n~%s", GetPlayerNameEx(playerid));
		            GameTextForPlayer(playerid, string, 4000, 1);
		            TextDrawShowForPlayer(playerid, SanAnton[0]);
		            TextDrawShowForPlayer(playerid, SanAnton[1]);
		            TextDrawShowForPlayer(playerid, SanAnton[2]);
	            }
			}
		}
	}
	return 1;
}

stock AdminOnDuty(const playerid)
{
	if(Info[playerid][pAdminDuty] == 1) return 1;
	return 0;
}
stock IsPlayerConnectedEx(const playerid)
{
	if(IsPlayerConnected(playerid) && gPlayerLogged{playerid} == 1) return 1;
	return 0;
}
public OnPlayerInteriorChange(playerid,newinteriorid,oldinteriorid)
{
if(IsPlayerConnectedEx(playerid) && gPlayerSpawned[playerid] && GetPVarInt(playerid, "EventToken") == 0){
	Info[playerid][pInt] = newinteriorid;
}
Streamer_Update(playerid);
}

hackerTrigger(playerid,newweapon){
if(!IsPlayerConnectedEx(playerid)) { return 1; }
if(Info[playerid][pTut] == 0) { return 1; }
if(GetPVarInt(playerid, "IsInArena") == 1) { return 1; }

new	reason[94],string[94];
format(string, sizeof(string), "AdmWarning: {FFFFFF}%s -  Weapon Hacking (%s).", GetPlayerNameEx(playerid), WeaponNames[newweapon]);
ABroadCast(COLOR_GENERAL,string, 2);

format(reason, sizeof(reason), "Weapon Hacking (%s).", WeaponNames[newweapon]);
scriptBan(playerid, reason);
return 1;
}

stock scriptBan(playerid, reason[]){
new ip[32], aString[128];
Info[playerid][pBanned] = 2;
format(aString, sizeof(aString), "SERVER: %s fue baneado, razón: %s", GetPlayerNameEx(playerid), reason);
SendClientMessageToAllEx(COLOR_LIGHTRED, aString);
GetPlayerIp(playerid,ip,sizeof(ip));
format(aString, sizeof(aString),"SERVER: %s fue baneado, razón: %s (IP: %d)", GetPlayerNameEx(playerid), reason, ip);
Log("logs/ban.log", aString);
++TotalAutoBan;
AddBan(ip);
Expulsar(playerid);
return 1;
}

OnPlayerChangeWeapon(playerid, newweapon)
{
if(InsideMainMenu[playerid] == 1) { Kick(playerid); }
if(IsPlayerConnectedEx(playerid))
{
	if(GetPVarInt(playerid, "EventToken") == 0 && GetPVarInt(playerid, "IsInArena") == 0)
	{
		if(GetPlayerWeapon(playerid) >= 1 && GetPlayerState(playerid) == 1)
		{
		//if(Info[playerid][pWeapons][0] != 1 && GetPlayerWeapon(playerid) == 1) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 2 && GetPlayerWeapon(playerid) == 2) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 3 && GetPlayerWeapon(playerid) == 3) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 4 && GetPlayerWeapon(playerid) == 4) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 5 && GetPlayerWeapon(playerid) == 5) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 6 && GetPlayerWeapon(playerid) == 6) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 7 && GetPlayerWeapon(playerid) == 7) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 8 && GetPlayerWeapon(playerid) == 8) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][1] != 9 && GetPlayerWeapon(playerid) == 9) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][2] != 22 && GetPlayerWeapon(playerid) == 22) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][2] != 23 && GetPlayerWeapon(playerid) == 23) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][2] != 24 && GetPlayerWeapon(playerid) == 24) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][3] != 25 && GetPlayerWeapon(playerid) == 25) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][3] != 26 && GetPlayerWeapon(playerid) == 26) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][3] != 27 && GetPlayerWeapon(playerid) == 27) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][4] != 28 && GetPlayerWeapon(playerid) == 28) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][4] != 29 && GetPlayerWeapon(playerid) == 29) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][4] != 32 && GetPlayerWeapon(playerid) == 32) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][5] != 30 && GetPlayerWeapon(playerid) == 30) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][5] != 31 && GetPlayerWeapon(playerid) == 31) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][6] != 33 && GetPlayerWeapon(playerid) == 33) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][6] != 34 && GetPlayerWeapon(playerid) == 34) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][7] != 35 && GetPlayerWeapon(playerid) == 35) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][7] != 36 && GetPlayerWeapon(playerid) == 36) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][7] != 37 && GetPlayerWeapon(playerid) == 37) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][7] != 38 && GetPlayerWeapon(playerid) == 38) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][8] != 16 && GetPlayerWeapon(playerid) == 16) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][8] != 17 && GetPlayerWeapon(playerid) == 17) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][8] != 18 && GetPlayerWeapon(playerid) == 18) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][8] != 39 && GetPlayerWeapon(playerid) == 39) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][9] != 41 && GetPlayerWeapon(playerid) == 41) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][9] != 42 && GetPlayerWeapon(playerid) == 42) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][9] != 43 && GetPlayerWeapon(playerid) == 43) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][10] != 10 && GetPlayerWeapon(playerid) == 10) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][10] != 11 && GetPlayerWeapon(playerid) == 11) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][10] != 12 && GetPlayerWeapon(playerid) == 12) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][10] != 13 && GetPlayerWeapon(playerid) == 13) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][10] != 14 && GetPlayerWeapon(playerid) == 14) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][10] != 15 && GetPlayerWeapon(playerid) == 15) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][11] != 44 && GetPlayerWeapon(playerid) == 44) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][11] != 45 && GetPlayerWeapon(playerid) == 45) hackerTrigger(playerid,newweapon);
		//if(Info[playerid][pWeapons][11] != 46 && GetPlayerWeapon(playerid) == 46) hackerTrigger(playerid,newweapon);
		if(Info[playerid][pWeapons][12] != 40 && GetPlayerWeapon(playerid) == 40) hackerTrigger(playerid,newweapon);
		}
	}
}
}
stock fcreate(filename[]){
if (fexist(filename)) return false;
new File:fhnd;
fhnd=fopen(filename,io_write);
if (fhnd) {
	fclose(fhnd);
	return true;
}
return false;
}

function splits(const strsrc[], strdest[][], delimiter)
{
new i, li;
new aNum;
new len;
while(i <= strlen(strsrc)){
	if(strsrc[i]==delimiter || i==strlen(strsrc)){
		len = strmid(strdest[aNum], strsrc, li, i, 128);
		strdest[aNum][len] = 0;
		li = i+1;
		aNum++;
	}
	i++;
}
return 1;
}

IsKeyJustDown(key, newkeys, oldkeys)
{
if((newkeys & key) && !(oldkeys & key)) return 1;
return 0;
}

function DrinkCooldown(playerid)
{
SetPVarInt(playerid, "DrinkCooledDown", 1);
return 1;
}

function ClearMarriage(playerid)
{
if(IsPlayerConnectedEx(playerid))
{
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Nadie");
	strmid(Info[playerid][pMarriedTo], string, 0, strlen(string), 255);
	Info[playerid][pMarried] = 0;
}
return 1;
}

function ClearHouse(houseid)
{
	HouseInfo[houseid][hOwned] = 0;
	HouseInfo[houseid][hSafeMoney] = 0;
	HouseInfo[houseid][hPot] = 0;
	HouseInfo[houseid][hCrack] = 0;
	HouseInfo[houseid][hMaterials] = 0;
	HouseInfo[houseid][hWeapons][0] = 0;
	HouseInfo[houseid][hWeapons][1] = 0;
	HouseInfo[houseid][hWeapons][2] = 0;
	HouseInfo[houseid][hWeapons][3] = 0;
	HouseInfo[houseid][hWeapons][4] = 0;
}

function ClearFamily(family)
{
	foreach(Player, i)
	{
		if(Info[i][pFMember] == family)
		{
			SendClientMessageEx(i, COLOR_GENERAL, "* La Banda/Familia en la que tu estás fue eliminada por un administrador, fuiste expulsado automáticamente.");
			Info[i][pFMember] = 255;
		}
	}
	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Ninguna");
	fINFO[family][FamilyTaken] = 0;
	strmid(fINFO[family][FamilyName], string, 0, strlen(string), 255);
	strmid(fINFO[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(fINFO[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "1");
	strmid(fINFO[family][FamilyRank1], string, 0, strlen(string), 255);
	format(string, sizeof(string), "2");
	strmid(fINFO[family][FamilyRank2], string, 0, strlen(string), 255);
	format(string, sizeof(string), "3");
	strmid(fINFO[family][FamilyRank3], string, 0, strlen(string), 255);
	format(string, sizeof(string), "4");
	strmid(fINFO[family][FamilyRank4], string, 0, strlen(string), 255);
	format(string, sizeof(string), "5");
	strmid(fINFO[family][FamilyRank5], string, 0, strlen(string), 255);
	format(string, sizeof(string), "6");
	strmid(fINFO[family][FamilyRank6], string, 0, strlen(string), 255);
	fINFO[family][FamilyColor] = 0;
	fINFO[family][FamilyMembers] = 0;
	fINFO[family][FamilyCash] = 0;
	fINFO[family][FamilyMats] = 0;
	fINFO[family][FamilyPot] = 0;
	fINFO[family][FamilyCrack] = 0;
	fINFO[family][FamilySafe][0] = 0.0;
	fINFO[family][FamilySafe][1] = 0.0;
	fINFO[family][FamilySafe][2] = 0.0;
	fINFO[family][FamilyUSafe] = 0;
	DestroyDynamicPickup(fINFO[family][FamilyPickup]);
	DestroyDynamic3DTextLabel(fINFO[family][FamilyPickup3D]);
	saveFamilies();
	return 1;
}

Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ,  Float:ObjX, Float:ObjY, Float:ObjZ,  Float:FrX, Float:FrY, Float:FrZ)
{
	new Float:TGTDistance;
	// get distance from camera to target
	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));

	new Float:tmpX, Float:tmpY, Float:tmpZ;

	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;

	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
	}

	stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
	{
	new Float:cx,Float:cy,Float:cz,Float:fx,Float:fy,Float:fz;
	GetPlayerCameraPos(playerid, cx, cy, cz);
	GetPlayerCameraFrontVector(playerid, fx, fy, fz);
	return (radius >= DistanceCameraTargetToLocation(cx, cy, cz, x, y, z, fx, fy, fz));
}

stock GetPlayerSpeed(playerid, get3d)
{
	new Float:x, Float:y, Float:z;
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	else GetPlayerVelocity(playerid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}

stock GetVehicleSpeed(vehicleid, get3d)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}


IsValidIP(ip[])
{
	new a;
	for (new i = 0; i < strlen(ip); i++)
	{
		if (ip[i] == '.')
		{
		    a++;
		}
	}
	if (a != 3)
	{
	    return 1;
	}
	return 0;
}

CheckBan(ip[])
{
new string[20];
new File: file = fopen("ban.cfg", io_read);
while(fread(file, string))
{
    if (strcmp(ip, string, true, strlen(ip)) == 0)
    {
        fclose(file);
        return 1;
    }
}
fclose(file);
return 0;
}

AddBan(ip[])
{
if (CheckBan(ip) == 0)
{
	new File: file = fopen("ban.cfg", io_append);
	new string[20];
	format(string, sizeof(string), "\n%s", ip);
 	fwrite(file, string);
 	fclose(file);
 	foreach(Player, playerid)
	{
	    new playerIP[16];
		GetPlayerIp(playerid, playerIP, sizeof(playerIP));
		if (strcmp(playerIP, ip) == 0)
		{
		   	SendClientMessageEx(playerid, COLOR_GENERAL, "Aviso:"COL_WHITE"Fuiste baneado automáticamente, tu IP conincide con la de otro jugador recientemente baneado.");
		    return Expulsar(playerid);
		}
	}
	return 1;
}
return 0;
}

RemoveBan(ip[])
{
if (CheckBan(ip) == 1)
{
    new string[20];
	new File: file = fopen("ban.cfg", io_read);
	fcreate("tempBan.cfg");
	new File: file2 = fopen("tempBan.cfg", io_append);
	while(fread(file, string))
	{
		if (strcmp(ip, string, true, strlen(ip)) != 0 && strcmp("\n", string) != 0)
	    {
			fwrite(file2, string);
		}
	}
	fclose(file);
	fclose(file2);
	file = fopen("ban.cfg", io_write);
	file2 = fopen("tempBan.cfg", io_read);
	while(fread(file2, string))
	{
		fwrite(file, string);
	}
	fclose(file);
	fclose(file2);
	fremove("tempBan.cfg");
	return 1;
}
return 0;
}
public OnPlayerCleoDetected(playerid, cleoid)
{
    switch( cleoid )
    {
        case CLEO_CARWARP:
        {
			new string[256];
			format(string, sizeof(string), "AdmWarning: %s fue expulsado automáticamente, razón: Cleo Hacks",GetPlayerNameEx(playerid));
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
            return Expulsar(playerid);
        }
        case CLEO_CARSWING:
        {
			new string[256];
			format(string, sizeof(string), "AdmWarning: %s fue expulsado automáticamente, razón: Cleo Hacks",GetPlayerNameEx(playerid));
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
            return Expulsar(playerid);
        }
        case CLEO_CAR_PARTICLE_SPAM:
        {
			new string[256];
			format(string, sizeof(string), "AdmWarning: %s fue expulsado automáticamente, razón: Cleo Hacks",GetPlayerNameEx(playerid));
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
            return Expulsar(playerid);
        }
    }
    return 1;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
    new vehicleide = GetVehicleModel(vehicleid);
    new modok = islegalcarmod(vehicleide, componentid);
    if (!modok)
	{
	    new string[300];
	    format(string, sizeof(string), "AdmWarning: %s fue baneado automáticamente, razón: Mod Crasher",GetPlayerNameEx(playerid));
	    SendClientMessageToAllEx(COLOR_LIGHTRED, string);
        DestroyVehicle(vehicleid);
        printf(string);
        Info[playerid][pBanned] = 2;
        new ip[32];
        GetPlayerIp(playerid,ip,sizeof(ip));
        AddBan(ip);
        Expulsar(playerid);
    }
    return 1;
}
public OnPlayerUpdate(playerid)
{
new pCurWeap = GetPlayerWeapon(playerid);
if(InsideMainMenu[playerid] == 1) SetPlayerArmedWeapon(playerid, 0);
if(TutStep[playerid] > 0) SetPlayerArmedWeapon(playerid, 0);
if(GetPVarInt(playerid, "Injured") == 1) SetPlayerArmedWeapon(playerid, 0);
//if(GetPVarInt(playerid, "IsFrozen") == 1) TogglePlayerControllable(playerid, 0);
if(pCurWeap != pCurrentWeapon[playerid])
{
    OnPlayerChangeWeapon(playerid, pCurWeap);
    pCurrentWeapon[playerid] = pCurWeap;
}
return 1;
}

function restartTimer() {
iGMXTick--;
switch(iGMXTick)
{
    case 0:{
	    GameTextForAll("~w~Es servidor va ser reiniciado ahora...", 9000, 5);
	    SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd:{FFFFFF} Es servidor ha sido reiniciado, porfavor vuelve a re-conectarte.");
		KillTimer(iGMXTimer);
		SendRconCommand("exit");
    }
    case 1: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~1~w~ segundo.", 1110, 5);
    case 2: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~2~w~ segundos.", 1110, 5);
    case 3: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~3~w~ segundos.", 1110, 5);
    case 4: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~4~w~ segundos.", 1110, 5);
    case 5: GameTextForAll("~w~El servidor sera reseteado en~n~ ~r~5~w~ segundos.", 1110, 5);
}

return 1;
}

function SyncPlayerTime(playerid)
{
new hour, minute, second;
gettime(hour, minute, second);
SetPlayerTime(playerid, hour, minute);
return 1;
}

Random(min, max)
{
new a = random(max - min) + min;
return a;
}

LoadObjects(playerid)
{
	TogglePlayerControllable(playerid, 0);
	TextDrawShowForPlayer(playerid, boxGM);
	TextDrawShowForPlayer(playerid, streamer);
	SetPVarInt(playerid, "LoadingObjects", 1);
	return SetTimerEx("SafeLoadObjects", 4000, 0, "d", playerid);
}


function MessageTaxiDriver(job, color, string[])
{
	foreach(Player, i)
	{
		if(job == 9 && TaxiOnDuty[i] 	> 0 && (Info[i][pJob] == 9 || Info[i][pJob2] == 9 || Info[i][pTaxiLicense] == 1 ))
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

FMemberCounter() {

new
	arrCounts[sizeof(fINFO)],
	szFileStr[128],
	arrTimeStamp[2][3],
	File: iFileHandle = fopen("logs/countfam.log", io_append);

gettime(arrTimeStamp[0][0], arrTimeStamp[0][1], arrTimeStamp[0][2]);
getdate(arrTimeStamp[1][0], arrTimeStamp[1][1], arrTimeStamp[1][2]);
foreach(Player, i) if(Info[i][pAdmin] < 2 && Info[i][pFMember] != 255) ++arrCounts[Info[i][pFMember]];

format(szFileStr, sizeof(szFileStr), "----------------------------------------\r\nFecha: %d/%d/%d - Hora: %d:%d\r\n", arrTimeStamp[1][1], arrTimeStamp[1][2], arrTimeStamp[1][0], arrTimeStamp[0][0], arrTimeStamp[0][1]);
fwrite(iFileHandle, szFileStr);

for(new iFam; iFam < sizeof(fINFO); ++iFam) format(szFileStr, sizeof(szFileStr), "(%i) %s: %i\r\n", iFam+1, fINFO[iFam][FamilyName], arrCounts[iFam]), fwrite(iFileHandle, szFileStr);
return fclose(iFileHandle);
}

stock SendJobMessage(job, color, string[])
{
foreach(Player, i)
{
	if(Info[i][pJob] == job || Info[i][pJob2] == job)
	{
		SendClientMessageEx(i, color, string);
	}
}
}

IsPlayerInInvalidNosVehicle( playerid )
{
switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
	case 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449: return 1;
}
return 0;
}
///-----------------------------------------------------------------------------
//SISTEMAAUTOS BY ALEX DONUTS
//------------------------------------------------------------------------------
stock CreatePlayerVehicle(playerid, playervehicleid, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, price)
{
if(PlayerVehicleInfo[playerid][playervehicleid][pvId] == INVALID_PLAYER_VEHICLE_ID)
{
    PlayerCars++;
    carsforplayer[playerid]++;
	PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = modelid;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = x;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = y;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = z;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = angle;
	PlayerVehicleInfo[playerid][playervehicleid][pvVW] = GetPlayerVirtualWorld(playerid);
	PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = color1;
	PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = color2;
	PlayerVehicleInfo[playerid][playervehicleid][pvPark] = 1;
	PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = price;
	PlayerVehicleInfo[playerid][playervehicleid][pvFuel] = 1000;
	PlayerVehicleInfo[playerid][playervehicleid][pvLock] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvHealth] = 1000.0;
	PlayerVehicleInfo[playerid][playervehicleid][pvStereo] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
	for(new m = 0; m < MAX_MODS; m++)
    {
    	PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = 0;
	}
	new carcreated = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
	PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
	SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvVW]);
	//SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvNumberPlate]);
	return carcreated;
}
return INVALID_PLAYER_VEHICLE_ID;
}

stock DestroyPlayerVehicle(playerid, playervehicleid)
{
if(PlayerVehicleInfo[playerid][playervehicleid][pvModelId])
{
    PlayerCars--;
    carsforplayer[playerid]--;
	DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
	PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = 0.0;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = 0.0;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = 0.0;
	PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = 0.0;
	PlayerVehicleInfo[playerid][playervehicleid][pvVW] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = -1;
	PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = 126;
	PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = 126;
	PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvFuel] = 1000;
	PlayerVehicleInfo[playerid][playervehicleid][pvLock] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvHealth] = 1000.0;
	PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 0;
	PlayerVehicleInfo[playerid][playervehicleid][pvStereo] = 0;
	VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 500;
	VehicleFuel[playervehicleid] = 500;
	strcpy(PlayerVehicleInfo[playerid][playervehicleid][pvAllowPlayer], "Nadie", MAX_PLAYER_NAME);
    PlayerVehicleInfo[playerid][playervehicleid][pvId] = INVALID_PLAYER_VEHICLE_ID;
    if(PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] != INVALID_PLAYER_ID)
    {
        Info[PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
        Info[PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
    	PlayerVehicleInfo[playerid][playervehicleid][pvAllowedPlayerId] = INVALID_PLAYER_ID;
	}
}
}

stock LoadPlayerVehicles(playerid)
{
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
//printf(" Loading %s's vehicles.", playername);
for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
{
    if(PlayerVehicleInfo[playerid][v][pvImpounded] >= 2) PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
    if(PlayerVehicleInfo[playerid][v][pvModelId] != 0 && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
    {
        PlayerCars++;
        carsforplayer[playerid]++;
		new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][v][pvModelId], PlayerVehicleInfo[playerid][v][pvPosX], PlayerVehicleInfo[playerid][v][pvPosY], PlayerVehicleInfo[playerid][v][pvPosZ], PlayerVehicleInfo[playerid][v][pvPosAngle],PlayerVehicleInfo[playerid][v][pvColor1], PlayerVehicleInfo[playerid][v][pvColor2], -1);
		PlayerVehicleInfo[playerid][v][pvId] = carcreated;
		VehicleFuel[carcreated] = PlayerVehicleInfo[playerid][v][pvFuel];
		SetVehicleHealth(carcreated, PlayerVehicleInfo[playerid][v][pvHealth]);
		SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][v][pvVW]);
		//SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][v][pvNumberPlate]);
		if(PlayerVehicleInfo[playerid][v][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][v][pvId], PlayerVehicleInfo[playerid][v][pvLock]);
    }
    else if(PlayerVehicleInfo[playerid][v][pvModelId] == 0 && PlayerVehicleInfo[playerid][v][pvImpounded] != 0)
        PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
}
LoadAllPlayerVehicleMods(playerid);
}

stock UnloadPlayerVehicles(playerid)
{
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
//printf(" Unloading %s's vehicles.", playername);
for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
{
    if(PlayerVehicleInfo[playerid][v][pvImpounded] >= 2) PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
    if(PlayerVehicleInfo[playerid][v][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
    {
        PlayerCars--;
        carsforplayer[playerid]--;
        if(LockStatus[PlayerVehicleInfo[playerid][v][pvId]] != 0) LockStatus[PlayerVehicleInfo[playerid][v][pvId]] = 0;
        UpdatePlayerVehicleMods(playerid, v);
		DestroyVehicle(PlayerVehicleInfo[playerid][v][pvId]);
		VehicleFuel[PlayerVehicleInfo[playerid][v][pvId]] = 500;
		PlayerVehicleInfo[playerid][v][pvId] = INVALID_PLAYER_VEHICLE_ID;
		if(PlayerVehicleInfo[playerid][v][pvAllowedPlayerId] != INVALID_PLAYER_ID)
    	{
    	    Info[PlayerVehicleInfo[playerid][v][pvAllowedPlayerId]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
    	    Info[PlayerVehicleInfo[playerid][v][pvAllowedPlayerId]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
    		PlayerVehicleInfo[playerid][v][pvAllowedPlayerId] = INVALID_PLAYER_ID;
		}
    }
}
}

stock RegisterVehicleNumberPlate(vehicleid, sz_NumPlate[])
{
new
    Float: a_CarPos[4], fuel; // X, Y, Z, Z Angle, Fuel

GetVehiclePos(vehicleid, a_CarPos[0], a_CarPos[1], a_CarPos[2]);
GetVehicleZAngle(vehicleid, a_CarPos[3]);
fuel = VehicleFuel[vehicleid];
//SetVehicleNumberPlate(vehicleid, sz_NumPlate);
SetVehicleToRespawn(vehicleid);
//SetVehicleToRespawn(vehicleid);
SetVehiclePos(vehicleid, a_CarPos[0], a_CarPos[1], a_CarPos[2]);
SetVehicleZAngle(vehicleid, a_CarPos[3]);
VehicleFuel[vehicleid] = fuel;
return 1;
}

stock UpdatePlayerVehicleParkPosition(playerid, playervehicleid, Float:newx, Float:newy, Float:newz, Float:newangle, Float:health)
{
new playername[MAX_PLAYER_NAME];
GetPlayerName(playerid, playername, sizeof(playername));
if(PlayerVehicleInfo[playerid][playervehicleid][pvId] != INVALID_PLAYER_VEHICLE_ID)
{
	 new Float:oldx, Float:oldy, Float:oldz, oldfuel;
	 oldx = PlayerVehicleInfo[playerid][playervehicleid][pvPosX];
	 oldy = PlayerVehicleInfo[playerid][playervehicleid][pvPosY];
	 oldz = PlayerVehicleInfo[playerid][playervehicleid][pvPosZ];
	 if(oldx == newx && oldy == newy && oldz == newz) return 0;
	 PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = newx;
	 PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = newy;
	 PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = newz;
	 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = newangle;
	 PlayerVehicleInfo[playerid][playervehicleid][pvVW] = GetVehicleVirtualWorld(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
	 oldfuel = VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]];
	 VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 500;
	 UpdatePlayerVehicleMods(playerid, playervehicleid);
	 DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
	 new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvModelId], PlayerVehicleInfo[playerid][playervehicleid][pvPosX], PlayerVehicleInfo[playerid][playervehicleid][pvPosY], PlayerVehicleInfo[playerid][playervehicleid][pvPosZ],
	 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle],PlayerVehicleInfo[playerid][playervehicleid][pvColor1], PlayerVehicleInfo[playerid][playervehicleid][pvColor2], -1);
	 SetVehicleVirtualWorld(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvVW]);
	 PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
     VehicleFuel[carcreated] = oldfuel;
     SetVehicleHealth(carcreated, health);
	 if(PlayerVehicleInfo[playerid][playervehicleid][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][playervehicleid][pvId], PlayerVehicleInfo[playerid][playervehicleid][pvLock]);
     LoadPlayerVehicleMods(playerid, playervehicleid);
     return 1;
}
return 0;
}

stock UpdatePlayerVehicleMods(playerid, playervehicleid)
{
if(PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] == 0) {
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new carid = PlayerVehicleInfo[playerid][playervehicleid][pvId];
	new exhaust, frontbumper, rearbumper, roof, spoilers, sideskirt1,
		sideskirt2, wheels, hydraulics, nitro, hood, lamps, stereo, ventright, ventleft;
	exhaust = GetVehicleComponentInSlot(carid, CARMODTYPE_EXHAUST);
	frontbumper = GetVehicleComponentInSlot(carid, CARMODTYPE_FRONT_BUMPER);
	rearbumper = GetVehicleComponentInSlot(carid, CARMODTYPE_REAR_BUMPER);
	roof = GetVehicleComponentInSlot(carid, CARMODTYPE_ROOF);
	spoilers = GetVehicleComponentInSlot(carid, CARMODTYPE_SPOILER);
	sideskirt1 = GetVehicleComponentInSlot(carid, CARMODTYPE_SIDESKIRT);
	sideskirt2 = GetVehicleComponentInSlot(carid, CARMODTYPE_SIDESKIRT);
	wheels = GetVehicleComponentInSlot(carid, CARMODTYPE_WHEELS);
	hydraulics = GetVehicleComponentInSlot(carid, CARMODTYPE_HYDRAULICS);
	nitro = GetVehicleComponentInSlot(carid, CARMODTYPE_NITRO);
	hood = GetVehicleComponentInSlot(carid, CARMODTYPE_HOOD);
	lamps = GetVehicleComponentInSlot(carid, CARMODTYPE_LAMPS);
	stereo = GetVehicleComponentInSlot(carid, CARMODTYPE_STEREO);
	ventright = GetVehicleComponentInSlot(carid, CARMODTYPE_VENT_RIGHT);
	ventleft = GetVehicleComponentInSlot(carid, CARMODTYPE_VENT_LEFT);
	if(spoilers >= 1000)    PlayerVehicleInfo[playerid][playervehicleid][pvMods][0] = spoilers;
	if(hood >= 1000)        PlayerVehicleInfo[playerid][playervehicleid][pvMods][1] = hood;
	if(roof >= 1000)        PlayerVehicleInfo[playerid][playervehicleid][pvMods][2] = roof;
	if(sideskirt1 >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][3] = sideskirt1;
	if(lamps >= 1000)       PlayerVehicleInfo[playerid][playervehicleid][pvMods][4] = lamps;
	if(nitro >= 1000)       PlayerVehicleInfo[playerid][playervehicleid][pvMods][5] = nitro;
	if(exhaust >= 1000)     PlayerVehicleInfo[playerid][playervehicleid][pvMods][6] = exhaust;
	if(wheels >= 1000)      PlayerVehicleInfo[playerid][playervehicleid][pvMods][7] = wheels;
	if(stereo >= 1000)      PlayerVehicleInfo[playerid][playervehicleid][pvMods][8] = stereo;
	if(hydraulics >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][9] = hydraulics;
	if(frontbumper >= 1000) PlayerVehicleInfo[playerid][playervehicleid][pvMods][10] = frontbumper;
	if(rearbumper >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][11] = rearbumper;
	if(ventright >= 1000)   PlayerVehicleInfo[playerid][playervehicleid][pvMods][12] = ventright;
	if(ventleft >= 1000)    PlayerVehicleInfo[playerid][playervehicleid][pvMods][13] = ventleft;
	if(sideskirt2 >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][14] = sideskirt2;
}
}

stock LoadPlayerVehicleMods(playerid, playervehicleid)
{
if(PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] == 0 && PlayerVehicleInfo[playerid][playervehicleid][pvSpawned]== 1)
{
	//printf(" Cargando mods del jugador ID #%d.", playerid);
	new paintjob = PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob];
	new color1 = PlayerVehicleInfo[playerid][playervehicleid][pvColor1];
	new color2 = PlayerVehicleInfo[playerid][playervehicleid][pvColor2];
	if(PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] != -1)
	{
		 ChangeVehiclePaintjob(PlayerVehicleInfo[playerid][playervehicleid][pvId], paintjob);
		 ChangeVehicleColor(PlayerVehicleInfo[playerid][playervehicleid][pvId], color1, color2);
	}
	for(new m = 0; m < MAX_MODS; m++)
	{
		AddVehicleComponent(PlayerVehicleInfo[playerid][playervehicleid][pvId], PlayerVehicleInfo[playerid][playervehicleid][pvMods][m]);
	}
}
}

stock LoadAllPlayerVehicleMods(playerid)
{
//print(" Modificaciones de todos los autos cargadas.");
for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
{
    if(PlayerVehicleInfo[playerid][v][pvModelId] != 0 && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
    {
        new paintjob = PlayerVehicleInfo[playerid][v][pvPaintJob];
    	new color1 = PlayerVehicleInfo[playerid][v][pvColor1];
        new color2 = PlayerVehicleInfo[playerid][v][pvColor2];
        if(PlayerVehicleInfo[playerid][v][pvPaintJob] != -1)
        {
            ChangeVehiclePaintjob(PlayerVehicleInfo[playerid][v][pvId], paintjob);
        }
        ChangeVehicleColor(PlayerVehicleInfo[playerid][v][pvId], color1, color2);
        for(new m = 0; m < MAX_MODS; m++)
        {
        	AddVehicleComponent(PlayerVehicleInfo[playerid][v][pvId], PlayerVehicleInfo[playerid][v][pvMods][m]);
        }
	}
}
}

stock GetPlayerFreeVehicleId(playerid){
for(new i; i < MAX_PLAYERVEHICLES; ++i){
	if(PlayerVehicleInfo[playerid][i][pvModelId] == 0) return i;
}
return -1;
}

function GetPlayerVehicleCount(playerid)
{
	new cars = 0;
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++){
	    if(PlayerVehicleInfo[playerid][i][pvModelId]){
	        if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][i][pvImpounded] == 0 && PlayerVehicleInfo[playerid][i][pvSpawned] == 1){
				if(CheckPlayerVehicleForDesync(playerid, PlayerVehicleInfo[playerid][i][pvId])) return 0;
				cars++;
			}
	    }
	}
	return cars;
}

function VehicleCount(playerid)
{
	new cars = 0;
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++){
		if(PlayerVehicleInfo[playerid][i][pvModelId] != 0){
			cars++;
		}
	}
	return cars;
}


function CheckPlayerVehicleForDesync(playerid, vehicleid)
{
	if(GetVehicleModel(vehicleid) < 400 || GetVehicleModel(vehicleid) > 611)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "Error: Desincronización de vehículos detectado, ejecutando sincronización de sus vehículos...");
		UnloadPlayerVehicles(playerid);
		//LoadPlayerVehicles(playerid);
		SendClientMessageEx(playerid, COLOR_WHITE, "Sus vehículos han sido sincronizados con el servidor.");
		return 1;
	}
	return 0;
}

stock GetPlayerVehicle(playerid, vehicleid)
{
	if(!IsPlayerConnectedEx(playerid)) return -1;
	if(!GetVehicleModel(vehicleid)) return -1;
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
	{
	    if(PlayerVehicleInfo[playerid][v][pvId] == vehicleid)
	    {
	        return v;
	    }
	}
	return -1;
}

stock GetDistancePlayerVeh(playerid, veh)
{
	new Float:Floats[7];
	GetPlayerPos(playerid, Floats[0], Floats[1], Floats[2]);
	GetVehiclePos(veh, Floats[3], Floats[4], Floats[5]);
	Floats[6] = floatsqroot((Floats[3]-Floats[0])*(Floats[3]-Floats[0])+(Floats[4]-Floats[1])*(Floats[4]-Floats[1])+(Floats[5]-Floats[2])*(Floats[5]-Floats[2]));
	return floatround(Floats[6]);
}

stock doesVehicleExist(vehicleid)
{
	if(GetVehicleModel(vehicleid) >= 400)
	{
		return 1;
	}
	return 0;
}

stock IsValidSkin(skinid)
{
	if(skinid < 0 || skinid > 299) return false;
	return true;
}

stock IsPublicSkin(skinid)
{
	if(!IsValidSkin(skinid)) return false;

	switch(skinid)
	{
		case 274 .. 288, 265 .. 267, 71: return false;
	}
	return true;
}
stock GetClosestCar(playerid, exception = INVALID_VEHICLE_ID)
{
	new Float:Distance,target = -1;
	for(new v; v < MAX_VEHICLES; v++) if(doesVehicleExist(v)) {
	    if(v != exception && (target < 0 || Distance > GetDistancePlayerVeh(playerid, v))) {
	        target = v;
	        Distance = GetDistancePlayerVeh(playerid, v);
	    }
	}
	return target;
}

LockPlayerVehicle(ownerid, carid, type)
{
	new v = GetPlayerVehicle(ownerid, carid);
	if(PlayerVehicleInfo[ownerid][v][pvId] == carid && type == 3)
	{
	    LockStatus[carid] = 1;
	    vehicle_lock_doors(carid);
	}
}

UnLockPlayerVehicle(ownerid, carid, type)
{
	new v = GetPlayerVehicle(ownerid, carid);
	if(PlayerVehicleInfo[ownerid][v][pvId] == carid && type == 3)
	{
	    LockStatus[carid] = 0;
		vehicle_unlock_doors(carid);
	}
}

function SetVehicleEngine(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(engine == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Motor a sido apagado con éxito.");
		arr_Engine{vehicleid} = 0;
	}
	else if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)
	{
		new Float: f_vHealth;
		GetVehicleHealth(vehicleid, f_vHealth);
		if(f_vHealth < 350.0) return SendClientMessageEx(playerid, COLOR_RED, "El coche no prenderá, el motor se ha quemado! (/servicios)");
	    if(VehicleFuel[vehicleid] <= 0) return SendClientMessageEx(playerid, COLOR_RED, "El coche no prenderá, no hay gasolina en el tanque! (/servicios)");
		SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "El motor del vehículo ha arrancado, escribe /v motor o pulsa la tecla N para apagarlo.");
		arr_Engine{vehicleid} = 1;
	}
	return 1;
}

SetVehicleLights(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(lights == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Luces del vehiculo fueron apagadas.");
	}
	else if(lights == VEHICLE_PARAMS_OFF || lights == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Luces del vehiculo encendidas con éxito.");
	}
	return 1;
}

SetVehicleHood(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(bonnet == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Capó del vehiculo fue cerrado.");
	}
	else if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Capó del vehiculo fue abierto.");
	}
	return 1;
}

SetVehicleTrunk(vehicleid, playerid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(boot == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Maletero del vehiculo fue cerrado.");
	}
	else if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
		SendClientMessageEx(playerid, COLOR_WHITE, "Maletero del vehiculo fue abierto.");
	}
	return 1;
}

stock IsPlayerInRangeOfVehicle(playerid, vehicleid, Float: radius)
{
	new Float:Floats[3];
	GetVehiclePos(vehicleid, Floats[0], Floats[1], Floats[2]);
	return IsPlayerInRangeOfPoint(playerid, radius, Floats[0], Floats[1], Floats[2]);
}

stock GivePlayerCash(playerid, money)
{
	SetPVarInt(playerid, "Cash", GetPVarInt(playerid, "Cash")+money);
	GivePlayerMoney(playerid, money);
	return 1;
}

stock ResetPlayerCash(playerid)
{
	SetPVarInt(playerid, "Cash", 0);
	ResetPlayerMoney(playerid);
	return 1;
}
stock SenderName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}
//---------------------------------------------------------
//Delay:NOPCheck[1000, i](playerid)
// Timer Name: NOPCheck(playerid)
function NOPCheck(playerid)
{
if(GetPlayerState(playerid) != 2) NOPTrigger[playerid] = 0;
if(GetPlayerState(playerid) != 2) return 1;
new newcar = GetPlayerVehicleID(playerid);
if(LSPD_IsACopCar(newcar) && Info[playerid][pMember] != 1 && Info[playerid][pLeader] != 1) ExecuteNOPAction(playerid);
else if(FBI_Vehicle(newcar) && Info[playerid][pMember] != 2 && Info[playerid][pLeader] != 2) ExecuteNOPAction(playerid);
else if(IsAnNGCar(newcar) && Info[playerid][pMember] != 3 && Info[playerid][pLeader] !=3) ExecuteNOPAction(playerid);
else if(Mecanico_Vehicle(newcar) && Info[playerid][pMember] != 6 && Info[playerid][pLeader] !=6) ExecuteNOPAction(playerid);
else if(SAMD_Vehicle(newcar) && Info[playerid][pMember] != 4 && Info[playerid][pLeader] !=4) ExecuteNOPAction(playerid);
else if(GobierAuto(newcar) && Info[playerid][pMember] != 7 && Info[playerid][pLeader] !=7) ExecuteNOPAction(playerid);
else if(Taxi_Vehicle(newcar) && Info[playerid][pJob] != 9 && Info[playerid][pJob2] != 9) ExecuteNOPAction(playerid);
return 1;
}

// Función: Otros Timers.
timer severTimers[1000]()
{
	if(iAdverTimer >= 1)
		--iAdverTimer;
	foreach(Player, i)
	{
	    SyncPlayerTime(i);
	    if(IsPlayerConnectedEx(i))
	    {
			if(Tied[i] > 0) TogglePlayerControllable(i, 0);
	        if(GetPVarInt(i, "EMSAttempt") == -1) ApplyAnimation(i, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i) { CallCost[i] = CallCost[i]+callcost; }
				}
				CellTime[i]++;
				if(Mobile[Mobile[i]] == -1 && CellTime[i] == 5)
				{
				    if(IsPlayerConnectedEx(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME], string[96];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(string, sizeof(string), "* El teléfono de %s esta sonando", called);
						ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
			    new string[24];
				format(string, sizeof(string), "~w~Costo de llamada %d",CallCost[i]);
				GameTextForPlayer(i, string, 5000, 1);
				GivePlayerCash(i, -CallCost[i]);
				CallCost[i] = 0;
			}
			for(new h = 0; h < sizeof(Points); h++)
			{
				if(IsPlayerInRangeOfPoint(i, 2.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz])){
					if(Points[h][Type] == 3 && Info[i][pPot] < 3){
						GameTextForPlayer(i, "~w~Usa /comprarhierba para comprar algo de ~n~~r~hierba", 5000, 5);
					}
					else if(Points[h][Type] == 1 && GetPVarInt(i, "Packages") == 0){
						GameTextForPlayer(i, "~w~Usa /materiales para comprar ~n~~r~paquetes de materiales.", 5000, 5);
					}
					else if(Points[h][Type] == 4){
						GameTextForPlayer(i, "~w~Usa /comprarcrack para comprar ~n~algo de ~r~crack", 5000, 5);
					}
					else if(Points[h][Type] == 5){
						GameTextForPlayer(i, "~w~Usa /paquete para comprar un ~n~~r~paquete de droga", 5000, 5);
					}
				}
			}
			if(TaxiDriver[i] != -1)
			{
				if(GetPlayerVehicleID(i) == GetPlayerVehicleID(TaxiDriver[i]) )
				{
				    if(TaxiTiempo[i] >= 31)
				    {
				        TaxiTiempo[i] = 1;
				        TaxiCosto[i] += TaxiTarifa[TaxiDriver[i]];
				    }
					TaxiTiempo[i] += 1;
					new string[80];
					format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~%d Seg ~w~- $%d", TaxiTiempo[i], TaxiCosto[i]);
					GameTextForPlayer(i, string, 1200, 3);
					GameTextForPlayer(TaxiDriver[i], string, 1200, 3);
					if(TaxiCosto[i] > GetPlayerCash(i))
					{
					    RemovePlayerFromVehicle(i);
					    new Float:slx, Float:sly, Float:slz;
						GetPlayerPos(i, slx, sly, slz);
						SetPlayerPos(i, slx, sly, slz + 2);
					    GameTextForPlayer(i, "~r~No tienes más dinero para pagar el taxi!", 4000, 4);
					}
				}
			}
			if(IsPlayerInAnyVehicle(i))
			{
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) SetPlayerArmedWeapon(i, 0);
				else if(Info[i][pWeapons][4] == 0) SetPlayerArmedWeapon(i, 0);
				else SetPlayerArmedWeapon(i, 29);
			}
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && JetPack[i] == 0 && Info[i][pAdmin] < 4)
			{
				new string[74 + MAX_PLAYER_NAME];
			    format( string, sizeof( string ), "{AA3333}AdmWarning{FFFF00}: %s (ID %d) es posible que use Cheat de JetPack .", GetPlayerNameEx(i), i);
				ABroadCast( COLOR_YELLOW, string, 2 );
				format(string, sizeof(string), "%s (ID %d) es posible que use Cheat de JetPack.", GetPlayerNameEx(i), i);
				Log("logs/hack.log", string);
			}
			if(IsPlayerInRangeOfPoint(i, 2, 1544.2, -1353.4, 329.4)) { GivePlayerValidWeapon(i, 46); }
		}
	}
}

timer severTimers2[1000](){
foreach(Player, i){
    if(IsPlayerConnectedEx(i)){
		if(Info[i][pTimePayDay] >= 0)
		{
			Info[i][pTimePayDay]++;
	    	if(Info[i][pTimePayDay] >= 3600)
			{
				if(Info[i][p_Pr_Time] == 10)
				{
				    SendClientMessageEx(i, COLOR_WHITE, "* Ya puedes volver hacer viajes de camionero.");
					Info[i][p_Pr_Time] = 0;
				}
				if(Info[i][pRenting] != INVALID_HOUSE_ID)
				{
					if(Info[i][pNrCuenta] != 0)
					{
						if(HouseInfo[Info[i][pRenting]][hRentFee] > Info[i][pMoneyBank])
						{
							Info[i][pRenting] = INVALID_HOUSE_ID;
							SendClientMessageEx(i, COLOR_WHITE, "* Fuiste desalojado de la casa que rentabas.");
						}
						else
						{
							Info[i][pMoneyBank] -= HouseInfo[Info[i][pRenting]][hRentFee];
							fbank -= HouseInfo[Info[i][pRenting]][hRentFee];
						}
					}
					else GivePlayerCash(i, -HouseInfo[Info[i][pRenting]][hRentFee]);
					HouseInfo[Info[i][pRenting]][hSafeMoney] += HouseInfo[Info[i][pRenting]][hRentFee];
					format(szMessage, sizeof(szMessage), "* Has pagado $%d de la renta de la casa donde estás alquilando.", HouseInfo[Info[i][pRenting]][hRentFee]);
					SendClientMessageEx(i, COLOR_GRAD2, szMessage);
				}
				Info[i][pRob] = 0;
			    if(Info[i][pDobleExp] == 0){Info[i][pExp] += 1;}
			    else
				{
					Info[i][pExp] += 2;
					Info[i][pDobleExp]--;
					format(szMessage, sizeof(szMessage), "* Ganaste 2 puntos de respeto por tener horas de doble experiencia, te quedan %d horas más.", Info[i][pDobleExp]);
					SendClientMessageEx(i, COLOR_YELLOW, szMessage);
				}
				SendClientMessageEx(i, COLOR_WHITE, "* FACTURA DEL ESTADO SAN ANDREAS *");
                if(Info[i][pBorrowedMoney] != 0)
				{ // pFeesBank pBorrowedMoneyT
				    SendClientMessageEx(i, COLOR_YELLOW, "- DEUDA AL BANCO DE LOS SANTOS:");
					new pay = (Info[i][pBorrowedMoney] / Info[i][pFeesBank]);
                    format(szMessage, sizeof(szMessage),"  Dueda al banco:  $%d | Cuotas : %d | Interés: $20", Info[i][pBorrowedMoney],Info[i][pFeesBank]);
                    SendClientMessageEx(i, COLOR_GRAD2, szMessage);
					format(szMessage, sizeof(szMessage), " Saldo anterior: 	$%d | "COL_WHITE"Pago Total : -$%d (Deuda + Interés)" ,Info[i][pMoneyBank],pay+20);
					SendClientMessageEx(i, COLOR_GRAD2, szMessage);
                    Info[i][pMoneyBank] -= pay+20;
                    Info[i][pBorrowedMoney] -= pay;
                    Info[i][pFeesBank]--;
                    format(szMessage, sizeof(szMessage),"  Dueda actual:  $%d | Cuotas : %d | Interés: $20 | "COL_WHITE"Saldo actual: $%d", Info[i][pBorrowedMoney],Info[i][pFeesBank],Info[i][pMoneyBank]);
                    SendClientMessageEx(i, COLOR_GRAD2, szMessage);
					SendClientMessageEx(i, COLOR_YELLOW, "- TRANSACCIÓN CERRADA");
				}
				SendClientMessageEx(i, COLOR_YELLOW, "- IMPUESTOS:");
				format(szMessage, sizeof(szMessage),    "  Pago de impuestos: -$%d", TaxValue);
				SendClientMessageEx(i, COLOR_GRAD2, szMessage);
                if(Info[i][pNrCuenta] != 0)
				{
					if(Info[i][pMoneyBank] > TaxValue)
					{
						format(szMessage, sizeof(szMessage), 	"  Saldo anterior: $%d",Info[i][pMoneyBank]);
						SendClientMessageEx(i, COLOR_GRAD2, szMessage);
						if(Info[i][pGunLic] == 1)
						{
                        	SendClientMessageEx(i, COLOR_GRAD2,	"  Pago por adquisición de licencia de armas: $55");
                            Info[i][pMoneyBank] -= 55;
                            fbank -= 55;
                            Tax += 55;
						}
					    Info[i][pMoneyBank] -= TaxValue;
      					fbank -= TaxValue;
					    Tax += TaxValue;
					    format(szMessage, sizeof(szMessage), 	"  Saldo actual: $%d",Info[i][pMoneyBank]);
					    SendClientMessageEx(i, COLOR_GRAD2, szMessage);
					}
					else
					{
						if(Info[i][pGunLic] == 1)
						{
                        	SendClientMessageEx(i, COLOR_GRAD2,	"  Pago por adquisición de licencia de armas: $55 (Pendiente)");
							Tax += 55;
							fbank -= 55;
							Info[i][pMoneyBank] -= 55;
						}
						Tax += TaxValue;
						fbank -= TaxValue;
						Info[i][pMoneyBank] -= TaxValue;
						format(szMessage, sizeof(szMessage), "  El banco pagó los impuestos por ti y ahora debes al banco.");
						SendClientMessageEx(i, COLOR_GRAD2, szMessage);
						format(szMessage, sizeof(szMessage), "  Saldo actual: $%d",Info[i][pMoneyBank]);
						SendClientMessageEx(i, COLOR_GRAD2, szMessage);
					}
				}
				else
				{
					if(Info[i][pGunLic] == 1)
					{
                       	SendClientMessageEx(i, COLOR_GRAD2,	"Pago por adquisición de licencia de armas: $55 (Pendiente)");
                        Info[i][pTaxDeuda] += 55;
					}
					Info[i][pTaxDeuda] += TaxValue;
					SendClientMessageEx(i, COLOR_GRAD2, "* No tienes una cuenta bancaria, por lo tanto estás debiendo dinero al estado.");
					SendClientMessageEx(i, COLOR_GRAD2, "* Cuando quieras sacar una tarjeta deberás pagar lo que debes al banco.");
				}
				SendClientMessageEx(i, COLOR_YELLOW, "- TRANSACCIÓN CERRADA");
				SendClientMessageEx(i, COLOR_WHITE, 		"-------------------------------------------------");
 				Info[i][pTimePayDay] = 0;
 				Info[i][pConnectTime] += 1;
				GameTextForPlayer(i, "~y~1h+~n~~w~de juego", 5000, 1);
				if(Info[i][pConnectTime] == 2)
				{
					Info[i][pWRestricted] = 0;
					SendClientMessageEx(i, COLOR_GRAD2, "SERVER: Cumpliste las 2 horas de juego, la restricción de armas fue eliminada");
				}
				if(Info[i][pAdiccion] > 0) Info[i][pAdiccion] -= 2;
				if(Info[i][pWRestricted] > 0)
				{
			    	Info[i][pWRestricted]--;
					if(Info[i][pWRestricted] == 0) SendClientMessageEx(i, COLOR_LIGHTRED, "SERVER: Tus armas ya no están restringidas!");
				}
			}
		}
		if(GetPlayerPing(i) > MAX_PING)
		{
           	format(szMessage, sizeof(szMessage), "AdmWarning: %s ha sido kickeado por tener %d de ping (máximo: %d).", GetPlayerNameEx(i), GetPlayerPing(i), MAX_PING);
			ABroadCast(COLOR_GENERAL, szMessage, 2);
	        SendClientMessageEx(i, COLOR_GENERAL, "Atención: Has sido expulsado por tener el PING muy elevado.");
   			Expulsar(i);
	    }
		if(Info[i][pJudgeJailType] != 0 && Info[i][pJudgeJailTime] > 0 && !Info[i][pBeingSentenced]) Info[i][pJudgeJailTime]--;
		if(Info[i][pJudgeJailTime] <= 0 && Info[i][pJudgeJailType] != 0) Info[i][pJudgeJailType] = 0;
        if(IsaRent[i] > 0)
		{
			if(RentTime[i] > 0){RentTime[i]--;}
		   	if(RentTime[i] == 0)
			{
		       	RentTime[i] = 0;
		       	if(IsaRent[i] == 1)
				{
					IsaRent[i] = 0;
					new newcar = GetPlayerVehicleID(i);
					if(IsARentCar(newcar))
					{
						SetVehicleToRespawn(HireKey[i]);
						TogglePlayerControllable(i, 1);
					}
				}
			}
		}
		if(CommandSpamUnmute[i] == 0){ CommandSpamTimes[i] = 0;}
		if(Info[i][pADTime] != 0){Info[i][pADTime]--;}
		if(Info[i][pServiceTime] != 0) { Info[i][pServiceTime]--; }
		if(Info[i][pSavedTime] != 0) { Info[i][pSavedTime]--; }
		if(VIPTimer[i] > 0){ VIPTimer[i]--; }
		if(GetPlayerCash(i) != GetPlayerMoney(i)){
			ResetMoneyBar(i);
			UpdateMoneyBar(i,GetPVarInt(i, "Cash"));
		}
		if(Info[i][pTriageTime] != 0){Info[i][pTriageTime]--;}
		if(Info[i][pRMuted] > 1)
		{
			if(Info[i][pRMutedTime] > 0){Info[i][pRMutedTime]--;}
		   	else{Info[i][pRMuted] = 0;}
		}
	    if(Info[i][pJailed] > 0){
			if(Info[i][pJailTime] > 0){
				Info[i][pJailTime]--;
				new str[128];
	        	switch(Info[i][pJailed])
				{
	            	case 1, 4: format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~ ~r~Jail OOC!~n~~w~%d segundos (%i minutos) restantes", Info[i][pJailTime], Info[i][pJailTime]/60);
					case 2, 3, 5, 6: format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~ ~r~En prision!~n~~w~%d segundos (%i minutos) restantes", Info[i][pJailTime], Info[i][pJailTime]/60);
				}
				GameTextForPlayer(i, str, 2000, 3);
			}
			if(Info[i][pJailTime] <= 0)
			{
			    Info[i][pJailTime] = 0;
			    switch(Info[i][pJailed])
			    {
			        case 2:{
					SetPosEx(i,1605.5861,-1646.6277,13.5469,0,0,0);
					Info[i][pWantedLevel] = 0;
					SetPlayerWantedLevel(i, Info[i][pWantedLevel]);
			        }
			        case 3:{
			 		SetPlayerInterior(i, 0);
			 		Info[i][pInt] = 0;
		 			SetPlayerVirtualWorld(i, 0);
		 			Info[i][pVW] = 0;
		 			SetPlayerPos(i,343.1081,-1521.4404,33.2985);
			        }
			        case 1,4:{
			    	SetPlayerInterior(i, 0);
			    	Info[i][pInt] = 0;
			    	SetPosEx(i,1552.8286,-1674.9845,16.1953,0,0,0);
			        }
			        case 5:{
		 			SetPlayerInterior(i, 0);
		 			Info[i][pInt] = 0;
		 			SetPlayerVirtualWorld(i, 0);
		 			Info[i][pVW] = 0;
		 			SetPlayerPos(i,130.0132,1945.5618,19.3507);
					}
			        case 6:{
		 			SetPlayerInterior(i, 0);
		 			Info[i][pInt] = 0;
		 			SetPlayerVirtualWorld(i, 0);
		 			Info[i][pVW] = 0;
		 			SetPlayerPos(i,614.4990,-585.9028,17.2266);
					}
					case 1000:{
			    	SetPlayerInterior(i, 0);
			    	Info[i][pInt] = 0;
			    	SetPosEx(i,1552.8286,-1674.9845,16.1953,0,0,0);
			    	}
				}
				Info[i][pJailed] = 0;
				PhoneOnline[i] = 0;
				SendClientMessageEx(i, COLOR_GREEN,"Has cumplido tu condena.");
				GameTextForPlayer(i, "~g~Eres Libre~n~~w~Se mejor persona.", 5000, 1);
				SetPlayerSkin(i, Info[i][pChar]);
				SetPlayerToTeamColor(i);
			}
		}
		if(Info[i][pWantedLevel] > 0){SetPlayerWantedLevel(i, Info[i][pWantedLevel]);}
	    if(UsedFind[i] >= 1){ UsedFind[i]--; }
		if(JustReported[i] != 0){ JustReported[i]--; }
		if(NewbieTimer[i] != 0){ NewbieTimer[i]--; }
	    if(Info[i][pDudaMute] != 0){ Info[i][pDudaMute]--; }
		if(PlayerTazeTime[i] != 0)
		{
			PlayerTazeTime[i] += 1;
			if(PlayerTazeTime[i] == 15){PlayerTazeTime[i] = 0;}
		}
		if(MechanicCallTime[i] > 0)
		{
			if(MechanicCallTime[i] == 60) { MechanicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Checkpoint eliminado!", 2500, 1); }
			else
			{
			    new string[5];
				format(string, sizeof(string), "%d", 30 - MechanicCallTime[i]);
				GameTextForPlayer(i, string, 1500, 6);
				MechanicCallTime[i] += 1;
			}
		}
		if(MedicCallTime[i] > 0)
		{
			if(MedicCallTime[i] == 45) { MedicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Checkpoint eliminado!", 2500, 1); }
			else
			{
			    new string[5];
				format(string, sizeof(string), "%d", 45 - MedicCallTime[i]);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(MedicAccepted[i], X, Y, Z);
				SetPlayerCheckpoint(i, X, Y, Z, 5);
				GameTextForPlayer(i, string, 1500, 6);
				MedicCallTime[i] += 1;
			}
		}
		if(EMSCallTime[i] > 0)
		{
	    	if(EMSAccepted[i] < 999)
			{
	        	if(IsPlayerConnectedEx(EMSAccepted[i]))
				{
	            	new Float:X,Float:Y,Float:Z;
	            	GetPlayerPos(EMSAccepted[i], X, Y, Z);
	            	SetPlayerCheckpoint(i, X, Y, Z, 5);
				}
			}
		}
		if(Info[i][pEstado] == 1){
			if(PlayerCuffedTime[i] <= 0){
		    	//Frozen[i] = 0;
		    	SetPVarInt(i, "IsFrozen", 0);
				TogglePlayerControllable(i, 1);
				Info[i][pEstado] = 0;
				SetPVarInt(i, "PlayerCuffed", 0);
				PlayerCuffedTime[i] = 0;
				PlayerTazeTime[i] = 1;
				ClearAnimations(i);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(i, X, Y, Z);
				SetPlayerPos(i, X, Y, Z);
			}
			else{
				PlayerCuffedTime[i] -= 1;
			}
		}
		if(Info[i][pEstado] == 2){
			if(PlayerCuffedTime[i] <= 0){
		    	new Float:X, Float:Y, Float:Z;
		    	GetPlayerPos(i, X, Y, Z);
		    	new copinrange;
				foreach(Player, j){
		    		if(IsPlayerInRangeOfPoint(j, 30, X, Y, Z) && IsACop(j)){copinrange = 1;}
				}
		    	if(copinrange == 0)
				{
					//Frozen[i] = 0;
					SetPVarInt(i, "IsFrozen", 0);
					GameTextForPlayer(i, "~r~Rompiste las esposas eres libre!", 2500, 3);
					TogglePlayerControllable(i, 1);
					SetPlayerSpecialAction(i, 0);
					Info[i][pEstado] = 0;
					DeletePVar(i, "PlayerCuffed");
					PlayerCuffedTime[i] = 0;
				}
				else{PlayerCuffedTime[i] = 60;}
			}
			else{PlayerCuffedTime[i] -= 1;}
		}
		if(PlayerDrunk[i] > 9)
		{
	    	if(PlayerDrunkTime[i] > 20)
			{
	    		ApplyAnimation(i,"PED", "WALK_DRUNK",6.0,0,1,0,0,PlayerDrunk[i]*1000);
	    		SetPlayerDrunkLevel(i, PlayerDrunk[i]*1000);
	    		PlayerDrunk[i] -= 1;
	    		PlayerDrunkTime[i] = 0;
			}
			PlayerDrunkTime[i] += 1;
		}
		if(PlayerDrunk[i] < 10 && PlayerDrunk[i] > 0)
		{
	    	if(PlayerDrunkTime[i] > 30)
			{
	        	PlayerDrunk[i] -= 1;
               	PlayerDrunkTime[i] = 0;
			}
			PlayerDrunkTime[i] += 1;
		}
	}
}
}

//UPDATE ACCOUNTS TICKRATE 5 MIN
timer saveAccounts[180000]()
{
	foreach(Player, i)
	{
	    if(IsPlayerConnectedEx(i))
		{
		    if(Info[i][pSpectating] != -1) break;
			Info[i][pInt] = GetPlayerInterior(i);
			Info[i][pVW] = GetPlayerVirtualWorld(i);
			GetPlayerPos(i, Info[i][pPos_x], Info[i][pPos_y], Info[i][pPos_z]);
			GetPlayerFacingAngle(i, Info[i][pPos_r]);
			new playerip[32];
			GetPlayerIp(i, playerip, sizeof(playerip));
			format(Info[i][pIP], 32, "%s", playerip);
			SaveVarPlayer(1,i, "Money", GetPVarInt(i, "Cash") );
	    }
	}
}

// Timer Name: VehicleUpdate()
// TickRate: 10 Sec.
timer VehicleUpdate[10000]()
{
new engine,lights,alarm,doors,bonnet,boot,objective,modelid;
for(new v = 0; v < MAX_VEHICLES; v++) if(GetVehicleModel(v)){
	modelid = GetVehicleModel(v);
    GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
	switch(modelid){
		case 520, 476, 593, 553, 513, 512, 577, 592, 511, 539, 464, 519: VehicleFuel[v] = 500;
		case 509, 481, 510: VehicleFuel[v] = 500, arr_Engine{v} = 1, SetVehicleParamsEx(v,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	}
    if(engine == VEHICLE_PARAMS_ON){
		if(VehicleFuel[v] > 0 && !VIP_Car(v) && !IsAHarvest(v)){
			VehicleFuel[v]-=1;
			if(VehicleFuel[v] <= 0) SetVehicleParamsEx(v,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
		}
		if(arr_Engine{v} == 0) SetVehicleParamsEx(v,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
    }
}
}

// Timer Name: ServerMicrobeat()
// TickRate: 250 Milliseconds
timer ServerMicrobeat[250]()
{
new Float: fExpHealth,Float: fCurrentSpeed,iVehicle,arrDamage[4],arrVehParams[7],szSpeed[80];
foreach(Player, i)
{
    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
	{
	    fCurrentSpeed = player_get_speed(i);
		fVehSpeed[i] = fCurrentSpeed;
		iVehicle = GetPlayerVehicleID(i);
		for(new s=0;s<10;s++)
		{
			if(SpikeStrips[s][sX] != 0)
			{
				if(VehicleToPoint( 3.0, iVehicle, SpikeStrips[s][sX], SpikeStrips[s][sY], SpikeStrips[s][sZ]))
				{
		  			GetVehicleDamageStatus(iVehicle, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
		 			arrDamage[3] = encode_tires(1, 1, 1, 1);
		   			UpdateVehicleDamageStatus(iVehicle, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
	  			}
			}
   		}
		GetVehicleHealth(iVehicle,fExpHealth);
		if(fExpHealth < 350.0 && !IsABike(iVehicle))
		{
			SetVehicleHealth(iVehicle, 251.0);
			GetVehicleParamsEx(iVehicle, arrVehParams[0], arrVehParams[1], arrVehParams[2], arrVehParams[3], arrVehParams[4], arrVehParams[5], arrVehParams[6]);
			if(arrVehParams[0] == VEHICLE_PARAMS_ON) SetVehicleParamsEx(iVehicle,VEHICLE_PARAMS_OFF, arrVehParams[1], arrVehParams[2], arrVehParams[3], arrVehParams[4], arrVehParams[5], arrVehParams[6]);
			GameTextForPlayer(i, "~r~Motor quemado!", 2500, 3);
			arr_Engine{iVehicle} = 0;
		}
		else if(arr_Engine{iVehicle} == 1)
		{
			format(szSpeed, sizeof(szSpeed),"~w~%.0f ~y~MPH - Gas: ~w~%d", fCurrentSpeed, VehicleFuel[iVehicle]);
			TextDrawSetString(Speedo[i], szSpeed);
		}
    	if(GetPVarInt(i,"PlayerHasBeenFlashed") == 1)
		{
			continue;
		}
		else if (GetPVarInt(i,"PlayerHasBeenFlashed") == 2)
		{
			DeletePVar(i,"PlayerHasBeenFlashed");
			continue;
		}
		new v = GetPlayerVehicle(i, iVehicle);
		if(v != -1)
		//if(!LSPD_IsACopCar(iVehicle) && !IsAnAmbulance(iVehicle) && !FBI_Vehicle(iVehicle) && !IsAnNGCar(iVehicle))
		{
			for(new b = 0; b < MAX_vCAMERAS;b++)
    		{
 				if(IsPlayerInRangeOfPoint(i,vCameraInfo[b][vCameraRange],vCameraInfo[b][vCameraPos][0], vCameraInfo[b][vCameraPos][1], vCameraInfo[b][vCameraPos][2]) && vCameraInfo[b][vCameraStatus] == 0)
    			{
        			new limit = vCameraInfo[b][vCameraLimit];
        			if(fCurrentSpeed > limit)
        			{
        				TextDrawShowForPlayer(i,flash);
            			new Float:x,Float:y,Float:z;GetPlayerPos(i,x,y,z);
            			PlayerPlaySound(i, 1132, x, y, z);
            			SetPVarInt(i,"PlayerHasBeenFlashed",1);
            			SetTimerEx("RemoveFlash",1000,false,"i",i);
						format(szMessage, sizeof(szMessage), "Detectado! Tu velocidad sobrepaso lo permitido en esta zona. "COL_WHITE"Tu velocidad: %.0f MPH - Max: %d MPH - Multa: $%d",fCurrentSpeed,limit,vCameraInfo[b][vCameraTicket]);
						SendClientMessageEx(i,COLOR_LIGHTBLUE,szMessage);
						SendClientMessageEx(i,COLOR_LIGHTBLUE,"Debes pagar la multa en la central de SAPD de lo contrario puedes ser arrestado o tu coche puede ser embargado.");
                    	PlayerVehicleInfo[i][v][pvTicket] += vCameraInfo[b][vCameraTicket];
					}
				}
			}
		}
    }
}
}
//Nombre: SyncUp
//Función: PayDay //
timer SyncUp[60000]()
{
	new hour,minuite,second;
	SyncTime();
	SyncMinTime();
	DollahScoreUpdate();
	gettime(hour,minuite,second);
	FixHour(hour);
	hour = shifthour;
	servertime++;
	if(servertime >= 60) { OneHour(); }
	foreach(Player, i){
	   	if(Info[i][pBeingSentenced] > 1) Info[i][pBeingSentenced]--;
	   	if(Info[i][pBeingSentenced] == 1){
			TogglePlayerControllable(i, true);
			SetPVarInt(i, "IsFrozen", 0);
			SetPlayerPos(i, 1452.7971,-1757.7694,13.5469);
			SetPlayerFacingAngle(i, 278.701);
			SendClientMessageEx(i, COLOR_WHITE, "Ningún juez ha asistido al juicio, eres libre!");
			Info[i][pBeingSentenced] = 0;
		}
	}
}
// Timer Name: Mensajes()
// TickRate: 10 Minutes. 
timer Mensajes[600000]()
{
	foreach(Player, i)
	{
	    if(IsPlayerConnectedEx(i))
	    {
		    if(Advisors > 0 && Info[i][pLevel] < 4) SendClientMessageEx(i, COLOR_LIGHTBLUE, "¿Necesitas ayuda? Los moderadores están aquí para ayudarte. (/ayudame para obtener ayuda.)");
			if(Info[i][pFishes] >= 15){if(FishCount[i] >= 3){Info[i][pFishes] = 0;}else{FishCount[i] += 1;}}
            if(!AdminOnDuty(i))
            {
				if(Info[i][pHungry] > 0.0)
	    		{
	        		Info[i][pHungry] -= 10.0;
					HungryCheck(i, Info[i][pHungry]);
	    		}
    			if(Info[i][pHungry] < 11.0)
				{
					new Float:health;
					GetPlayerHealth(i,health);
					SendClientMessageEx(i, COLOR_LIGHTRED, "Tienes mucha hambre vé a comer algo, estás perdiendo energia.");
	           		if(health > 10.0) SetHP(i, health-10);
				}
			}
			if(GetPlayerCash(i) < 0){
				if(MoneyMessage[i]==0){
					format(szMessage, sizeof(szMessage), "Actualmente estás debiendo dinero; necesitas pagar $%d. Si no lo haces, serás arrestado...", GetPlayerCash(i));
					SendClientMessageEx(i, COLOR_LIGHTRED, szMessage);
					MoneyMessage[i] = 1;
				}
			}
			else MoneyMessage[i] = 0;
		}
	}
	if(VIPGiftsTimeLeft > 0 && VIPGifts == 1){
	    VIPGiftsTimeLeft -= 10;
	    if(VIPGiftsTimeLeft > 0){
			format(szMessage, sizeof(szMessage), "%s quiere que vengas al Club VIP hay regalos para ti [%d minutos restantes]", VIPGiftsName, VIPGiftsTimeLeft);
			BroadCast(COLOR_LIGHTGREEN, szMessage);
		}
	}
	if(VIPGiftsTimeLeft <= 0 && VIPGifts == 1){
	    VIPGiftsTimeLeft = 0;
	    VIPGifts = 0;
		format(szMessage, sizeof(szMessage), "Club VIP ya no está regalando obsequios. Gracias por venir!", VIPGiftsName, VIPGiftsTimeLeft);
		BroadCast(COLOR_LIGHTGREEN, szMessage);
	}
}

// 6 sec tick rate
timer EMSUpdate[6000](){
foreach(Player, i){
    if(GetPVarType(i, "Injured")){
        if(GetPVarInt(i, "EMSAttempt") != 0){
			new Float:health;
			GetPlayerHealth(i,health);
			if(GetPVarInt(i, "EMSAttempt") == -1)
			{
				if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
    			{
				    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
			  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
    			}
    			SetHP(i, health-5);
    			ApplyAnimation(i, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
				GameTextForPlayer(i, "~y~Estas herido~n~~w~/aceptar muerte o /servicios", 5000, 3);
			}
			if(GetPVarInt(i, "EMSAttempt") == 1)
			{
    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
    			{
				    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
			  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
    			}
    			SetHP(i, health-5);
    			ApplyAnimation(i, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
				GameTextForPlayer(i, "~r~Herido~n~~w~Espera que SAMD llege...", 5000, 3);
			}
			if(GetPVarInt(i, "EMSAttempt") == 8)
			{
    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
    			{
				    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
			  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
    			}
    			SetHP(i, health-5);
    			ApplyAnimation(i, "CRACK", "crckidle1",4.0,0,1,1,1,-1);
				GameTextForPlayer(i, "~r~Herido~n~~w~Espera que SAMD llege...", 5000, 3);
			}
			if(GetPVarInt(i, "EMSAttempt") == 2)
			{
    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
    			{
				    Streamer_UpdateEx(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerPos(i, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ"));
					SetPlayerVirtualWorld(i, GetPVarInt(i,"MedicVW"));
			  		SetPlayerInterior(i, GetPVarInt(i,"MedicInt"));
    			}
    			GameTextForPlayer(i, "~g~Rescatado~n~~w~En espera de atencion medica...", 5000, 3);
			}
			if(GetPVarInt(i, "EMSAttempt") == 3){
    			if(IsPlayerInAnyVehicle(i)){
        			new ambmodel = GetPlayerVehicleID(i);
        			if(GetVehicleModel(ambmodel) == 416){
    					GameTextForPlayer(i, "~g~Rescatado~n~~w~Espera que SAMD te lleve al hospital...", 5000, 3);
					}
					else{
        				SendClientMessageEx(i, COLOR_WHITE, "Perdiste el conocimiento y se te translado inmediatamente al hospital.");
        				KillEMSQueue(i);
        				SetPVarInt(i, "Hospital", 1);
						SpawnPlayer(i);
					}
				}
				else{
	    			SendClientMessageEx(i, COLOR_WHITE, "Perdiste el conocimiento y se te translado inmediatamente al hospital.");
        			KillEMSQueue(i);
        			SetPVarInt(i, "Hospital", 1);
					SpawnPlayer(i);
				}
			}
			if(health <= 10)
			{
    			SendClientMessageEx(i, COLOR_WHITE, "Perdiste el conocimiento y se te translado inmediatamente al hospital.");
    			KillEMSQueue(i);
    			SetPVarInt(i, "Hospital", 1);
    	    	SetHP(i, 50);
				SpawnPlayer(i);
			}
			
        }
        
    }
}
}
